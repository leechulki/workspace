<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="470" Id="Ssa0021" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="진행사항관리" Top="8" Ver="1.0" Width="496" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="KUNNR" size="10" type="STRING"/>
					<colinfo id="KIDNO" size="30" type="STRING"/>
					<colinfo id="BELNR" size="10" type="STRING"/>
					<colinfo id="GUBUN" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list" OnColumnChanged="ds_list_OnColumnChanged" OnRowPosChanged="ds_list_OnRowPosChanged">
				<Contents>
					<colinfo id="SAVE_YN" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="NEW_YN" size="1" type="STRING"/>
					<colinfo id="DISGBN_CHK" size="1" type="STRING"/>
					<colinfo id="SERNO" size="1" type="STRING"/>
					<colinfo id="INGTEXT" size="1" type="STRING"/>
					<colinfo id="DISGBN" size="1" type="STRING"/>
					<colinfo id="UNAME" size="1" type="STRING"/>
					<colinfo id="DATUM" size="1" type="STRING"/>
					<colinfo id="CHAN_UNAME" size="1" type="STRING"/>
					<colinfo id="CHAN_DATUM" size="1" type="STRING"/>
					<colinfo id="MODI" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_save" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="SERNO" size="3" type="STRING"/>
					<colinfo id="INGTEXT" size="255" type="STRING"/>
					<colinfo id="DISGBN" size="1" type="STRING"/>
					<colinfo id="UNAME" size="12" type="STRING"/>
					<colinfo id="DATUM" size="10" type="STRING"/>
					<colinfo id="CHAN_UNAME" size="12" type="STRING"/>
					<colinfo id="CHAN_DATUM" size="10" type="STRING"/>
					<colinfo id="MODI" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_result">
				<Contents>
					<colinfo id="R_INGTEXT" size="1024" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error">
				<Contents>
					<colinfo id="IDX" size="10" type="STRING"/>
					<colinfo id="ERRMSG" size="200" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user12" Bottom="118" Height="70" Id="Shape1" Left="0" LineColor="user13" Right="490" TabOrder="12" Top="48" Type="Rectangle" Width="490"></Shape>
		<Edit Border="Flat" Column="BSTNK" Enable="FALSE" Height="20" Id="ed_name1" Left="306" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="5" TabStop="FALSE" Top="73" Width="181"></Edit>
		<Static Align="Right" Height="20" Id="Static1" Left="234" Style="sty_lb_form_basic" TabOrder="8" Text="거래선명&#32;" Top="73" VAlign="Middle" Width="70"></Static>
		<Edit Border="Flat" Column="BSTDK" Enable="FALSE" Height="20" Id="ed_kunnr" Left="75" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="6" TabStop="FALSE" Top="73" Width="157"></Edit>
		<Static Align="Right" Height="20" Id="Static9" Left="3" Style="sty_lb_form_basic" TabOrder="4" Text="거래선&#32;" Top="73" VAlign="Middle" Width="70"></Static>
		<Div Height="36" Id="div_btn" TabOrder="1" Text="Div0" Top="8" Url="WB01::CommBtnForm.xml" Width="496">
			<Contents></Contents>
		</Div>
		<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="464" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="336" Id="grd_list" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" OnHeadClick="grd_list_OnHeadClick" OnKeyDown="grd_list_OnKeyDown" Right="488" RowHeight="20" Style="sty_grid" TabOrder="2" TabStop="true" Top="128" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="480">
			<contents>
				<format id="Default">
					<columns>
						<col width="28"/>
						<col width="33"/>
						<col width="38"/>
						<col width="33"/>
						<col width="329"/>
					</columns>
					<head>
						<cell align="center" col="0" color="user21" display="image" font="굴림,9"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="변경"/>
						<cell align="center" col="2" color="expr:GC_FONTCOLOR_EDITABLE_F" display="text" font="굴림,9" text="순번"/>
						<cell align="center" col="3" color="expr:GC_FONTCOLOR_EDITABLE_T" display="text" font="굴림,9" text="표기"/>
						<cell align="center" col="4" color="expr:GC_FONTCOLOR_EDITABLE_T" display="text" font="굴림,9" text="진행현황"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" colid="CHK" display="checkbox" edit="checkbox"/>
						<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
						<cell align="center" bkcolor2="user22" col="2" colid="SERNO" display="text"/>
						<cell align="center" bkcolor2="user22" col="3" colid="DISGBN_CHK" display="checkbox" edit="checkbox" expr='decode(DISGBN,&quot;X&quot;,&quot;1&quot;,&quot;0&quot;)'/>
						<cell align="left" autosizing="none" bkcolor2="user22" checklength="Byte" col="4" colid="INGTEXT" display="text" edit="normal"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Static Align="Right" Height="20" Id="Static4" Left="3" Style="sty_lb_form_basic" TabOrder="3" Text="프로젝트&#32;" Top="51" VAlign="Middle" Width="70"></Static>
		<Edit Border="Flat" Enable="FALSE" Height="20" Id="ed_kidno" Left="75" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="3" TabStop="FALSE" Top="51" Width="157"></Edit>
		<Static Align="Right" Height="20" Id="Static0" Left="234" Style="sty_lb_form_basic" TabOrder="6" Text="프로젝트명&#32;" Top="51" VAlign="Middle" Width="70"></Static>
		<Edit Border="Flat" Column="NAME1" Enable="FALSE" Height="20" Id="ed_kidno_t" Left="306" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="4" TabStop="FALSE" Top="51" Width="181"></Edit>
		<Static Align="Right" Height="20" Id="Static2" Left="3" Style="sty_lb_form_basic" TabOrder="9" Text="청구번호&#32;" Top="95" VAlign="Middle" Width="70"></Static>
		<Edit Border="Flat" Column="BSTDK" Enable="FALSE" Height="20" Id="ed_belnr" Left="75" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="7" TabStop="FALSE" Top="95" Width="157"></Edit>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 매출채권 명세 및 채권 현황(청구) _진행사항관리 (Ssa0021)
 * 작  성  자   : 구란이
 * 작성  일자   : 2012.06.18
 * ----------------------------------------------------------------------------------------
 * HISTORY    : V1.0 : 2012.09.03 : 신규
 * COMMENT
   0. T-CODE                : ZSDR152
   1. RFC URL 				: 조회/저장 : http://elsdev.hyundaielevator.co.kr:8000/sap/bc/srt/wsdl/bndg_4FDFC4BCD68E0205E1008000CBF22518/wsdl11/allinone/ws_policy/document?sap-client=910			
   2. RFC OPERATION NAME 	: ZWEB_SD_CHN_152_INGT  : 조회/저장 
   3. RFC OBJ NAME 			: ZSDS0042
   4. 개발자료 : 2012.05  
 ******************************************************************************************
*/
#include "LIB::commons.js";			// 공통 스크립트  
#include "LIB::nsfRequest.js";		// 공통 스크립트  /* GNY 추가 */
#include "LIB::common_hdel.js";		// 공통 스크립트  /* GNY 추가 */

//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var F_FORM_ID 			= "Ssa0021";   

// 폼파라메터정보 

// 컬럼번호 
var F_COLNUM_DISGBN_CHK	= "";  // Display 구분자( X : 표기 , '' : 미표시)
var F_COLNUM_INGTEXT 	= "";  // 진행사항  

var F_MAX_SERNO         = 0;			// 조회된 목록의 MAX(순번)
var F_INGTEXT_DISP		= "";			// 조회된 목록의 진행사항 전체 문자열
var F_SYSDATE           = ""; 			// 현재년월일(8자리)
var F_CHG_ROWNUM        = "";			// 최종 변경된 헹번호
var F_CHG_COLNUM        = "";			// 최종 변경된 컬럼번호
var F_USER_GROUP_B 		= "";  			// 사용자권한 (G_USER_GROUP_B)  

var F_SAVE_ARR          = ["FLAG", "DISGBN_CHK", "INGTEXT"];    // 저장 시 변경여부 체크할 항목들
var F_CHG_ARR          	= ["DISGBN_CHK", "INGTEXT"];			// 변경 시 변경여부 체크할 항목들

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initForm();	 
	
	// 화면제목 설정 및 버튼 활성화 (조회:1, 입력:20,삭제:25,저장:30)
	div_btn.fn_loadUseBtn("1,20,25,30", "진행사항관리", "", "");   
	
	// 폼 파라메터 체크 및 fa_kunnr 설정
	// trace("fa_kunnr 	: " + fa_kunnr);
	// trace("fa_kidno 	: " + fa_kidno); 
	// trace("fa_belnr 	: " + fa_belnr); 
	// trace("fa_kidno_t 	: " + fa_kidno_t); 
	// trace("fa_name1 	: " + fa_name1); 

	if (isValidObject(fa_kunnr  )==false) ed_kunnr.text 	= fa_kunnr  ; // 거래선번호
	if (isValidObject(fa_kidno  )==false) ed_kidno.text		= fa_kidno  ; // 공사번호 (프로젝트번호)
	if (isValidObject(fa_belnr  )==false) ed_belnr.text 	= fa_belnr  ; // 청구번호  
	if (isValidObject(fa_kidno_t)==false) ed_kidno_t.text 	= fa_kidno_t; // 현장명    
	if (isValidObject(fa_name1  )==false) ed_name1.text 	= fa_name1  ; // 거래선명   
	
	// 폼 초기화
	fn_init_form();
	
	// 자동 조회 (거래선번호, 공사번호 모두 존재 시)
	if (length(trim(ed_kunnr.Text)) > 0 && length(trim(ed_kidno.Text)) > 0 )
	{
		fn_query(); // 임시주석처리
	}
	
}

/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 (common.js에서 호출됨)
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
	gfn_showMsg("CI00007");  
}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
 
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() { 
	
	// trace("fn_query()호출 start");
	
	gfn_clearMsgBar(); 
	
	// sort mark 삭제 
	gfn_clearGridSortMark(grd_list); 
	
	// 조회조건 항목오류검증
	if (fn_valid_chk("query") == false)  return;
	 
	// 조회조건 설정
	ds_cond.ClearData();   
	if (fn_param_set("query") == false)  return;   
	// trace(ds_cond.SaveXML());
	
	// 데이타셋 이벤트 비활성화
	ds_list.Fireevent = false; 
	
	// 최종 변경된 셀정보 초기화
	F_CHG_COLNUM	= "";	 // 변경된 컬럼번호
	F_CHG_ROWNUM	= "";	 // 변경된 행번호  
	
	// 최종순번, 최종진행사항문자열  초기화 
	F_MAX_SERNO 	= 0;	// 최종순번
	F_INGTEXT_DISP 	= "";	// 최종진행사항문자열
	
	// 서비스 호출
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	ds_list.ClearData();   		// 결과목록
	ds_result.ClearData();   	// 결과값 
	ds_error.ClearData();   	// 오류정보 
	nsfRequest("query"														// srvId
				, "ssa0021/find"											// url
				, "ds_cond=ds_cond ds_result=ds_result"						// inDsList
				, "ds_list=ds_list ds_result=ds_result ds_error=ds_error"	// outDsList
				, ""														// strParam
				, "fn_afterQuery"											// CallBackFunc
				); 
 
}


// INPUT PARAM SET
// pProcGb : 처리구분 (query:조회)
function fn_param_set(pProcGb)
{   
	
	switch(pProcGb)
	{
		case "query" :  // 조회 시
			 
			ds_cond.AddRow();   
			ds_cond.SetColumn(ds_cond.row, "KUNNR"	, trim(ed_kunnr.Text) 	); // 거래선번호                 
			ds_cond.SetColumn(ds_cond.row, "KIDNO"	, trim(ed_kidno.Text) 	); // 공사번호                   
			ds_cond.SetColumn(ds_cond.row, "BELNR"	, trim(ed_belnr.Text) 	); // 청구번호                 
			ds_cond.SetColumn(ds_cond.row, "GUBUN"	, "Q"  					); // Q:조회, S:저장

			break;  
			
		case "save" :  // 진행사항 저장 시
			
			ds_cond.AddRow();   
			ds_cond.SetColumn(ds_cond.row, "KUNNR"	, trim(ed_kunnr.Text) 	); // 거래선번호                 
			ds_cond.SetColumn(ds_cond.row, "KIDNO"	, trim(ed_kidno.Text) 	); // 공사번호                   
			ds_cond.SetColumn(ds_cond.row, "BELNR"	, trim(ed_belnr.Text) 	); // 청구번호                 
			ds_cond.SetColumn(ds_cond.row, "GUBUN"	, "S"  					); // Q:조회, S:저장
			
			var sysdatetime = "";
			var modi = "";
			var disgbn = "";
			for (var i=0; i<ds_list.RowCount(); i++)
			{  
				if (ds_list.getcolumn(i, "CHK") == "1" &&
					ds_list.getcolumn(i, "SAVE_YN") == "Y")  // 저장대상 행에 한해서만 저장수행
				{ 
					sysdatetime = gfn_formatDate(GetDate(),"-");  											// 현재일시  
					modi 		= decode(ds_list.GetColumn(i, "FLAG"), "I", "M", "U", "M", "D", "D", "");	// 저장구분
					disgbn		= decode(ds_list.GetColumn(i, "DISGBN_CHK"), 1, "X", "");					// 표시구분
					
					ds_list_save.AddRow();  
					ds_list_save.SetColumn(ds_list_save.row, "MODI" 		, modi								);  // 저장구분(D-삭제, M-등록/수정)
					ds_list_save.SetColumn(ds_list_save.row, "SERNO" 		, ds_list.GetColumn(i, "SERNO")		);  // 순번
					ds_list_save.SetColumn(ds_list_save.row, "INGTEXT" 		, ds_list.GetColumn(i, "INGTEXT")	);  // 진행사항
					ds_list_save.SetColumn(ds_list_save.row, "DISGBN" 		, ds_list.GetColumn(i, "DISGBN")	);  // Display 구분자( X : 표기 , '' : 미표시)	
					ds_list_save.SetColumn(ds_list_save.row, "UNAME" 		, G_USER_NAME						);  // 등록자이름
					ds_list_save.SetColumn(ds_list_save.row, "DATUM" 		, substr(sysdatetime,0,10)			);  // 등록일자		
					ds_list_save.SetColumn(ds_list_save.row, "CHAN_UNAME" 	, G_USER_NAME						);  // 수정자이름
					ds_list_save.SetColumn(ds_list_save.row, "CHAN_DATUM" 	, substr(sysdatetime,0,10) 			);  // 수정일자
				}
			}  
			
			// trace("ds_list_save.RowCount() : " + ds_list_save.RowCount());
			 
			break;    
			
		default: 
			break; 
	}   

	return true;
	
}

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {

	// 조회조건 항목오류검증
	if (fn_valid_chk("confirm") == false)  return; 
	
	// 조회 시 저장되어 있는 진행사항을 모두 하나의 문자열로 만들어(SAP에서 만들어서 보내줌) 반환한다.
	var arr = [	 
					F_INGTEXT_DISP 	// 진행사항(저장결과) 
			  ]; 
	// trace("Ssa0021.arr : " + arr);  
	
	// 배열을 연동화면으로 전송하고 팝업화면을 닫는다.	  
	close(arr); 
}


/********************************************************************************
* 기      능   : 복원 
********************************************************************************/
function fn_reset() 
{
	ds_list.Reset(); 
}

/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	
	// trace("fn_excel()호출 start");
 	
 	gfn_clearMsgBar(); 
 	
	// 조회조건 항목오류검증
	if (fn_valid_chk("excel") == false)  return; 
	
	// Excel Export  
	gfn_saveToExcel(grd_list, true); 
	
}


//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 저장 : 진행사항 등록, 수정, 삭제
********************************************************************************/
function fn_save() { 
	
	// trace("fn_save() start");
	
	gfn_clearMsgBar();   
	
	// 저장항목 오류검증
	if (fn_valid_chk("save") == false)  return false;
	
	// 저장여부 확인
	if (!gfn_showConfirm("CI00014", "진행사항관리 변경사항")) 
	{
		return false;
	}
	
	// 저장항목 값설정 
	ds_cond.ClearData();  
	ds_list_save.ClearData();  
	if (fn_param_set("save") == false)  return false;   
	// trace(ds_cond.SaveXML());	
	// trace(ds_list_save.SaveXML());	
	 
	// 서비스 호출
	fn_createWait("",this);     // 처리중입니다. 메시지 처리 
	ds_error.ClearData(); 
	nsfRequest("update"																// srvId
				, "ssa0021/save"													// url
				, "ds_cond=ds_cond ds_list_save=ds_list_save"						// inDsList
				, "ds_error=ds_error"												// outDsList
				, ""																// strParam
				, "fn_afterSave"													// CallBackFunc
				);
	

}
 
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {  
	
	fn_destroyWait(); 
	
	// 결과값 trace
	// trace("fn_afterQuery 호출 start"); 
	// trace(ds_error.SaveXML());  
	// trace(ds_result.SaveXML());  
	// trace(ds_list.SaveXML()); 
	
	// 데이타셋 이벤트 활성화
	ds_list.Fireevent = true; 
	
	if(ds_error.RowCount() > 0) 	// 조회실패
	{ 
		gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG")); 
	} 
	else 
	{  
	
		F_MAX_SERNO 	= fn_getMaxSerno(); 					// 기 저장된 최종순번
		F_INGTEXT_DISP 	= ds_result.GetColumn(0, "R_INGTEXT");	// 기 저장된 진행사항문자열
		// trace("F_MAX_SERNO 		: " + F_MAX_SERNO);
		// trace("F_INGTEXT_DISP 	: " + F_INGTEXT_DISP);

		// 조회된 자료가 있을 경우 그리드 첫번째 행에 포커스 위치시킨다.
		if (ds_list.RowCount() > 0) 
		{    
			// CI00002 : "조회를 완료했습니다.조회건수 [${}건]"
			gfn_showMsg("CI00002", ds_list.RowCount() + ""); 
			
		} else { 
			// trace("fn_Query SUCCESS!!! 건수없음");
			// CW00010 : "데이터가 없습니다."
			gfn_showMsg("CW00010");  
		} 
		
		// 행추가버튼으로 빈 행 자동추가해줌
		fn_input();
		
	}  
	
	// trace("fn_afterQuery 호출 end");
} 

/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) { 
	
	fn_destroyWait(); 

	// trace("fn_afterSave 호출 start");  
	// trace(ds_error.SaveXML()); 
	
	if(ds_error.RowCount() > 0) 	// 저장실패
	{ 
		gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG")); 
	} 
	else 
	{  
		gfn_showAlert("CI00003");  // CI00003: "저장을 완료했습니다
		
		ds_list.ApplyChange();
	
		// 재조회
		fn_query(); 
	}
	
	// trace("fn_afterSave 호출 end");
} 
 
// 임시코딩
function fn_OnClick_btn(obj)
{ 
	var fncName = "fn_" + substr(obj.id, 4); 
	eval( fncName + "()");
}

// 항목 오류 검증
// pProcGb : 처리구분 (query:조회,excel:엑셀)
function fn_valid_chk(pProcGb)
{   
	var arr   = "";
	var ChgYn = "N"; 
	var SaveCount = 0;
	
 	switch(pProcGb)
	{
		case "query" :   
			if (length(ed_kidno.Text) == 0)
			{ 
				// CW00208 : "[${}]은/는 필수입력 입니다.확인바랍니다.")
				gfn_showAlert("CW00208","프로젝트");
				gfn_SetFocus(ed_kidno,"N"); 
				return false;
			}   
			if (length(ed_kunnr.Text) == 0)
			{ 
				// CW00208 : "[${}]은/는 필수입력 입니다.확인바랍니다.")
				gfn_showAlert("CW00208","거래선");
				gfn_SetFocus(ed_kunnr,"N"); 
				return false;
			}   
			if (ds_list.GetUpdate()==true)
			{ 
				arr = ["조회","계속"];
				// "CI10001", "변경된 자료가 존재합니다. \n${} 할 경우 기존에 변경된 정보가 모두 소실됩니다.\n\n{} 하시겠습니까?"); 			 
				if (gfn_showConfirm("CI10001", arr) == false)   
				{ 
					// 조회하지 않기 
					gfn_SetFocusGrid(grd_list, ds_list.row, 4);  // 변경된 행에 포커싱처리
					return false;
				}   
			}
			break;  
			
		case "excel" :   // 엑셀
			 
			if (ds_list.RowCount() <=0)
			{ 
				// CW00010 : "데이터가 없습니다."
				gfn_showAlert("CW00010");
				return false;
			} 
			 
			// 변경된 내역이 존재할 경우 엑셀출력 불가처리
			if(gfn_isChangeDs(ds_list, false, "FLAG", "진행사항")== true) 
			{  
				//"CW10003", "변경된 ${}이 존재하여 ${}이 불가능합니다. 변경된 정보를 저장후 다시 실행하여 주십시오.");  // 2012.06.13 : GRY : 추가
				arr = ["진행사항", "엑셀출력"];
				gfn_showAlert("CW10003", arr);
				return false;
			}   
			
			break; 
			
		case "save":   	// 진행사항저장
		
			if (length(ed_kidno.Text) == 0)
			{ 
				// CW00208 : "[${}]은/는 필수입력 입니다.확인바랍니다.")
				gfn_showAlert("CW00208","프로젝트");
				gfn_SetFocus(ed_kidno,"N"); 
				return false;
			}   
			if (length(ed_kunnr.Text) == 0)
			{ 
				// CW00208 : "[${}]은/는 필수입력 입니다.확인바랍니다.")
				gfn_showAlert("CW00208","거래선");
				gfn_SetFocus(ed_kunnr,"N"); 
				return false;
			}   
				
			// 선택된 행 존재여부 체크
			if (ds_list.FindRow("CHK",1) < 0)
			{ 
				// CW00013 : "처리할 자료를 먼저 선택해 주십시오."
				gfn_showAlert("CW00013"); 
				return false; 
			} 
			
			// 변경된 내역 존재여부 체크  
			if(gfn_isChangeDs(ds_list, true, "FLAG", "진행사항")== false) 
			{ 
				return false; 
			}     
			
			// 행별 오류 체크 
			for (var i=0; i<=ds_list.RowCount(); i++)
			{    
				
				// 선택된 행 중 등록/수정 대상 행에 대하여
				if (ds_list.GetColumn(i, "CHK") == 1)
				{ 	   
					
					ChgYn = gfn_GetDatasetChgYN(grd_list, i, F_SAVE_ARR, "Y");   
					
					if (ChgYn == "Y")  			// 변경된 자료가 있으면
					{    
						
						if (ds_list.GetColumn(i, "FLAG") == "I" || ds_list.GetColumn(i, "FLAG") == "U")
						{  
							if (ds_list.GetColumn(i, "DISGBN_CHK") <> 1 &&
								length(trim(ds_list.GetColumn(i, "INGTEXT"))) == 0
								)
							{
								// CW10009 : "${}의 ${}는 반드시 입력하셔야 합니다."
								arr = ["순번:"+ds_list.GetColumn(i, "SERNO"), "표기여부, 진행사항 둘 중 하나"];
								gfn_showAlert("CW10009", arr); 
								gfn_SetFocusGrid(grd_list, i, F_COLNUM_INGTEXT);
								//ds_list.row = i;
								return false; 
							}
						}
						
						gfn_SetColumn(ds_list, i, "SAVE_YN", "Y");  // 저장대상=Y로 SET
						SaveCount++;								// 저장대상건수 누적
						
					} 
					else
					{
						gfn_SetColumn(ds_list, i, "SAVE_YN", "N");  // 저장대상=N로 원복 
					}
				}
			} 
			 
			if (SaveCount == 0)
			{ 
				// CW00006=${}에 변경된 정보가 없습니다.
				gfn_showAlert("CW00006", "진행사항");
				return false; 
			}
			
			break; 
			
		case "delete":   	// 진행사항삭제 
			 
			// 조회된 행 존재여부 체크
			if (ds_list.row < 0 || ds_list.rowCount() < 1)
			{ 
				// CW00010 : "데이터가 없습니다."
				gfn_showAlert("CW00010");
				return false; 
			} 
			
		default: 
			break; 
	}   

	return true;
}

/********************************************************************************
* 기      능   : 새로고침
********************************************************************************/
function fn_refresh() {

	// 폼초기화
	//fn_init_form();
	
}  

// 폼 초기화 
function fn_init_form()
{ 
	// 메세지바 초기화
	gfn_clearMsgBar();   
	
	// 폼변수 초기화 
	F_CHG_COLNUM	= "";	// 변경된 컬럼번호
	F_CHG_ROWNUM	= "";	// 변경된 행번호  
	F_MAX_SERNO     = 0;	// 최종 순번
	F_INGTEXT_DISP  = "";	// 최종 진행사항 문자열
	F_USER_GROUP_B  = G_USER_GROUP_B;  // 임시 추가
	F_SYSDATE   	= substr(gfn_getCurrDate(),0,8); // 현재년월일(8자리)
	
	// 데이타셋 초기화
	ds_list.ClearData(); 			// 검색결과 그리드 데이타셋 초기화    
	
	// 코딩 시 필요한 그리드 컬럼 인덱스	  
	F_COLNUM_DISGBN_CHK	= gfn_getColIdx(grd_list,"DISGBN_CHK"	);  // Display 구분자( X : 표기 , '' : 미표시)
	F_COLNUM_INGTEXT 	= gfn_getColIdx(grd_list,"INGTEXT"		);  // 진행사항 
 
	// trace("F_COLNUM_DISGBN_CHK 	: " + F_COLNUM_DISGBN_CHK);
	// trace("F_COLNUM_INGTEXT 	: " + F_COLNUM_INGTEXT);
	
}     

// 그리드 헤더 클릭 시
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if (nCell == 0) {
		gfn_selectAllGrid2(obj,nCell,nCell,true);	// 전체 선택  
	} 
	// 헤더에 CAPTION 존재시 사용불가하여 주석처리함
	// else if (nCell == 3) { 							// 선택 CELL 인 경우
		// gfn_selectAllGrid2(obj,nCell,nCell,true);	// 전체 선택  
	// } 
	else { 										// 그 외 CELL 인 경우
		// gfn_sortGrid(obj,nCell);					// 그리드 정렬 처리  (순번 채번 처리로 인해 정렬기능 삭제)
	} 
}

// 그리드에서 키 입력 시
function grd_list_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,nLLParam,nHLParam)
{
	// trace("grd_list_OnKeyDown.nChar : " + nChar); 
	var ds = object(obj.BindDataset);  
	
	// 엔터키이면
	if (nChar==13)
	{ 
		ds.row = ds.row + 1;  // 다음 행으로 이동
	}  
	// Esc 키이면 변경전 자료로 되돌린다.
	else if (nChar==27)
	{  
		var nCol 	= obj.GetCellPos();
		
		switch (nCol)					// 변경된 셀 인덱스
		{
			case F_COLNUM_DISGBN_CHK:	// 표시여부 
			case F_COLNUM_INGTEXT:		// 진행사항 
				gfn_SetOrgColumn(obj, ds.row, nCol); 		 
				break; 
		}  
	} 
	else 
	{
		gfn_GrdCellCopyPasteReset(obj, ds, bCtrl, nChar);
	} 
	
	
} 

function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{  
	var nCol = grd_list.GetCellPos();  // 현재 컬럼번호
	
	// trace("ds_list_OnColumnChanged.row,col : " + nRow + ", " + nCol);  
	
	// Display구분, 진행하상에 대해 변경여부를 체크
	if (strColumnID == "DISGBN_CHK" || strColumnID == "INGTEXT")
	{  
		// 값이 변경되었을 경우 변경구분 컬럼 자동 SET 
		if (varNewValue != varOldValue)  
		{  
			switch (strColumnID)
			{  
				case "DISGBN_CHK": 		// Display 구분자인 경우    
					ds_list.Fireevent = false; 
					ds_list.SetColumn(nRow, "DISGBN", decode(ds_list.GetColumn(nRow, "DISGBN_CHK"),1,"X",""));  // 표시(X)
					ds_list.Fireevent = false;
					break;  
				case "INGTEXT": 	// 진행사항인 경우    
					break; 
			} 
			
			obj.Fireevent = false; 
			obj.SetColumn(nRow, "CHK" , "1");	// 선택여부   
			obj.Fireevent = true; 
			
			// FLAG 변경 : U
			gfn_changeFlag( obj, strColumnID, nRow, "FLAG");
			
			// 변경된 현재 행번호,컬럼번호
			F_CHG_COLNUM = nCol; 	// 현재 컬럼번호
			F_CHG_ROWNUM = nRow;	// 현재 행번호
		}
	} 
	 
}

// 행추가 버튼 클릭 시
function fn_input()
{    
	// 행추가 (맨뒤에 추가됨)
	var newRow = gfn_addGridRow(grd_list, -1, "FLAG");	// 추가된 행번호를 받아옴 (FLAG:I) 
	
	// 진행사항 셀에 포커싱
	gfn_SetFocusGrid(grd_list, newRow, F_COLNUM_INGTEXT); 
	 
	// 새로 추가된 행에 기본값을 설정한다.  
	F_MAX_SERNO++;
	ds_list.Fireevent = false;
	// ds_list.SetColumn(newRow, "CHK" 	, 1				);	// 선택여부
	ds_list.SetColumn(newRow, "NEW_YN" 	, "Y"			);	// 신규여부    
	ds_list.SetColumn(newRow, "SERNO" 	, F_MAX_SERNO	);	// 순번     
	ds_list.Fireevent = true;
						
} 

// 행삭제 버튼 클릭 시
function fn_delete()
{
	// trace("fn_delete()호출 start"); 
	 
	// 조건 항목오류검증
	if (fn_valid_chk("delete") == false) return;  
	
	if ( ds_list.GetColumn(ds_list.row, "FLAG") == "I") 
	{   
		// Grid 현재행 삭제 처리  (FLAG:D)
		gfn_deleteGridRow( grd_list, ds_list.row, "FLAG" );	  
	}
	else 
	{ 
		// Grid 현재행 삭제 처리  (FLAG:D)
		// 삭제(신규행), 삭제FLAG처리(기등록자료) 
		gfn_deleteGridRow( grd_list, ds_list.row, "FLAG" );	 
		ds_list.SetColumn(ds_list.row, "CHK", 1);  
	}
}

// 현재 조회된 자료의 MAX 순번 구하기(순번이 문자열이라서 ds_list.Max 로 구할 수 없음)
function fn_getMaxSerno()
{ 
	var max_serno 	= 0;
	var serno 		= 0; 
	for (var i=0;i<ds_list.GetCount();i++)
	{
		serno = ds_list.GetColumn(i, "SERNO");  
		if (ToNumber(serno) > ToNumber(max_serno))
		{
			max_serno = serno;
		}
	}
	return max_serno;
}

// 데이타셋 행 자료가 변경되었을 경우
function ds_list_OnRowPosChanged(obj,nOldRow,nRow)
{ 
	// trace("ds_list_OnRowPosChanged.nOldRow : " + nOldRow);
	// trace("ds_list.GetColumn(FLAG) : " + obj.GetColumn(nOldRow, "FLAG"));
	
	// 변경된 행에 대해서만 체크함	
	if (obj.GetColumn(nOldRow, "FLAG") <> "U") return;   
	
	// F_CHG_ARR에 선언된 컬럼에 대해서만 변경여부 체크 (Y)  
	var ChgYn = gfn_GetDatasetChgYN(grd_list, nOldRow, F_CHG_ARR, "Y");  
	// trace("ds_list_OnRowPosChanged.ChgYn : " + ChgYn);
	
	// 변경된 자료가 없으면 선택여부,변경구분 초기화
	if (ChgYn == "N")  
	{
		gfn_SetDatasetChgFlag(obj, nOldRow); 
	}
}
]]></Script>
</Window>