<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="Sbp0070" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="사업계획&#32;오픈&#32;및&#32;마감" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="ZPYEAR" size="4" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list" OnRowPosChanged="ds_list_OnRowPosChanged">
				<Contents>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="3" type="STRING"/>
					<colinfo id="ZBPINC" size="6" type="STRING"/>
					<colinfo id="ZPYEAR" size="4" type="STRING"/>
					<colinfo id="ZOPFLG" size="1" type="STRING"/>
					<colinfo id="ZCLFLG" size="1" type="STRING"/>
					<colinfo id="ZRMK" size="100" type="STRING"/>
					<colinfo id="CDATE" size="8" type="STRING"/>
					<colinfo id="CTIME" size="6" type="STRING"/>
					<colinfo id="CUSER" size="10" type="STRING"/>
					<colinfo id="UDATE" size="8" type="STRING"/>
					<colinfo id="UTIME" size="6" type="STRING"/>
					<colinfo id="UUSER" size="10" type="STRING"/>
					<colinfo id="DDATE" size="8" type="STRING"/>
					<colinfo id="DTIME" size="6" type="STRING"/>
					<colinfo id="DUSER" size="10" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error">
				<Contents>
					<colinfo id="IDX" size="10" type="STRING"/>
					<colinfo id="ERRMSG" size="200" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_save">
				<Contents>
					<colinfo id="PROCGB" size="2" type="STRING"/>
					<colinfo id="MANDT" size="1" type="STRING"/>
					<colinfo id="ZBPINC" size="6" type="STRING"/>
					<colinfo id="ZPYEAR" size="4" type="STRING"/>
					<colinfo id="ZOPFLG" size="1" type="STRING"/>
					<colinfo id="ZCLFLG" size="1" type="STRING"/>
					<colinfo id="ZRMK" size="100" type="STRING"/>
					<colinfo id="CDATE" size="8" type="STRING"/>
					<colinfo id="CTIME" size="6" type="STRING"/>
					<colinfo id="CUSER" size="10" type="STRING"/>
					<colinfo id="UDATE" size="8" type="STRING"/>
					<colinfo id="UTIME" size="6" type="STRING"/>
					<colinfo id="UUSER" size="10" type="STRING"/>
					<colinfo id="DDATE" size="8" type="STRING"/>
					<colinfo id="DTIME" size="6" type="STRING"/>
					<colinfo id="DUSER" size="10" type="STRING"/>
					<colinfo id="USER_ID" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_last">
				<Contents>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="3" type="STRING"/>
					<colinfo id="ZBPINC" size="6" type="STRING"/>
					<colinfo id="ZPYEAR" size="4" type="STRING"/>
					<colinfo id="ZOPFLG" size="1" type="STRING"/>
					<colinfo id="ZCLFLG" size="1" type="STRING"/>
					<colinfo id="ZRMK" size="100" type="STRING"/>
					<colinfo id="CDATE" size="8" type="STRING"/>
					<colinfo id="CTIME" size="6" type="STRING"/>
					<colinfo id="CUSER" size="10" type="STRING"/>
					<colinfo id="UDATE" size="8" type="STRING"/>
					<colinfo id="UTIME" size="6" type="STRING"/>
					<colinfo id="UUSER" size="10" type="STRING"/>
					<colinfo id="DDATE" size="8" type="STRING"/>
					<colinfo id="DTIME" size="6" type="STRING"/>
					<colinfo id="DUSER" size="10" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="515" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="456" Id="grd_list" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" Right="971" RowHeight="20" Style="sty_grid" TabOrder="7" TabStop="true" Top="59" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="963">
			<contents>
				<format id="Default">
					<columns>
						<col width="40"/>
						<col width="80"/>
						<col width="79"/>
						<col width="72"/>
						<col width="71"/>
						<col width="588"/>
					</columns>
					<head>
						<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="편성년도"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="차수"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="오픈"/>
						<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="마감"/>
						<cell align="center" autosizing="none" col="5" color="user21" display="text" font="굴림,9" text="비고"/>
					</head>
					<body>
						<cell align="center" col="0" expr="currow+1"/>
						<cell align="center" autosizing="none" bkcolor2="user22" col="1" colid="ZPYEAR"/>
						<cell align="center" autosizing="none" bkcolor2="user22" col="2" colid="ZBPINC"/>
						<cell align="center" autosizing="none" bkcolor2="user22" col="3" colid="ZOPFLG" display="checkbox"/>
						<cell align="center" autosizing="none" bkcolor2="user22" col="4" colid="ZCLFLG" display="checkbox"/>
						<cell align="left" autosizing="none" bkcolor2="user22" checklength="Byte" col="5" colid="ZRMK" display="text" edit='expr:iif(F_MAX_ZBPINC==ZBPINC,&#32;&quot;normal&quot;,&#32;&quot;none&quot;)'/>
					</body>
				</format>
			</contents>
		</Grid>
		<Shape BKColor="user0" Bottom="31" Height="31" Id="Shape1" Left="0" LineColor="user1" Right="978" TabOrder="0" Top="0" Type="Rectangle" Width="978"></Shape>
		<Static Align="Right" Height="20" Id="Static0" Left="5" Style="sty_lb_search" TabOrder="3" Text="편성년도&#32;" Top="5" VAlign="Middle" Width="80"></Static>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_plan_open" ImageID="btn_sub_06" Left="776" LeftMargin="12" OnClick="btn_plan_open_OnClick" Style="sty_btn" TabOrder="3" Text="오픈" Top="35" Transparent="TRUE" Width="96"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_plan_close" ImageID="btn_sub_06" Left="875" LeftMargin="12" OnClick="btn_plan_close_OnClick" Style="sty_btn" TabOrder="5" Text="마감" Top="35" Transparent="TRUE" Width="96"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_plan_create" ImageID="btn_sub_06" Left="676" LeftMargin="12" OnClick="btn_plan_create_OnClick" Style="sty_btn" TabOrder="1" Text="&#32;&#32;&#32;차수생성" Top="35" Transparent="TRUE" Width="96"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_plan_delete" ImageID="btn_sub_06" Left="676" LeftMargin="12" OnClick="btn_plan_delete_OnClick" Style="sty_btn" TabOrder="2" Text="&#32;&#32;&#32;차수삭제" Top="57" Transparent="TRUE" Width="96"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_plan_open_cancel" ImageID="btn_sub_06" Left="776" LeftMargin="12" OnClick="btn_plan_open_cancel_OnClick" Style="sty_btn" TabOrder="4" Text="오픈취소" Top="57" Transparent="TRUE" Width="96"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_plan_close_cancel" ImageID="btn_sub_06" Left="875" LeftMargin="12" OnClick="btn_plan_close_cancel_OnClick" Style="sty_btn" TabOrder="6" Text="마감취소" Top="56" Transparent="TRUE" Width="96"></Button>
		<Combo BKColor="user27" Border="Flat" CodeColumn="CODE" DataColumn="CODE_NAME" Height="20" Id="cb_year" ImeMode="none" Left="87" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Style="sty_ipt_search" TabOrder="10" Top="5" Width="61"></Combo>
		<Button Height="19" Id="querytest" Left="528" OnClick="fn_query" TabOrder="11" Text="Button0" Top="22" Width="33"></Button>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 사업계획오픈/마감 (Sbp0070)
 * 작  성  자   : 구란이
 * 작성  일자   : 2012.07.16
 * ----------------------------------------------------------------------------------------
 * HISTORY    : V1.0 : 2012.09.03 : 신규
 * COMMENT
   0. T-CODE                : 
   1. WFC URL 				: 
   2. WFC OPERATION NAME 	: 
   3. WFC OBJ NAME 			: 
   4. 개발자료 :   
 ******************************************************************************************
*/
#include "LIB::commons.js";			// 공통 스크립트  
#include "LIB::nsfRequest.js";		// 공통 스크립트  /* GNY 추가 */
#include "LIB::common_hdel.js";		// 공통 스크립트  /* GNY 추가 */
#include "LIB::common_sd.js";

//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var F_FORM_ID 			= "Sbp0070";   

// 컬럼번호 
var F_COLNUM_ZPYEAR		= "";  	// 편성년도 
var F_COLNUM_ZRMK       = ""; 	// 비고
 
var F_CLOSE_YN 			= "Y";  		// 계획년월의 마감여부
var F_SYSDATE           = ""; 			// 현재년월일(8자리)
var F_MAX_ZBPINC        = "";			// 최종 사업계획차수  
var F_MAX_ZPYEAR		= "";  			// 최종 편성년도 
var F_MAX_ZOPFLG        = "";			// 최종 사업계획차수의 오픈여부
var F_MAX_ZCLFLG        = "";			// 최종 사업계획차수의 마감여부 

var F_USER_GROUP_B 		= "";  			// 사용자권한 (G_USER_GROUP_B)
  

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {

	gfn_initForm(true);   

	// 편성년도 콤보 데이타 Load 및 기본값 SETTING 
	var curYear = substr(gfn_getCurrDate(),0,4); 
	fn_Year(curYear,-10,1,1);
	
	// 폼 초기화
	fn_init_form(); 
}

/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 (common.js에서 호출됨)
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
	gfn_showMsg("CI00007");  
}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
 
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
var fn_query_chk = false; //중복 조회방지용 flag

function fn_query() { 
	//trace("fn_query()호출 start");
	
	gfn_clearMsgBar(); 
	
	// sort mark 삭제 
	gfn_clearGridSortMark(grd_list); 
	
	// 오픈,마감버튼 초기화
	fn_btnInit();
	
	// 조회조건 항목오류검증 
	if (fn_valid_chk("query") == false)  return;
	
	// 조회조건 설정
	ds_cond.ClearData();   
	if (fn_param_set("query") == false)  return;   
	//trace(ds_cond.SaveXML());
	
	if(!fn_query_chk) {
		fn_query_chk = true;
	} else {
		gfn_showAlert("CW10025", "조회중입니다..");
		return;
	}
	
	// 데이타셋 이벤트 비활성화
	ds_list.Fireevent = false; 
	
	// 최종 사업계획차수 정보 초기화
	F_MAX_ZBPINC = "";	// 최종 사업계획차수 
	F_MAX_ZPYEAR = "";	// 최종 편성년도 
	F_MAX_ZOPFLG = "";	// 최종 사업계획차수의 오픈여부
	F_MAX_ZCLFLG = "";	// 최종 사업계획차수의 마감여부 
	
	// 서비스 호출
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	ds_list.ClearData();   
	ds_list_last.ClearData();   
	ds_error.ClearData();
	nsfRequest("query"									// srvId
				, "sbp0070/find"						// url
				, "ds_cond=ds_cond ds_list=ds_list ds_list_last=ds_list_last"		// inDsList
				, "ds_list=ds_list ds_list_last=ds_list_last ds_error=ds_error"		// outDsList
				, ""									// strParam
				, "fn_afterQuery"						// CallBackFunc
				);
 
}


// INPUT PARAM SET
// pProcGb : 처리구분 (query:조회)
function fn_param_set(pProcGb)
{   

	var zopflg = "";	// 오픈여부
	var zclflg = "";	// 마감여부
	
	switch(pProcGb)
	{
		case "query" :  // 조회 시
			 
			ds_cond.AddRow();  
			ds_cond.SetColumn(0, "ZPYEAR"	, replace(left(trim(cb_year.Value),4),".","")	); 	// 편성년도   
				
			break;  
		
		case "create" :  // 차수생성 시
			 
			ds_list_save.AddRow();   
			ds_list_save.SetColumn(0, "PROCGB"	, "IN"); 	// 차수생성   
			ds_list_save.SetColumn(0, "ZPYEAR"	, replace(left(trim(cb_year.Value),4),".","")	); 	// 편성년도   
				
			break; 
			 
		case "delete" :  // 차수삭제 시
			 
			// 차수목록에서 선택한 사업계획차수에 해당하는  항목을
			// 상세항목 데이타셋에 복사한다. (ds_list-->ds_list_save) 
			ds_list_save.AddRow();  
			ds_list.CopyToRow(ds_list.row, ds_list_save, 0); 
			ds_list_save.SetColumn(0, "PROCGB"	, "DL"); 	// 차수삭제  
			break;
			
		case "open" :  // 사업계획오픈 저장 시  
			// 차수목록에서 선택한 사업계획차수에 해당하는  항목을
			// 상세항목 데이타셋에 복사한다. (ds_list-->ds_list_save) 
			ds_list_save.AddRow(); 
			ds_list.CopyToRow(ds_list.row, ds_list_save, 0);  
			ds_list_save.SetColumn(0, "PROCGB"	, "OP"); 	// 차수오픈 
			ds_list_save.SetColumn(0, "ZOPFLG"	, "X");
			break;
			
		case "open_cancel" :  // 사업계획오픈취소 저장 시  
			// 차수목록에서 선택한 사업계획차수에 해당하는  항목을
			// 상세항목 데이타셋에 복사한다. (ds_list-->ds_list_save) 
			ds_list_save.AddRow(); 
			ds_list.CopyToRow(ds_list.row, ds_list_save, 0);  
			ds_list_save.SetColumn(0, "PROCGB"	, "OC"); 	// 차수오픈취소
			ds_list_save.SetColumn(0, "ZOPFLG"	, "");
			break;	
			
		case "close" :  // 사업계획마감 저장 시  
			// 차수목록에서 선택한 사업계획차수에 해당하는  항목을
			// 상세항목 데이타셋에 복사한다. (ds_list-->ds_list_save) 
			ds_list_save.AddRow(); 
			ds_list.CopyToRow(ds_list.row, ds_list_save, 0);  
			ds_list_save.SetColumn(0, "PROCGB"	, "CL"); 	// 차수마감
			ds_list_save.SetColumn(0, "ZOPFLG"	, "");
			ds_list_save.SetColumn(0, "ZCLFLG"	, "X");
			break;
			
		case "close_cancel" :  // 사업계획마감취소 저장 시  
		 
			// 차수목록에서 선택한 사업계획차수에 해당하는  항목을
			// 상세항목 데이타셋에 복사한다. (ds_list-->ds_list_save) 
			ds_list_save.AddRow(); 
			ds_list.CopyToRow(ds_list.row, ds_list_save, 0);  
			ds_list_save.SetColumn(0, "PROCGB"	, "CC"); 	// 차수마감취소
			ds_list_save.SetColumn(0, "ZOPFLG"	, "X");
			ds_list_save.SetColumn(0, "ZCLFLG"	, "");
			break;	
			
		default: 
			break; 
	}   

	return true;
	
}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}

/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	
	//trace("fn_excel()호출 start");
 	
 	gfn_clearMsgBar(); 
 	
	// 조회조건 항목오류검증
	if (fn_valid_chk("excel") == false)  return; 
	
	// Excel Export  
	gfn_saveToExcel(grd_list, true); 
	
}


//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 저장 : 차수 등록, 삭제 , 오픈,오픈취소, 마감,마감취소
********************************************************************************/
function fn_save(pProcNm, pProcGb) { 
	 
	gfn_clearMsgBar();   
	
	// 저장항목 오류검증
	if (fn_valid_chk(pProcGb) == false)  return false;
	
	// 저장여부 확인
	// "CI00024", "${} 작업을 진행 하시겠습니까?"
	if (!gfn_showConfirm("CI00024", pProcNm)) 
	{
		return false;
	}
	
	// 저장항목 값설정 
	ds_list_save.ClearData();  
	if (fn_param_set(pProcGb) == false)  return false;   
	//trace(ds_list_save.SaveXML());	 
	
	// 서비스 호출 
	ds_error.ClearData(); 
	nsfRequest("update"										// srvId
				, "sbp0070/save"							// url
				, "ds_list_save=ds_list_save"				// inDsList
				, "ds_error=ds_error"						// outDsList
				, ""										// strParam
				, "fn_afterSave"							// CallBackFunc
				);

}
 
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {

	fn_destroyWait(); 
	
	// 데이타셋 이벤트 활성화
	ds_list.Fireevent = true;
	
	if(ds_error.rowcount() > 0) {   
		gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG"));   
		
	} else {
		// 최종 사업계획차수 정보 (사업계획차수 내림차순으로 조회되므로 0번째 레코드가 최종임)
		F_MAX_ZBPINC = ds_list_last.GetColumn(0, "ZBPINC");	// 사업계획차수 
		F_MAX_ZPYEAR = ds_list_last.GetColumn(0, "ZPYEAR");	// 편성년도 
		F_MAX_ZOPFLG = ds_list_last.GetColumn(0, "ZOPFLG");	// 오픈여부
		F_MAX_ZCLFLG = ds_list_last.GetColumn(0, "ZCLFLG");	// 마감여부 
		if (length(F_MAX_ZBPINC)==0)
		{
			fn_btnControl(btn_plan_create, true, true);
		}
		// 조회된 자료가 있을 경우 
		if (ds_list.RowCount() > 0) 
		{ 	 
			trace("!!!!!!!!!");
			ds_list_OnRowPosChanged(ds_list, -1, 0);		// 강제로 행이동 실행
			gfn_showMsg("CI00002", ds_list.RowCount()+"");  // CI00002 : "조회를 완료했습니다.조회건수 [${}건]"
		} 
		else 
		{
			btn_plan_create.Enable = true;       //강슬기 2013.10.07
			btn_plan_open.Enable = true;
			 
			gfn_showMsg("CW00010"); 					// CW00010 : "데이터가 없습니다."
		} 
	}
	fn_query_chk = false; //중복조회 방지용 flag
	//trace("fn_afterQuery 호출 end");
} 

/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) { 

	fn_destroyWait();
	
	//alert("fn_afterCreate");

	//trace("fn_afterSave 호출 start");  
	
	//trace(ds_error.SaveXML());
	
	if(ds_error.rowcount() > 0) {   
	
		gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
		return;
		
	} else {
	
		gfn_showAlert("CI00003");  // CI00003: "저장을 완료했습니다
	
		ds_list.ApplyChange(); 
	
		// 재조회
		fn_query(); 
	}
	
	//trace("fn_afterSave 호출 end");
} 

// 항목 오류 검증
// pProcGb : 처리구분 (query:조회,excel:엑셀)
function fn_valid_chk(pProcGb)
{    

	var arr = "";
	
	//trace("fn_valid_chk.pProcGb : " + pProcGb);	 
	
 	switch(pProcGb)
	{
		case "create" :       
			if (length(cb_year.Value) == 0)
			{ 
				// CW00208 : "[${}]은/는 필수입력 입니다.확인바랍니다.")
				gfn_showAlert("CW00208","편성년도");
				gfn_SetFocus(cb_year,"Y"); 
				return false;
			}      
			if (left(cb_year.Value,0,4) < F_MAX_ZPYEAR)
			{ 
				arr = ["차수생성하고자 하는 편성년도", "최종 차수년도인 " + F_MAX_ZPYEAR+"년도"];
				// "CW00007", "[${}]은/는 [${}] 보다 같거나 이후 일자로 입력하여 주십시오."
				gfn_showAlert("CW00007","편성년도");
				gfn_SetFocus(cb_year,"Y"); 
				return false;
			}     
			if (ds_list.GetUpdate()==true)
			{ 
				arr = ["조회","계속"];
				// "CI10001", "변경된 자료가 존재합니다. \n${} 할 경우 기존에 변경된 정보가 모두 소실됩니다.\n\n{} 하시겠습니까?"); 			 
				if (gfn_showConfirm("CI10001", arr) == false)   
				{ 
					// 조회하지 않기 
					gfn_SetFocusGrid(grd_list, ds_list.row, 5);  // 변경된 행에 포커싱처리
					return false;
				}   
			}
			
			break;  
			
		case "query" :    
		 
			break;  
				
		case "excel" :   // 엑셀
			 
			if (ds_list.RowCount() <=0)
			{ 
				// CW00010 : "데이터가 없습니다."
				gfn_showAlert("CW00010");
				return false;
			} 
			 
			// 변경된 내역이 존재할 경우 엑셀출력 불가처리
			if(gfn_isChangeDs(ds_list, false, "FLAG", "사업계획")== true) 
			{  
				//"CW10003", "변경된 ${}이 존재하여 ${}이 불가능합니다. 변경된 정보를 저장후 다시 실행하여 주십시오.");  // 2012.06.13 : GRY : 추가
				arr = ["사업계획", "엑셀출력"];
				gfn_showAlert("CW10003", arr);
				return false;
			}   
			
			break; 
			
		case "save":   	// 사업계획저장
		
			//alert("fn_valid_chk.save");
			
			if (length(cb_year.Value) == 0)
			{ 
				// CW00208 : "[${}]은/는 필수입력 입니다.확인바랍니다.")
				gfn_showAlert("CW00208","편성년도");
				gfn_SetFocus(cb_year,"Y"); 
				return false;
			}      
		
			break; 
			
		case "delete":   	// 사업계획삭제 
			
			// 조회된 행 존재여부 체크
			if (ds_list.row < 0 || ds_list.rowCount() < 1)
			{ 
				// CW00010 : "데이터가 없습니다."
				gfn_showAlert("CW00010");
				return false; 
			}  
			
		default: 
			break; 
	}   

	return true;
}

/********************************************************************************
* 기      능   : 새로고침
********************************************************************************/
function fn_refresh() {

	// 폼초기화
	//fn_init_form();
	
}  

// 폼 초기화 
function fn_init_form()
{
	btn_query.Visible = false; 
	btn_excel.Visible = false;
	btn_close.Visible = false;
	
	// 메세지바 초기화
	gfn_clearMsgBar();   
	
	// 오픈/마감버튼 비활성화
	fn_btnInit();

	// 폼변수 초기화 
	F_MAX_ZBPINC    = "";		// 최종 사업계획차수 
	F_MAX_ZPYEAR    = "";		// 최종 편성년도
	F_MAX_ZOPFLG    = "";		// 최종 사업계획차수의 오픈여부
	F_MAX_ZCLFLG    = "";		// 최종 사업계획차수의 마감여부 
	F_USER_GROUP_B  = G_USER_GROUP_B;  // 임시 추가
	F_SYSDATE   	= substr(gfn_getCurrDate(),0,8); // 현재년월일(8자리)
	
	// 데이타셋 초기화
	ds_list.ClearData(); 			// 검색결과 그리드 데이타셋 초기화    
	
	// 익년
	var zpyear = parseInt(substr(F_SYSDATE,0,4))+1; 					// 현재년월
	
	// 편성년도
	cb_year.Value = zpyear + "0101"; 		// 편성년도 = 익년도 
	    
	// 코딩 시 필요한 그리드 컬럼 인덱스	     
	F_COLNUM_ZPYEAR 	= gfn_getColIdx(grd_list,"ZPYEAR"		);  // 편성년월  
	F_COLNUM_ZRMK       = gfn_getColIdx(grd_list,"ZRMK"			);	// 비고

	// 그리드 FIX 
	
	// 버튼 제어
	ufn_enableBtn("save", false);   
	 
}   
 

// 그리드에서 키 입력 시
function grd_list_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,nLLParam,nHLParam)
{
	//trace("grd_list_OnKeyDown.nChar : " + nChar); 
	
	// 엔터키이면
	if (nChar==13)
	{ 
		ds_list.row = ds_list.row + 1;  // 다음 행으로 이동
	} else {
		gfn_GrdCellCopyPasteReset(obj, ds_list, bCtrl, nChar);
	} 
	
	
} 

// 버튼 활성화 및 Visible 제어
function fn_btnControl(pBtnObj, pEnable, pVisible)
{
	pBtnObj.Enable 	= pEnable;
	pBtnObj.Visible = pVisible;
}
   

function ds_list_OnRowPosChanged(obj,nOldRow,nRow)
{
	// alert("ds_list_OnRowPosChanged.F_MAX_ZBPINC : " + F_MAX_ZBPINC);
	// alert("ds_list_OnRowPosChanged.F_MAX_ZOPFLG : " + F_MAX_ZOPFLG);
	// alert("ds_list_OnRowPosChanged.F_MAX_ZCLFLG : " + F_MAX_ZCLFLG);
	
	var zbpinc = ds_list.GetColumn(nRow, "ZBPINC"); 
	trace("***zbipinc :" + zbpinc);
	trace("***F_MAX_ZBPINC :" + F_MAX_ZBPINC);
	// 현재 행이 마지막 사업계획차수의 행인 경우
	if (zbpinc = F_MAX_ZBPINC)
	{
		if (F_MAX_ZCLFLG=="1")  // 마감된 경우 
		{
			fn_btnControl(btn_plan_create		, true	, true);	// 다음 차수생성 가능
			fn_btnControl(btn_plan_delete		, false	, false);
			fn_btnControl(btn_plan_open			, false	, false);
			fn_btnControl(btn_plan_open_cancel	, false	, true);
			fn_btnControl(btn_plan_close		, false	, false);
			fn_btnControl(btn_plan_close_cancel	, true	, true); 	// 마감취소 가능
		}
		else if (F_MAX_ZOPFLG=="1")  // 오픈된 경우 
		{
			fn_btnControl(btn_plan_create		, false	, false);	
			fn_btnControl(btn_plan_delete		, true	, true);		// 차수삭제 가능
			fn_btnControl(btn_plan_open			, false	, false);
			fn_btnControl(btn_plan_open_cancel	, true	, true);		// 오픈취소 가능
			fn_btnControl(btn_plan_close		, true	, true);		// 마감 가능
			fn_btnControl(btn_plan_close_cancel	, false	, false); 	 
		}
		else						// 오픈,마감 모두 안된 경우
		{
			fn_btnControl(btn_plan_create		, false	, false);	
			fn_btnControl(btn_plan_delete		, true	, true);		// 차수삭제 가능
			fn_btnControl(btn_plan_open			, true	, true);		// 오픈 가능
			fn_btnControl(btn_plan_open_cancel	, false	, false);	 
			fn_btnControl(btn_plan_close		, true	, true);		 
			fn_btnControl(btn_plan_close_cancel	, false	, false); 	 
		}
	}
	
	// 현재 행이 최종 사업계획차수가 아닌 경우
	else
	{
		// 최종 사업계획차수가 마감된 경우에는 어떤 행에서든지 다음 차수생성이 가능하도록 설정
		if (F_MAX_ZCLFLG=="1")  // 마감된 경우 
		{
			fn_btnControl(btn_plan_create		, true	, true);	// 다음 차수생성 가능
		} 
		else
		{
			fn_btnControl(btn_plan_create		, false, true); 
		}
		fn_btnControl(btn_plan_delete		, false	, false); 
		fn_btnControl(btn_plan_open			, false, true);
		fn_btnControl(btn_plan_open_cancel	, false, false);
		fn_btnControl(btn_plan_close		, false, true);
		fn_btnControl(btn_plan_close_cancel	, false, false); 
	}
	
	// 비고란에 포커싱 처리
	gfn_SetFocusGrid(grd_list, nRow, 5);
	
}

// 오픈, 마감버튼 초기화
function fn_btnInit()
{
	fn_btnControl(btn_plan_create		, false, true	); // 차수생성 visible
	fn_btnControl(btn_plan_delete		, false, false	); // 차수삭제
	fn_btnControl(btn_plan_open			, false, true	); // 오픈 visible
	fn_btnControl(btn_plan_open_cancel	, false, false	); // 오픈취소
	fn_btnControl(btn_plan_close		, false, true	); // 마감 visible
	fn_btnControl(btn_plan_close_cancel	, false, false	); // 마감취소 
	
	btn_plan_create.top = 35;
	btn_plan_delete.top = 35;
	btn_plan_open.top = 35;
	btn_plan_open_cancel.top = 35;
	btn_plan_close.top = 35;
	btn_plan_close_cancel.top = 35;
}

function btn_plan_create_OnClick(obj)
{
	fn_save(obj.Text, "create");
}

function btn_plan_delete_OnClick(obj)
{
	fn_save(obj.Text, "delete");
}

function btn_plan_open_OnClick(obj)
{
	fn_save(obj.Text, "open");
}

function btn_plan_open_cancel_OnClick(obj)
{
	fn_save(obj.Text, "open_cancel");
}

function btn_plan_close_OnClick(obj)
{
	fn_save(obj.Text, "close");
}

function btn_plan_close_cancel_OnClick(obj)
{
	fn_save(obj.Text, "close_cancel");
}
]]></Script>
</Window>