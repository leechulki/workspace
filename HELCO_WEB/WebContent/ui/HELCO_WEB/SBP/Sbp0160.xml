<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="Sbp0160" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="월&#32;수주계획&#32;등록" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="FR_ZPYM" size="256" summ="default" type="STRING"/>
					<colinfo id="TO_ZPYM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZPYM" size="256" summ="default" type="STRING"/>
					<colinfo id="SPART" size="256" summ="default" type="STRING"/>
					<colinfo id="ZKUNNR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBUR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<colinfo id="ZMPFLG" size="256" summ="default" type="STRING"/>
					<colinfo id="SORLT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZAGNT" size="256" summ="default" type="STRING"/>
					<colinfo id="WGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="PGUBN" size="256" summ="default" type="STRING"/>
					<colinfo id="AGNTGB" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_output" OnColumnChanged="ds_output_OnColumnChanged" OnRowInserted="ds_output_OnRowInserted" OnRowPosChanged="ds_output_OnRowPosChanged" UseClientLayout="1">
				<Contents>
					<colinfo id="MANDT" size="3" summ="default" type="STRING"/>
					<colinfo id="SONNR" size="10" summ="default" type="STRING"/>
					<colinfo id="ZPYM" size="6" summ="default" type="STRING"/>
					<colinfo id="SPART" size="2" summ="default" type="STRING"/>
					<colinfo id="AUART" size="4" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="18" summ="default" type="STRING"/>
					<colinfo id="VKBUR" size="4" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="3" summ="default" type="STRING"/>
					<colinfo id="ZKUNNR" size="10" summ="default" type="STRING"/>
					<colinfo id="ZAGNT" size="10" summ="default" type="STRING"/>
					<colinfo id="GTYPE" size="20" summ="default" type="STRING"/>
					<colinfo id="TYPE1" size="5" summ="default" type="STRING"/>
					<colinfo id="TYPE2" size="5" summ="default" type="STRING"/>
					<colinfo id="TYPE3" size="5" summ="default" type="STRING"/>
					<colinfo id="ZNUMBER" size="5" summ="default" type="STRING"/>
					<colinfo id="KUNNR" size="10" summ="default" type="STRING"/>
					<colinfo id="GSNAM" size="50" summ="default" type="STRING"/>
					<colinfo id="LAND1" size="3" summ="default" type="STRING"/>
					<colinfo id="REGION" size="2" summ="default" type="STRING"/>
					<colinfo id="ZDELI" size="1" summ="default" type="STRING"/>
					<colinfo id="ZLHGBN" size="1" summ="default" type="STRING"/>
					<colinfo id="SHANGH" size="4" summ="default" type="STRING"/>
					<colinfo id="ZINTER" size="1" summ="default" type="STRING"/>
					<colinfo id="SOFOCA" size="15" summ="default" type="STRING"/>
					<colinfo id="ZFORE" size="4" summ="default" type="STRING"/>
					<colinfo id="ZCOST" size="15" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="5" summ="default" type="STRING"/>
					<colinfo id="DELDAT" size="8" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="100" summ="default" type="STRING"/>
					<colinfo id="SOABLE" size="1" summ="default" type="STRING"/>
					<colinfo id="SORLT" size="4" summ="default" type="STRING"/>
					<colinfo id="PGUBN" size="4" summ="default" type="STRING"/>
					<colinfo id="SOPRICE" size="15" summ="default" type="STRING"/>
					<colinfo id="SHANG" size="4" summ="default" type="STRING"/>
					<colinfo id="ZMPFLG" size="1" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="10" summ="default" type="STRING"/>
					<colinfo id="ZBPNNR" size="10" summ="default" type="STRING"/>
					<colinfo id="SONNRB" size="10" summ="default" type="STRING"/>
					<colinfo id="CDATE" size="8" summ="default" type="STRING"/>
					<colinfo id="CTIME" size="6" summ="default" type="STRING"/>
					<colinfo id="CUSER" size="10" summ="default" type="STRING"/>
					<colinfo id="UDATE" size="8" summ="default" type="STRING"/>
					<colinfo id="UTIME" size="6" summ="default" type="STRING"/>
					<colinfo id="UUSER" size="10" summ="default" type="STRING"/>
					<colinfo id="DDATE" size="8" summ="default" type="STRING"/>
					<colinfo id="DTIME" size="6" summ="default" type="STRING"/>
					<colinfo id="DUSER" size="10" summ="default" type="STRING"/>
					<colinfo id="SBDCM" size="256" summ="default" type="STRING"/>
					<colinfo id="SBDAM" size="256" summ="default" type="STRING"/>
					<colinfo id="PBDAM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSEC" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSECAM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZFOREC" size="256" summ="default" type="STRING"/>
					<colinfo id="ZPRGFLG" size="256" summ="default" type="STRING"/>
					<colinfo id="SHANG55" size="4" summ="default" type="STRING"/>
					<colinfo id="ZFOREC55" size="256" summ="default" type="STRING"/>
					<colinfo id="ZCOST55" size="15" summ="default" type="STRING"/>
					<colinfo id="ZKUNNR_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZAGNT_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNNR_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="SID" size="256" summ="default" type="STRING"/>
					<colinfo id="LAND1_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZAREA_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="UFLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="RTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="ZCLFLG" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="NCHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="OPENDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZBDTYP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_arg">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTDAT" size="256" type="STRING"/>
					<colinfo id="SPART" size="256" type="STRING"/>
					<colinfo id="QTGBN" size="256" type="STRING"/>
					<colinfo id="ZBDTYP" size="256" type="STRING"/>
					<colinfo id="ZPRGFLG" size="256" type="STRING"/>
					<colinfo id="VKBUR" size="256" type="STRING"/>
					<colinfo id="VKGRP" size="256" type="STRING"/>
					<colinfo id="ZKUNNR" size="256" type="STRING"/>
					<colinfo id="ZAGNT" size="256" type="STRING"/>
					<colinfo id="KUNNR" size="256" type="STRING"/>
					<colinfo id="ZCST" size="256" type="STRING"/>
					<colinfo id="ZGNM" size="256" type="STRING"/>
					<colinfo id="ZDEV" size="256" type="STRING"/>
					<colinfo id="GSNAM" size="256" type="STRING"/>
					<colinfo id="ZREGN" size="256" type="STRING"/>
					<colinfo id="ZPID" size="256" type="STRING"/>
					<colinfo id="ZTEL" size="256" type="STRING"/>
					<colinfo id="ZADDR_ZPOST" size="256" type="STRING"/>
					<colinfo id="ZADDR_ADR1" size="256" type="STRING"/>
					<colinfo id="ZADDR_ADR2" size="256" type="STRING"/>
					<colinfo id="SOABLE" size="256" type="STRING"/>
					<colinfo id="ZESTDAT" size="256" type="STRING"/>
					<colinfo id="DELDAT" size="256" type="STRING"/>
					<colinfo id="ZDVMTS" size="256" type="STRING"/>
					<colinfo id="ZSUM_ZNUMBER" size="256" type="STRING"/>
					<colinfo id="ZSUM_ZCOST" size="256" type="STRING"/>
					<colinfo id="ZSUM_ZEAM" size="256" type="STRING"/>
					<colinfo id="ZSUM_SHANG" size="256" type="STRING"/>
					<colinfo id="ZICIF_PPRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_PPCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_PPCD" size="256" type="STRING"/>
					<colinfo id="ZICIF_1STRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_1STCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_1STCD" size="256" type="STRING"/>
					<colinfo id="ZICIF_2STRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_2STCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_2STCD" size="256" type="STRING"/>
					<colinfo id="ZICIF_RMRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_RMCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_RMCD" size="256" type="STRING"/>
					<colinfo id="SPRMK1" size="256" type="STRING"/>
					<colinfo id="SPRMK2" size="256" type="STRING"/>
					<colinfo id="SPRMK3" size="256" type="STRING"/>
					<colinfo id="SPRMK4" size="256" type="STRING"/>
					<colinfo id="SPRMK5" size="256" type="STRING"/>
					<colinfo id="SPRMK6" size="256" type="STRING"/>
					<colinfo id="SPRMK7" size="256" type="STRING"/>
					<colinfo id="SPRMK8" size="256" type="STRING"/>
					<colinfo id="SPRMK9" size="256" type="STRING"/>
					<colinfo id="SPRMK10" size="256" type="STRING"/>
					<colinfo id="ZSOFLG" size="256" type="STRING"/>
					<colinfo id="VBELN" size="256" type="STRING"/>
					<colinfo id="SONNR" size="256" type="STRING"/>
					<colinfo id="WAERK" size="256" type="STRING"/>
					<colinfo id="AUART" size="256" type="STRING"/>
					<colinfo id="CO_DDVRTQ" size="256" type="STRING"/>
					<colinfo id="CO_DEPHTQ" size="256" type="STRING"/>
					<colinfo id="CO_DSSQ" size="256" type="STRING"/>
					<colinfo id="CO_BCLCDTQ" size="256" type="STRING"/>
					<colinfo id="CO_CHPITQ" size="256" type="STRING"/>
					<colinfo id="CO_ASPC" size="256" type="STRING"/>
					<colinfo id="CO_DSV1" size="256" type="STRING"/>
					<colinfo id="CO_DSV1TQ" size="256" type="STRING"/>
					<colinfo id="CO_DSV2" size="256" type="STRING"/>
					<colinfo id="CO_DSV2TQ" size="256" type="STRING"/>
					<colinfo id="INCO" size="256" type="STRING"/>
					<colinfo id="KUNNR_NM" size="256" type="STRING"/>
					<colinfo id="ZAGNT_NM" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_output_detail" OnColumnChanged="ds_output_detail_OnColumnChanged" UseClientLayout="1">
				<Contents>
					<colinfo id="MANDT" size="3" type="STRING"/>
					<colinfo id="GBN" size="1" type="STRING"/>
					<colinfo id="GBN_NM" size="10" type="STRING"/>
					<colinfo id="WAERK" size="256" type="STRING"/>
					<colinfo id="AMT00" size="13" type="DECIMAL"/>
					<colinfo id="AMT01" size="13" type="DECIMAL"/>
					<colinfo id="AMT02" size="13" type="DECIMAL"/>
					<colinfo id="AMT03" size="13" type="DECIMAL"/>
					<colinfo id="AMT04" size="13" type="DECIMAL"/>
					<colinfo id="AMT05" size="13" type="DECIMAL"/>
					<colinfo id="AMT06" size="13" type="DECIMAL"/>
					<colinfo id="AMT07" size="13" type="DECIMAL"/>
					<colinfo id="AMT08" size="13" type="DECIMAL"/>
					<colinfo id="AMT09" size="13" type="DECIMAL"/>
					<colinfo id="AMT10" size="13" type="DECIMAL"/>
					<colinfo id="AMT11" size="13" type="DECIMAL"/>
					<colinfo id="AMT12" size="13" type="DECIMAL"/>
					<colinfo id="AMT13" size="13" type="DECIMAL"/>
					<colinfo id="AMT14" size="13" type="DECIMAL"/>
					<colinfo id="AMT15" size="13" type="DECIMAL"/>
					<colinfo id="AMT16" size="13" type="DECIMAL"/>
					<colinfo id="AMT17" size="13" type="DECIMAL"/>
					<colinfo id="AMT18" size="13" type="DECIMAL"/>
					<colinfo id="USER_ID" size="10" type="STRING"/>
					<colinfo id="SONNR" size="256" type="STRING"/>
					<colinfo id="TOTSUM" size="256" type="DECIMAL"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_temp"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error">
				<Contents>
					<colinfo id="ERRCODE" size="10" type="STRING"/>
					<colinfo id="ERRMSG" size="200" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_detail">
				<Contents>
					<colinfo id="SONNR" size="30" summ="default" type="STRING"/>
					<colinfo id="ZPYM" size="18" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_build">
				<Contents>
					<colinfo id="BUILDUSE" size="256" type="STRING"/>
					<colinfo id="STEXT" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_build">
				<Contents>
					<colinfo id="BUILDUSE" size="6" type="STRING"/>
					<colinfo id="STEXT" size="120" type="STRING"/>
					<colinfo id="WHERE" size="256" type="STRING"/>
					<record>
						<BUILDUSE></BUILDUSE>
						<STEXT></STEXT>
						<WHERE></WHERE>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_kunz2">
				<Contents>
					<colinfo id="ZKUNNR" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_kunz2">
				<Contents>
					<colinfo id="ISKUNZ2" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="72" Height="72" Id="Shape1" Left="0" LineColor="user1" Right="978" TabOrder="1" Top="0" Type="Rectangle" Width="978"></Shape>
		<Static Align="Right" Height="20" Id="Static0" Left="280" Style="sty_lb_search" TabOrder="2" Text="부서/팀&#32;" Top="2" VAlign="Middle" Width="80"></Static>
		<Div BKColor="user0" Height="20" Id="div_vbvg" Left="363" OnLoadCompleted="fn_OnLoadCompleted" OnTimer="WB0199010A_OnTimer" TabOrder="5" Text="Div0" Top="2" Url="COM::Coms011.xml" Width="280">
			<Contents></Contents>
		</Div>
		<Static Align="Right" Height="20" Id="Static3" Left="680" Style="sty_lb_search" TabOrder="4" Text="영업담당자&#32;" Top="1" VAlign="Middle" Width="80"></Static>
		<Div BKColor="user0" Height="22" Id="div_manager" Left="762" OnLoadCompleted="fn_OnLoadCompleted" TabOrder="3" Text="Div0" Top="1" Url="COM::Coms002.xml" Width="215">
			<Contents></Contents>
		</Div>
		<Static Align="Right" Height="20" Id="st_ym" Left="5" Style="sty_lb_search" TabOrder="2" Text="수주년월&#32;Fr&#32;" Top="2" VAlign="Middle" Width="80"></Static>
		<Div BKColor="user0" Height="22" Id="div_planYn" Left="88" OnLoadCompleted="fn_OnLoadCompleted" TabOrder="6" Text="Div0" Top="2" Url="COM::Coms012.xml" Width="184">
			<Contents></Contents>
		</Div>
		<Div BKColor="user0" Height="22" Id="div_planYn2" Left="88" OnLoadCompleted="fn_OnLoadCompleted" TabOrder="7" Text="Div0" Top="24" Url="COM::Coms012.xml" Width="184">
			<Contents></Contents>
		</Div>
		<Static Align="Right" Height="20" Id="Static2" Left="5" Style="sty_lb_search" TabOrder="9" Text="수주년월&#32;To&#32;" Top="24" VAlign="Middle" Width="80"></Static>
		<Static Align="Right" Height="20" Id="st_spart" Left="5" Style="sty_lb_search" TabOrder="12" Text="제품군&#32;" Top="46" VAlign="Middle" Width="80"></Static>
		<Combo Border="Flat" CodeColumn="CODE" DataColumn="CODE_NAME" Height="20" Id="cb_spart" Left="87" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Style="sty_ipt_form" TabOrder="10" Top="45" Width="100"></Combo>
		<Static Align="Right" Height="20" Id="Static4" Left="680" Style="sty_lb_search" TabOrder="14" Text="이동계획&#32;" Top="23" VAlign="Middle" Width="80"></Static>
		<Static Align="Right" Height="20" Id="Static5" Left="280" Style="sty_lb_search" TabOrder="13" Text="수주결과&#32;" Top="24" VAlign="Middle" Width="80"></Static>
		<Combo Border="Flat" CodeColumn="CODE" DataColumn="CODE_NAME" Height="20" Id="cb_sorlt" Left="362" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Style="sty_ipt_form" TabOrder="11" Top="23" Width="100"></Combo>
		<Combo Border="Flat" CodeColumn="CODE" DataColumn="CODE_NAME" Height="20" Id="cb_moveYn" Left="761" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Style="sty_ipt_form" TabOrder="15" Top="22" Width="100"></Combo>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_output" BkColor2="default" BoldHead="true" Border="Flat" Bottom="453" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="357" Id="Grid" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" OnCellClick="Grid_OnCellClick" OnCellDBLClick="Grid_OnCellDblClick" OnCellPosChanged="Grid_OnCellPosChanged" OnExpandEdit="Grid_OnExpandEdit" OnHeadClick="Grid_OnHeadClick" OnKeyDown="Grid_OnKeyDown" Right="962" RowHeight="20" Style="sty_grid" TabOrder="16" TabStop="true" Top="96" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="954">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="30"/>
						<col fix="left" width="33"/>
						<col fix="left" width="0"/>
						<col fix="left" width="60"/>
						<col fix="left" width="40"/>
						<col fix="left" width="58"/>
						<col fix="left" width="111"/>
						<col fix="left" width="194"/>
						<col fix="left" width="90"/>
						<col fix="left" width="108"/>
						<col width="96"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="92"/>
						<col width="50"/>
						<col width="50"/>
						<col width="50"/>
						<col width="92"/>
						<col width="144"/>
						<col width="80"/>
						<col width="80"/>
						<col width="107"/>
						<col width="60"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="92"/>
						<col width="80"/>
						<col width="49"/>
						<col width="62"/>
						<col width="105"/>
						<col width="80"/>
						<col width="49"/>
						<col width="137"/>
						<col width="52"/>
						<col width="80"/>
						<col width="80"/>
					</columns>
					<head>
						<cell bkcolor="yellow" bkimageid="icon_grid_sel" col="0" color="user21" display="text"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="상태"/>
						<cell col="2" display="text"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="이동계획"/>
						<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="구분"/>
						<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="계획년월"/>
						<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="팀"/>
						<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="고객명"/>
						<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="수요번호"/>
						<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="공사명"/>
						<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="기종"/>
						<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="건물용도"/>
						<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="인승/폭"/>
						<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="속도/각도"/>
						<cell align="center" col="14" color="user21" display="text" font="굴림,9" text="층수/높이"/>
						<cell align="center" col="15" color="user21" display="text" font="굴림,9" text="대수"/>
						<cell align="center" col="16" color="user21" display="text" font="굴림,9" text="수주예상액"/>
						<cell align="center" col="17" color="user21" display="text" font="굴림,9" text="시행율"/>
						<cell align="center" col="18" color="user21" display="text" font="굴림,9" text="단납기"/>
						<cell align="center" col="19" color="user21" display="text" font="굴림,9" text="상해"/>
						<cell align="center" col="20" color="user21" display="text" font="굴림,9" text="납기예정일"/>
						<cell align="center" col="21" color="user21" display="text" font="굴림,9" text="비고"/>
						<cell align="center" col="22" color="user21" display="text" font="굴림,9" text="수주가능성"/>
						<cell align="center" col="23" color="user21" display="text" font="굴림,9" text="담당자"/>
						<cell align="center" col="24" color="user21" display="text" font="굴림,9" text="대리점명"/>
						<cell align="center" col="25" color="user21" display="text" font="굴림,9" text="수주결과"/>
						<cell align="center" col="26" color="user34" display="text" font="굴림,9" text="입찰상태"/>
						<cell align="center" col="27" color="user34" display="text" font="굴림,9" text="당사투찰가"/>
						<cell align="center" col="28" color="user34" display="text" font="굴림,9" text="당사시행율"/>
						<cell align="center" col="29" color="user21" display="text" font="굴림,9" text="견적번호"/>
						<cell align="center" col="30" color="user21" display="text" font="굴림,9" text="견적차수"/>
						<cell align="center" col="31" color="user34" display="text" font="굴림,9" text="타사"/>
						<cell align="center" col="32" color="user34" display="text" font="굴림,9" text="타사투찰가"/>
						<cell align="center" col="33" color="user34" display="text" font="굴림,9" text="타사시행율"/>
						<cell align="center" col="34" color="user34" display="text" font="굴림,9" text="낙찰가"/>
						<cell align="center" col="35" color="user21" display="text" font="굴림,9" text="수주원가"/>
						<cell align="center" col="36" color="user34" display="text" font="굴림,9" text="견적원가"/>
						<cell align="center" col="37" color="user21" display="text" font="굴림,9" text="국가"/>
						<cell align="center" col="38" color="user21" display="text" font="굴림,9" text="권역"/>
						<cell align="center" col="39" color="user21" display="text" font="굴림,9" text="부서"/>
						<cell align="center" col="40" color="user21" display="text" font="굴림,9" text="설치지역"/>
						<cell align="center" col="41" color="user21" display="text" font="굴림,9" text="통화"/>
						<cell align="center" col="42" color="user21" display="text" font="굴림,9" text="SPEC"/>
						<cell align="center" col="43" color="user21" display="text" font="굴림,9" text="제품군"/>
						<cell align="center" col="44" color="user21" display="text" font="굴림,9" text="수주계획번호"/>
						<cell col="45" color="user21" display="text" font="굴림,9" text="교체(N)"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
						<cell align="center" bkcolor2="user22" bkimageid='expr:fn_getFlagBkImageID(GetColumn(currow,&#32;&quot;STATUS&quot;))' col="1" display="image"/>
						<cell col="2" colid="STATUS" display="text"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="3" colid="ZMPFLG" display="checkbox" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;checkbox&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;checkbox&apos;,&#32;&apos;C&apos;,&#32;&apos;checkbox&apos;,&#32;&apos;T&apos;,&#32;&apos;checkbox&apos;,&#32;&apos;none&apos;))" expr="decode(ZMPFLG,&apos;X&apos;,1,1,1,0)"/>
						<cell align="center" bkcolor2="user22" col="4" colid="PGUBN" display="text"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="5" colid="ZPYM" display="text" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;normal&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;normal&apos;,&#32;&apos;C&apos;,&#32;&apos;normal&apos;,&#32;&apos;T&apos;,&#32;&apos;normal&apos;,&#32;&apos;none&apos;))" Mask="####-##"/>
						<cell align="left" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="6" colid="VKGRP" combocol="CODE" combodataset="ds_team" combotext="CODE_NAME" display="combo"/>
						<cell align="left" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="7" colid="KUNNR_NM" display="text" expandfont="...,9" expandshow="expr:decode(G_VEND_WGBN,&apos;E&apos;,&apos;False&apos;,decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;True&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;True&apos;,&#32;&apos;C&apos;,&#32;&apos;True&apos;,&#32;&apos;T&apos;,&#32;&apos;True&apos;,&#32;&apos;False&apos;)))" expandsize="20"/>
						<cell align="left" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="8" colid="SID" display="text" expandfont="...,9" expandshow="expr:decode(AUART,&apos;ZN01&apos;,&apos;True&apos;,&apos;ZN02&apos;,&apos;True&apos;,&apos;&apos;,True,&apos;False&apos;)" expandsize="20"/>
						<cell align="left" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="9" colid="GSNAM" display="text" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;normal&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;normal&apos;,&#32;&apos;C&apos;,&#32;&apos;normal&apos;,&#32;&apos;T&apos;,&#32;&apos;normal&apos;,&#32;&apos;none&apos;))" limit="35"/>
						<cell align="left" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="10" colid="RTYPE" combocol="CODE" combodisplayrowcnt="20" combotext="CODE_NAME" display="combo" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;combo&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;combo&apos;,&#32;&apos;C&apos;,&#32;&apos;combo&apos;,&#32;&apos;T&apos;,&#32;&apos;combo&apos;,&#32;&apos;none&apos;))"/>
						<cell align="left" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="11" colid="ZBDTYP" combocol="BUILDUSE" combodisplayrowcnt="20" combotext="STEXT" display="combo" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;combo&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;combo&apos;,&#32;&apos;C&apos;,&#32;&apos;combo&apos;,&#32;&apos;T&apos;,&#32;&apos;combo&apos;,&#32;&apos;none&apos;))"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="12" colid="TYPE1" display="text" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;normal&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;normal&apos;,&#32;&apos;C&apos;,&#32;&apos;normal&apos;,&#32;&apos;T&apos;,&#32;&apos;normal&apos;,&#32;&apos;none&apos;))"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="13" colid="TYPE2" display="text" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;normal&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;normal&apos;,&#32;&apos;C&apos;,&#32;&apos;normal&apos;,&#32;&apos;T&apos;,&#32;&apos;normal&apos;,&#32;&apos;none&apos;))"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="14" colid="TYPE3" display="text" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;normal&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;normal&apos;,&#32;&apos;C&apos;,&#32;&apos;normal&apos;,&#32;&apos;T&apos;,&#32;&apos;normal&apos;,&#32;&apos;none&apos;))"/>
						<cell align="right" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="15" colid="ZNUMBER" display="number" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;number&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;number&apos;,&#32;&apos;C&apos;,&#32;&apos;number&apos;,&#32;&apos;T&apos;,&#32;&apos;number&apos;,&#32;&apos;none&apos;))"/>
						<cell align="right" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="16" colid="SOFOCA" display="number" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;number&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;number&apos;,&#32;&apos;C&apos;,&#32;&apos;number&apos;,&#32;&apos;T&apos;,&#32;&apos;number&apos;,&#32;&apos;none&apos;))"/>
						<cell align="right" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="17" colid="ZFORE" display="number" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;number&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;number&apos;,&#32;&apos;C&apos;,&#32;&apos;number&apos;,&#32;&apos;T&apos;,&#32;&apos;number&apos;,&#32;&apos;none&apos;))" limit="3"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="18" colid="ZDELI" display="combo" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;combo&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;combo&apos;,&#32;&apos;C&apos;,&#32;&apos;combo&apos;,&#32;&apos;T&apos;,&#32;&apos;combo&apos;,&#32;&apos;none&apos;))"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="19" colid="SHANGH" display="combo" edit="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;combo&apos;,&#32;&apos;none&apos;)"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="20" colid="DELDAT" display="date" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;date&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;date&apos;,&#32;&apos;C&apos;,&#32;&apos;date&apos;,&#32;&apos;T&apos;,&#32;&apos;date&apos;,&#32;&apos;none&apos;))"/>
						<cell align="left" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="21" colid="ZRMK" display="text" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;normal&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;normal&apos;,&#32;&apos;C&apos;,&#32;&apos;normal&apos;,&#32;&apos;T&apos;,&#32;&apos;normal&apos;,&#32;&apos;none&apos;))"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="22" colid="SOABLE" combocol="CODE" combotext="CODE_NAME" display="combo" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;combo&apos;,&#32;decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;combo&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;combo&apos;,&#32;&apos;C&apos;,&#32;&apos;combo&apos;,&#32;&apos;T&apos;,&#32;&apos;combo&apos;,&#32;&apos;none&apos;))"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="23" colid="ZKUNNR" display="text"/>
						<cell align="left" bkcolor2="user22" col="24" colid="ZAGNT_NM" display="text"/>
						<cell align="center" bkcolor2="user22" col="25" colid="SORLT" combocol="CODE" combotext="CODE_NAME" display="combo"/>
						<cell align="center" bkcolor2="user22" col="26" colid="ZPRGFLG" combocol="CODE" combotext="CODE_NAME" display="combo"/>
						<cell align="right" bkcolor2="user22" col="27" colid="PBDAM" display="number" expr="round(PBDAM)"/>
						<cell align="right" bkcolor2="user22" col="28" colid="SHANG55" display="text"/>
						<cell align="center" bkcolor2="user22" col="29" colid="QTNUM" display="text"/>
						<cell align="center" bkcolor2="user22" col="30" colid="QTSER" display="text"/>
						<cell align="center" bkcolor2="user22" col="31" colid="ZSEC" combocol="CODE" combotext="CODE_NAME" display="combo"/>
						<cell align="right" bkcolor2="user22" col="32" colid="ZSECAM" display="number" expr="round(ZSECAM)"/>
						<cell align="right" bkcolor2="user22" col="33" colid="ZFOREC55" display="text"/>
						<cell align="right" bkcolor2="user22" col="34" colid="SBDAM" display="number" expr="round(SBDAM)"/>
						<cell align="right" bkcolor2="user22" col="35" colid="ZCOST" display="number" expr="round(ZCOST,2)"/>
						<cell align="right" bkcolor2="user22" col="36" colid="ZCOST55" display="number" expr="round(ZCOST55)"/>
						<cell align="center" bkcolor2="user22" col="37" colid="LAND1" display="text"/>
						<cell align="center" bkcolor2="user22" col="38" colid="ZAREA_NM" display="text"/>
						<cell align="left" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="39" colid="VKBUR" combocol="CODE" combodataset="ds_dept" combotext="CODE_NAME" display="combo"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="40" colid="REGION" combocol="CODE" combotext="CODE_NAME" display="text" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;combo&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;combo&apos;,&#32;&apos;C&apos;,&#32;&apos;combo&apos;,&#32;&apos;T&apos;,&#32;&apos;combo&apos;,&#32;&apos;none&apos;))"/>
						<cell align="center" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="41" colid="WAERK" combocol="CODE" combotext="CODE_NAME" display="text" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;combo&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;combo&apos;,&#32;&apos;C&apos;,&#32;&apos;combo&apos;,&#32;&apos;T&apos;,&#32;&apos;combo&apos;,&#32;&apos;none&apos;))"/>
						<cell align="left" bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="42" colid="SPEC" display="text" expr="fn_specInfo(VKBUR,&#32;MATNR,&#32;RTYPE,&#32;TYPE1,&#32;TYPE2,&#32;TYPE3)"/>
						<cell align="center" bkcolor2="user22" col="43" colid="SPART" combocol="CODE" combotext="CODE_NAME" display="text"/>
						<cell align="center" bkcolor2="user22" col="44" colid="SONNR" display="text"/>
						<cell bkcolor="expr:decode(STATUS,&#32;&apos;insert&apos;,&#32;&apos;yellow&apos;,&#32;&apos;update&apos;,&#32;&apos;yellow&apos;,&#32;&apos;default&apos;)" col="45" colid="NCHECK" display="checkbox" edit="expr:decode(SORLT,&#32;&apos;10&apos;,&#32;&apos;checkbox&apos;,&#32;decode(left(SONNR,&#32;1),&#32;&apos;E&apos;,&#32;&apos;normal&apos;,&#32;&apos;C&apos;,&#32;&apos;normal&apos;,&#32;&apos;T&apos;,&#32;&apos;normal&apos;,&#32;&apos;checkbox&apos;))"/>
					</body>
					<summary>
						<cell align="center" bkcolor="user25" col="0" colspan="5" display="text" text="합계"/>
						<cell bkcolor="user25" col="5" colspan="10" display="text"/>
						<cell align="right" bkcolor="user25" col="15" display="number" expr="SUM(&apos;ZNUMBER&apos;)"/>
						<cell align="right" bkcolor="user25" col="16" display="number" expr="sum(&apos;SOFOCA&apos;)"/>
						<cell align="right" bkcolor="user25" col="17" display="text" expr='ROUND(SUM(&quot;ZFORE&quot;)&#32;/&#32;parseInt(ds_output.Rowcount()),&#32;0)&#32;+&#32;&quot;%&quot;'/>
						<cell bkcolor="user25" col="18" colspan="17" display="text"/>
						<cell align="right" bkcolor="user25" col="35" display="number" expr="round(sum(&apos;ZCOST&apos;),0)"/>
						<cell bkcolor="user25" col="36" colspan="9" display="text"/>
						<cell col="45" display="text"/>
					</summary>
				</format>
			</contents>
		</Grid>
		<Button ButtonStyle="TRUE" Color="black" Cursor="HAND" Height="22" Id="btn_addRow" ImageID="btn_sub_02" Left="866" OnClick="btn_addRow_OnClick" Style="sty_btn" TabOrder="17" Text="+" Top="73" Width="52"></Button>
		<Button ButtonStyle="TRUE" Color="black" Cursor="HAND" Height="22" Id="btn_delRow" ImageID="btn_sub_02" Left="914" OnClick="btn_delRow_OnClick" Style="sty_btn" TabOrder="18" Text="-" Top="73" Width="52"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_sorlt" ImageID="btn_sub_04" Left="722" LeftMargin="12" OnClick="fn_sorlt" Style="sty_btn" TabOrder="19" Text="종결처리" Top="73" Transparent="TRUE" Width="72"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_ses0031" ImageID="btn_sub_04" Left="794" LeftMargin="12" OnClick="fn_costIns" Style="sty_btn" TabOrder="20" Text="견적등록" Top="73" Transparent="TRUE" Width="72"></Button>
		<Static Align="Right" Height="20" Id="Static1" Left="280" Style="sty_lb_search" TabOrder="22" Text="계획구분&#32;" Top="46" VAlign="Middle" Width="80"></Static>
		<Combo Border="Flat" CodeColumn="CODE" DataColumn="CODE_NAME" Height="20" Id="cb_pgubun" Left="360" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Style="sty_ipt_form" TabOrder="21" Top="48" Width="100"></Combo>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_output_detail" BkColor2="default" BoldHead="true" Border="Flat" Bottom="561" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="105" Id="Grid0" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" OnChar="Grid0_OnChar" Right="962" RowHeight="20" Style="sty_grid" TabOrder="23" TabStop="true" Top="456" UseDBuff="true" UsePopupMenu="true" UserData="fix2" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="954">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="44"/>
						<col fix="left" width="100"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
					</columns>
					<head>
						<cell align="center" col="0" display="text" font="굴림,9" text="구분"/>
						<cell align="center" col="1" display="text" font="굴림,9" text="합계"/>
						<cell align="center" col="2" display="text" font="굴림,9" text="M+0"/>
						<cell align="center" col="3" display="text" font="굴림,9" text="M+1"/>
						<cell align="center" col="4" display="text" font="굴림,9" text="M+2"/>
						<cell align="center" col="5" display="text" font="굴림,9" text="M+3"/>
						<cell align="center" col="6" display="text" font="굴림,9" text="M+4"/>
						<cell align="center" col="7" display="text" font="굴림,9" text="M+5"/>
						<cell align="center" col="8" display="text" font="굴림,9" text="M+6"/>
						<cell align="center" col="9" display="text" font="굴림,9" text="M+7"/>
						<cell align="center" col="10" display="text" font="굴림,9" text="M+8"/>
						<cell align="center" col="11" display="text" font="굴림,9" text="M+9"/>
						<cell align="center" col="12" display="text" font="굴림,9" text="M+10"/>
						<cell align="center" col="13" display="text" font="굴림,9" text="M+11"/>
						<cell align="center" col="14" display="text" font="굴림,9" text="M+12"/>
						<cell align="center" col="15" display="text" font="굴림,9" text="M+13"/>
						<cell align="center" col="16" display="text" font="굴림,9" text="M+14"/>
						<cell align="center" col="17" display="text" font="굴림,9" text="M+15"/>
						<cell align="center" col="18" display="text" font="굴림,9" text="M+16"/>
						<cell align="center" col="19" display="text" font="굴림,9" text="M+17"/>
						<cell align="center" col="20" display="text" font="굴림,9" text="M+18"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" celltype="head" col="0" colid="GBN_NM"/>
						<cell align="right" bkcolor2="user22" celltype="head" col="1" colid="TOTSUM" display="number" expr="round((AMT00+AMT01+AMT02+AMT03+AMT04+AMT05+AMT06+AMT07+AMT08+AMT09+AMT10+AMT11+AMT12+AMT13+AMT14+AMT15+AMT16+AMT17+AMT18),0)" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="2" colid="AMT00" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="3" colid="AMT01" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="4" colid="AMT02" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="5" colid="AMT03" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="6" colid="AMT04" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="7" colid="AMT05" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="8" colid="AMT06" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="9" colid="AMT07" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="10" colid="AMT08" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="11" colid="AMT09" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="12" colid="AMT10" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="13" colid="AMT11" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="14" colid="AMT12" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="15" colid="AMT13" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="16" colid="AMT14" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="17" colid="AMT15" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="18" colid="AMT16" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="19" colid="AMT17" display="number" edit="normal" limit="13" LimitDec="0"/>
						<cell align="right" bkcolor2="user22" col="20" colid="AMT18" display="number" edit="normal" limit="13" LimitDec="0"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Calendar Height="152" Id="calDate" Left="520" MonthOnly="TRUE" OnDayClick="calDate_tab1_OnDayClick" OnKillFocus="calDate_tab1_OnKillFocus" SaturdayTextColor="blue" SundayTextColor="red" TabOrder="24" Top="184" Value="20061201" Visible="FALSE" Width="168"></Calendar>
		<Static Align="Right" Height="20" Id="Static6" Left="680" Style="sty_lb_search" TabOrder="25" Text="직영/대리점" Top="48" VAlign="Middle" Width="80"></Static>
		<Combo Border="Flat" CodeColumn="CODE" DataColumn="CODE_NAME" Height="20" Id="cb_agntgb" Left="761" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Style="sty_ipt_form" TabOrder="26" Top="48" Width="100"></Combo>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 월 수주계획 관리(sbp0160)
 * 작  성  자   : 
 * 작성  일자   : 2012.06
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/ 

#include "LIB::tit_comm_0001.js";	// Server 연결 
#include "LIB::common.js";			// 공통 Script 
#include "LIB::common_sd.js";
#include "LIB::common_hdel.js";		// 공통 스크립트  /* GNY 추가 */
#include "LIB::nsfRequest.js";		// 공통 스크립트  /* GNY 추가 */

//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var F_KUNNR = "";
var F_KUNNR_NM = "";
var F_LAND1 = "";
var F_ZAREA_NM = "";
var F_FRM_ID = "Sbp0160";
var F_SID_CHCK = true;
var F_SID_USER_ID = "";

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) 
{
	// 리사이징
	fn_FormResize(true);
//	gfn_initForm(true);
	// 항목 위치 재조정
//	Grid.top 			= 56;
	
	// 다국어 처리(2012.10.16 보류)
	//gfn_translation(obj, G_LANG);
	
	// 제품군 ( componentId, comboGubun, DatasetId, 전체여부 )
	fn_SetListCode(cb_spart, "spart", "ds_product", "Y");	
	// 이동계획 ( componentId, comboGubun, DatasetId, 전체여부 )
	fn_SetListCode(cb_moveYn, "moveYn", "ds_moveYn", "Y");	
	// 계획구분 ( componentId, comboGubun, DatasetId, 전체여부 )
	fn_SetListCode(cb_pgubun, "pgubun", "ds_pgubun", "Y");	
	// 직영/대리점 구분 ( componentId, comboGubun, DatasetId, 전체여부 )
	fn_SetListCode(cb_agntgb, "agentGbn", "ds_agentGbn", "Y");	
	
	// 제품 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCode( gfn_getColIdx(Grid, 'SPART'), "spart", "ds_spart", "N", "grid");
	// 영업담당자 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCode( gfn_getColIdx(Grid, 'ZKUNNR'), "zkunnr", "ds_zkunnr", "N", "grid");

	// 대리점
	//fn_SetListCode( 11, "lifnr", "ds_lifnr", "N", "grid");

	// 실기종 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
	//fn_SetListCode( 12, "rtype", "ds_rtype", "N", "grid");
	// 기종 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
	//fn_SetListCode( 13, "gtype", "ds_gtype", "N", "grid");

	// 국가 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCode( gfn_getColIdx(Grid, 'LAND1'), "nation", "ds_nation", "N", "grid");
	// 설치지역 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCode( gfn_getColIdx(Grid, 'REGION'), "region", "ds_region", "N", "grid");
	// 단납기 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCode( gfn_getColIdx(Grid, 'ZDELI'), "zdeli", "ds_zdeli", "N", "grid");
	ds_zdeli.InsertRow(0);	// 답납기 취소

	// 국내상해 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCode( gfn_getColIdx(Grid, 'SHANGH'), "shangh", "ds_shangh", "N", "grid");
	
	// 통화 ( componentId, comboGubun, filter1, filter2, filter3, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCodeZLCODE( gfn_getColIdx(Grid, 'WAERK'), "zlcode", G_LANG, "WAERK", "", "ds_waerk", "N", "grid");
	// 화폐단위 필터 수행 KRW와 USD만 표시
	ds_waerk.Filter("CODE==" + quote("KRW") + " || CODE==" + quote("USD"));
	
	// 수주가능성 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCode( gfn_getColIdx(Grid, 'SOABLE'), "soable", "ds_soable", "N", "grid");
	// 수주결과  ( componentId, comboGubun, filter1, filter2, filter3, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCodeZLCODE( gfn_getColIdx(Grid, 'SORLT'), "zlcode", G_LANG, "SD111", "", "ds_sorlt", "N", "grid");
	// 입찰상태 ( componentId, comboGubun, filter1, filter2, filter3, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCodeZLCODE( gfn_getColIdx(Grid, 'ZPRGFLG'), "zlcode", G_LANG, "SD108", "", "ds_zprgflg", "N", "grid");
	// 타사  ( componentId, comboGubun, filter1, filter2, filter3, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCodeZLCODE( gfn_getColIdx(Grid, 'ZSEC'), "zlcode", G_LANG, "BS106", "", "ds_sbdcm", "N", "grid");

	// 폼 설정
	fn_init();
	
	// 수주년월 콤보 데이타 Load 및 기본값 SETTING 
	var curYear = substr(gfn_getCurrDate(),0,4); 
	var curMonth = substr(gfn_getCurrDate(),4,2);
	var maxMonth = parseInt(curMonth)+1;
	div_planYn.fn_makeYear(curYear,-5,5,0);
	div_planYn.cb_monthf.index = parseInt(curMonth)-1;

	// [계획년월to]는 default로 3개월
	// 3개월후의 년월이 년도가 바뀔경우 처리로직
	if ( parseInt(maxMonth)/12 == 1 || parseInt(maxMonth)/13 == 1 )
	{
		var mon = (parseInt(curMonth)+2)%12;
		div_planYn2.fn_makeYear(curYear,-5,5,1);
		div_planYn2.cb_monthf.index = mon;
	}
	else
	{
		div_planYn2.fn_makeYear(curYear,-5,5,0);
		div_planYn2.cb_monthf.index = maxMonth;
	}
	
	
}


/********************************************************************************
* fn_init
********************************************************************************/
function fn_init() {

	// 수주결과
	destroy("ds_sorlt");
	Create("dataset", "ds_sorlt");
	object("ds_sorlt").AddColumn("CODE", "STRING", 256);
	object("ds_sorlt").AddColumn("CODE_NAME", "STRING", 256);
	object("ds_sorlt").AddColumn("FILTER1", "STRING", 256);	
	// 언어, 코드구분
	var where = G_LANG+",SD111";
	http.Sync = true;
	nsfRequest("code"
				 , "com0060/find"
				 , ""					// biz에서 받는 명, mip에서 보내는 명
				 , "ds_sorlt=ds_output"	// mip에서 받는 명, biz에서 보내는 명
				 , "where="+where+" popFlag="+quote("sorlt")
				 , "fn_afterCode");
	http.Sync = false;

	// 실기종
	destroy("ds_rtype");
	create("dataset", "ds_rtype");
	ds_rtype.addColumn("CODE", "STRING", 256);
	ds_rtype.addColumn("CODE_NAME", "STRING", 256);
	ds_rtype.addColumn("FILTER1", "STRING", 256);	// SPART
	ds_rtype.addColumn("FILTER2", "STRING", 256);	// AUART
	ds_rtype.addColumn("FILTER3", "STRING", 256);	// MATNR
	ds_rtype.addColumn("FILTER4", "STRING", 256);	// VKBUR	
	var vkbur = '';	// 부서
	if (G_SAP_USER_VBCD == null || G_SAP_USER_VBCD == '') 
	{
		vkbur = "";
	} 
	else 
	{
		vkbur = G_SAP_USER_VBCD;
	}
	
	http.Sync = true;
	nsfRequest("rtype"					// srvId
				, "sbp0160_N/rtype"			// url
				, ""						// biz에서 받는 명, mip에서 보내는 명
				, "ds_rtype=ds_output"		// mip에서 받는 명, biz에서 보내는 명
				, "vkbur="+quote(vkbur)		// strParam
				, "fn_afterRtype"						// CallBackFunc
				);
	http.Sync = false;
				
	//건물용도 jss
	http.Sync = true;
	nsfRequest("zbdtyp"									// srvId
				, "com0160/find"						// url
				, "ds_cond_build=ds_cond_build ds_list_build=ds_list_build"		// inDsList
				, "ds_list_build=ds_list_build"	// outDsList
				, ""						    // strParam
				, "fn_afterQuery_zbdtyp"			// CallBackFunc
				);  
	http.Sync = false;
				
				
	// 고객코드 정보 조회
	if (G_VEND_WGBN == "E")		// 해외 대리점의 경우에만 처리
	{
		destroy("ds_cond_buyr");
		create("dataset", "ds_cond_buyr");
		object("ds_cond_buyr").AddColumn("BUYR_CD", "STRING", 10);
		object("ds_cond_buyr").AddColumn("BUYR_NM", "STRING", 105);

		ds_cond_buyr.AddRow();
		ds_cond_buyr.SetColumn(0, "BUYR_CD", G_VEND_CODE);	// 코객코드 정보

		destroy("ds_list_buyr");
		create("dataset", "ds_list_buyr");
		object("ds_list_buyr").AddColumn("BUYR_CD_DB", "STRING", 10);
		object("ds_list_buyr").AddColumn("BUYR_NM", "STRING", 256);
		object("ds_list_buyr").AddColumn("LAND1", "STRING", 2);
		object("ds_list_buyr").AddColumn("LAND1_NM", "STRING", 50);
		object("ds_list_buyr").AddColumn("ZAREA", "STRING", 3);
		object("ds_list_buyr").AddColumn("ZAREA_NM", "STRING", 50);

		http.Sync = true;
		nsfRequest("kunnr"												// srvId
				   , "com0040/find"											// url
				   , "ds_cond_buyr=ds_cond_buyr ds_list_buyr=ds_list_buyr"	// inDsList
				   , "ds_list_buyr=ds_list_buyr"							// outDsList
				   , ""														// strParam
				   , "fn_afterKunnr"										// CallBackFunc
				    );
		http.Sync = false;				    
	}
	
	
	//2021.05 jss : 수요번호 등록예외권한 
	switch (G_VEND_WGBN) {
		case "E" : 
			F_SID_USER_ID   = G_SAP_USER_PM_B;
			break;
		default  : 
			F_SID_USER_ID   = G_SAP_USER_ID;
			break;
	}
	
	http.Sync = true;
	ds_cond_kunz2.DeleteAll();
	ds_list_kunz2.DeleteAll();
	ds_cond_kunz2.AddRow();
	ds_cond_kunz2.SetColumn(0, "ZKUNNR", F_SID_USER_ID); 
	nsfRequest('query'
				, 'ses0610/matchkunz2'
				, 'ds_cond_kunz2=ds_cond_kunz2 ds_list_kunz2=ds_list_kunz2'
				, 'ds_list_kunz2=ds_list_kunz2'
				, ''
				, 'fn_afterQuery_kunz2'
				);
	http.Sync = false;
	
    //김종선, 현상숙,박희광, 박현묵 //요청이 많음으로 필드 활성화20160627
	/*if ( G_USER_ID != "2020254" AND G_USER_ID != "2021587"  AND G_USER_ID != "2025256" AND G_USER_ID != "5006732"  AND G_USER_ID != "2025736" AND G_USER_ID != "2025434" 
	     AND G_USER_ID != "2025744" AND G_USER_ID != "2005344"  AND G_USER_ID != "2022869" AND G_USER_ID != "2019833" AND G_USER_ID != "2019949" AND SUBSTR(G_USER_ID,0,1) != "9" )
	{
		Grid.SetColProp(43 , "Width", "0");
	}*/
}

/********************************************************************************
* form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) 
{
	// Tab에서 해당 화면 삭제
	return gfn_isFormUnload(obj);
}


//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 조회 
********************************************************************************/
var fn_query_chk = false; //중복 조회방지용 flag

function fn_query() 
{
	if(!fn_query_chk) {
		fn_query_chk = true;
	} else {
		gfn_showAlert("CW10025", "조회중입니다..");
		return;
	}

	// 메시지바 클리어
	gfn_clearMsgBar(); 
	// sort mark 삭제 
	gfn_clearGridSortMark(Grid); 	
	// 그리드 설정
	fn_GridSet();
	
	// 조회조건 데이타셋 초기화
	ds_cond.ClearData();  	
	ds_output.ClearData();   
	ds_output_detail.ClearData();  
	ds_error.ClearData();

	var year_f 	= div_planYn.cb_yearf.value;						// 계획년도f
	var mon_f 	= div_planYn.cb_monthf.value;						// 계획월f
	var year_t 	= div_planYn2.cb_yearf.value;						// 계획년도t
	var mon_t 	= div_planYn2.cb_monthf.value;						// 계획월t
/*	
	trace( "year_f : "+year_f);
	trace( "mon_f : "+mon_f);
	trace( "year_t : "+year_t);
	trace( "mon_t : "+mon_t);
*/	
	ds_cond.AddRow();
	ds_cond.SetColumn(0, "FR_ZPYM", year_f+mon_f);					// 수주년월frowm
	ds_cond.SetColumn(0, "TO_ZPYM", year_t+mon_t);					// 수주년월to
	ds_cond.SetColumn(0, "ZPYM", 	substr(gfn_getCurrDate(),0,6));	// 계획년월
	ds_cond.SetColumn(0, "SPART", 	cb_spart.Value);				// 제품군
	ds_cond.SetColumn(0, "ZKUNNR",  div_manager.ed_sman_cd.text);	// 영업담당자
	ds_cond.SetColumn(0, "VKBUR", 	div_vbvg.cb_frvb.Value);		// 팀
	ds_cond.SetColumn(0, "VKGRP", 	div_vbvg.cb_frvg.Value);		// 부서
	ds_cond.SetColumn(0, "ZMPFLG",  cb_moveYn.Value); 				// 이동계획 여부
	ds_cond.SetColumn(0, "SORLT", 	cb_sorlt.Value);				// 수주결과
	ds_cond.SetColumn(0, "PGUBN",   cb_pgubun.Value);				// 계획구분
	ds_cond.SetColumn(0, "AGNTGB",  cb_agntgb.Value);				// 직영 대리점 구분
	// 업체구분(A:설치협력사,B:보수협력사,C국내대리점,D:자재협력사,E:해외대리점
	ds_cond.SetColumn(0, "WGBN", 	G_VEND_WGBN);					
	if (G_VEND_WGBN == 'E') {
		ds_cond.SetColumn(0, "ZAGNT", G_VEND_CODE);				// 대리점명
	} else {
		ds_cond.SetColumn(0, "ZAGNT", '');
	}
	
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	ds_output.Fireevent = false; //trace(ds_output.SaveXML()); //trace(ds_error.SaveXML());
	
	// 서비스 호출
	nsfRequest("query"					// srvId
				, "sbp0160_N/find"			// url
				, "ds_cond=ds_cond ds_output=ds_output"		// biz에서 받는 명, mip에서 보내는 명
				, "ds_output=ds_output ds_error=ds_error"	// mip에서 받는 명, biz에서 보내는 명
				, ""						// strParam
				, "fn_afterQuery"			// CallBackFunc
				);

}

/********************************************************************************
* 조회 
********************************************************************************/
function fn_query_detail(row) 
{ 
	// sort mark 삭제 
	ds_cond_detail.AddRow();
	ds_cond_detail.SetColumn(0, "SONNR", ds_output.GetColumn(row, "SONNR")); // 수주계획번호
	ds_cond_detail.SetColumn(0, "ZPYM", ds_output.GetColumn(row, "ZPYM"));  // 수주계획월

	// 서비스 호출
	gfn_clearGridSortMark(Grid0); 	
	ds_output_detail.ClearData();   
	ds_error.ClearData();  

	ds_output_detail.Fireevent = false; 	// 데이타셋 이벤트 비활성화
	nsfRequest("query_detail"					// srvId
				, "sbp0160_N/find_detail"			// url
				, "ds_cond_detail=ds_cond_detail ds_output_detail=ds_output_detail"		// biz에서 받는 명, mip에서 보내는 명
				, "ds_output_detail=ds_output_detail ds_error=ds_error"					// mip에서 받는 명, biz에서 보내는 명
				, ""						// strParam
				, "fn_afterQueryDetail"			// CallBackFunc
				);
 
}

/********************************************************************************
* 저장 
********************************************************************************/
function fn_save() 
{
	// 메시지바 클리어
	gfn_clearMsgBar(); 
	ds_error.clearData();

	// 수정/삭제/생성 한 데이터가 없으면 return
	var notNormalCnt = 0;
	for ( var a = 0 ; a < ds_output.GetRowCount() ; a++ )
	{
		if ( length(trim(ds_output.GetColumn(a, "STATUS"))) > 0 )
		{
			if(ds_output.GetColumn(a,"OPENDT") == "Y") {
				gfn_showAlert((a+1)+"행의 수주계획은 E-GIS에서 등록가능합니다.");
				return false;
			}

			notNormalCnt++;
		}
	}
	
	if ( notNormalCnt == 0 )
	{
		// CW00005=변경된 정보가 없습니다.
		gfn_showAlert('CW00005');
		return;
	}
	else
	{
		// 저장 전 valid 체크
		if (fn_valid_save() == false) return;
				
		// [저장]을 하시겠습니까?
		if ( !gfn_showConfirm("CI00024", "[저장]") )
		{
			return;
		}
		
		// 저장용 디테일 정보 셋팅
		fn_detailInfo_save();
		
		// 리스트가 없는 상태에서 addrow후 저장시
		// 매출/청구/수금에 대한 데이터가 존재하지 않으므로 그에대한 처리를 한다.
		var input = "";
		if ( !gfn_findObj("ds_yearm", this) )
		{
			input = "ds_input=ds_output";
		}
		else
		{
			input = "ds_input=ds_output ds_output_detail=ds_detailSaveInfo ds_yearm=ds_yearm";
		}
		
		// 서비스 호출
		nsfRequest("save"						// srvId
					, "sbp0160_N/save"			// url
					, input						// biz에서 받는 명, mip에서 보내는 명
					, "ds_error=ds_error"		// mip에서 받는 명, biz에서 보내는 명
					, ""						// strParam
					, "fn_afterSave"			// CallBackFunc
					);
	}
	
}

/********************************************************************************
* 저장 시 valid 체크
********************************************************************************/
function fn_valid_save() 
{
	// 총 건수중
	for ( var nRow = 0 ; nRow < ds_output.RowCount() ; nRow++ ) 
	{
		if ( ds_output.GetColumn( nRow, "STATUS" ) == 'insert' 
			|| ds_output.GetColumn( nRow, "STATUS" ) == 'update' )
		{
		
			var arr = [(nRow+1),''];

			// 고객명 0, 해외 영업대리점의 경우 고객명 입력 안됨
			if (G_VEND_WGBN != 'E')
			{
				if (length(ds_output.GetColumn(nRow,'KUNNR')) == 0 
					or ds_output.GetColumn(nRow,'KUNNR') == ' ') 
				{
					arr[1] = '고객명';
						
					// CW10033=저장/수정할 항목의\n${}을/를 입력하세요.
					gfn_showAlert('CW10034', arr);
					gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'KUNNR_NM'));
					return false;
				}
			}

			// 공사명
			if (length(ds_output.GetColumn(nRow,'GSNAM')) == 0 
				or ds_output.GetColumn(nRow,'GSNAM') == ' ') 
			{
				arr[1] = '공사명';
				
				// CW10033=저장/수정할 항목의\n${}을/를 입력하세요.
				gfn_showAlert('CW10034',arr );
				gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'GSNAM'));
				return false;
			}

			// 실기종
			if ( length(ds_output.GetColumn(nRow,'RTYPE')) == 0 
				or ds_output.GetColumn(nRow,'RTYPE') == ' ' ) 
			{
				
				arr[1] = '기종';
				
				// CW10034=${}행에서 저장/수정할 항목의\n${}을/를 입력하세요.
				gfn_showAlert( 'CW10034', arr );
				gfn_SetFocusGrid( Grid, nRow, gfn_getColIdx(Grid, 'RTYPE') );
				return false;
			}
			
			// SPEC 0
			// if ( length(ds_output.GetColumn(nRow,'GTYPE')) == 0 
				// or ds_output.GetColumn(nRow,'GTYPE') == ' ' ) 
			// {
				
				// arr[1] = 'SPEC';
				
				//CW10034=${}행에서 저장/수정할 항목의\n${}을/를 입력하세요.
				// gfn_showAlert( 'CW10034', arr );
				// gfn_SetFocusGrid( Grid, nRow, gfn_getColIdx(Grid, 'GTYPE') );
				// return false;
			// }
			
			// 제품군
			if ( ds_output.GetColumn( nRow, 'SPART' ) == '10' ) 
			{
			
				// 인승항목에 용량 입력금지 20140527 김선호 
				if ( length(ds_output.GetColumn(nRow,'TYPE1')) >= 3 )
				{
					if ( ds_output.GetColumn(nRow,'RTYPE') == "STVF" or
						 ds_output.GetColumn(nRow,'RTYPE') == "SSVF" or
						 ds_output.GetColumn(nRow,'RTYPE') == "LXVF" or
						 ds_output.GetColumn(nRow,'RTYPE') == "T&S" or
						 ds_output.GetColumn(nRow,'RTYPE') == "FI4GL" or
						 ds_output.GetColumn(nRow,'RTYPE') == "SUVF" or
						 ds_output.GetColumn(nRow,'RTYPE') == "HSVF" or
						 ds_output.GetColumn(nRow,'RTYPE') == "HYD" ) {
					// CW10034=${}행에서 저장/수정할 항목의\n${}을/를 입력하세요.
						Alert("인승을 입력해주십시오(용량입력금지)");
						gfn_SetFocusGrid(Grid, nRow, gfn_getColIdx(Grid, 'TYPE1'));
						return false;
					}
				}
				
				if ( length(ds_output.GetColumn(nRow,'TYPE1')) == 0 
					or ds_output.GetColumn(nRow,'TYPE1') == ' ') 
				{
					if (div_vbvg.cb_frvb.Value == "C700" || div_vbvg.cb_frvb.Value == "C900")	{
						arr[1] = 'TYPE1';
					}else	{
						arr[1] = '인승/폭';
					}
					
					// CW10034=${}행에서 저장/수정할 항목의\n${}을/를 입력하세요.
					gfn_showAlert('CW10034',arr);
					gfn_SetFocusGrid(Grid, nRow, gfn_getColIdx(Grid, 'TYPE1'));
					return false;
				}
				if (length(ds_output.GetColumn(nRow,'TYPE2')) == 0 
					or ds_output.GetColumn(nRow,'TYPE2') == ' ') 
				{

					if (div_vbvg.cb_frvb.Value == "C700" || div_vbvg.cb_frvb.Value == "C900")	{
						arr[1] = 'TYPE2';
					}else	{
						arr[1] = '속도/각도';
					}
					
					// CW10034=${}행에서 저장/수정할 항목의\n${}을/를 입력하세요.
					gfn_showAlert('CW10034',arr);
					gfn_SetFocusGrid(Grid, nRow, gfn_getColIdx(Grid, 'TYPE2'));
					return false;
				}
				if (length(ds_output.GetColumn(nRow,'TYPE3')) == 0 
					or ds_output.GetColumn(nRow,'TYPE3') == ' ') 
				{
					if (div_vbvg.cb_frvb.Value == "C700" || div_vbvg.cb_frvb.Value == "C900")	{
						arr[1] = 'TYPE3';
					}else	{
						arr[1] = '층수/높이';
					}
					
					// CW10034=${}행에서 저장/수정할 항목의\n${}을/를 입력하세요.
					gfn_showAlert('CW10034',arr);
					gfn_SetFocusGrid(Grid, nRow, gfn_getColIdx( Grid, 'TYPE3' ));
					return false;
				}
			}

			// 대수 0
			if (ds_output.GetColumn(nRow,'ZNUMBER') == 0 
				or ds_output.GetColumn(nRow,'ZNUMBER') == ' ') 
			{
				arr[1] = '대수';
				
				// CW10033=저장/수정할 항목의\n${}을/를 입력하세요.
				gfn_showAlert('CW10034', arr);
				gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'ZNUMBER'));
				return false;
			}

			// 해외영업의 경우 수주예상액, 시행율, 원가 는 필수제외 2012.11.09
			if ( ds_output.GetColumn(nRow,'VKBUR') != "B500" &&
			     ds_output.GetColumn(nRow,'VKBUR') != "B600" &&
			     ds_output.GetColumn(nRow,'VKBUR') != "B700" &&
			     ds_output.GetColumn(nRow,'VKBUR') != "B900" &&
			     ds_output.GetColumn(nRow,'VKBUR') != "BA00" &&
			     ds_output.GetColumn(nRow,'VKBUR') != "BB00" )
			{
				// 수주예상액
				if (ds_output.GetColumn(nRow,'SOFOCA') == 0 
					or ds_output.GetColumn(nRow,'SOFOCA') == ' ') 
				{
					arr[1] = '수주예상액';
					
					// CW10033=저장/수정할 항목의\n${}을/를 입력하세요.
					gfn_showAlert('CW10034', arr);
					gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'SOFOCA'));
					return false;
				}
				// 예상시행율 0
				if (ds_output.GetColumn(nRow,'ZFORE') == 0 
					or ds_output.GetColumn(nRow,'ZFORE') == ' ') 
				{
					arr[1] = '시행율';
					
					// CW10033=저장/수정할 항목의\n${}을/를 입력하세요.
					gfn_showAlert('CW10034', arr);
					gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'ZFORE'));
					return false;
				}
			}

			// 납기예정일 0
			if (ds_output.GetColumn(nRow,'DELDAT') == '00000000' 
				or ds_output.GetColumn(nRow,'DELDAT') == '00000101' 
				or ds_output.GetColumn(nRow,'DELDAT') == '000000') 
			{
				
				arr[1] = '납기예정일';
				
				// CW10034=${}행에서 저장/수정할 항목의\n${}을/를 입력하세요.
				gfn_showAlert('CW10034', arr);
				gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'DELDAT'));
				return false;
			}

			//대리점명(사업자번호)
			if(substr(ds_output.getColumn(nRow, "ZKUNNR"), 0, 1) == "A"){
				if (length(ds_output.GetColumn(nRow,'ZAGNT_NM')) == 0 
					or ds_output.GetColumn(nRow,'ZAGNT_NM') == ' ') 
				{
				
					arr[1] = '대리점명';
				
					// CW10033=저장/수정할 항목의\n${}을/를 입력하세요.
					gfn_showAlert('CW10034',arr );
					gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'ZAGNT_NM'));
					return false;
				}
			}


			// 설치지역 0
			if ( ds_output.GetColumn(nRow,'VKBUR') != 'B500' &&
				 ds_output.GetColumn(nRow,'VKBUR') != 'B600' &&
				 ds_output.GetColumn(nRow,'VKBUR') != 'B700' &&
				 ds_output.GetColumn(nRow,'VKBUR') != 'B900' &&
				 ds_output.GetColumn(nRow,'VKBUR') != 'BA00' &&
				 ds_output.GetColumn(nRow,'VKBUR') != 'BB00' ) 
			{
				if (length(ds_output.GetColumn(nRow,'REGION')) == 0 
					or ds_output.GetColumn(nRow,'REGION') == ' ') 
				{
					arr[1] = '설치지역';
					
					// CW10034=${}행에서 저장/수정할 \n${}을/를 입력하세요.
					gfn_showAlert('CW10034',arr); 
					gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'REGION'));
					return false;
				}
			}

			// 통화
			if (length(ds_output.GetColumn(nRow,'WAERK')) == 0 
				or ds_output.GetColumn(nRow,'WAERK') == ' ') 
			{
				arr[1] = '통화';
				
				// CW10033=저장/수정할 항목의\n${}을/를 입력하세요.
				gfn_showAlert('CW10034', arr);
				gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'WAERK'));
				return false;
			}		

			if ( ( ds_output.GetColumn(nRow,'VKBUR') == "B400" ||
			       ds_output.GetColumn(nRow,'VKBUR') == "BC00" ||
			       ds_output.GetColumn(nRow,'VKBUR') == "BI00" ) && ( left(ds_output.GetColumn(nRow,'AUART'), 2) == "ZN" ) )
			{

				gfn_showAlert('CW10025', (nRow+1)+"행은 교체기종으로 등록할 수 없습니다.");
				gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'RTYPE'));
				return false;			
			}
			
			if ( ds_output.GetColumn( nRow, "STATUS" ) == 'update' ) 
			{
				// 2012.11.15 재산출의 경우 금액 비교 불필요 처리
				if (ds_output.GetColumn(nRow, "UFLAG") != "X")
				{
					// 수주예상액과 매출/청구/수금금액(합계)의 같은지 확인
					/*
					var sales 		= Replace( Grid0.GetCellText('body', 0, 1 ) ,',','');		// 매출
					var charge 		= Replace( Grid0.GetCellText('body', 1, 1 ) ,',','');		// 청구
					var collection 	= Replace( Grid0.GetCellText('body', 2, 1 ) ,',','');		// 수금
					var sofoca 		= toNumber( ds_output.GetColumn( nRow, 'SOFOCA' ) ); 		// 수주예상액
					*/
					// => header에서 변경된 항목의 루프를 돌때, detail에서는 해당 항목의 값을 가져와서 비교해야 함
					ds_temp.Copy(ds_output_detail);
					ds_temp.Filter("SONNR='"+ds_output.GetColumn(nRow, "SONNR")+"'");
					
					// 매출
					var sales = 0;
					for ( var t = 0 ; t < 19 ; t++ ) {
						sales += round(toNumber(ds_temp.GetColumn(0, 'AMT'+lpad(t,'0',2))));
					}
					
					// 청구
					var charge = 0;
					for ( var t = 0 ; t < 19 ; t++ ) {
						charge += round(toNumber(ds_temp.GetColumn(1, 'AMT'+lpad(t,'0',2))));
					}
					
					// 수금
					var collection = 0;
					for ( var t = 0 ; t < 19 ; t++ ) {
						collection += round(toNumber(ds_temp.GetColumn(2, 'AMT'+lpad(t,'0',2))));
					}
					
					// 수주예상액
					var sofoca = toNumber( ds_output.GetColumn( nRow, 'SOFOCA' ) );
					
					//trace( "sales : "+Replace(sales,',','') );
					//trace( "charge : "+charge);
					//trace( "collection : "+collection);
					//trace( "sofoca : "+sofoca);
					
					// 매출/청구/수금이 항상 같을 필요는 없고,
					// 매출이 0아니면 수주예상액과 다르지 않으면 된다.
					// 청구가 0아니면 수주예상액과 다르지 않으면 된다.
					// 수금이 0아니면 수주예상액과 다르지 않으면 된다.
					// 비승강기경우가 있으므로 아래와 같이 요청(2012.10.30-송인덕)
					if ( sales != 0 )
					{
						if ( sofoca != sales ) 
						{
							var arrs = ['수주예상액','매출의 합계'];
							
							// [${}] 과/와 [${}] 는/은 금액이 같아야 합니다. /n확인바랍니다.
							gfn_showAlert('CW10082', arrs);
							gfn_SetFocusGrid( Grid, nRow, gfn_getColIdx(Grid,'SOFOCA') );
							return false;
						}
					} 
					
					if ( charge != 0 )
					{
						if ( sofoca != charge ) 
						{
							var arrs = ['수주예상액','청구의 합계'];
							
							// [${}] 과/와 [${}] 는/은 금액이 같아야 합니다. /n확인바랍니다.
							gfn_showAlert('CW10082', arrs);
							gfn_SetFocusGrid( Grid, nRow, gfn_getColIdx(Grid,'SOFOCA') );
							return false;
						}
					} 
					
					if ( collection != 0 )
					{
						if ( sofoca != collection ) 
						{
							var arrs = ['수주예상액','수금의 합계'];
							
							// [${}] 과/와 [${}] 는/은 금액이 같아야 합니다. /n확인바랍니다.
							gfn_showAlert('CW10082', arrs);
							gfn_SetFocusGrid( Grid, nRow, gfn_getColIdx(Grid,'SOFOCA') );
							return false;
						}
					}
				}
				
			}
			
			//2020.12 jss
			if(ds_output.GetColumn(nRow,'AUART') != 'ZN01' && ds_output.GetColumn(nRow,'AUART') != 'ZN02' ) {					
				if(length(trim(ds_output.GetColumn(nRow,'SID'))) > 0  ){
					gfn_showAlert('CW10025', "수요정보는 리모델링(N)현장만 등록 가능합니다.");
					ds_output.setColumn( nRow, "SID", "" );
					gfn_SetFocusGrid( Grid, nRow, gfn_getColIdx(Grid,'SID') );
					return false;
				}	
			}
			//2021.05 jss
			else{
				//수요번호
				//if(substr(ds_output.getColumn(nRow, "ZKUNNR"), 0, 1) == "A"){
				if(F_SID_CHCK){
					if(length(trim(ds_output.GetColumn(nRow,'SID'))) < 1  ){				
						arr[1] = '수요번호';
						gfn_showAlert('CW10034',arr );
						gfn_SetFocusGrid(Grid,nRow,gfn_getColIdx(Grid,'SID'));
						return false;
					}
				}
			}
		}
	}

	return true;
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {   
	
	fn_query_chk = false; //중복조회 방지용 flag
	
	fn_destroyWait(); 
	ds_output.ApplyChange();
	ds_output.Fireevent = true; //trace(ds_output.SaveXML()); //trace(ds_error.SaveXML());

	if(ds_error.rowcount() > 0) {	
		gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG"));   				
	} else {	 
		if (ds_output.RowCount() > 0) {		// 조회된 자료가 있을 경우 
			// CI00002 : "조회를 완료했습니다.조회건수 [${}건]"
			gfn_showMsg("CI00002", ds_output.RowCount() + "");
			fn_query_detail(0);
		} else {
			gfn_showMsg("CW00010"); // CW00010 : "데이터가 없습니다."
			// 그리드에 표시 - 조회된 데이터가 없습니다.
			Grid.NoDataText = gridNoDataMsg;
			
		}		
	}
}

function fn_afterQueryDetail(errCode, errMsg) {
	
	ds_output_detail.ApplyChange(); 
	ds_output_detail.Fireevent = true;	// 데이타셋 이벤트 활성화	
	
	if(ds_error.rowcount() > 0) {
		gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG"));   
		
	} else {
		fn_setDetailInfo();	// 상세정보 SET
	}
	
}

/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) {   
	
	trace(ds_error.SaveXML()); 

	fn_destroyWait();	
	if ( ds_error.GetRowCount() > 0 ) {
		gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
		return;
	}
	else
	{
		gfn_showMsg("CI00006", "[저장]"); // ${} 처리를 완료했습니다.
		// 재조회
		fn_query();
	}
}

/********************************************************************************
* 기      능   : Code Callback  
********************************************************************************/
function fn_afterCode(errCode, errMsg) {   
	
	if ( errCode < 0 )
	{
		//  CE00001 : "처리에 실패했습니다.\n확인 후 다시 처리해 주십시오.");
		gfn_showMsg("CE00001");
	}
	else
	{
		object("ds_sorlt").InsertRow(0);
		object("ds_sorlt").setColumn(0, "CODE", "");
		object("ds_sorlt").setColumn(0, "CODE_NAME", "- 전체 -");
		cb_sorlt.InnerDataset 	= "ds_sorlt";
		cb_sorlt.index 			= 0;
		cb_sorlt.Redraw 		= true;			
	}
}

/********************************************************************************
* 기      능   :  Callback  
********************************************************************************/
function fn_afterDeldat(errCode, errMsg) {   
	
	if ( errCode < 0 )
	{
		//  CE00001 : "처리에 실패했습니다.\n확인 후 다시 처리해 주십시오.");
		gfn_showMsg("CE00001");
	}
	else
	{
		//trace(" @@@@@@@@@@@@@@@@@@@@@@@ 워킹데이");
		//trace(ds_deldat.saveXML());
		
		if(ds_deldat.rowcount() > 0) 
		{
			// 워킹데이가 입력한 납기예정일보다 이후라면 
			// 변경처리하고 메시지처리
			if (ParseInt(ds_deldat.GetColumn(0,'C_WORKINGDAY')) > ParseInt(ds_output.GetColumn(ds_output.row,'DELDAT'))) 
			{
				gfn_showAlert( "CE10005", ds_deldat.GetColumn(0,"C_WORKINGDAY") );
				
				ds_output.FireEvent = false;
				ds_output.SetColumn(ds_output.row, "DELDAT", ds_deldat.GetColumn(0,"C_WORKINGDAY") );
				gfn_SetFocusGrid(Grid, ds_output.row, gfn_getColIdx(Grid,"DELDAT"));
				ds_output.FireEvent = true;
			}
		} // end if
	}
}

/********************************************************************************
* 기      능   : 수주계획년월  Callback  
********************************************************************************/
function fn_afterZpym(errCode, errMsg) {   
	
	if ( errCode < 0 )
	{
		//  CE00001 : "처리에 실패했습니다.\n확인 후 다시 처리해 주십시오.");
		gfn_showMsg("CE00001");
	}
	else
	{
		// 조회된 값으로 대체
		ds_output.SetColumn( ds_output.row, "ZCLFLG", ds_zclflg.getColumn( 0, "ZCLFLG" ) );
	}
}

/********************************************************************************
* 기      능   : 고객 Callback  
********************************************************************************/
function fn_afterKunnr(errCode, errMsg) {   
	
	if ( errCode < 0 )
	{
		//  CE00001 : "처리에 실패했습니다.\n확인 후 다시 처리해 주십시오.");
		gfn_showMsg("CE00001");
	}
	else
	{
		if (ds_list_buyr.RowCount() > 0)
		{
			F_KUNNR    = ds_list_buyr.GetColumn(0, "BUYR_CD_DB");
			F_KUNNR_NM = ds_list_buyr.GetColumn(0, "BUYR_NM");
			F_LAND1    = ds_list_buyr.GetColumn(0, "LAND1");
			F_ZAREA_NM = ds_list_buyr.GetColumn(0, "ZAREA_NM");
		}
	}
}

/********************************************************************************
* 기      능   : 실기종  Callback  
********************************************************************************/
function fn_afterRtype(errCode, errMsg) {   
	
	if ( errCode < 0 )
	{
		//  CE00001 : "처리에 실패했습니다.\n확인 후 다시 처리해 주십시오.");
		gfn_showMsg("CE00001");
	}
	else
	{
		Grid.SetCellProp('Body', gfn_getColIdx(Grid, 'RTYPE'), "ComboDataset", "ds_rtype");
		Grid.Redraw = true;			
	}
}


/********************************************************************************
* 기      능   : 건물용도  Callback  
********************************************************************************/
function fn_afterQuery_zbdtyp(errCode, errMsg) {   
	if ( errCode < 0 )
	{
		//  CE00001 : "처리에 실패했습니다.\n확인 후 다시 처리해 주십시오.");
		gfn_showMsg("CE00001");
	}
	else
	{
		Grid.SetCellProp('Body', gfn_getColIdx(Grid, 'ZBDTYP'), "ComboDataset", "ds_list_build");
		//gfn_InsertRowCombo(ds_list_build, 0, "N", "Y", "BUILDUSE", "STEXT"); // 선택 행 추가
		Grid.Redraw = true;			
	}
}






/******************************************************
// 그리드 설정
******************************************************/
function fn_GridSet()
{	
	// 부서
	
	Destroy("ds_dept");
	Create("dataset", "ds_dept");
	object("ds_dept").copy(div_vbvg.ds_frvb_cd);
	if ( length( ds_dept.getColumn(0, "CODE") ) == 0 )
	{
		object("ds_dept").deleteRow(0);
	}
	
	// 팀
	
	Destroy("ds_team");
	Create("dataset", "ds_team");
	object("ds_team").copy(div_vbvg.ds_frvg_cd);
	if ( length( ds_team.getColumn(0, "CODE") ) == 0 )
	{
		object("ds_team").deleteRow(0);
	}
	
	Grid.SetCellProp('Body', gfn_getColIdx(Grid, 'VKBUR'), "ComboDataset", "ds_dept");
	Grid.SetCellProp('Body', gfn_getColIdx(Grid, 'VKGRP'), "ComboDataset", "ds_team");

	// 동적으로 생성된 데이타셋을 반영하기 위해 redraw
	Grid.Redraw("Body");	
}


/******************************************************
* 그리드 헤더 클릭시 정렬 처리 
*******************************************************/
function Grid_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	
	if (nCell == 0) 
	{
		// 컬럼 display 여부
		gfn_selectGridCol(obj); 
	} 
	else 
	{
		// 그리드 정렬 처리 
		gfn_sortGrid(obj, nCell);
	}
	
}

   

/******************************************************
* 엑셀로 export
*******************************************************/
function fn_excel()
{
	gfn_exportExcel(Grid, "월 수주계획 등록");
}

/******************************************************
*  닫기
*******************************************************/
function fn_close()
{
	close();
}


/********************************************************************************
* 행추가
********************************************************************************/
function btn_addRow_OnClick(obj)
{
	// 행추가 시 부서정보가 없다면 정보를 가져온다.
	if ( !gfn_findObj("ds_dept", this) )
	{
		// 그리드설정
		fn_GridSet();
	}
	
	// 추가시 필수 항목 오류검증
	if (fn_validRowAdd() == false)  return false;

	// 행추가
	ds_output.AddRow();
	
}
/********************************************************************************
* 행 추가완료 시
********************************************************************************/
function ds_output_OnRowInserted(obj,nRow,nCount)
{
	
	// dataset의 이벤트 비활성화
	obj.fireevent = false;
	
	// 추가된 row에 셋팅
	// obj.copyrow(nRow, obj, 0);
	
	obj.SetColumn(nRow,'CHK','0');									// 기존에 사용된 컬럼이라 패스
	
	// 이동계획마감여부가 'X"일 경우 [추가]
	// 아닐경우 [계획]
	// 신규건은 마감여부가 없으므로 [계획]
	obj.SetColumn(nRow, 'PGUBN', '계획');							// 계획구분
	obj.SetColumn(nRow,'SONNR','자동입력');							// 수주계획번호
	obj.SetColumn(nRow,'ZPYM',substr(gfn_getCurrDate(),0,6));		// 계획년월
	obj.SetColumn(nRow,'SPART', '' );								// 제품군
	obj.SetColumn(nRow,'VKBUR',div_vbvg.cb_frvb.Value);				// 부서
	obj.SetColumn(nRow,'VKGRP',div_vbvg.cb_frvg.Value);				// 팀
	obj.SetColumn(nRow,'ZKUNNR',div_manager.ed_sman_cd.text);		// 영업사원
	obj.SetColumn(nRow,'RTYPE',''); 								// 실기종
	obj.SetColumn(nRow,'SPEC','');									// SPEC
	obj.SetColumn(nRow,'GTYPE',''); 								// 기종
	obj.SetColumn(nRow,'ZBDTYP',''); 								// 건물용도 jss
	obj.SetColumn(nRow,'TYPE1','0'); 								// 인승/폭
	obj.SetColumn(nRow,'TYPE2','0'); 								// 속도/각도
	obj.SetColumn(nRow,'TYPE3','0'); 								// 층수/높이
	obj.SetColumn(nRow,'ZNUMBER','0');								// 대수
	obj.SetColumn(nRow,'GSNAM','');									// 공사명
	obj.SetColumn(nRow,'ZDELI','');									// 단납기구분
	obj.SetColumn(nRow,'ZINTER','');								// 중계무역구분(Y)
	obj.SetColumn(nRow,'SOFOCA','0');								// 수주예상액
	obj.SetColumn(nRow,'ZFORE','0');								// 예상시행율
	obj.SetColumn(nRow,'ZCOST','0');								// 원가
	obj.SetColumn(nRow,'SID','');								    // 수요번호
	obj.SetColumn(nRow,'AUART','');								    // 오더유형



	// 2012.11.12 고객정보 적용
	if (G_VEND_WGBN == "E")	// 해외대리점의 경우 고객정보 자동Setting
	{
		obj.SetColumn(nRow,'KUNNR',    F_KUNNR);						// 고객id
		obj.SetColumn(nRow,'KUNNR_NM', F_KUNNR_NM);						// 고객명
		obj.SetColumn(nRow,'LAND1',    F_LAND1);						// 국가
		obj.SetColumn(nRow,'ZAREA_NM', F_ZAREA_NM);						// 권역
	}
	else
	{
		obj.SetColumn(nRow,'KUNNR','');									// 고객id
		obj.SetColumn(nRow,'KUNNR_NM','');								// 고객명
		obj.SetColumn(nRow,'LAND1','');									// 국가
		obj.SetColumn(nRow,'ZAREA_NM','');								// 권역
	}

	obj.SetColumn(nRow,'SHANGH','국내');									// SHANGH

	if (div_vbvg.cb_frvb.Value != "B500" &&
		div_vbvg.cb_frvb.Value != "B600" &&
		div_vbvg.cb_frvb.Value != "B700" &&
		div_vbvg.cb_frvb.Value != "B900" &&
		div_vbvg.cb_frvb.Value != "BA00" &&
		div_vbvg.cb_frvb.Value != "BB00" &&
		div_vbvg.cb_frvb.Value != "C600")	{
		obj.SetColumn(nRow,'WAERK', 'KRW');									// 통화
	}else	{
		obj.SetColumn(nRow,'WAERK', '');
	}
	
	obj.SetColumn(nRow,'DELDAT','000000');							// 납기예정일
	obj.SetColumn(nRow,'SOABLE','0');								// 수주가능성
	obj.SetColumn(nRow,'SOPRICE','0');								// 수주금액
	obj.SetColumn(nRow,'SHANG','0');								// 
	
	// 업체구분(A:설치협력사,B:보수협력사,C국내대리점,D:자재협력사,E:해외대리점
	if (G_VEND_WGBN == 'A' || G_VEND_WGBN == 'B' || G_VEND_WGBN == 'C' 
		|| G_VEND_WGBN == 'D' || G_VEND_WGBN == 'E') 
	{
		obj.SetColumn(nRow, 'ZAGNT',    G_VEND_CODE);					// 대리점
		obj.SetColumn(nRow, 'ZAGNT_NM', G_VEND_NAME);					// 대리점 명
	} else {
		obj.SetColumn(nRow, 'ZAGNT',    '');							// 대리점
		obj.SetColumn(nRow, 'ZAGNT_NM', '');							// 대리점 명
	}

	obj.SetColumn(nRow, 'ZRMK', '');								// 비고

	obj.SetColumn(nRow, 'SORLT', '10');								// 수주결과(10=생성)
	obj.setColumn(nRow, "ZCLFLG", "");								// 이동계획마감여부
	
	// 기종(rtype), 인승(type1), 속도(type2), 
	// 층수(type3), 수주예상액(sofoca), 납기예정일(DELDAT) 변경여부
	obj.setColumn(nRow, "UFLAG", "");	
	
	obj.setColumn(nRow, "STATUS", "insert");
	
	obj.Fireevent = true;
	
}

/********************************************************************************
* 행삭제
********************************************************************************/
function btn_delRow_OnClick(obj)
{
	
	if(ds_output.GetColumn(ds_output.currow,"OPENDT") == "Y") {
		gfn_showAlert((ds_output.currow+1) + "행의 수주계획번호는 E-GIS에서 삭제가능합니다.");
		return false;
	}
	
	// 삭제조건
	// 1. 결과가 입력된 계획은 삭제불가 ( 수주결과 = 생성(10)일때만 삭제됨)
	// 2. 이동계획 편성된 계획은 삭제불가(zmpflg != X일때만 삭제됨)
	// 3. 마감후에는 삭제불가(zclflg != x일때만 삭제됨)
	// 4. insert상태일때 삭제가능
	//trace(ds_output.getcolumn( ds_output.row, "SORLT" ));		// 수주결과
	//trace(ds_output.getcolumn( ds_output.row, "ZMPFLG" ));		// 이동계획여부
	//trace(ds_output.getcolumn( ds_output.row, "ZCLFLG" ));		// 이동계획마감여부

	if(ds_output.GetColumn(ds_output.currow, 'VKBUR') != G_SAP_USER_VBCD) {
		gfn_showAlert('CW00114','담당 부서('+ds_output.GetColumn(ds_output.currow, 'VKBUR')+')외 처리는');
		return false;
	}
	if(ds_output.GetColumn(ds_output.currow, 'VKGRP') != G_SAP_USER_VGCD) {
		gfn_showAlert('CW00114','담당 팀('+ds_output.GetColumn(ds_output.currow, 'VKGRP')+')외 처리는');
		return false;
	}
	if(extractID(ds_output.GetColumn(ds_output.currow, 'ZKUNNR')) != G_USER_ID) {
		gfn_showAlert('CW00114','담당자('+ds_output.GetColumn(ds_output.currow, 'ZKUNNR')+')외 처리는');
		return false;
	}

	if ( ds_output.GetColumn(ds_output.currow, "STATUS") == 'insert' )
	{
		ds_output.DeleteRow(ds_output.currow);
	}
	else if ( ds_output.getcolumn( ds_output.row, "SORLT" ) == '10' 
		&& ds_output.getcolumn( ds_output.row, "ZMPFLG" ) != 'X'
		&& ds_output.getcolumn( ds_output.row, "ZCLFLG" ) != 'X'
		 )
	{
		ds_output.FireEvent  = false;
		ds_output.setColumn(ds_output.row, "STATUS", "delete");
		ds_output.FireEvent  = true;
	}
	else
	{
		// 삭제가 불가한 데이터입니다.
		gfn_showAlert("CW00072", "");
		return;		
	}
}

/********************************************************************************
* 추가된 row 발리데이션 체크
********************************************************************************/
function extractID(knrz2) {
	var userid = knrz2;

	if(left(userid,1)=='A' || left(userid,1)=='H') 
		userid = right(userid,length(userid)-1);

	return userid;
}

function fn_validRowAdd() {
	if(div_vbvg.cb_frvb.value != G_SAP_USER_VBCD) {
		gfn_showAlert('CW00116','소속부서('+G_SAP_USER_VBCD+')를');
		div_vbvg.cb_frvb.setFocus();
		return false;
	}
	if(div_vbvg.cb_frvg.value != G_SAP_USER_VGCD) {
		gfn_showAlert('CW00116','소속팀('+G_SAP_USER_VGCD+')을');
		div_vbvg.cb_frvg.setFocus();
		return false;
	}

	if(extractID(div_manager.ed_sman_cd.value) != G_USER_ID) {
		gfn_showAlert('CW00116','올바른 담당자('+G_USER_ID+')를');
		div_manager.ed_sman_cd.setFocus();
		return false;
	}

	// 부서
	if ( length( div_vbvg.cb_frvb.value ) == 0 ) 
	{
		// CW10029=${}을/를 선택하세요.
		gfn_showAlert('CW10029','부서');
		div_vbvg.cb_frvb.setFocus();
		return false;
	}
	
	// 팀
	if ( length( div_vbvg.cb_frvg.value ) == 0 ) 
	{
		// CW10029=${}을/를 선택하세요.
		gfn_showAlert('CW10029','팀');
		div_vbvg.cb_frvg.setFocus();
		return false;
	}
	
	// 업체구분(A:설치협력사,B:보수협력사,C국내대리점,D:자재협력사,E:해외대리점
	if (G_VEND_WGBN == 'A' || G_VEND_WGBN == 'B' || G_VEND_WGBN == 'C' 
		|| G_VEND_WGBN == 'D' || G_VEND_WGBN == 'E')
	{
	} 
	else 
	{
		if ( length(trim(div_manager.ed_sman_nm.text)) == 0 )
		{
			// CW10030=${}을/를 검색하세요.
			gfn_showAlert('CW10030','담당자');
			div_manager.ed_sman_cd.setFocus();
			return false;
		}
	}	
}

/********************************************************************************
* 견적등록
********************************************************************************/
function fn_costIns(obj) {

	if(ds_output.GetColumn(ds_output.currow ,"OPENDT") == "Y") {
		gfn_showAlert((ds_output.currow+1) + "행의 수주계획번호는 E-GIS에서 등록가능합니다.");
		return false;
	}
	
	// 건수 체크
	if ( ds_output.GetRowCount() < 1 )
	{
		// [${}] 자료가 존재하지 않습니다.
		gfn_showAlert("CW00113", "견적등록 가능한");
		return;
	}

	// 상태가 변동이 없는경우에만 처리 가능
	if ( length(trim(ds_output.GetColumn(ds_output.currow, "STATUS") ) ) == 0 ) {
		if(ds_output.GetColumn(ds_output.currow, 'VKBUR') != G_SAP_USER_VBCD) {
			gfn_showAlert('CW00114','담당 부서('+ds_output.GetColumn(ds_output.currow, 'VKBUR')+')외 처리는');
			return false;
		}
		if(ds_output.GetColumn(ds_output.currow, 'VKGRP') != G_SAP_USER_VGCD) {
			gfn_showAlert('CW00114','담당 팀('+ds_output.GetColumn(ds_output.currow, 'VKGRP')+')외 처리는');
			return false;
		}
		if(extractID(ds_output.GetColumn(ds_output.currow, 'ZKUNNR')) != G_USER_ID) {
			gfn_showAlert('CW00114','담당자('+ds_output.GetColumn(ds_output.currow, 'ZKUNNR')+')외 처리는');
			return false;
		}

		// 판매문서유형
		var auart = Trim( ds_output.GetColumn(Grid.CurrentRow, "AUART") );
	
		if ( length(auart) == 0 ) {
			// CW10035=${}이/가 없습니다.
			gfn_showAlert('CW10035','[판매문서유형]');
			return;
			
		} 
		else 
		{
			// 단납기의 경우 계획년월이 현재년월가 동일하면 견적등록 가능함 2012.12.24
			if (ds_output.GetColumn(ds_output.currow, "ZDELI") == "X")	{
				if (ds_output.GetColumn(ds_output.currow, "ZPYM") == substr(gfn_getCurrDate(),0,6))	{
					ds_arg.clearData();
					ds_arg.addRow();
					ds_arg.copyRow(0, ds_output, ds_output.row);
					
					var arg  = "fa_sonnr=" + quote(ds_output.GetColumn(ds_output.currow, "SONNR"));
						arg += " flag="+quote("I");
			
    
					// G_VEND_WGBN
					// 업체구분(A:설치협력사,B:보수협력사,C국내대리점,D:자재협력사,E:해외대리점
					if (G_VEND_WGBN == 'A' || G_VEND_WGBN == 'B' || G_VEND_WGBN == 'C' 
						|| G_VEND_WGBN == 'D' || G_VEND_WGBN == 'E') 
					{
						if ( ds_output.GetColumn(ds_output.currow, "VKBUR") == "C600" || //S/S 
							 ds_output.GetColumn(ds_output.currow, "VKBUR") == "C700" ||
							 ds_output.GetColumn(ds_output.currow, "VKBUR") == "C800" ||
							 ds_output.GetColumn(ds_output.currow, "VKBUR") == "C900")  {
							gfn_openPopUpUrlHdel("Ses::Ses0051S.xml", true, arg);
						} else {
						gfn_openPopUpUrlHdel("Ses::Ses0051.xml", true, arg);
						}
					} else {
						if (ds_output.GetColumn(ds_output.currow, "VKBUR") == "B500" ||
						    ds_output.GetColumn(ds_output.currow, "VKBUR") == "B600" ||
						    ds_output.GetColumn(ds_output.currow, "VKBUR") == "B700" ||
						    ds_output.GetColumn(ds_output.currow, "VKBUR") == "B900" ||
						    ds_output.GetColumn(ds_output.currow, "VKBUR") == "BA00" ||
						    ds_output.GetColumn(ds_output.currow, "VKBUR") == "BB00" 
						    )	{	// 해외영업본팀의 경우
							gfn_openPopUpUrlHdel("Ses::Ses0031E.xml", true, arg);
						} else if ( ds_output.GetColumn(ds_output.currow, "VKBUR") == "C600" || //S/S 
							        ds_output.GetColumn(ds_output.currow, "VKBUR") == "C700" ||
							        ds_output.GetColumn(ds_output.currow, "VKBUR") == "C800" ||
							        ds_output.GetColumn(ds_output.currow, "VKBUR") == "C900" )  {
							gfn_openPopUpUrlHdel("Ses::Ses0031S.xml", true, arg);
						}else	{
							gfn_openPopUpUrlHdel("Ses::Ses0031.xml", true, arg);
						}
					}
				}else	{
					gfn_showAlert("CW00053", "단납기의 경우 계획년월이 현재년월과 상이하여 견적등록");
					return;
				}
			}else	{
				// 2012.11.13 견적등록 가능 상태 체크
				if (ds_output.GetColumn(ds_output.currow, "SORLT") == "10")
				{
					ds_arg.clearData();
					ds_arg.addRow();
					ds_arg.copyRow(0, ds_output, ds_output.row);
					
					var arg  = "fa_sonnr=" + quote(ds_output.GetColumn(ds_output.currow, "SONNR"));
						arg += " flag="+quote("I");
			
					// G_VEND_WGBN
					// 업체구분(A:설치협력사,B:보수협력사,C국내대리점,D:자재협력사,E:해외대리점
					if (G_VEND_WGBN == 'A' || G_VEND_WGBN == 'B' || G_VEND_WGBN == 'C' 
						|| G_VEND_WGBN == 'D' || G_VEND_WGBN == 'E') 
					{
						if ( G_VEND_WGBN == 'C' && (ds_output.GetColumn(ds_output.currow, "VKBUR") == "C700" || ds_output.GetColumn(ds_output.currow, "VKBUR") == "C900"))
						{
							gfn_openPopUpUrlHdel("Ses::Ses0051S.xml", true, arg);
						} else {
							gfn_openPopUpUrlHdel("Ses::Ses0051.xml", true, arg);
						}
					} else {
						if (ds_output.GetColumn(ds_output.currow, "VKBUR") == "B500" ||
							ds_output.GetColumn(ds_output.currow, "VKBUR") == "B600" ||
							ds_output.GetColumn(ds_output.currow, "VKBUR") == "B700" ||
							ds_output.GetColumn(ds_output.currow, "VKBUR") == "B900" ||
							ds_output.GetColumn(ds_output.currow, "VKBUR") == "BA00" ||
							ds_output.GetColumn(ds_output.currow, "VKBUR") == "BB00" )	{	// 해외영업본팀의 경우
							gfn_openPopUpUrlHdel("Ses::Ses0031E.xml", true, arg);
						} else if ( ds_output.GetColumn(ds_output.currow, "VKBUR") == "C600" || //S/S 
							        ds_output.GetColumn(ds_output.currow, "VKBUR") == "C700" ||
							        ds_output.GetColumn(ds_output.currow, "VKBUR") == "C800" ||
							        ds_output.GetColumn(ds_output.currow, "VKBUR") == "C900" )  {
							gfn_openPopUpUrlHdel("Ses::Ses0031S.xml", true, arg);
						}else	{
							gfn_openPopUpUrlHdel("Ses::Ses0031.xml", true, arg);
						}
					}
				}
				else
				{
					gfn_showAlert("CW00068", "등록", "견적등록");
					return;
				}
			}
		}
	} else {
		gfn_showAlert("CW00114", "상태가 변경되어 견적등록이");
		return;
	}
}


/********************************************************************************
* 종결처리
********************************************************************************/
function fn_sorlt()
{

	if(ds_output.GetColumn(ds_output.currow ,"OPENDT") == "Y") {
		gfn_showAlert((ds_output.currow+1) + "행의 수주계획번호는 E-GIS에서 등록가능합니다.");
		return false;
	}
	
	// 건수 체크
	if ( ds_output.GetRowCount() < 1 )
	{
		// [${}] 자료가 존재하지 않습니다.
		gfn_showAlert("CW00113", "종결처리 가능한");
		return;
	}	

	// 상태가 변동이 없는경우에만 처리 가능
	if ( length(trim(ds_output.GetColumn(ds_output.currow, "STATUS") ) ) == 0 )
	{
		// SORLT의 상태에 따른 종결처리 
		if ( ds_output.GetColumn(ds_output.currow, "SORLT") == "10" || 
			 ds_output.GetColumn(ds_output.currow, "SORLT") == "20" ||
			 ds_output.GetColumn(ds_output.currow, "SORLT") == "50" )
		{
			var arg = "fa_filter1=" + quote(ds_output.GetColumn(ds_output.currow, "SPART"));
			
			var rs = gfn_openPopupUrl("Sbp::Sbp0162.xml", true, arg);
		
			//if (rs == 'ok')
			//{
				// 재조회
				//fn_query();
			//}
		}
		else
		{
			gfn_showAlert("CW00114", "이미 처리되어 종결처리가");
			return;
		}
	}else
	{
		gfn_showAlert("CW00114", "상태가 변경되어 종결처리가");
		return;
	}
}


/********************************************************************************
* Expand
********************************************************************************/
function Grid_OnExpandEdit(obj,nRow,nCell,strVal,nPivotIndex)
{
	
	// gfn_getColIdx -> 인덱스 구하는 함수
	if (nCell == gfn_getColIdx(Grid, "KUNNR_NM")) // 고객명
	{
		// 고객코드
		var arg = "fa_knur_cd=" + quote( ds_output.GetColumn(nRow, "KUNNR") );
		
		// 고객정보 팝업 호출
		var arr = gfn_openPopUpUrlHdel("Com::Com0040.xml", true, arg);
		
		// 결과리턴
		if ( length( arr ) != 0 ) 
		{
			
			if(arr[8] == "Y") {    //E-GIS오픈여부
				gfn_showAlert("E-GIS에서 등록가능합니다.");
				return false;
			}
			
			ds_output.SetColumn( nRow, 'KUNNR_NM',	arr[1]); 	// 고객명
			ds_output.SetColumn( nRow, 'KUNNR',		arr[0]); 	// 고객id
			ds_output.SetColumn( nRow, 'LAND1',		arr[4]);	// 국가
			//ds_output.SetColumn( nRow, 'LAND1_NM',	arr[5]);
			ds_output.SetColumn( nRow, 'ZAREA_NM',	arr[7]);	// 권역
		}
	}
	
	// 납기예정일
	if ( nCell == gfn_getColIdx(Grid, "DELDAT") ) 
	{
	
		var rect	= obj.GetCellRect(nRow, nCell);
		// Array 형태로 값을 Return 합니다.
		// array[0] : Left
		// array[1] : Top
		// array[2] : Right
		// array[3] : Bottom
		
		var right	= rect[2];
		var bottom	= rect[3];
	
		calDate.Left 		= right  + 4;
		calDate.top			= bottom;// + 3;
		calDate.Value 		= gfn_getCurrDate();
		calDate.Visible		= true;
		calDate.SetFocus();
		
	}
	
	// 수요번호 2020.12 jss
	if ( nCell == gfn_getColIdx(Grid, "SID") ) 
	{ 
		var arg = "pRow=" + quote(nRow);
		var arr = gfn_openPopUpUrlHdel("Com::Com0330.xml", true, arg); //내 현장 조회
	}
	
}

/*****************************************************************************
 *   함수명  : calDate_tab1_OnKillFocus
 *   파라메터: 
 *   RETURN  : 
 *   설명    : calDate_tab1 KillFocus 처리
 *   수정일자: 
 *   수정내용: 
 *****************************************************************************/
function calDate_tab1_OnKillFocus(obj)
{
	calDate.Visible = false;
}

/*****************************************************************************
 *   함수명  : calDate_tab1_OnDayClick
 *   파라메터: 
 *   RETURN  : 
 *   설명    : calDate_tab1 달력 클릭 처리
 *   수정일자: 
 *   수정내용: 
 *****************************************************************************/
function calDate_tab1_OnDayClick(obj,strText)
{
	var colName;
	calDate.Visible = false;

	Trim( ds_output.SetColumn(ds_output.Row, "DELDAT", strText) );
}


/********************************************************************************
* 데이타 변경시
********************************************************************************/
function ds_output_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	// 상태가 del라면
	if ( ds_output.GetColumn(nRow, "STATUS") == 'delete' )
	{
		ds_output.fireevent = false;
		ds_output.SetColumn(nRow, strColumnID, varOldValue);
		ds_output.fireevent = true;
		
		//alert("삭제될 데이타이므로 수정할 수 없습니다.");
		// 수정이 불가한 데이터입니다.
		gfn_showAlert("CW00073", "");
		return;
	}
	
	// colSelect 설정
	if ( ds_output.getcolumn(nRow, "STATUS") == 'update' ||
		 ds_output.getcolumn(nRow, "STATUS") == 'insert' ) 
	{
		Grid.ColSelect = true;
	}
	else
	{
		Grid.ColSelect = false;
	}
	
	//교체 --> RTYPE 기준으로 AUART 연계 by mj.Shin 2020.03.31
	// if ( strColumnID == "NCHECK" ) {
	 // if (ds_output.GetColumn(nRow, "NCHECK") == "1") {
		 	sAUART = "ZN01";
		 // if ( SUBSTR(G_USER_ID,0,1) != "9" ) {		 
		      // ds_output.SetColumn(nRow, "AUART", "ZN01");	
		 // } else {
			// ds_output.SetColumn(nRow, "AUART", "ZN02");	
		 // }
	  // }	
	// }
	
	// 계획년월
	if ( strColumnID == 'ZPYM' )
	{
		var arr = ['계획년월','현재월'];
		
		// 이동계획1차마감여부
		if ( ds_output.getColumn( nRow, "ZCLFLG" ) == 'X' )
		{
			// 해당 정보는 [${}]로/이므로 [${}]을/를 변경할 수 없습니다.
			var arr = ["이동계획1차가 마감","계획년월"];
			gfn_showAlert("CW10083", arr);
			
			ds_output.fireevent = false;
			ds_output.SetColumn( nRow, strColumnID, varOldValue);
			ds_output.fireevent = true;
			return;
		}
		
		// 현재년월보다 계획년월이 이전일 경우
		if ( ParseInt(substr(gfn_getCurrDate(),0,6)) > ParseInt(ds_output.GetColumn(ds_output.row, 'ZPYM'))) 
		{
			ds_output.fireevent = false;
			ds_output.SetColumn( nRow, strColumnID, varOldValue);
			gfn_SetFocusGrid(Grid, nRow, gfn_getColIdx(Grid,"ZPYM"));
			ds_output.fireevent = true;
			
			// CW10036=${}은 ${} 이후로 입력하세요.
			gfn_showAlert('CW10036',arr);
			return;
		} 
		else
		{
			destroy("ds_zclflg");
			create("dataset", "ds_zclflg");
			ds_zclflg.addColumn("ZCLFLG", "STRING", 256);
			
			var arg = "zpym="+quote( ds_output.GetColumn( ds_output.row, "ZPYM" ) );
				
			// 서비스 호출
			nsfRequest("zpym"							// srvId
						, "sbp0160_N/zpym"				// url
						, ""							// inDsList
						, "ds_zclflg=ds_zclflg"			// outDsList
						, arg							// strParam
						, "fn_afterZpym"							// CallBackFunc
						);
		}
		// 납품예정일 확인 처리
		// 계획년월을 변경하는 경우 납품예정일을 초기화 처리 2012.12.13
		if (varOldValue != varNewValue)	{
			if (ParseInt(varOldValue) < ParseInt(varNewValue))	{
				ds_output.FireEvent = false;
				ds_output.SetColumn(ds_output.currow, 'DELDAT', '000000');					// 납기예정일
				ds_output.FireEvent = true;
			}
		}
	}

	// 실기종
	if ( strColumnID == 'RTYPE' )
	{
		if ( length( ds_output.getColumn(nRow, "VKBUR") ) == 0 )
		{
			// [${}] 선택하십시오.
			gfn_showAlert("CW00116", "부서 먼저");
			return;
		}
		else
		{	
			var rtype = ds_output.getColumn(nRow, "RTYPE");				// 실기종
			var recordIdx = ds_rtype.searchRow("CODE='"+rtype+"'") ;	// 실기종이 선택된 inner데이타셋의 index

			ds_output.setColumn( nRow, "SPART", ds_rtype.getColumn(recordIdx, "FILTER1") ); // 제품군
			// 2012.11.09 AUART의 값을 실기종 조회 후 해당 판매문서유형 Setting에 대한 처리는 수기 필요 START
			// 국내의 경우 대리점, 해외의 경우 처리 필요
			var sAUART = "";
			sAUART = ds_rtype.getColumn(recordIdx, "FILTER2");
			// 국내 대리점의 경우
			if (ds_output.getColumn(nRow, "VKBUR") != "B500" &&
			    ds_output.getColumn(nRow, "VKBUR") != "B600" &&
			    ds_output.getColumn(nRow, "VKBUR") != "B700" &&
			    ds_output.getColumn(nRow, "VKBUR") != "B900" &&
			    ds_output.getColumn(nRow, "VKBUR") != "BA00" &&
			    ds_output.getColumn(nRow, "VKBUR") != "BB00" )	{
			    if ( ds_output.getColumn(nRow,"VKBUR") == 'BE00' ||
					 ds_output.getColumn(nRow,"VKBUR") == 'BJ00' ||
					 ds_output.getColumn(nRow,"VKBUR") == 'BK00' ||
					 ds_output.getColumn(nRow,"VKBUR") == 'BL00' ||
					 ds_output.getColumn(nRow,"VKBUR") == 'BM00' ) {  //교체일경우 
			    	sAUART = "ZN01";
			    }
				if ( substr(ds_output.getColumn(nRow, "ZKUNNR"), 0, 1) == "A" ) 	{
					sAUART = substr(sAUART, 0, 3) + "2";
				}
			}else	{		// 해외의 경우
				if ( rtype == "SP")		{	// SP의 경우
					sAUART = "ZC01";
				}else	{
					if ( ds_output.getColumn(nRow, "SHANGH") == "국내")		{
						sAUART = "ZE01";
					}else	{		// 상해
						sAUART = "ZT01";
					}
				}
			}
			if ( G_VEND_CODE_B = "0000009933") { // || (ds_output.GetColumn( nRow, "NCHECK") == "X" ) {  //2015년도 조직개편 추가 9933:리모델링 구분 
				sAUART = "ZN01";
			}
						
			// 2012.11.09 AUART의 값을 실기종 조회 후 해당 판매문서유형 Setting에 대한 처리는 수기 필요 END
			ds_output.setColumn( nRow, "AUART", sAUART ); // 판매문서유형
			ds_output.setColumn( nRow, "MATNR", ds_rtype.getColumn(recordIdx, "FILTER3") ); // 자재코드
		}
		
	}
	
	// 납기예정일
	if ( strColumnID == 'DELDAT' )
	{
		arr = ['납기예정일','계획년월'];

		// 판매문서유형 값이 ZR일경우(zr이 머지????)
		if ( substr(ds_output.GetColumn(nRow,'AUART'),0,2) == 'ZR' ) 
		{
			// 계획년월이 납기예정일보다 이후일경우
			if (ParseInt(ds_output.GetColumn(nRow,'ZPYM')) > ParseInt(substr(ds_output.GetColumn(nRow,'DELDAT'),0,6))) 
			{
				// CW10036=${}은 ${} 이후로 입력하세요.
				gfn_showAlert('CW10036',arr);
				gfn_SetFocusGrid( Grid, nRow, gfn_getColIdx(Grid, "DELDAT"));
				return;
			}
		}
        
        if ( substr(ds_output.GetColumn(nRow,'AUART'),0,2) != "ZF" ) //물류 제외 2014.05.18
        {
		// 납기예정일이 워킹데이와 다를경우에 처리
		var datefrom = substr(ds_output.GetColumn(nRow,'ZPYM'),0,4)
					+ '-' + substr(ds_output.GetColumn(nRow,'ZPYM'),4,2) + '-01';
		var days = '';
		
		// znumber = 대수, zdeli = 단납기구분
		if (ParseInt(ds_output.GetColumn(nRow,'ZNUMBER')) <= 2
			|| ds_output.GetColumn(nRow,'ZDELI') == 'X'
			|| ds_output.GetColumn(nRow,'ZDELI') == '1') 
		{
			days = '45';
		} else if (ParseInt(ds_output.GetColumn(nRow,'ZNUMBER')) <= 5) 
		{
			days = '65';
		} else if (ParseInt(ds_output.GetColumn(nRow,'ZNUMBER')) <= 10) 
		{
			days = '80';
		} else if (ParseInt(ds_output.GetColumn(nRow,'ZNUMBER')) <= 20) 
		{
			days = '100';
		} else 
		{
			days = '140';
		}
		
		destroy("ds_deldat");
		create("dataset", "ds_deldat");
		ds_deldat.addColumn("C_WORKINGDAY", "STRING", 256);
		
		var arg = "I_DATE_FROM="+quote(datefrom);
			arg += " I_DAYS="+quote(days);
			arg += " I_WERKS="+quote(1000);
			
		// 서비스 호출
		nsfRequest("deldat"							// srvId
					, "sbp0160_N/deldat"				// url
					, ""								// inDsList
					, "ds_deldat=ds_deldat"				// outDsList
					, arg								// strParam
					, "fn_afterDeldat"								// CallBackFunc
					);
		}			
			
	}

	// 기종(rtype), 인승(type1), 속도(type2), 
	// 층수(type3), 수주예상액(sofoca), 납기예정일(DELDAT) 변경여부
	// uflag값을 가지고 간다. rfc에서 사용.
	if( strColumnID == "TYPE1" || strColumnID == "TYPE2" || strColumnID == "DELDAT" ||
	    strColumnID == "TYPE3" || strColumnID == "RTYPE" || strColumnID == "SOFOCA") 
	{
		obj.Fireevent = false;

		// 2013.03.22 TYPE1에 인승의 경우 08의 경우 8로 변경되어야 함 (0으로 시작제거)
		if (strColumnID == "TYPE1")			{
			var strValue = gfn_firstZeroOmit(varNewValue);

			if (varNewValue != strValue)	{
				ds_output.SetColumn(nRow, "TYPE1", strValue);
			}
		}

		if(    ds_output.getOrgColumn(nRow, "RTYPE" ) == ds_output.GetColumn(nRow, "RTYPE") 
			&& ds_output.getOrgColumn(nRow, "TYPE1" ) == ds_output.GetColumn(nRow, "TYPE1")
			&& ds_output.getOrgColumn(nRow, "TYPE2" ) == ds_output.GetColumn(nRow, "TYPE2") 
			&& ds_output.getOrgColumn(nRow, "TYPE3" ) == ds_output.GetColumn(nRow, "TYPE3")
			&& ds_output.getOrgColumn(nRow, "SOFOCA" ) == ds_output.GetColumn(nRow, "SOFOCA")
			&& ds_output.getOrgColumn(nRow, "DELDAT" ) == ds_output.GetColumn(nRow, "DELDAT")) 
		{
			//trace(" @@@@ 기종,인승,속도,층수,sofoca,납기예정일 미변경!");
			obj.SetColumn(nRow, "UFLAG" , " ");	
		} 
		else 
		{
			//trace(" @@@@ 기종,인승,속도,층수,sofoca,납기예정일 변경!!!!!!!");
			obj.SetColumn(nRow, "UFLAG" , "X");	
		
		} 
		obj.fireevent = true;
	 
	}

	// 수주예상액
	if ( strColumnID == 'SOFOCA' )
	{
		// 2012.11.15 재산출의 경우 금액 비교 불필요 처리
		if (obj.getColumn(nRow, "UFLAG") != "X")
		{
			var totsum = replace( Grid0.GetCellText('body', 0, 1), ',', '' ) ;
			
			if ( totsum > 0 && totsum > toNumber( varNewValue ) )
			{
				// [${}] 보다 작은 값을 입력할 수 없습니다. 확인하여 주십시오.
				gfn_showAlert( "CW00217" , "매출/청구/수금금액" );
				
				ds_output.fireevent = false;
				ds_output.SetColumn( nRow, "SOFOCA", varOldValue );
				gfn_SetFocusGrid( Grid, nRow, gfn_getColIdx(Grid, 'SOFOCA') );
				ds_output.fireevent = true;
				
				return;
			}
		}
	}
	
	// 수주예상액 & 예상시행율
	if ( strColumnID == 'SOFOCA' || strColumnID == 'ZFORE' )
	{
		// 수주예상액
		if ( length( ds_output.GetColumn( nRow, "SOFOCA" ) ) == 0 )
		{
			ds_output.SetColumn( nRow, "SOFOCA", "0" );
		}
		// 예상시행율
		if ( length( ds_output.GetColumn( nRow, "ZFORE" ) ) == 0 )
		{
			ds_output.SetColumn( nRow, "ZFORE", "0" );
		}
		
		// 수주예상액과 예상시행율이 0이면 return
		if ( ds_output.GetColumn( nRow, "SOFOCA" ) == '0' 
			&& ds_output.GetColumn( nRow, "ZFORE" ) == '0' )
		{
			return;
		}
		else
		{
			// 계산식 
			// 원가 = (수주예상액 * 예상시행율)/100
			var sofoca = toNumber( ds_output.GetColumn( nRow, "SOFOCA" ) ) ;	// 수주예상액
			var zfore = toNumber( ds_output.GetColumn( nRow, "ZFORE" ) );		// 예상시행율
			var zcost = (sofoca*zfore)/100;
			
			// 원가
			ds_output.SetColumn( nRow, "ZCOST", zcost );
		}
		
		
	}

	// 국내/상해 구분 2012.11.09 반영
	if ( strColumnID == "SHANGH"  )
	{
		// 해외 부서의 경우에만 영향을 미침
		if (ds_output.getColumn(nRow, "VKBUR") == "B500" || 
			ds_output.getColumn(nRow, "VKBUR") == "B600" || 
			ds_output.getColumn(nRow, "VKBUR") == "B700" || 
			ds_output.getColumn(nRow, "VKBUR") == "B900" ||
			ds_output.getColumn(nRow, "VKBUR") == "BA00" ||
			ds_output.getColumn(nRow, "VKBUR") == "BB00" )
		{
			if (ds_output.getColumn(nRow, "RTYPE") != "SP")	
			{
				if ( ds_output.getColumn(nRow, "SHANGH") == "국내")		{
					ds_output.setColumn( nRow, "AUART", "ZE01" ); // 판매문서유형
				}else	{		// 상해
					ds_output.setColumn( nRow, "AUART", "ZT01" );
				}
			}
			
			// 상해를 선택한 경우 중계를 Y로 Setting 2012.11.12
			if (ds_output.getColumn(nRow, "SHANGH") == "국내")
			{
				ds_output.setColumn( nRow, "ZINTER", "" );
			}
			else
			{
				ds_output.setColumn( nRow, "ZINTER", "Y" );
			}
		}
	}


	// 통화
	if ( strColumnID == 'WAERK' )
	{
		// 통화가 변경시 
		// detail의 통화도 변경하나, 상태가 변경되지 않도록 처리한다.
		ds_output_detail.fireevent = false;
		ds_output_detail.SetColumn( 0, "WAERK", varNewValue );
		ds_output_detail.SetColumn( 1, "WAERK", varNewValue );
		ds_output_detail.SetColumn( 2, "WAERK", varNewValue );
		ds_output_detail.fireevent = true;
	}
	
	// 이동계획편성
	if ( strColumnID == 'ZMPFLG' )
	{
		// 이동계획 편성시('X')
		// 이동계획1차가 마감된 정보에 대해서 이동계획 편성을 할 수 없습니다.
		if ( ds_output.getColumn( nRow, "ZCLFLG" ) == 'X' )
		{
			// 해당 정보는 [${}]로/이므로 [${}]을/를 변경할 수 없습니다.
			var arr = ["이동계획1차가 마감","이동계획 편성"];
			gfn_showAlert("CW10083", arr);
			
			ds_output.fireevent = false;
			ds_output.SetColumn( nRow, strColumnID, varOldValue);
			ds_output.fireevent = true;
			return;
		}
	}
	
	
	// 추가된 row에 대한 status는 관리하지 않음.
	if ( ds_output.getColumn(nRow, "STATUS") == 'insert' )
	{
	}
	else
	{
		ds_output.SetColumn(nRow, "STATUS", "update");
	}
	
	
}

/********************************************************************************
* Grid_OnCellClick
********************************************************************************/
function Grid_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	// 실기종
	if (nCell == gfn_getColIdx(Grid, "RTYPE")) 
	{
		var vkbur = ds_output.GetColumn(nRow, "VKBUR");
		ds_rtype.filter("pos(FILTER4,"+"'"+vkbur+"')>=0");		
	}

	// 이동계획은 해외영업대리점은 선택 불가
	if (nCell == gfn_getColIdx(Grid, "ZMPFLG"))
	{
		if (G_VEND_WGBN == 'E')
		{
			gfn_showAlert("CW10025", "해외영업대리점은 이동계획을 선택할 수 없습니다.");
			Grid.SetCellProp("body", nCell, "edit", "none");
			return false;
		}
	}
}


/********************************************************************************
* Grid_OnCellPosChanged
********************************************************************************/
function Grid_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex)
{
	// rowType에 따라 한row로 표현할지 한cell로 표현할지 설정
	if ( ds_output.getcolumn(nRow, "STATUS") == 'update' 
		|| ds_output.getcolumn(nRow, "STATUS") == 'insert' ) 
	{
		Grid.ColSelect = true;
	}
	else
	{
		Grid.ColSelect = false;
	}
}

/********************************************************************************
* 그리드 셀에서 엔터키 누르면 다음 행으로 이동
********************************************************************************/
function Grid_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,nLLParam,nHLParam)
{
	// 엔터키이면
	if ( nChar == 13 )
	{ 
		Grid.row = Grid.row + 1;  // 다음 행으로 이동
	} 
	
}


/********************************************************************************
* 그리드 OnRowPosChanged
********************************************************************************/
function ds_output_OnRowPosChanged(obj,nOldRow,nRow)
{
	if (ds_output.RowCount()==0) return;
	if (ds_output.GetColumn(nRow, "STATUS") == 'insert') {
		ds_output_detail.ClearData();   
		return;
	}	

	fn_query_detail(nRow);
}

/********************************************************************************
* 기      능   : 기준년월에 따른 그리드 헤더(계획년월) 재설정
********************************************************************************/
function fn_grid_header_set(nRow) 
{
	// 계획년월
	var bef_month = ds_output.GetColumn(nRow, 'ZPYM') + '01';
	
	// 계획년월기준으로 +18의 년월정보를 담을 ds
	destroy("ds_yearm");
	create("dataset", "ds_yearm");
	ds_yearm.addColumn("YEARM", "STRING", 256);
	
	// 1월부터 18개월 생성
	var aft_month = "";    
	for ( var i = 0 ; i < 19 ; i++ )
	{
		// 한달 씩 더한다.
		aft_month = AddMonth(bef_month, i);
		
		// 년월계획이 위치함
		Grid0.SetCellProp("Head"
						, parseInt(2) + i	
						, "Text"
						, substr(aft_month,0,4)+"."+substr(aft_month,4,2)+""  // YYYY.MM
						);

		// 예상년월 Dataset에 Add
		ds_yearm.AddRow();
		ds_yearm.SetColumn(i, "YEARM", substr(aft_month,0,6) );
		
		if ( i == 18 )
		{
			Grid0.SetCellProp("Head"
							, parseInt(2) + 18	
							, "Text"
							, "이후"
							);
		}
		
	}
	
	//trace(ds_yearm.SaveXML());
}


/********************************************************************************
* 그리드 OnColumnChanged
********************************************************************************/
function ds_output_detail_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	
	// 데이터가 변경시 통화구분도 필수로 가져갈수 있도록 처리
	ds_output_detail.SetColumn( 0, "WAERK", ds_output.GetColumn( ds_output.row, "WAERK") );// 매출
	ds_output_detail.SetColumn( 1, "WAERK", ds_output.GetColumn( ds_output.row, "WAERK") );// 청구 
	ds_output_detail.SetColumn( 2, "WAERK", ds_output.GetColumn( ds_output.row, "WAERK") );// 수금
	
	
	// 변경된 데이터처리시
	// 매출/청구/수금의 각 row는 한묶음이므로 
	// 새로 생성된 데이터의 경우 화면에 보여지는 row들은 gap데이터므로
	// 한 row만 처리할 경우 
	// service단에서 묶음처리가 힘들게 되므로 
	// 생성된 데이터의 경우 변경이 이루어지면 각 row별로 변경이 이루어진것으로 처리한다.

	//ds_output_detail.fireevent = false;
	
	//for ( var i = 0 ; i < 3 ; i++ )
	//{
	//	if ( length ( trim(toString(ds_output_detail.GetColumn( i, "AMT18" ))) ) == 0 ||
	//		toNumber( ds_output_detail.GetColumn( i, "AMT18" ) ) < 1 )
	//	{
	//		ds_output_detail.SetColumn( i, "AMT18", " " );
	//	}
	//}
	//ds_output_detail.fireevent = true;
	
	// row상태 갱신
	ds_output.SetColumn(ds_output.row, "STATUS", "update");
}


/********************************************************************************
* 그리드 OnChar
********************************************************************************/
function Grid0_OnChar(obj,strPreText,nChar,strPostText,nLLParam,nHLParam,nRow,nCell,nPivotIndex)
{
	// 현재(2012.10.22)에서 사용중일때
	// 현재 버전정보에서는 
	// 이 함수(onchar)에서 GetColID를 사용할때 버그 발생 +2된 인덱스를 가르키고 있음.
	
	// 합계 컬럼
	if ( nCell == 1 )
	{
		return;
	}
	
	var sum = 0;
	var nCellBug = nCell - 2;

	// 컬럼 갯수
	for ( var i = 0 ; i < 19 ; i++ ) 
	{
		var colid = 'AMT'+LPad(i,'0',2);
		var chgId = ds_output_detail.GetColID(nCellBug);

		// 변경된 id의 값을 반영하기 위함
		if( colid == chgId )
		{
			sum += parseInt( strPostText );
		}
		else
		{
			sum += parseInt( ds_output_detail.GetColumn(nRow, colid) );
		}
	}
	//trace(" 현재 row  : " + ds_output.detail.row );
	//trace(" 현재 row 의 합계 : " + sum );
	//trace(" main의 수주예상액 : " +round( ds_output.GetColumn(ds_output.row, "SOFOCA"), 0) );
	
	var str = "";
	if ( sum > round( ds_output.GetColumn(ds_output.row, "SOFOCA"), 0)  ) 
	{
		switch (nRow) {
			case 0 :
				str = '매출';
				break;
			case 1 :
				str = '청구';
				break;
			case 2 :
				str = '수금';
				break;
		}
			
		// CW10031=${}금액 합계가 수주예상금액보다 큽니다.
		gfn_showAlert('CW10031', str);
		gfn_SetFocusGrid( Grid0, nRow, nCell );
		ds_output_detail.SetColumn(nRow, nCellBug, strPreText);
		return;
	}
}


/********************************************************************************
* 저장용 디테일 정보 셋팅
********************************************************************************/
function fn_detailInfo_save()
{
	var notNormalCnt = 0 ;
	var filterSet = "";
	for ( var a = 0 ; a < ds_output.GetRowCount() ; a++ )
	{
		if ( ds_output.GetColumn( a, "STATUS" ) == 'insert'
			|| ds_output.GetColumn( a, "STATUS" ) == 'update' )
		{
			notNormalCnt++;
			
			if ( notNormalCnt == 1 )
			{
				filterSet += "SONNR='"+ds_output.GetColumn( a, "SONNR" )+"'";
			}
			else
			{
				filterSet += "||SONNR='"+ds_output.GetColumn( a, "SONNR" )+"'";
			}
			
		}
		
	}
	
	// 저장용 디테일정보 dataset
	destroy( "ds_detailSaveInfo" );
	create( "dataset", "ds_detailSaveInfo" );
	ds_detailSaveInfo.copy(ds_output_detail);
	ds_detailSaveInfo.filter(filterSet);
	
}

/********************************************************************************
* SPEC정보 처리
********************************************************************************/
function fn_specInfo(strVkbur, strMatnr, strRtype, strType1, strType2, strType3)
{
	return gfn_specInfo(strVkbur, strMatnr, strRtype, strType1, strType2, strType3, "", "", "", "");
}

/********************************************************************************
* 그리드 타이틀 변경
********************************************************************************/
function fn_gridTitleChange(strDept) {
	// 그리드 Title 변경
	// 주차부서면 타이틀 변경
	if (strDept == "C700" || strDept == "C900")	{
		Grid.SetCellProp("Head", 12, "Text", "모델명");             // 2013.03.30 강슬기 
		Grid.SetCellProp("Head", 13, "Text", "단수");
		Grid.SetCellProp("Head", 14, "Text", "수용대수");
        Grid.SetCellProp("Head", 15, "Text", "기수");
	} else if (strDept == "C800") { //psd
		Grid.SetCellProp("Head", 12, "Text", "역사길이");             // 2014.05.18 강슬기 
		Grid.SetCellProp("Head", 13, "Text", "타입");
		Grid.SetCellProp("Head", 14, "Text", "량수/문수");
        Grid.SetCellProp("Head", 15, "Text", "플랫폼수");
    } else if (strDept == "C600") { //물류
		Grid.SetCellProp("Head", 12, "Text", "S/C TYPE");             // 2014.05.18 강슬기 
		Grid.SetCellProp("Head", 13, "Text", "대수");
		Grid.SetCellProp("Head", 14, "Text", "RTV대수");
        Grid.SetCellProp("Head", 15, "Text", "보관량(CELL수)");    
        Grid.SetColProp(36, "Width", "0");
        Grid.SetColProp(37, "Width", "0");
	} else	{
		Grid.SetCellProp("Head", 12, "Text", "인승/폭");
		Grid.SetCellProp("Head", 13, "Text", "속도/각도");
		Grid.SetCellProp("Head", 14, "Text", "층수/높이");
	}
	
}
function Grid_OnCellDblClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	if ( nCell == 7 ) {
		fn_costIns(obj);
	}
}

function After_Init_Coms011(vkbur, vkgrp) {

	// 그리드 Title 변경 2012.12.12
	// 주차부서면 타이틀 변경
	fn_gridTitleChange(vkbur);
}

function fn_setDetailInfo() {

	var list_row = ds_output.row;
	var deatail_row = ds_output_detail.row;
	
	// 기준년월에 따른 그리드 헤더(계획년월) 재설정
	fn_grid_header_set(list_row);

	//F_ZBPNNR = ds_output.GetColumn(ds_output.row, "ZBPNNR"); 	//// 사업계획번호
	if (ds_output_detail.RowCount() == 0) {	// 매출, 청구, 수금 행 미존재 시 강제로 1행씩 추가한다. 

		ds_output_detail.Fireevent = false;
		ds_output_detail.InsertRow(0); 
		ds_output_detail.SetColumn(detail_row, "GBN"		, "1");
		ds_output_detail.SetColumn(detail_row, "GBN_NM"	, "매출"); 
		ds_output_detail.InsertRow(1); 
		ds_output_detail.SetColumn(detail_row, "GBN"		, "2");
		ds_output_detail.SetColumn(detail_row, "GBN_NM"	, "청구");
		ds_output_detail.InsertRow(2); 
		ds_output_detail.SetColumn(detail_row, "GBN"		, "3");
		ds_output_detail.SetColumn(detail_row, "GBN_NM"	, "수금");
		ds_output_detail.Fireevent = true;
	} 

	if (ds_output_detail.RowCount() > 0) {	// 매출, 청구, 수금 행 미존재 시 강제로 1행씩 추가한다. 
	
		// 수주계획의 상태가 10의 경우만 수정 가능
		if ( ds_output.GetColumn(list_row, "SORLT") == "10" )
		{
			Grid.Editable  = true;

			// 국내만 적용
			if (left(ds_output.GetColumn(list_row, "SONNR"), 1) != "C" &&
				left(ds_output.GetColumn(list_row, "SONNR"), 1) != "E" &&
				left(ds_output.GetColumn(list_row, "SONNR"), 1) != "T"
			   )
			{
				// 1. 이동계획1차가 마감(ZCLFLG='X')일경우 매출/청구/수금은 수정할수 없음.
				// 2. 2012.10.31 김선호대리 요청
				// 2. 이동계획1차마감과 이동계획편성이 'X"일경우 main/detail그리드 수정안됨.
				if ( ds_output.GetColumn(list_row, "ZCLFLG") == 'X' &&
					 ds_output.GetColumn(list_row, "ZMPFLG") == 'X' &&
					 (     ds_output.GetColumn(list_row, "STATUS") != 'insert' 
						|| ds_output.GetColumn(list_row, "STATUS") != 'update' )
					)
				{
					// 그리스 수정 비활성
					Grid.Editable  = false;
					
					// 메시지바 처리
					// 해당 정보는 [${}]로/이므로 [${}]변경할 수 없습니다. /n확인바랍니다.
					var arr = [ "이동계획 편성과 1차가 마감", "매출/청구/수금" ];
					gfn_showMsg( "CW10083", arr );
					
					Grid0.Editable = false;
					Grid0.BkColor = "#EEEBE6";			
					
					for( colidx = 0 ; colidx < Grid0.GetCellCount('Body') ; colidx++ )
					{
						Grid0.SetCellProp("Body", colidx, "bkcolor", "#EEEBE6");
						Grid0.SetCellProp("Body", colidx, "bkcolor2", "#EEEBE6");
					}
				}
				else
				{ 
					// 그리스 수정 활성
					Grid.Editable = true;
				
					// 메시지바 클리어
//					gfn_clearMsgBar(); 
					
					Grid0.Editable = true;
					Grid0.BkColor = '';
					
					for( colidx = 0 ; colidx < Grid0.GetCellCount('Body') ; colidx++ )
					{
						Grid0.SetCellProp("Body", colidx, "bkcolor", "");
						Grid0.SetCellProp("Body", colidx, "bkcolor2", "");
					}
				}
			}
		}
		else
		{
			if(left(ds_output.GetColumn(list_row, "SONNR"), 1) == "C" ||
			   left(ds_output.GetColumn(list_row, "SONNR"), 1) == "T" ||
			   left(ds_output.GetColumn(list_row, "SONNR"), 1) == "E" )
			{
				Grid0.Editable = true;
			}else	{
				Grid0.Editable = false;
			}
		}
	}
//	gfn_SetFocus(div_detail.div_buyr.ed_buyr_cd, "Y") ;	// 거래선 코드에 포커싱
	ds_output_detail.row = -1;	// 매출/청구/수금 그리드에 포커싱 제거

}


/********************************************************************************
* 기      능   : 예외수정자 조회 Callback  
********************************************************************************/
function fn_afterQuery_kunz2(svcId, errCode, errMsg) {
	if (ds_list_kunz2.RowCount() > 0) {
		if (ds_list_kunz2.GetColumn(0, "ISKUNZ2") == "Y") {
			F_SID_CHCK = false;
		}
	}
}]]></Script>
</Window>