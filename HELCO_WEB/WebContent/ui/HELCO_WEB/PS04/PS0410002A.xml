<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="PS0410002A" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="표준&#32;단가용&#32;건축&#32;부대공사&#32;입력/조회" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="USER_CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="USER_GRUP" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZSHIPT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZSHIPF" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZACTSS" size="256" summ="default" type="STRING"/>
					<record>
						<CODE1></CODE1>
						<LIFNR></LIFNR>
						<POSID></POSID>
						<PSPID></PSPID>
						<USER_CODE></USER_CODE>
						<USER_GRUP></USER_GRUP>
						<ZZACTSS></ZZACTSS>
						<ZZSHIPF></ZZSHIPF>
						<ZZSHIPT></ZZSHIPT>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_lifnr">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<colinfo id="SORTL" size="256" type="STRING"/>
					<colinfo id="LOEVM" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_head">
				<Contents>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZQNTY" size="256" summ="default" type="STRING"/>
					<colinfo id="VALUE" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="TEMNO2" size="256" summ="default" type="STRING"/>
					<colinfo id="NAME1" size="256" summ="default" type="STRING"/>
					<colinfo id="TELF1" size="256" summ="default" type="STRING"/>
					<colinfo id="CELLP" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="STRING"/>
					<record>
						<CELLP></CELLP>
						<NAME1></NAME1>
						<NETWR></NETWR>
						<PSPID></PSPID>
						<TELF1></TELF1>
						<TEMNO2></TEMNO2>
						<VALUE></VALUE>
						<ZLIFNR></ZLIFNR>
						<ZQNTY></ZQNTY>
						<ZSITE_NM></ZSITE_NM>
					</record>
				</Contents>
			</Dataset>
			<Dataset CanColumnChange="ds_list_CanColumnChange" DataSetType="Dataset" Id="ds_list" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HKONT" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="BLDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="KOSTL" size="256" summ="default" type="STRING"/>
					<colinfo id="INSDT" size="256" summ="default" type="STRING"/>
					<colinfo id="CNFDT" size="256" summ="default" type="STRING"/>
					<colinfo id="INSLFN" size="256" summ="default" type="STRING"/>
					<colinfo id="INAME1" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKPNO" size="256" summ="default" type="STRING"/>
					<colinfo id="W_INST" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKLFN" size="256" summ="default" type="STRING"/>
					<colinfo id="STATE" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMTX" size="256" summ="default" type="STRING"/>
					<colinfo id="UNIT" size="256" summ="default" type="STRING"/>
					<colinfo id="CAPA" size="256" summ="default" type="STRING"/>
					<colinfo id="QUAN" size="256" summ="default" type="STRING"/>
					<colinfo id="WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="S_WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="TEXT" size="256" summ="default" type="STRING"/>
					<colinfo id="T_ITEMTX" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMTX2" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO2" size="256" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="DEL" size="256" summ="default" type="STRING"/>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="FGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="STRING"/>
					<colinfo id="SUM_TWBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="CNSDT" size="256" summ="default" type="STRING"/>
					<colinfo id="INSERT_INDC" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_code1">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="HIG_CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="UNIT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_code2">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="HIG_CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="UNIT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_code3">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="HIG_CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="UNIT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_wrkp">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_kostl">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_longTexts2">
				<Contents>
					<colinfo id="TDOBJ" size="256" type="STRING"/>
					<colinfo id="TDNAME" size="256" type="STRING"/>
					<colinfo id="TDID" size="256" type="STRING"/>
					<colinfo id="TEXT" size="256" type="STRING"/>
					<colinfo id="FLAG" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_lifnr_cd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<colinfo id="SORTL" size="256" type="STRING"/>
					<colinfo id="LOEVM" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_code4">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="HIG_CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="UNIT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list2">
				<Contents>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HKONT" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="BLDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="KOSTL" size="256" summ="default" type="STRING"/>
					<colinfo id="INSDT" size="256" summ="default" type="STRING"/>
					<colinfo id="CNFDT" size="256" summ="default" type="STRING"/>
					<colinfo id="INSLFN" size="256" summ="default" type="STRING"/>
					<colinfo id="INAME1" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKPNO" size="256" summ="default" type="STRING"/>
					<colinfo id="W_INST" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKLFN" size="256" summ="default" type="STRING"/>
					<colinfo id="STATE" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMTX" size="256" summ="default" type="STRING"/>
					<colinfo id="UNIT" size="256" summ="default" type="STRING"/>
					<colinfo id="CAPA" size="256" summ="default" type="STRING"/>
					<colinfo id="QUAN" size="256" summ="default" type="STRING"/>
					<colinfo id="WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="S_WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="TEXT" size="256" summ="default" type="STRING"/>
					<colinfo id="T_ITEMTX" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMTX2" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO2" size="256" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="FGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="SUM_TWBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="CNSDT" size="256" summ="default" type="STRING"/>
					<colinfo id="INSERT_INDC" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_seqno">
				<Contents>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="HKONT" size="256" summ="default" type="STRING"/>
					<record>
						<GUBUN></GUBUN>
						<HKONT></HKONT>
						<PSPID></PSPID>
						<SEQNO></SEQNO>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_master2">
				<Contents>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMTX" size="256" summ="default" type="STRING"/>
					<colinfo id="NAME1" size="256" summ="default" type="STRING"/>
					<colinfo id="J_1KFREPRE" size="256" summ="default" type="STRING"/>
					<colinfo id="ADDR" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKLFN" size="256" summ="default" type="STRING"/>
					<colinfo id="KTEXT" size="256" summ="default" type="STRING"/>
					<colinfo id="CNFDT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_p">
				<Contents>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="HKONT" size="256" summ="default" type="STRING"/>
					<record>
						<HKONT/>
						<PSPID></PSPID>
						<SEQNO></SEQNO>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_fgbn">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE>I</CODE>
						<CODE_NAME>진행</CODE_NAME>
					</record>
					<record>
						<CODE>F</CODE>
						<CODE_NAME>완료</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zzactss">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_hkont">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_lifnr_so5">
				<Contents>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="SO5" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_newSeqList">
				<Contents>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HKONT" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="BLDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="KOSTL" size="256" summ="default" type="STRING"/>
					<colinfo id="INSDT" size="256" summ="default" type="STRING"/>
					<colinfo id="CNFDT" size="256" summ="default" type="STRING"/>
					<colinfo id="INSLFN" size="256" summ="default" type="STRING"/>
					<colinfo id="INAME1" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKPNO" size="256" summ="default" type="STRING"/>
					<colinfo id="W_INST" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKLFN" size="256" summ="default" type="STRING"/>
					<colinfo id="STATE" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMTX" size="256" summ="default" type="STRING"/>
					<colinfo id="UNIT" size="256" summ="default" type="STRING"/>
					<colinfo id="CAPA" size="256" summ="default" type="STRING"/>
					<colinfo id="QUAN" size="256" summ="default" type="STRING"/>
					<colinfo id="WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="S_WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="TEXT" size="256" summ="default" type="STRING"/>
					<colinfo id="T_ITEMTX" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMTX2" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO2" size="256" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="FGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="SUM_TWBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="CNSDT" size="256" summ="default" type="STRING"/>
					<colinfo id="INSERT_INDC" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_lifnr_grid">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<colinfo id="SORTL" size="256" type="STRING"/>
					<colinfo id="LOEVM" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_sum_twbtr">
				<Contents>
					<colinfo id="SUM_TWBTR" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_temp" UseClientLayout="1">
				<Contents>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HKONT" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="BLDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="KOSTL" size="256" summ="default" type="STRING"/>
					<colinfo id="INSDT" size="256" summ="default" type="STRING"/>
					<colinfo id="CNFDT" size="256" summ="default" type="STRING"/>
					<colinfo id="INSLFN" size="256" summ="default" type="STRING"/>
					<colinfo id="INAME1" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKPNO" size="256" summ="default" type="STRING"/>
					<colinfo id="W_INST" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKLFN" size="256" summ="default" type="STRING"/>
					<colinfo id="STATE" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMTX" size="256" summ="default" type="STRING"/>
					<colinfo id="UNIT" size="256" summ="default" type="STRING"/>
					<colinfo id="CAPA" size="256" summ="default" type="STRING"/>
					<colinfo id="QUAN" size="256" summ="default" type="STRING"/>
					<colinfo id="WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="S_WRBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="TEXT" size="256" summ="default" type="STRING"/>
					<colinfo id="T_ITEMTX" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEMTX2" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO2" size="256" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="DEL" size="256" summ="default" type="STRING"/>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="FGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="STRING"/>
					<colinfo id="SUM_TWBTR" size="256" summ="default" type="STRING"/>
					<colinfo id="CNSDT" size="256" summ="default" type="STRING"/>
					<colinfo id="INSERT_INDC" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_netwr">
				<Contents>
					<colinfo id="NETWR" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user12" Bottom="113" Height="26" Id="Shape1" Left="10" LineColor="user13" Right="968" TabOrder="15" Top="87" Type="Rectangle" Width="958"></Shape>
		<Shape BKColor="user0" Bottom="85" Height="85" Id="Shape0" Left="0" LineColor="user1" Right="978" TabOrder="1" Top="0" Type="Rectangle" Width="978"></Shape>
		<Static Align="Right" Height="20" Id="st_yymm" Left="8" Style="sty_lb_search" TabOrder="2" Text="지시일자&#32;" Top="12" VAlign="Middle" Width="80"></Static>
		<Button Cursor="HAND" Height="20" Id="btn_del" ImageID="btn_icon_minus" Left="928" LeftMargin="12" OnClick="fn_del" Style="sty_btn" TabOrder="3" Top="90" Transparent="TRUE" Width="24"></Button>
		<Button Cursor="HAND" Height="20" Id="btn_add" ImageID="btn_icon_plus" Left="904" LeftMargin="12" OnClick="fn_insert" Style="sty_btn" TabOrder="4" Top="90" Transparent="TRUE" Width="22"></Button>
		<Static Align="Right" Height="20" Id="st_pjt" Left="9" Style="sty_lb_search" TabOrder="5" Text="프로젝트&#32;" Top="60" VAlign="Middle" Width="80"></Static>
		<Edit BindDataset="ds_cond" Border="Flat" CheckLength="Byte" Column="PSPID" Height="20" Id="ed_pjt" Left="92" MaxLength="6" Style="sty_ipt_search" TabOrder="6" Top="60" UpperOnly="TRUE" Width="70"></Edit>
		<Button Height="18" Id="btn_popProj" ImageID="btn_icon_search" Left="167" OnClick="btn_popProj_OnClick" TabOrder="7" Text="Button0" Top="62" Transparent="TRUE" Width="18"></Button>
		<Static Align="Right" Height="20" Id="st_lifnr" Left="294" Style="sty_lb_search" TabOrder="8" Text="설치협력사&#32;" Top="12" VAlign="Middle" Width="80"></Static>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="LIFNR" DataColumn="CODE_NAME" Height="20" Id="cb_lifnr" InnerDataset="ds_lifnr" Left="376" Style="sty_ipt_search" TabOrder="9" Top="10" Width="120"></Combo>
		<Calendar BindDataset="ds_cond" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="ZZSHIPF" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cal_zzshipf" Left="92" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_search" SundayTextColor="user35" TabOrder="11" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="12" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="89"></Calendar>
		<Static Align="Center" Border="None" Color="user7" Font="굴림,9" Height="14" Id="Static13" Left="179" TabOrder="10" Text="~" Top="17" VAlign="Middle" Width="18"></Static>
		<Calendar BindDataset="ds_cond" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="ZZSHIPT" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cal_zzshipt" Left="197" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_search" SundayTextColor="user35" TabOrder="12" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="12" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="89"></Calendar>
		<Static Align="Right" DomainID="com.pjtnm" Height="24" Id="Static30" Left="11" Style="sty_lb_form_basic" TabOrder="13" Text="프로젝트&#32;" Top="88" VAlign="Middle" Width="98"></Static>
		<Edit Align="CENTER" BindDataset="ds_head" Border="Flat" Column="PSPID" Height="20" Id="Edit6" Left="111" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="14" Top="90" Width="98"></Edit>
		<Static Align="Right" DomainID="com.zqnty" Height="24" Id="Static3" Left="225" Style="sty_lb_form_basic" TabOrder="16" Text="대수&#32;" Top="88" VAlign="Middle" Width="98"></Static>
		<Edit Align="RIGHT" BindDataset="ds_head" Border="Flat" Column="ZQNTY" Height="20" Id="Edit12" Left="325" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="17" Top="90" Width="137"></Edit>
		<Static Align="Right" DomainID="com.floors" Height="24" Id="Static4" Left="464" Style="sty_lb_form_basic" TabOrder="19" Text="총층수&#32;" Top="88" VAlign="Middle" Width="98"></Static>
		<Edit Align="RIGHT" BindDataset="ds_head" Border="Flat" Column="VALUE" Height="20" Id="Edit0" Left="564" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="18" Top="90" Width="137"></Edit>
		<Static Align="Right" Height="19" Id="Static0" Left="8" Style="sty_lb_search" TabOrder="20" Text="구분&#32;" Top="36" VAlign="Middle" Width="80"></Static>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="552" CellMoving="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" FixedColSizing="TRUE" HeadBorder="Flat" HeadHeight="20" Height="432" Id="grd_list" InputPanel="FALSE" Left="10" LineColor="user20" LineType="ExHORZ" OnCellClick="grd_list_OnCellClick" OnEnterDown="grd_list_OnEnterDown" OnExpandEdit="grd_list_OnExpandEdit" OnHeadClick="grd_list_OnHeadClick" Right="968" RowHeight="20" Style="sty_grid" TabOrder="21" TabStop="true" Top="120" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="958">
			<contents>
				<format id="Default">
					<columns>
						<col width="20"/>
						<col width="35"/>
						<col width="60"/>
						<col width="40"/>
						<col width="160"/>
						<col width="120"/>
						<col width="80"/>
						<col width="80"/>
						<col width="120"/>
						<col width="120"/>
						<col width="170"/>
						<col width="170"/>
						<col width="240"/>
						<col width="200"/>
						<col width="85"/>
						<col width="85"/>
						<col width="85"/>
						<col width="50"/>
						<col width="50"/>
						<col width="50"/>
						<col width="70"/>
						<col width="0"/>
						<col width="70"/>
						<col width="87"/>
						<col width="87"/>
						<col width="60"/>
					</columns>
					<head>
						<cell col="0" display="text" font="굴림,9" TrimType="Left"/>
						<cell col="1" display="text" font="굴림,9" text="순번" TrimType="Left"/>
						<cell col="2" display="text" font="굴림,9" text="프로젝트" TrimType="Left"/>
						<cell col="3" display="text" font="굴림,9" text="차수" TrimType="Left"/>
						<cell col="4" display="text" font="굴림,9" text="현장명"/>
						<cell col="5" display="text" font="굴림,9" text="설치업체명"/>
						<cell col="6" display="text" font="굴림,9" text="사무소"/>
						<cell col="7" display="text" font="굴림,9" text="작업지시자"/>
						<cell col="8" display="text" font="굴림,9" text="작업업체"/>
						<cell col="9" display="text" font="굴림,9" text="작업업체명"/>
						<cell col="10" display="text" font="굴림,9" text="사용계정"/>
						<cell col="11" display="text" font="굴림,9" text="공사종류"/>
						<cell col="12" display="text" font="굴림,9" text="항목"/>
						<cell col="13" display="text" font="굴림,9" text="특기사항(대외)"/>
						<cell col="14" display="text" font="굴림,9" text="작업지시일" TrimType="Left"/>
						<cell col="15" display="text" font="굴림,9" text="작업시작일"/>
						<cell col="16" display="text" font="굴림,9" text="작업종료일"/>
						<cell col="17" display="text" font="굴림,9" text="층수"/>
						<cell col="18" display="text" font="굴림,9" text="단위"/>
						<cell col="19" display="text" font="굴림,9" text="수량"/>
						<cell col="20" display="text" font="굴림,9" text="단가"/>
						<cell col="21" display="text" font="굴림,9" text="금액"/>
						<cell col="22" display="text" font="굴림,9" text="금액"/>
						<cell col="23" display="text" font="굴림,9" text="시행예산"/>
						<cell col="24" display="text" font="굴림,9" text="예산대비실적"/>
						<cell col="25" display="text" font="굴림,9" text="완료여부" TrimType="Left"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" colid="CHK" display="checkbox" edit='expr:iif(STATE=&quot;1&quot;&#32;OR&#32;STATE=&quot;2&quot;&#32;OR&#32;STATE=&quot;3&quot;,&quot;none&quot;,&quot;checkbox&quot;)'/>
						<cell align="center" bkcolor2="user22" col="1" colid="NO" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="text" expr="currow+1"/>
						<cell align="center" bkcolor2="user22" checklength="Byte" col="2" colid="PSPID" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="text" imemode="english" limit="9"/>
						<cell align="center" bkcolor2="user22" checklength="Byte" col="3" colid="SEQNO" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="number" imemode="english" limit="9"/>
						<cell bkcolor2="user22" col="4" colid="ZSITE_NM" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="text"/>
						<cell align="center" bkcolor2="user22" col="5" colid="INAME1" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_lifnr" combotext="CODE_NAME" display="text"/>
						<cell align="center" bkcolor2="user22" col="6" colid="KOSTL" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_kostl" combodisplayrowcnt="10" combotext="CODE_NAME" display="combo" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;combo&quot;,&quot;none&quot;)'/>
						<cell align="center" bkcolor2="user22" col="7" colid="WRKPNO" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_wrkp" combodisplayrowcnt="10" combotext="CODE_NAME" display="combo" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;combo&quot;,&quot;none&quot;)'/>
						<cell align="center" bkcolor="expr:iif(getRowType(currow)&#32;==&#32;2&#32;,&apos;red&apos;,&apos;&apos;)" bkcolor2="user22" bkimagealign="right" col="8" colid="WRKLFN" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combodisplayrowcnt="15" display="text" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;normal&quot;,&quot;none&quot;)' expandimage="btn_icon_search" expandshow='expr:iif(FLAG=&quot;Y&quot;,&quot;True&quot;,&quot;False&quot;)' expandsize="18"/>
						<cell align="center" bkcolor="expr:iif(getRowType(currow)&#32;==&#32;2&#32;,&apos;red&apos;,&apos;&apos;)" bkcolor2="user22" col="9" colid="WRKLFN" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_lifnr_grid" combodisplayrowcnt="15" combotext="CODE_NAME" display="combo" expandsize="18"/>
						<cell align="left" bkcolor="expr:iif(getRowType(currow)&#32;==&#32;2&#32;,&apos;red&apos;,&apos;&apos;)" bkimagealign="left" col="10" colid="HKONT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_hkont" combodisplayrowcnt="15" combotext="CODE_NAME" display="combo" edit="expr:iif(INSERT_INDC&#32;==&#32;&apos;I&apos;,&apos;combo&apos;,&apos;none&apos;)" imemode="native"/>
						<cell align="left" bkcolor2="user22" bkimagealign="left" col="11" colid="T_ITEMTX" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_code2" combofilter="expr:fn_change_code2(currow)" combotext="CODE_NAME" display="combo" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;combo&quot;,&quot;none&quot;)' imemode="native"/>
						<cell bkcolor2="user22" bkimagealign="left" col="12" colid="ITEMTX" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_code3" combofilter="expr:fn_change_code3(currow)" combotext="CODE_NAME" display="combo" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;combo&quot;,&quot;none&quot;)' imemode="native"/>
						<cell bkcolor2="user22" bkimagealign="left" col="13" colid="TEXT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combodataset="ds_longTexts2" display="text" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;normal&quot;,&quot;none&quot;)' imemode="native" limit="100" multiline="true"/>
						<cell align="center" bkcolor2="user22" col="14" colid="INSDT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="date" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;date&quot;,&quot;none&quot;)' expandimage="btn_grid_icon_pen" expandshow='expr:iif(FLAG=&quot;Y&quot;,&quot;True&quot;,&quot;False&quot;)' expandsize="18"/>
						<cell align="center" bkcolor2="user22" col="15" colid="CNSDT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="date" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;date&quot;,&quot;none&quot;)' expandimage="btn_grid_icon_pen" expandshow='expr:iif(FLAG=&quot;Y&quot;,&quot;True&quot;,&quot;False&quot;)' expandsize="18"/>
						<cell align="center" bkcolor2="user22" col="16" colid="CNFDT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="date" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;date&quot;,&quot;none&quot;)' expandimage="btn_grid_icon_pen" expandshow='expr:iif(FLAG=&quot;Y&quot;,&quot;True&quot;,&quot;False&quot;)' expandsize="18"/>
						<cell align="center" bkcolor2="user22" col="17" colid="CAPA" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="number" edit='expr:iif(FLAG=&quot;Y&quot;&#32;AND&#32;SUBSTR(ITEMTX,0,1)&#32;=&#32;&apos;F&apos;&#32;,&quot;number&quot;,&quot;none&quot;)' imemode="native" limit="10"/>
						<cell align="center" bkcolor2="user22" col="18" colid="UNIT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="normal" edit='expr:iif(SubStr(T_ITEMTX,0,1)&#32;==&#32;&quot;H&quot;,&quot;normal&quot;,&quot;none&quot;)' imemode="native" limit="5"/>
						<cell align="center" bkcolor2="user22" col="19" colid="QUAN" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="number" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;number&quot;,&quot;none&quot;)' imemode="native" limit="10"/>
						<cell align="right" bkcolor2="user22" bkimagealign="right" col="20" colid="WRBTR" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combotext="WRBTR" display="number" edit='expr:iif(SubStr(T_ITEMTX,0,1)&#32;==&#32;&quot;H&quot;,&quot;number&quot;,&quot;none&quot;)' imemode="native" limit="15" LimitDec="2" Mask="###,###,###"/>
						<cell bkcolor2="user22" bkimagealign="right" col="21" colid="S_WRBTR" display="number" imemode="native"/>
						<cell align="right" bkcolor2="user22" bkimagealign="right" col="22" colid="S_WRBTR2" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="number" imemode="native"/>
						<cell align="right" bkcolor2="user22" bkimagealign="right" col="23" colid="NETWR" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combotext="WRBTR" display="number" imemode="native" Mask="###,###,###"/>
						<cell align="right" bkcolor2="user22" bkimagealign="right" col="24" colid="SUM_TWBTR" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combotext="WRBTR" display="number" imemode="native" Mask="###,###,###"/>
						<cell align="center" bkcolor2="user22" checklength="Byte" col="25" colid="FGBN" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_fgbn" combotext="CODE_NAME" display="combo" imemode="english" limit="9"/>
					</body>
				</format>
				<format id="Default1">
					<columns>
						<col width="20"/>
						<col width="40"/>
						<col width="60"/>
						<col width="40"/>
						<col width="200"/>
						<col width="142"/>
						<col width="100"/>
						<col width="100"/>
						<col width="120"/>
						<col width="142"/>
						<col width="0"/>
						<col width="119"/>
						<col width="250"/>
						<col width="222"/>
						<col width="85"/>
						<col width="85"/>
						<col width="85"/>
						<col width="70"/>
						<col width="70"/>
						<col width="69"/>
						<col width="68"/>
						<col width="72"/>
						<col width="0"/>
						<col width="60"/>
					</columns>
					<head>
						<cell col="0" display="text" font="굴림,9" TrimType="Left"/>
						<cell col="1" display="text" font="굴림,9" text="순번" TrimType="Left"/>
						<cell col="2" display="text" font="굴림,9" text="프로젝트" TrimType="Left"/>
						<cell col="3" display="text" font="굴림,9" text="차수" TrimType="Left"/>
						<cell col="4" display="text" font="굴림,9" text="현장명"/>
						<cell col="5" display="text" font="굴림,9" text="설치업체명"/>
						<cell col="6" display="text" font="굴림,9" text="사무소"/>
						<cell col="7" display="text" font="굴림,9" text="작업지시자"/>
						<cell col="8" display="text" font="굴림,9" text="작업업체"/>
						<cell col="9" display="text" font="굴림,9" text="작업업체명"/>
						<cell col="10" display="text" font="굴림,9" text="사용계정"/>
						<cell col="11" display="text" font="굴림,9" text="공사종류"/>
						<cell col="12" display="text" font="굴림,9" text="항목"/>
						<cell col="13" display="text" font="굴림,9" text="특기사항(대외)"/>
						<cell col="14" display="text" font="굴림,9" text="작업지시일" TrimType="Left"/>
						<cell col="15" display="text" font="굴림,9" text="작업시작일"/>
						<cell col="16" display="text" font="굴림,9" text="작업종료일"/>
						<cell col="17" display="text" font="굴림,9" text="층수"/>
						<cell col="18" display="text" font="굴림,9" text="단위"/>
						<cell col="19" display="text" font="굴림,9" text="수량"/>
						<cell col="20" display="text" font="굴림,9" text="단가"/>
						<cell col="21" display="text" font="굴림,9" text="금액"/>
						<cell col="22" display="text" font="굴림,9" text="금액"/>
						<cell col="23" display="text" font="굴림,9" text="완료여부" TrimType="Left"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" colid="CHK" display="checkbox" edit='expr:iif(STATE=&quot;1&quot;&#32;OR&#32;STATE=&quot;2&quot;&#32;OR&#32;STATE=&quot;3&quot;,&quot;none&quot;,&quot;checkbox&quot;)'/>
						<cell align="center" bkcolor2="user22" col="1" colid="NO" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="text" expr="currow+1"/>
						<cell align="center" bkcolor2="user22" checklength="Byte" col="2" colid="PSPID" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="text" imemode="english" limit="9"/>
						<cell align="center" bkcolor2="user22" checklength="Byte" col="3" colid="SEQNO" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="number" imemode="english" limit="9"/>
						<cell bkcolor2="user22" col="4" colid="ZSITE_NM" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="text"/>
						<cell align="center" bkcolor2="user22" col="5" colid="INAME1" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_lifnr" combotext="CODE_NAME" display="text"/>
						<cell align="center" bkcolor2="user22" col="6" colid="KOSTL" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_kostl" combodisplayrowcnt="10" combotext="CODE_NAME" display="combo"/>
						<cell align="center" bkcolor2="user22" col="7" colid="WRKPNO" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_wrkp" combodisplayrowcnt="10" combotext="CODE_NAME" display="combo"/>
						<cell align="center" bkcolor="expr:iif(getRowType(currow)&#32;==&#32;2&#32;,&apos;red&apos;,&apos;&apos;)" bkcolor2="user22" bkimagealign="right" col="8" colid="WRKLFN" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combodisplayrowcnt="15" display="text" expandimage="btn_icon_search" expandsize="18"/>
						<cell align="center" bkcolor2="user22" col="9" colid="WRKLFN" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_lifnr_grid" combotext="CODE_NAME" display="combo"/>
						<cell align="left" bkcolor="expr:iif(getRowType(currow)&#32;==&#32;2&#32;,&apos;red&apos;,&apos;&apos;)" bkimagealign="left" col="10" colid="HKONT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_hkont" combodisplayrowcnt="15" combotext="CODE_NAME" display="combo" imemode="native"/>
						<cell align="left" bkcolor2="user22" bkimagealign="left" col="11" colid="T_ITEMTX" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_code2" combofilter="expr:fn_change_code2(currow)" combotext="CODE_NAME" display="combo" imemode="native"/>
						<cell bkcolor2="user22" bkimagealign="left" col="12" colid="ITEMTX" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_code3" combofilter="expr:fn_change_code3(currow)" combotext="CODE_NAME" display="combo" imemode="native"/>
						<cell bkcolor2="user22" bkimagealign="left" col="13" colid="TEXT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combodataset="ds_longTexts2" display="text" imemode="native" limit="100" multiline="true"/>
						<cell align="center" bkcolor2="user22" col="14" colid="INSDT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="date" expandsize="18"/>
						<cell align="center" bkcolor2="user22" col="15" colid="CNSDT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="date" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;date&quot;,&quot;none&quot;)' expandimage="btn_grid_icon_pen" expandshow='expr:iif(FLAG=&quot;Y&quot;,&quot;True&quot;,&quot;False&quot;)' expandsize="18"/>
						<cell align="center" bkcolor2="user22" col="16" colid="CNFDT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="date" edit='expr:iif(FLAG=&quot;Y&quot;,&quot;date&quot;,&quot;none&quot;)' expandimage="btn_grid_icon_pen" expandshow='expr:iif(FLAG=&quot;Y&quot;,&quot;True&quot;,&quot;False&quot;)' expandsize="18"/>
						<cell bkcolor2="user22" col="17" colid="CAPA" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="number" imemode="native" limit="10"/>
						<cell bkcolor2="user22" col="18" colid="UNIT" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="normal" edit='expr:iif(SubStr(T_ITEMTX,0,1)&#32;==&#32;&quot;H&quot;,&quot;normal&quot;,&quot;none&quot;)' imemode="native" limit="5"/>
						<cell align="right" bkcolor2="user22" col="19" colid="QUAN" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="number" imemode="native" limit="10"/>
						<cell align="right" bkcolor2="user22" bkimagealign="right" col="20" colid="WRBTR" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combotext="WRBTR" display="number" edit='expr:iif(SubStr(T_ITEMTX,0,1)&#32;==&#32;&quot;H&quot;,&quot;number&quot;,&quot;none&quot;)' imemode="native" limit="15" LimitDec="2" Mask="###,###,###"/>
						<cell bkcolor2="user22" bkimagealign="right" col="21" colid="S_WRBTR" display="number" imemode="native"/>
						<cell bkcolor2="user22" bkimagealign="right" col="22" colid="S_WRBTR2" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' display="number" imemode="native"/>
						<cell align="center" bkcolor2="user22" checklength="Byte" col="23" colid="FGBN" color='expr:iif(STATE==&quot;3&quot;,&quot;red&quot;,&quot;default&quot;)' combocol="CODE" combodataset="ds_fgbn" combotext="CODE_NAME" display="combo" imemode="english" limit="9"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Radio BindDataset="ds_cond" BKColor="user0" Border="None" Column="CODE1" Height="20" Id="rd_gbn" INDEX="-1" Left="96" OnChanged="rd_gbn_OnChanged" Style="sty_ipt_form_radio" TabOrder="22" Top="36" Width="773">
			<Contents>
				<Layout code="A" height="20" left="0" text="부대(설치옵션)공사" top="0" width="125"/>
				<Layout code="B" height="20" left="130" text="출입구공사" top="0" width="85"/>
				<Layout code="C" height="20" left="215" text="공간&#32;사춤/막음&#32;공사" top="0" width="100"/>
				<Layout code="D" height="20" left="320" text="칸막이&#32;공사" top="0" width="85"/>
				<Layout code="E" height="20" left="410" text="부분&#32;파훼공사" top="0" width="100"/>
				<Layout code="F" height="20" left="510" text="오버홀공사" top="0" width="80"/>
				<Layout code="G" height="20" left="592" text="전문&#32;할석공사" top="0" width="100"/>
				<Layout code="H" height="20" left="694" text="비표준공사" top="0" width="100"/>
			</Contents>
		</Radio>
		<Calendar Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="146" Id="cal_temp" Left="1072" MonthOnly="TRUE" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" OnDayClick="cal_temp_OnDayClick" OnKillFocus="cal_temp_OnKillFocus" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_form" SundayTextColor="user35" TabOrder="23" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="176" Value="20080401" Visible="FALSE" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="152"></Calendar>
		<Static Color="user6" Font="굴림,8" Height="84" Id="Static2" Left="896" TabOrder="24" Text="&lt;공사요약&gt;&#10;1.&#32;부대(설치옵션공사)&#32;:&#32;재료분리대,ELD,비상용&#32;사다리(승강로),세대내버튼,앙카후크,트롤리빔,철근제거,&#32;슬리브&#13;&#10;2.&#32;출입구&#32;공사&#32;:&#32;출입구&#32;레벨수정,잠&#32;교체작업,공사용&#32;도어&#32;교체작업,&#32;홀버튼&#32;재작업&#10;3.&#32;공간&#32;사춤/막음공사&#32;:&#32;양중구&#32;철판막음,형판홀&#32;철판막음,실턱&#32;막음&#13;&#10;4.&#32;칸막이&#32;공사&#32;:&#32;전층,피트&#32;칸막이&#32;공사&#13;&#10;5.&#32;오버홀&#32;공사&#32;:&#32;수시검사용&#32;발란스작업,카판넬&#32;교체,입주전&#32;오버홀공사&#32;등&#13;&#10;6.&#32;전문&#32;할석공사&#32;:&#32;기계실&#32;할석,&#32;출입구&#32;할석,&#32;레일반입구&#32;할석" Top="4" VAlign="Middle" Width="552"></Static>
		<Static Align="Right" Border="Flat" Height="23" Id="Static1" Left="92" Style="sty_ipt_search" TabOrder="25" Top="35" VAlign="Middle" Width="780"></Static>
		<Static Align="Right" Height="20" Id="st_zzactss" Left="503" Style="sty_lb_search" TabOrder="26" Text="사무소&#32;" Top="12" VAlign="Middle" Width="80"></Static>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="ZZACTSS" DataColumn="CODE_NAME" Height="20" Id="cb_zzactss" InnerDataset="ds_zzactss" Left="585" OnChanged="cb_zzactss_OnChanged" Style="sty_ipt_search" TabOrder="27" Top="10" Width="80"></Combo>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var userGroup = "";
var currRow = "";
var selGbn = "";
var str = "";
var CHK   = "";		// 추가여부
var fv_nRow = -1;
//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initForm(true);	
	gfn_initDs(ds_cond, true);
	userGroup = gfn_getUserGroup();
	
	
	var codeArr = ["PS003"];
    var dsObjArr = [ds_zzactss];
    var addTypeArr = [G_CODE_ALL];
    gfn_searchCommCode(codeArr, dsObjArr, addTypeArr);


	cal_zzshipf.value = substr(gfn_getCurrDate(),0,6)+"01";;  //substr(gfn_getCurrDate(),0,6);
    cal_zzshipt.value   = gfn_getCurrDate();  //substr(gfn_getCurrDate(),0,6);
    rd_gbn.Index = 'A';

    btn_add.Enable = false;
	btn_del.Enable = false;

	ds_cond.SetColumn(0,"USER_GRUP",userGroup);
	//userGroup = 10;

	//권한 별 화면 설정 
	if (userGroup == "10")
	{
		ds_cond.SetColumn(0,"USER_CODE",G_VEND_CODE_E);
		grd_list.Format = "Default1";
		btn_delete.enable = false; 
	}
	else if (userGroup == "20")
	{
		ds_cond.SetColumn(0,"USER_CODE",G_USER_ID);
		grd_list.Format = "Default1";
		btn_delete.enable = false; 
	}
	else if (userGroup == "30")
	{
		ds_cond.SetColumn(0,"USER_CODE",G_AREA_CODE_E);
	    grd_list.Format = "Default";
		btn_delete.enable = true;
	}
	else
	{
	  grd_list.Format = "Default";
	  btn_delete.enable = true;
	}

	tit_clearActionInfo();
	tit_addSearchActionInfo("ps04:PS0410002A_S12");
	tit_addSearchActionInfo("ps04:PS0410002A_S17");
	tit_addSearchActionInfo("ps04:PS0410002A_S1");
	tit_addSearchActionInfo("ps04:PS0410002A_S2");
	tit_addSearchActionInfo("ps04:PS0410002A_S3");
	tit_addSearchActionInfo("ps04:PS0410002A_S5");
	tit_addSearchActionInfo("ps04:PS0410001A_C1");         
	tit_addSearchActionInfo("ps04:PS0410002A_S13");
	tit_addSearchActionInfo("ps04:PS0410002A_S14");
	
	tit_callService(
		""
		, ""
		, "ds_cond=ds_cond"
		, "ds_lifnr=ds_lifnr_cd ds_lifnr_grid=ds_lifnr_grid ds_code1=ds_code1 ds_code2=ds_code2 ds_code3=ds_code3 ds_wrkp=ds_wrkp ds_kostl=ds_kostl ds_hkont=ds_hkont ds_lifnr_so5=ds_lifnr_so5"
		, ""
		, "fn_afterQueryC"
		, true);

}

/********************************************************************************
* 기      능   : 조회 (header 조회)
********************************************************************************/
function fn_query() {
var CHK   = "";	
	//설치협력사필드 필수체크(설치협력사 로그인시)
	if( userGroup == '10' && gfn_isNull(cb_lifnr, true, st_lifnr.value))
		return;
    ds_head.Clear();
    ds_list.Clear();
	tit_clearActionInfo();
	tit_addSearchActionInfo("ps04:PS0410002A_S4");
	if(length(trim(ed_pjt.Text)) < 6)
	{
	    btn_add.Enable = false;
	    btn_del.Enable = false;
	   // btn_save.enable = false;
	    
	    tit_addSearchActionInfo("ps04:PS0410002A_S9");
	}	
	else
	{ 
	  if ( userGroup == "10" )
	   {
 	  	 btn_add.Enable = false;
	     btn_del.Enable = false;
	     
	   }
	   else if ( userGroup == "30" || userGroup == "40")
	    {
	      btn_add.Enable = true;
	      btn_del.Enable = true;

        }
      
		tit_addSearchActionInfo("ps04:PS0410002A_S6");
	}	

	tit_callService(
        ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_head=ds_head ds_list=ds_list"
        , ""
        , "fn_afterQuery"
        , true);
}
/********************************************************************************
* 기      능   : 조회 (수량/단가 조회)
********************************************************************************/
function fn_itemtx(itemtx) {
	ds_list.SetColumn(0,"ITEMTX2",itemtx);

	tit_clearActionInfo();
	//tit_addSearchActionInfo("ps04:PS0410002A_S7");  //==> CsvSaerch로 변경
	tit_addCsvSearchActionInfo("ps04:PS0410002A_S7"); 
	
	tit_callService(
        ""
        , ""
        , "ds_list=ds_list"
        , "ds_code4=ds_code4"
        , ""
        , "fn_afterItemtx"
        , true);
       
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
}
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
 //  alert("얍얍");
  var CHK   = "";	
  //alert(CHK);
    for(var i=0; i<ds_list.rowcount; i++)
     {
         var pspid = (ds_list.GetColumn(i,"PSPID"));
         	 	   
	     if(ds_list.GetColumn(i,"SEQNO") > 9)
	      {
	        ds_list.SetColumn(i,"SEQNO2",gfn_fillZero(ds_list.GetColumn(i,"SEQNO"),1));
          }
          else
          {
             ds_list.SetColumn(i,"SEQNO2",gfn_fillZero(ds_list.GetColumn(i,"SEQNO"),2));
          } 

          var seqno = ds_list.GetColumn(i,"SEQNO2");
		  var hkont = ds_list.GetColumn(i, "HKONT");
		  
          var tdname = pspid+'1'+hkont+seqno;
          var str = "";

          str = ufn_getLongText(ds_longTexts2,"ZPST001",tdname,"Z001");	//특이사항 및 요청사항
               
        ds_list.SetColumn(i,"TEXT",str); 
       
     }
}
/********************************************************************************
* 기      능   : 금액 자동계산  
********************************************************************************/
function fn_afterItemtx(errCode, errMsg) {

   // 비표준공사 = 자동계산 필요없음.
   if(substr(ds_list.GetColumn(ds_list.currow,"ITEMTX"),0,1) =="H")
   {
		return;
   }
   
   // 오버홀 일 경우, 층수가 비어있다면 비도록.
   if(ds_list.GetColumn(ds_list.currow,"CAPA") == '' && substr(ds_list.GetColumn(ds_list.currow,"ITEMTX"),0,1) =="F")	
   { 
		ds_list.SetColumn(ds_list.currow,"UNIT",ds_code4.GetColumn(0,"UNIT")); //단위
		ds_list.SetColumn(ds_list.currow,"WRBTR",'');	// 단가
   }
   else
   {
	  if(ds_code4.RowCount() > 0 && length(ds_list.GetColumn(ds_list.currow, "ITEMTX")) > 0)
	  {   

		  ds_list.SetColumn(ds_list.currow,"UNIT",ds_code4.GetColumn(0,"UNIT")); //단위
  	      ds_list.SetColumn(ds_list.currow,"WRBTR",ds_code4.GetColumn(0,"WRBTR")); //단가
  	      
		  if(ds_list.GetColumn(ds_list.currow,"QUAN") > 0) // 수량 존재
		  {
			   var arr = (ds_code4.GetColumn(0,"WRBTR")) * ds_list.GetColumn(ds_list.currow,"QUAN"); // 단가 * 수량 = 금액
			   var arr2 = ds_list.GetColumn(ds_list.currow,"CAPA");  // 층수
			   var arr4 = ds_list.GetColumn(ds_list.currow,"QUAN");  // 수량 
			   var arr6 = ds_code4.GetColumn(0,"WRBTR");			 // 단가
			   var nWrbtr = ds_list.GetColumn(ds_list.currow, "WRBTR");
			   
			   if(ds_list.GetColumn(ds_list.currow,"CAPA") <> 15 && substr(ds_list.GetColumn(ds_list.currow,"ITEMTX"),0,1) =="F") //오버홀 때 15층 기준으로 +-8000
			   {  
			   
				 var arr3 = arr6 + (ToNumber(arr2)-15) * 8000 ;	// 단가 + (층 - 15) * 8000
				 var arr5 = arr3 * ToNumber(arr4) ;			    //  arr * 수량
		
				 ds_list.SetColumn(ds_list.currow,"WRBTR", arr3)  ;  	// 계산된 단가 
				 ds_list.SetColumn(ds_list.currow,"S_WRBTR2", arr5);    // 계산된 금액
				 ds_list.SetColumn(ds_list.currow,"S_WRBTR", arr5);   	// 계산된 금액
				 
			   }
			   else
			   {
				 ds_list.SetColumn(ds_list.currow,"WRBTR", arr6);  	// 계산된 단가
				 ds_list.SetColumn(ds_list.currow,"S_WRBTR", arr);  
				 ds_list.SetColumn(ds_list.currow,"S_WRBTR2", arr);
			   }

          }

      }
      else
	  {
		ds_list.SetColumn(ds_list.currow,"QUAN",0);	// 수량
		ds_list.SetColumn(ds_list.currow,"UNIT",'');	// 단위
		ds_list.SetColumn(ds_list.currow,"WRBTR",0);	// 단가
		ds_list.SetColumn(ds_list.currow,"S_WRBTR",0);	// 금액
		ds_list.SetColumn(ds_list.currow,"S_WRBTR2",0);	// 금액
	  }
	  
	  // 예산대비실적 변경
	  ufn_CalSumTwbtr(ds_list.currow);
  }  
	
	
}
/********************************************************************************
* 기      능   :  협력사 조회 Callback  
********************************************************************************/
function fn_afterQueryC(errCode, errMsg) {

	for(var i=0; i<ds_lifnr.rowcount; i++)
	{
		//if( length(ds_lifnr.GetColumn(i,"LOEVM")) <= 0 )
	//	{
		//	ds_lifnr.SetColumn(i,"LOEVM",'');
		//}
	}
	
	cb_lifnr.Index = 0;

	if ( userGroup == "10" )
	{
		cb_lifnr.Enable = false;
	}
	else if ( userGroup == "30" || userGroup == "40")
	{
	//	ds_lifnr.Filter("LOEVM==''");
		gfn_insertEmptyRow( ds_lifnr, G_CODE_ALL );
		cb_lifnr.value = "";
		cb_lifnr.Index = 0;
	}
}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
/********************************************************************************
* 기      능   : 저장 
********************************************************************************/
function fn_save() {
//if ( !gfn_isChangeDs(ds_list, true, "FLAG") ) {
//		return;	}
if(ds_list.FindRow("CHK", 1)==-1){
		gfn_showMsg('CW00046');
		return;
	}

 for(var i=0; i<ds_list.GetRowCount(); i++)
	{
	    if(ds_list.GetColumn(i, "CHK")==1){

		if(trim(ToNumber(ds_list.GetColumn(i,"S_WRBTR2"))) <= 0 || ds_list.GetColumn(i,"S_WRBTR2") == '')
		{
			gfn_showMsg("CW00001","금액을 확인해주세요."); 
			return;
		}	
	   
		if(ds_list.GetColumn(i,"INSDT") <= 19990101 || ds_list.GetColumn(i,"INSDT") == '')
		{
			gfn_showMsg("CW00001","작업지시일을 확인해주세요.");
			return;
		}		
	    if(ds_list.GetColumn(i,"CNSDT") <= 19990101 || ds_list.GetColumn(i,"CNSDT") == '')
		{
			gfn_showMsg("CW00001","작업시작일을 확인해주세요.");
			return;
		}
		// 오버홀 일 경우 층수 확인

		if(substr(ds_list.GetColumn(i,"ITEMTX"),0,1) =="F" && (trim(ToNumber(ds_list.GetColumn(i,"CAPA"))) <= 0 || ds_list.GetColumn(i,"CAPA") == ''))
		{
			gfn_showMsg("CW00001","층수를 확인해주세요.");
			return;
		}

		if(trim(ds_list.GetColumn(i,"QUAN")) <= 0 || ds_list.GetColumn(i,"QUAN") == '' )
		{
			gfn_showMsg("CW00001","수량을 확인해주세요.");
			return;
		}	
	    if(ds_list.GetColumn(i,"WRKPNO") == '')
		{
			gfn_showMsg("CW00001","작업지시자를 확인해주세요.");
			return;
		}	
	    if(length(trim(ds_list.GetColumn(i,"KOSTL"))) < 0  || ds_list.GetColumn(i,"KOSTL") =='')
		{
			gfn_showMsg("CW00001","사무소를  확인해주세요.");
			return;
		}
		
		var sWrkLfn = ds_list.GetColumn(i,"WRKLFN");
		var nFindRow = ds_lifnr_grid.SearchRow("LIFNR='"+sWrkLfn+"'");
		
		if(nFindRow < 0)
		{
			gfn_showMsg("CW00001","외주업체를 확인해주세요.");
			return;
		}
		/*
		if(length(trim(ds_list.GetColumn(i,"WRKLFN"))) <  0 )
		{
			gfn_showMsg("CW00001","외주업체를 확인해주세요.");
			return;
		}
		*/
		
		if(length(trim(ds_list.GetColumn(i,"HKONT"))) <=  0 )
		{
			gfn_showMsg("CW00001","사용계정을 확인해주세요.");
			return;
		}
		//alert(ds_list.GetColumn(i,"ITEMTX"));
		if(length(trim(ds_list.GetColumn(i,"ITEMTX"))) <  0 || ds_list.GetColumn(i,"ITEMTX") == '')
		{
			gfn_showMsg("CW00001","항목을 확인해주세요.");
			return;
		}	
     	//tdname = pspid+gubun+hkont+seqno;
	    //tdname = '019821'+'1'+'0053031020'+'002';
         
        if(ds_list.GetColumn(i,"CNFDT") < 19990101 || length(ds_list.GetColumn(i,"CNFDT")) == 0 || ds_list.GetColumn(i,"CNFDT") == '' )
        {  // 작업완료일 미입력시 PMD입력 완료 
          ds_list.SetColumn(i,"STATE", 'X');
        }
   	    else
   	     {  // 작업완료일 입력시 협력업체 입력 완료
   	       var arr = gfn_getLeapLastDay(ds_list.GetColumn(i,"CNFDT"));  // 작업완료일 입력 시 세금계산서 일자 완료일자 말일로 
   	       ds_list.SetColumn(i,"STATE", 'Y');
   	       ds_list.SetColumn(i,"BLDAT", arr);
   	       //alert(arr);
   	     }
	 	  
	 	if(ds_list.GetColumn(i,"STATE") == '3')
		{
			gfn_showMsg("CW00001","전표생성 후 저장할 수 없습니다.");
			return;
		}		  
	    if(ds_list.GetColumn(i,"SEQNO") > 9)
	    {
	       ds_list.SetColumn(i, "SEQNO2", gfn_fillZero(ds_list.GetColumn(i,"SEQNO"),1));	     
        }
        else
        {
          ds_list.SetColumn(i, "SEQNO2", gfn_fillZero(ds_list.GetColumn(i,"SEQNO"),2));	
        } 
        
        ds_list.SetColumn(i,"ITEMTX2",ds_code3.GetColumn(ds_code3.FindRow("CODE", ds_list.GetColumn(i, "ITEMTX")), "CODE_NAME"));  //항목에 text 저장 
     	
     	  
	   if(length(trim(ds_list.GetColumn(i,"ITEMTX2"))) <  0 || ds_list.GetColumn(i,"ITEMTX2") == '')
		{
			gfn_showMsg("CW00001","항목을 확인해주세요.");
			return;
		}	
   //  alert(ds_list.GetColumn(i, "ITEMTX2"));

 
  }   
  else
  {
    
  }
 }
    ds_list.Filter("CHK==1");
	ds_list2.copyF(ds_list);
	ds_list.unFilter();
     
/* ZPST0117 저장 */

    tit_clearActionInfo();
	tit_addSelectExActionInfo("ps04:PS0410002A_S8", "ps04:PS0410002A_I1", "ps04:PS0410002A_U1");
	tit_callService(
		  ""	
		, ""
		, "ds_list=ds_list2"
		, ""
		, ""
		, ""
		, ""
		, ""
		, true  // ""
    );
        
    
    ds_newSeqList.clearData();
	tit_clearActionInfo();
	tit_addSearchActionInfo("ps04:PS0410002A_S15");

	// long text 저장용. 저장했던 데이터의 seq가 '0' 이면 새로딴 seq 적용. 아니면 안딴 seq 그대로.
	tit_callService(
		""
		, ""
		, "ds_list2=ds_list2"
		, "ds_newSeqList=ds_newSeqList"
		, ""
		, "fn_afterSeqQuery"
		, true);
	
	
}
/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
	if ( errCode!= 0 ) {
		gfn_showMsg("CE00001");
	} else {
		alert(ds_list);
		gfn_showMsg("CI00003");		
	}
}
/********************************************************************************
* 기      능   : 저장 Callback 2
********************************************************************************/
function fn_afterSave2(errCode, errMsg) {
	if ( errCode!= 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
		fn_query();
	}
}

/********************************************************************************
* 기      능   : 저장 Callback 3
********************************************************************************/
function fn_afterSeqQuery(errCode, errMsg) {
	if ( errCode!= 0 ) {
		gfn_showMsg("CE00001");
	} else {

	// longText 저장.
		if(ds_newSeqList.GetColumn(0,"SEQNO") > 9)
		{
		   ds_list2.SetColumn(0, "SEQNO2", gfn_fillZero(ds_newSeqList.GetColumn(0,"SEQNO"),1));	     
		}
		else
		{
		  ds_list2.SetColumn(0, "SEQNO2", gfn_fillZero(ds_newSeqList.GetColumn(0,"SEQNO"),2));	
		}
		
		var tdname = ds_list2.GetColumn(0,"PSPID") + "1" +ds_list2.GetColumn(0, "HKONT")+ ds_list2.GetColumn(0,"SEQNO2");

		var str = ufn_saveLongText(ds_longTexts2, ds_list2.GetColumn(0,"TEXT"), "Z001",tdname, "ZPST001");
		
	/* ZPST0117L 저장 */
		
		tit_clearActionInfo();	
		//tit_addSelectExActionInfo("ps04:PS0410002A_S13", "ps04:PS0410002A_I2", "ps04:PS0410002A_U1");
		tit_addMultiActionInfo("ps04:PS0410002A_D1");
		tit_addMultiActionInfo("ps04:PS0410002A_I2");
	
		tit_callService(
			""
			, ""        
			, "ds_list=ds_list2"
			, ""
			, ""
			, "fn_afterSave2"
			, ""
			, ""
			,true  // ""
			);	

		gfn_showMsg("CI00003");
		
	}
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}
/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if ( nCell == 0 ) {
		// 현재 처리할 format 기억
		//gfn_selectGridCol("grd_list");
	} else {
		gfn_sortGrid(obj,nCell);
	}
}
/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	gfn_saveToExcel(grd_list, true );
}
/********************************************************************************
* 기      능   : 통합프로젝트 검색 팝업
********************************************************************************/
function btn_popProj_OnClick(obj)
{
	var arg = "pjt="+quote(ed_pjt.Text);
	//gfn_openPopup("PS9601002A", true, arg);
      gfn_openPopup("CS9601002A", true, arg);
}


/********************************************************************************
* 기      능   : 삽입 20
********************************************************************************/
function fn_insert() {
  
  //ds_list.fireevent = false;
       
 if(ds_list.GetColumn(ds_list.currow, "CHECK") <> 'I')// && CHK <> 'I')
 //  if(CHK <> 'I')
      { 
        /*
          tit_clearActionInfo();     
          tit_addSearchActionInfo("ps04:PS0410002A_S10");
	      tit_callService(
          ""
        , ""
        , "ds_head=ds_head"
        , "ds_seqno=ds_seqno"
        , ""
        , ""
        , ""
        , ""
        , true );   
       */
        ds_list.AddRow();		
       // ds_list.SetColumn(ds_list.currow,"");
	    ds_list.SetColumn(ds_list.currow,"PSPID",ds_cond.GetColumn(0,"PSPID"));
	    ds_list.SetColumn(ds_list.currow,"NETWR",ds_head.GetColumn(0,"NETWR")); // 시행예산 추가
	    ds_list.SetColumn(ds_list.currow,"HKONT", '');
	    //0053037040
	    ds_list.SetColumn(ds_list.currow,"ZSITE_NM", ds_head.GetColumn(0,"ZSITE_NM"));
	    ds_list.SetColumn(ds_list.currow,"INAME1",ds_head.GetColumn(0,"NAME1"));
 	    ds_list.SetColumn(ds_list.currow,"INSLFN",ds_head.GetColumn(0,"LIFNR"));
 	    ds_list.SetColumn(ds_list.currow,"ITEMTX",'');
        ds_list.SetColumn(ds_list.currow,"ITEMTX2",'');
	    ds_list.SetColumn(ds_list.currow,"QUAN",'');
	    ds_list.SetColumn(ds_list.currow,"INSTEL",ds_head.GetColumn(0,"TELF1"));
	    ds_list.SetColumn(ds_list.currow,"TEMNO",ds_head.GetColumn(0,"TEMNO2"));
	    ds_list.SetColumn(ds_list.currow,"CELLP",ds_head.GetColumn(0,"CELLP"));
	 //   ds_list.SetColumn(ds_list.currow,"INSLFN",ds_head.GetColumn(0,"NAME1"));
	    ds_list.SetColumn(ds_list.currow,"FLAG",'Y');
	    ds_list.SetColumn(ds_list.currow,"DEL",'Y');
        ds_list.SetColumn(ds_list.currow,"UNIT",'');
        ds_list.SetColumn(ds_list.currow,"CAPA",'');
        ds_list.SetColumn(ds_list.currow,"INSDT",'');
        ds_list.SetColumn(ds_list.currow,"CNFDT",'');
        ds_list.SetColumn(ds_list.currow,"CNSDT",'');
        ds_list.SetColumn(ds_list.currow,"WRKPNO",'');
        ds_list.SetColumn(ds_list.currow,"KOSTL",'');        
	    ds_list.SetColumn(ds_list.currow,"WRBTR",'');
	    ds_list.SetColumn(ds_list.currow,"S_WRBTR",'');
	    ds_list.SetColumn(ds_list.currow,"CHECK",'I');
	    ds_list.SetColumn(ds_list.currow,"STATE",'');
	    ds_list.SetColumn(ds_list.currow,"FGBN",'I');
	    
	    ds_list.SetColumn(ds_list.currow,"SEQNO","0");
	    ds_list.SetColumn(ds_list.currow,"SEQNO2","0");
	    
	    ds_list.SetColumn(ds_list.currow,"INSERT_INDC","I");
	    
	    /*
	    var arr = ds_seqno.GetColumn(0,"SEQNO");
	    ds_list.SetColumn(ds_list.currow,"SEQNO",arr);
	    ds_list.SetColumn(ds_list.currow,"SEQNO2",arr);
	    */
	    
	    CHK = 'I';
	    
//	    ds_list.fireevent = true;
  
      }
      else
      {  
       //   ds_list.fireevent = false;
          global.FRM_BOTTOM.img_msgType.imageId = "bottom_icon_caution";
          global.FRM_BOTTOM.st_msg.color = "yellow";       
          global.FRM_BOTTOM.st_msg.value = "한 건 이상 입력 할 수 없습니다.";
	      return;  
         
      }
      
	 
         
	    
	ds_list.fireevent = true;

}

/********************************************************************************
* 기      능   : Delete 
********************************************************************************/
function fn_del() 
{
 //  ds_list.DeleteRow(ds_list.row);	
    //  입력완료/전표완료된 date 삭제 불가 
    if(ds_list.GetColumn(ds_list.row,"FLAG") == 'Y' && ds_list.GetColumn(ds_list.row,"DEL") == 'Y')
	{
	   ds_list.DeleteRow(ds_list.row) ;	  
    }
    else 
    {
       global.FRM_BOTTOM.img_msgType.imageId = "bottom_icon_caution";
       global.FRM_BOTTOM.st_msg.color = "yellow";       
       global.FRM_BOTTOM.st_msg.value = "삭제 할 수 없습니다.상태를 확인해주세요.";
	   return;  
    }
}

/********************************************************************************
* 기      능   : 그리드에서 포커스이동시 항목  자동검색
********************************************************************************/
function grd_list_OnKillFocus(obj)
{  
   	//fn_afterItemtx(); 
   
}
/********************************************************************************
* 기      능   : print 40
********************************************************************************/
function fn_print() 
{  // (ds_list.FindRow("CHK", 1));
   	if(ds_list.RowCount() == 0)
	{
		gfn_showMsg("CW00010");
		return;
	}		
	if(ds_list.FindRow("CHK", 1) == -1){
		gfn_showMsg('CW00046');
		return;
	}
		

    var pspid = "";
    var seqno = "";
	//	alert("a");
    for(var i=0; i<ds_list.GetRowCount(); i++)
	{
    // alert(ds_list.rowcount);
         if(ds_list.GetColumn(i, "CHK")==1){
   /*      
	   if(ds_list.GetColumn(i,"STATE") == '3') //전표완료시 출력 x
     	{
	     global.FRM_BOTTOM.img_msgType.imageId = "bottom_icon_caution";
         global.FRM_BOTTOM.st_msg.color = "yellow";       
         global.FRM_BOTTOM.st_msg.value = "전표처리완료되었습니다. 출력 할 수 없습니다.";
         return; 
	    }
	 */ 
	   if(ds_list.GetColumn(i,"CNFDT") < 19990101) //작업완료일 미 입력시 출력 x
	    {
	     global.FRM_BOTTOM.img_msgType.imageId = "bottom_icon_caution";
         global.FRM_BOTTOM.st_msg.color = "yellow";       
         global.FRM_BOTTOM.st_msg.value = "작업완료일이 미입력되었습니다."; 
         return; 
	    }   
	    
	    if(ds_list.GetColumn(i,"CNSDT") < 19990101) //작업시작일  미 입력시 출력 x
	    {
	     global.FRM_BOTTOM.img_msgType.imageId = "bottom_icon_caution";
         global.FRM_BOTTOM.st_msg.color = "yellow";       
         global.FRM_BOTTOM.st_msg.value = "작업시작일이 미입력되었습니다."; 
         return; 
	    }
	     //var pspid = ds_master2.GetColumn(i, "PSPID");
         //var seqno =gfn_fillZero(ds_master2.GetColumn(i,"SEQNO"),2);
      }
   }
   
   	ds_list.Filter("CHK==1");
	ds_master2.copyF(ds_list);
	ds_list.unFilter();
	
     var pspid = ds_master2.GetColumn(0, "PSPID");
     var seqno = gfn_fillZero(ds_master2.GetColumn(0,"SEQNO"),1);  
     var seqno2 = gfn_fillZero(ds_master2.GetColumn(0,"SEQNO"),2);  
   
	ds_cond_p.ClearData();
	ds_cond_p.AddRow();	
	
	if(ds_master2.GetColumn(0,"SEQNO") > 9)
	{
  	 ds_cond_p.SetColumn(0,"PSPID",pspid);
	 ds_cond_p.SetColumn(0,"SEQNO",seqno);
	}
	else
	{
     ds_cond_p.SetColumn(0,"PSPID",pspid);
	 ds_cond_p.SetColumn(0,"SEQNO",seqno2);
	}
	
    //alert(ds_master2.rowcount);
    if(ds_master2.rowcount > 1) //전표완료시 출력 x
    {
	  global.FRM_BOTTOM.img_msgType.imageId = "bottom_icon_caution";
      global.FRM_BOTTOM.st_msg.color = "yellow";       
      global.FRM_BOTTOM.st_msg.value = "프로젝트/차수 별로 출력 가능합니다. 하나만 체크해주세요. ";
      return; 
    } 


     ds_cond_p.SetColumn(0,"HKONT", ds_master2.GetColumn(0,"HKONT"));
    
	//ds_master2.ClearData();
	tit_clearActionInfo();
	//tit_addSearchActionInfo("ps04:PS0410002A_S11");  //==> CsvSaerch로 변경
	tit_addCsvSearchActionInfo("ps04:PS0410002A_S11"); 
	
	
	tit_callService(
	
	 ""
        , ""        
        , "ds_cond_p=ds_cond_p"
        , "ds_master2=ds_master2"
        , ""
        , "fn_afterQuery2"
		, ""
		, ""
        ,true  // ""
        );	
}
/********************************************************************************
* 기      능   : 출력 Callback  
********************************************************************************/
function fn_afterQuery2(errCode, errMsg) {
//alert("출력!!!!");
 Dialog("PS04::PS0410002P.xml", "gbn=a", -1, -1, "Resize=true");
// trace(ds_master2.SaveXML());
  // Dialog("PS04::PS0410002P.xml", "", -1, -1,"Resize=true");
//Dialog("ps04::PS0410002P.xml", "");
}
/********************************************************************************
* 기      능   : 비고 edit여부 제어
********************************************************************************/
function fn_chgEdit(currow)
{
//	if(userGroup == "40" || ds_list.GetColumn(currow, "FLAG") == "I") return "normal";
//	else return "none";	
}

/********************************************************************************
* 기      능   : ds_list 데이터셋 컬럼값 변경 전
********************************************************************************/
function ds_list_CanColumnChange(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if(strColumnId == "QUAN") // 수량(QUAN)
	{
		  // 오버홀일때, 층수가 비어있다면 에러메시지
		  var nCapa = ds_list.GetColumn(nRow, "CAPA"); // 층수
		  
		  if((trim(ToNumber(ds_list.GetColumn(nRow,"CAPA"))) < 0 || ds_list.GetColumn(nRow,"CAPA") == '') && substr(ds_list.GetColumn(nRow,"ITEMTX"),0,1) =="F")
		  {
				var arrMsg = ["수량","층수"];
				gfn_showMsg("CW00004",arrMsg);
				ds_list.setColumn(nRow, "QUAN", '');
				return false;
		  }
	 }
}

/********************************************************************************
* 기      능   : ds_list 데이터셋 컬럼값 변경시
********************************************************************************/
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{   
	//if(strColumnID!="CHK" && ds_list.GetColumn(nRow,"FLAG") == 'Y'){
	//	ds_list.SetColumn(nRow, "CHK", 1);
	//}

    if(strColumnID == "T_ITEMTX") // 공사종류 변경시 space 처리 
    {
        ds_list.SetColumn(nRow,"UNIT",'');
        ds_list.SetColumn(nRow,"QUAN",'');
        ds_list.SetColumn(nRow,"S_WRBTR2",'');
        ds_list.SetColumn(nRow,"ITEMTX",'');
        ds_list.SetColumn(nRow,"CAPA",'');
	    ds_list.SetColumn(nRow,"WRBTR",'');
	    ds_list.SetColumn(nRow,"S_WRBTR",'');
    }
    //항목변경시 
    else if(strColumnID == "ITEMTX")
    {
    	fn_itemtx(ds_list.GetColumn(nRow,"ITEMTX"));
    }
    
    else if(strColumnId == "WRKLFN") // 작업업체명
	{
		// # 폐업업체 체크
		var nFindRow = ds_lifnr_so5.SearchRow("LIFNR='"+varNewValue+"'");
		
		if(nFindRow >= 0)
		{
			gfn_showAlert("CW10025","폐업처리된 업체입니다. 확인바랍니다.");
			ds_list.SetColumn(nRow, 'WRKLFN', "");
			return false;
		}
		
		// 존재하는 사업자번호 체크 (미존재시 팝업)
		nFindRow = ds_lifnr_grid.SearchRow("LIFNR='"+varNewValue+"'");
		
		if(nFindRow < 0)	// 사업자 번호 미존재시 팝업을 띄워준다.
		{
			var arg = "";
			var arr = gfn_openPopup("PS0410002B", true, arg);
			
			if(Length(arr) > 0)
			{
				ds_list.SetColumn(nRow, "WRKLFN", arr[0]);
			}

		}
		
	}
	else if(strColumnId == "HKONT")	// 사용계정
	{
		// 시행예산
		ds_list_temp.ClearData();
		ds_list_temp.InsertRow(0);
		ds_list_temp.CopyRow(0, ds_list, nRow);
		
		tit_clearActionInfo();
		tit_addSearchActionInfo("ps04:PS0410002A_S19");                 
		tit_callService(
		  ""
		, ""
		, "ds_list_temp=ds_list_temp"
		, "ds_netwr=ds_netwr"
		  , ""
		  , ""//"ufn_afterdaesuCount"
		  , ""
		   , ""
		   , true);
		
		if(ds_netwr.rowcount > 0)
		{
			ds_list.fireevent = false;
			ds_list.SetColumn(nRow, "NETWR", ds_netwr.GetColumn(0, "NETWR"));
			ds_list.fireevent = true;
		}
		
		// 예산대비실적 변경
		ufn_CalSumTwbtr(nRow);
		
	}
	else if(strColumnId == "CAPA") // 층수(CAPA)
	{
		fv_nRow = nRow;
		var sItemtx   = ds_list.getColumn(nRow, "ITEMTX");
		var nSumTwbtr = 0;
		var arr = 0;
		ds_list.SetColumn(0,"ITEMTX2",sItemtx);

		tit_clearActionInfo();
		tit_addSearchActionInfo("ps04:PS0410002A_S7");                 
		tit_callService(
		  ""
		, ""
		, "ds_list=ds_list"
		, "ds_code4=ds_code4"
		  , ""
		  , ""//"ufn_afterdaesuCount"
		  , ""
		   , ""
		   , true);          
		
		if(ds_list.GetColumn(nRow, "CAPA") > 0 && substr(ds_list.GetColumn(nRow,"ITEMTX"),0,1) =="F")	// 층수 기입시
		{
			var nWrbtr    = ds_code4.GetColumn(0,"WRBTR");		// 단가
			var nCapa     = ds_list.GetColumn(nRow,"CAPA");  		// 층수
			var nCalWrbtr = ToNumber(nWrbtr) + (ToNumber(nCapa) - 15 ) * 8000;
			
			ds_list.SetColumn(nRow,"WRBTR", nCalWrbtr);  	// 계산된 단가
			
			if(ds_list.GetColumn(nRow,"QUAN") > 0)	// 수량이 존재할 경우
			{
				var nQuan = ds_list.GetColumn(nRow, "QUAN");
				arr   = nCalWrbtr * nQuan;
				
				//금액계산
				ds_list.SetColumn(nRow,"S_WRBTR",arr);  
				ds_list.SetColumn(nRow,"S_WRBTR2",arr);

			}
		}
		else
		{
			ds_list.SetColumn(nRow,"S_WRBTR",0);  
			ds_list.SetColumn(nRow,"S_WRBTR2",0);
			ds_list.SetColumn(nRow,"WRBTR",0);
			ds_list.SetColumn(nRow,"WRBTR",0);

		}
		
		//금액계산
		ds_list.SetColumn(nRow,"S_WRBTR",arr);  
		ds_list.SetColumn(nRow,"S_WRBTR2",arr);
		
		// 예산대비실적 변경
		ufn_CalSumTwbtr(nRow);
		
	}
	
    else if(strColumnId == "QUAN") // 수량(QUAN)
	{
		var sTxCode   = substr(ds_list.GetColumn(nRow, "T_ITEMTX"),0,1);	// 공사종류의 첫자리
		var nSumTwbtr = 0;
		
		if(sTxCode == "H")	// 비표준공사
		{
			// 수량 * 단가 = 금액
			var nQuan  = varNewValue;
			var nWrbtr = ds_list.GetColumn(nRow, "WRBTR");
			
			//ds_list.fireevent = false;
			ds_list.SetColumn(nRow, "S_WRBTR", ToNumber(nQuan)*ToNumber(nWrbtr));
			ds_list.SetColumn(nRow, "S_WRBTR2", ToNumber(nQuan)*ToNumber(nWrbtr));
			//ds_list.fireevent = true;
		}
		else	//그외 구분
		{
			if(ds_list.GetColumn(nRow,"QUAN") > 0)	// 수량 기입시
			 {
				 var nQuan  = ds_list.GetColumn(nRow,"QUAN");	// 수량
				 var nWrbtr = ds_list.GetColumn(nRow,"WRBTR");	// 단가
				 var arr    = ds_list.GetColumn(nRow,"WRBTR") * ds_list.GetColumn(nRow,"QUAN"); //금액
				 //var arr2   = ds_list.GetColumn(nRow,"CAPA"); //층
				 
				 ds_list.SetColumn(nRow,"S_WRBTR2", arr);
				 ds_list.SetColumn(nRow,"S_WRBTR", arr);
			}
			else	// 수량 미기입시
			{
				 ds_list.SetColumn(nRow,"S_WRBTR", 0);  
				 ds_list.SetColumn(nRow,"S_WRBTR2",0);
			}
		}
		
		// 예산대비실적 변경
		ufn_CalSumTwbtr(nRow);
		 
	}
	else if(strColumnId == "WRBTR")	// 단가(WRBTR)
	{
		var sTxCode   = substr(ds_list.GetColumn(nRow, "T_ITEMTX"),0,1);	// 공사종류의 첫자리
		var nSumTwbtr = 0;
		if(sTxCode == "H")	// 비표준공사
		{
			// 수량 * 단가 = 금액
			var nQuan  = ds_list.GetColumn(nRow, "QUAN");
			var nWrbtr = varNewValue;
			
			//ds_list.fireevent = false;
			ds_list.SetColumn(nRow, "S_WRBTR", ToNumber(nQuan)*ToNumber(nWrbtr));
			ds_list.SetColumn(nRow, "S_WRBTR2", ToNumber(nQuan)*ToNumber(nWrbtr));
			//ds_list.fireevent = true;
			
			// 예산대비실적 변경
			ufn_CalSumTwbtr(nRow);
			
		}
	}
}
   
 /*********************************************************************************
* 기      능   :  그리드에서 콤보 변경시 다음콤보값 변경
********************************************************************************/
function fn_change_code2(currow)
{
    //alert("a");
  if(rd_gbn.Value== 'A')
   {
      var code = 'A0000';
      return "HIG_CODE=" + quote( code) ;
   }
   else if(rd_gbn.Value== 'B')
   {
      var code = 'B0000';
      return "HIG_CODE=" + quote( code) ;
   }
   else if(rd_gbn.Value== 'C')
   {
      var code = 'C0000';
      return "HIG_CODE=" + quote( code) ;
   }
   else if(rd_gbn.Value== 'D')
   {
      var code = 'D0000';
      return "HIG_CODE=" + quote( code) ;
   }
   else if(rd_gbn.Value== 'E')
   {
      var code = 'E0000';
      return "HIG_CODE=" + quote( code) ;
   }
   else if(rd_gbn.Value== 'F')
   {
      var code = 'F0000';
      return "HIG_CODE=" + quote( code) ;
   }
   else if(rd_gbn.Value== 'G')
   {
      var code = 'G0000';
      return "HIG_CODE=" + quote( code) ;
   }
   else if(rd_gbn.Value== 'H')
   {
      var code = 'H0000';
      return "HIG_CODE=" + quote( code) ;
   }

}

function fn_change_code3(currow)
{
	return "HIG_CODE=" + quote(ds_list.GetColumn(currow,"T_ITEMTX"));
}



function grd_list_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex)
{
	//currRow = ds_list.row;
	//if(ds_list.GetColumn(nRow,"FLAG") == 'Y')
	//{
    //	fn_afterItemtx(); 
    //}
}


/********************************************************************************
* 기      능   : 롱텍스트 저장
********************************************************************************/
function ufn_saveLongText(dsObj, txtDesc, tabId, tabColName, tabObj) {
	//alert("롱롱롱");
	var len = 0;
	var str = array();
		
		
	//str = gfn_substrToArray(txtDesc, 72);
	str = ufn_substrToArray(txtDesc, 72);
	//str = ufn_substrToArray(txtDesc, 10);
	
	//alert(str[1]);
	
	len = length(str);	

//alert(str);	
//alert(len);

 
	dsObj.clearData();
	for(var i=0; i<len; i++) 
	{
	    
//alert(i);
//alert(str[i]);
		dsObj.addRow();
		dsObj.SetColumn(i, "TEXT", str[i]);		
		dsObj.SetColumn(i, "FLAG", "I");
		
	}
		
//alert( str[0]) ;	
/*
alert("[rowCount]=="+dsObj.Rowcount());
for (var i=0; i<dsObj.RowCount();i++)
{
	alert( "[dsObj.getColumn]=="+dsObj.getColumn(i, "TEXT") ) ;
}
*/

	
	var result = false;
	tit_callService(
        "COMM_ACT"
        , "saveLongText"
        , "ds_list="+ quote(dsObj.id)
        , ""
        , "TDID=" + quote(tabId) + " TDNAME=" 
				+ quote(tabColName) +" TDOBJECT=" + quote(tabObj)
		, ""
        , true
        , true
        , true);
    if (_ETEXT == "")
    {
		result = true;
    }
    
	return result;
}


/********************************************************************************
* 기      능   : 롱텍스트 읽기
********************************************************************************/
function ufn_getLongText(dsObj, tabObj, tabColName, tabId) {
	//alert("요기");
	if ( length( tabObj) == 0 || length( tabColName) == 0 || length( tabId) == 0) {
		return "";
	}

	tit_callService(
        "COMM_ACT"
        , "getLongText2"
        , ""
        , ""
        , "TDID=" + quote(tabId) + " TDNAME=" 
				+ quote(tabColName) +" TDOBJECT=" + quote(tabObj)
        , ""
        , false
        , true
        , true);
    
    nRow = dsObj.addRow();    
    dsObj.setColumn(nRow, "TDOBJECT", tabObj);
    dsObj.setColumn(nRow, "TDNAME", tabColName);
    dsObj.setColumn(nRow, "TDID", tabId);
    
    //alert(_LONGTEXT);
    //ufn_replaceSpecialChar(_LONGTEXT);  //문자 변환
    
    dsObj.setColumn(nRow, "TEXT", _LONGTEXT);
    
	return _LONGTEXT;
	
}


/******************************************************
* 주어진 글자를 len 만큼 잘라서 배열로 return
* @param  str  주어진 글자
* @param  len  자리수
******************************************************/
function ufn_substrToArray(str, len) {
	var rtn = array();
	var temp = "";
	var tCnt = 0;
	var cnt = 0;
		
	
	//===============================================================
	//===============================================================
	var tmp_str;	
	
	var lt_cnt = 0;
	var lt_cnt2 = 0;
	var chk = "";
		
	str = replace(str,chr(13)+chr(10),"|");	

	for( var i = 0; i < length(str); i++ ) 
	{   	
		chk = "";
		if ( charAt( str, i) == "|" ) 
		{
			lt_cnt = 0;
			lt_cnt2++;
			chk = "X";
			tmp_str = "";			
		}
		else
		{
			if ( lengthb(charAt( str, i)) == 2 )
			{
				lt_cnt = lt_cnt + 2;
				tmp_str = charAt( str, i);
			}
			else
			{
				lt_cnt = lt_cnt + 1;
				tmp_str = charAt( str, i);
			}
		}
				
		temp += tmp_str;	
				
		if ( lt_cnt == len )
		{
			temp += "";	
			lt_cnt = 0;
			lt_cnt2++;
			chk = "X";
		}
			
		if ( chk == "X" )
		{			
			if ( length( temp ) > 0 ) 
			{
				rtn[lt_cnt2 - 1] = temp;			
				temp = "";
			}
			else
			{
				lt_cnt2 = lt_cnt2 - 1;					
			}			
		}
		else if ( length(str) == i + 1 )
		{
			rtn[lt_cnt2] = temp;
			temp = "";
		}
	}
	return rtn;	
	
}



/********************************************************************************
* 기      능   : 삭제  -- 작업 완료일 리셋 
********************************************************************************/
function fn_delete() 
{

  if(ds_list.FindRow("CHK", 1)==-1){
		gfn_showMsg('CW00046');
		return;
   }
	
   for(var i=0; i<ds_list.GetRowCount(); i++){
		if(ds_list.GetColumn(i, "CHK")==1){
		    if(ds_list.GetColumn(i, "FLAG") == 'Y')  // PM/설치협력사 입력 시에만 삭제 가능 
		        {
                  ds_list.Filter("CHK==1");
	              ds_list2.copyF(ds_list);
	              ds_list.unFilter();

		        }
		     else if(ds_list.GetColumn(i,"STATE") == '3')
   	            {
		          global.FRM_BOTTOM.img_msgType.imageId = "bottom_icon_caution";
                  global.FRM_BOTTOM.st_msg.color = "yellow";       
                  global.FRM_BOTTOM.st_msg.value = " 전표 완료 시 삭제 할 수 없습니다.";
		          return;  
		        }
		     else
		       {
     		     global.FRM_BOTTOM.img_msgType.imageId = "bottom_icon_caution";
                 global.FRM_BOTTOM.st_msg.color = "yellow";       
                 global.FRM_BOTTOM.st_msg.value = " 삭제 할 수 없습니다. 상태를 확인해 주세요.";
		         return;  
		       }
	      }
	  }
      tit_clearActionInfo();
      tit_addMultiActionInfo("ps04:PS0410002A_D2"); // ZPST0117 삭제
	  tit_addMultiActionInfo("ps04:PS0410002A_D3");  // ZPST0117L 삭제
	  
	  tit_callService(
	    ""
	  , ""
	  , "ds_list=ds_list2"
	  , ""
	  , ""
	  , "fn_afterDelete"
	  , true);

}
/********************************************************************************
* 기      능   : 삭제  Callback  
********************************************************************************/
function fn_afterDelete(errCode, errMsg) {
	if ( errCode!= 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
		fn_query();
	}
}

}
// 달력 처리 부분 
/********************************************************************************
* 기      능   : 그리드에서 날짜 입력시 
********************************************************************************/
function grd_list_OnExpandEdit(obj,nRow,nCell,strVal,nPivotIndex)
{
	if(nCell == 14 || nCell == 15 || nCell == 16)	// 날짜
	{
		var rect = obj.GetCellRect(nRow, ncell);
		var widths = this.Width - 160;
		var heights = this.Height - 160;
	
		cal_temp.top = rect[1] + 60;
		if (cal_temp.top > heights)
		{
			cal_temp.top = heights;
		}
		cal_temp.Left = rect[0] + 10;
		if (cal_temp.Left > widths)
		{
			cal_temp.Left = widths;
		}	
		
		cal_temp.Visible = true;
	
		
		if(nCell == 14)	{
			cal_temp.value = ds_list.getColumn(nRow, "INSDT");
		} else if(nCell == 15)	{
			cal_temp.value = ds_list.getColumn(nRow, "CNSDT");
		} else if(nCell == 16)	{
			cal_temp.value = ds_list.getColumn(nRow, "CNFDT");	
		}		
		cal_temp.SetFocus();
	}
	else if(nCell == 8)	//	작업업체
	{
		//var arg = ds_list.GetColumn(nRow, "WRKLFN");
		var arg = "";
		var arr = gfn_openPopup("PS0410002B", true, arg);
		
		if(Length(arr) > 0)
		{
			//ds_list.fireevent = false;
			ds_list.SetColumn(nRow, "WRKLFN", arr[0]);
			//ds_list.fireevent = true;
		}
		
	}
}
/********************************************************************************
* 기      능   : 달력에서 일자 선택했을 경우 
********************************************************************************/
function cal_temp_OnDayClick(obj,strText)
{
	gfn_clearMsgBar();

	if(grd_list.GetClickedCell() == 14)	{
		ds_list.setColumn(ds_list.row, "INSDT", strText);
	} else if(grd_list.GetClickedCell() == 15)	{
		ds_list.setColumn(ds_list.row, "CNSDT", strText);
	}else if(grd_list.GetClickedCell() == 16)	{
		ds_list.setColumn(ds_list.row, "CNFDT", strText);
	}		
	
	obj.Visible = false;
}
/********************************************************************************
* 기      능   : 달력에서 포커스 잃었을 경우 
********************************************************************************/
function cal_temp_OnKillFocus(obj)
{
	obj.Visible = false;
}

 /*********************************************************************************
* 기      능   :  구분 변경시 SPACE
********************************************************************************/
function rd_gbn_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    if(  ds_list.GetColumn(ds_list.currow,"CHECK") == 'I')  // 신규 입력 시 
    {
        ds_list.SetColumn(ds_list.currow,"UNIT",'');
        ds_list.SetColumn(ds_list.currow,"QUAN",'');
        ds_list.SetColumn(ds_list.currow,"S_WRBTR2",'');
        ds_list.SetColumn(ds_list.currow,"T_ITEMTX",'');
        ds_list.SetColumn(ds_list.currow,"ITEMTX",'');
        ds_list.SetColumn(ds_list.currow,"CAPA",'');
	    ds_list.SetColumn(ds_list.currow,"WRBTR",'');
	    ds_list.SetColumn(ds_list.currow,"S_WRBTR",'');
  	}
}
 /*********************************************************************************
* 기      능   :  사무소 filter
********************************************************************************/
function grd_list_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
   if(nCell == 6) //사무소
    {  
    	ds_kostl.Filter("CODE='E100' OR substr(CODE,0,1)='G' OR substr(CODE,0,1)='H'");
    }
    
}

//수량입력 후 enter 시 금액 자동계산
function grd_list_OnEnterDown(obj,nRow,nCell,strVal,nPivotIndex)
{
	if(nCell == 17) // 층수(CAPA)
	{
		fv_nRow = nRow;
		var sItemtx = ds_list.getColumn(nRow, "ITEMTX");
		var nSumTwbtr = 0;
		
		ds_list.SetColumn(0,"ITEMTX2",sItemtx);
			
		tit_clearActionInfo();
		tit_addSearchActionInfo("ps04:PS0410002A_S7");                 
		tit_callService(
		  ""
		, ""
		, "ds_list=ds_list"
		, "ds_code4=ds_code4"
		  , ""
		  , ""//"ufn_afterdaesuCount"
		  , ""
		   , ""
		   , true);          
		
		if(ds_list.GetColumn(nRow, "CAPA") > 0 && substr(ds_list.GetColumn(nRow,"ITEMTX"),0,1) =="F")	// 층수 기입시
		{
			var nWrbtr    = ds_code4.GetColumn(0,"WRBTR");		// 단가
			var nCapa     = ds_list.GetColumn(nRow,"CAPA");  		// 층수
			var nCalWrbtr = ToNumber(nWrbtr) + (ToNumber(nCapa) - 15 ) * 8000;
			
			ds_list.SetColumn(nRow,"WRBTR", nCalWrbtr);  	// 계산된 단가
			
			if(ds_list.GetColumn(nRow,"QUAN") > 0)	// 수량이 존재할 경우
			{
				var nQuan = ds_list.GetColumn(nRow, "QUAN");
				var arr   = nCalWrbtr * nQuan;

				//금액계산
				ds_list.SetColumn(nRow,"S_WRBTR",arr);  
				ds_list.SetColumn(nRow,"S_WRBTR2",arr);
			}
		}
		else
		{
			ds_list.SetColumn(nRow,"S_WRBTR", 0);  
			ds_list.SetColumn(nRow,"S_WRBTR2", 0);
			ds_list.SetColumn(nRow,"WRBTR", 0);
		}
		
		// 예산대비실적 변경
		ufn_CalSumTwbtr(nRow);
		
	}
    else if(nCell == 19) // 수량(QUAN)
	{
		var sTxCode = substr(ds_list.GetColumn(nRow, "T_ITEMTX"),0,1);	// 공사종류의 첫자리
		var nSumTwbtr = 0;
		
		if(sTxCode == "H")	// 비표준공사
		{
			// 수량 * 단가 = 금액
			var nQuan  = strVal;
			var nWrbtr = ds_list.GetColumn(nRow, "WRBTR");
			
				
			ds_list.fireevent = false;
			ds_list.SetColumn(nRow, "S_WRBTR", ToNumber(nQuan)*ToNumber(nWrbtr));
			ds_list.SetColumn(nRow, "S_WRBTR2", ToNumber(nQuan)*ToNumber(nWrbtr));
			ds_list.fireevent = true;
			
		}
		else	//그외 구분
		{
			  // 오버홀일때, 층수가 비어있다면 에러메시지
			  var nCapa = ds_list.GetColumn(nRow, "CAPA"); // 층수
			  
			  if((trim(ToNumber(ds_list.GetColumn(nRow,"CAPA"))) < 0 || ds_list.GetColumn(nRow,"CAPA") == '') && substr(ds_list.GetColumn(nRow,"ITEMTX"),0,1) =="F")
			  {
					var arrMsg = ["수량","층수"];
					gfn_showMsg("CW00004",arrMsg);
					ds_list.setColumn(nRow, "QUAN", '');
					return;
			  }
			  
			  nSumTwbtr = 0;

			  if(ds_list.GetColumn(nRow,"QUAN") > 0)	// 수량 기입시
			  {
				 var nQuan  = ds_list.GetColumn(nRow,"QUAN");	// 수량
				 var nWrbtr = ds_list.GetColumn(nRow,"WRBTR");	// 단가
				 var arr    = (ds_list.GetColumn(nRow,"WRBTR")) * ds_list.GetColumn(nRow,"QUAN"); //금액
				 var arr2   = ds_list.GetColumn(nRow,"CAPA"); //층
				 
				 if(ds_list.GetColumn(nRow,"CAPA") <> 15 && substr(ds_list.GetColumn(nRow,"ITEMTX"),0,1) =="F") //오버홀 때 15층 기준으로 +-8000
				 {  
					var arr3 = ToNumber(nWrbtr) + (ToNumber(arr2) - 15 ) * 8000 ;

					ds_list.SetColumn(nRow,"S_WRBTR2", arr);
					ds_list.SetColumn(nRow,"S_WRBTR", arr); 
				
				 }
				 else
				 {
					ds_list.SetColumn(nRow,"S_WRBTR",arr);  
					ds_list.SetColumn(nRow,"S_WRBTR2",arr);  
				 }
		   
			 }
			 else	// 수량 미기입시
			 {
				 ds_list.SetColumn(nRow,"S_WRBTR",0);  
				 ds_list.SetColumn(nRow,"S_WRBTR2",0);
			 } 
			
				/*else
				{   //alert("d");
					fn_afterItemtx();
				}
				*/

		}
		
		// 예산대비실적 변경
		ufn_CalSumTwbtr(nRow);
		  
	}
	else if(nCell == '20')	// 단가(WRBTR)
	{
		var sTxCode = substr(ds_list.GetColumn(nRow, "T_ITEMTX"),0,1);	// 공사종류의 첫자리

		if(sTxCode == "H")	// 비표준공사
		{
			// 수량 * 단가 = 금액
			var nQuan  = ds_list.GetColumn(nRow, "QUAN");
			var nWrbtr = strVal;
			var nSumTwbtr = 0;
			
			ds_list.fireevent = false;
			ds_list.SetColumn(nRow, "S_WRBTR", ToNumber(nQuan)*ToNumber(nWrbtr));
			ds_list.SetColumn(nRow, "S_WRBTR2", ToNumber(nQuan)*ToNumber(nWrbtr));
			ds_list.fireevent = true;
			
			// 예산대비실적 변경
			ufn_CalSumTwbtr(nRow);
		}
	}
	
//	trace(ds_list.SaveXML());
	
}

/********************************************************************************
* 기      능   : 사무소 별 협력업체 필터 
********************************************************************************/
function cb_zzactss_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{ 
	
   if(userGroup == "40"){
       ds_cond.SetColumn(0,"LIFNR",''); }

    if(ds_cond.GetColumn(0,"ZZACTSS") == '')
    {
       ds_lifnr.UnFilter();
    }
    else
    {
      var arr = ds_cond.GetColumn(0,"ZZACTSS");
	  ds_lifnr.Filter("ZZACTSS ==" +quote(arr));
    }
    
}

/*
function fn_afterItemtx2(errCode, errMsg)
{
	if(ds_list.GetColumn(fv_nRow, "CAPA") > 0 && substr(ds_list.GetColumn(fv_nRow,"ITEMTX"),0,1) =="F")	// 층수 기입시
	{
		var nWrbtr    = ds_code4.GetColumn(0,"WRBTR");		// 단가
		var nCapa     = ds_list.GetColumn(fv_nRow,"CAPA");  		// 층수
		var nCalWrbtr = ToNumber(nWrbtr) + (ToNumber(nCapa) - 15 ) * 8000;
		
		ds_list.SetColumn(fv_nRow,"WRBTR", nCalWrbtr);  	// 계산된 단가
		
		if(ds_list.GetColumn(fv_nRow,"QUAN") > 0)	// 수량이 존재할 경우
		{
			var nQuan = ds_list.GetColumn(fv_nRow, "QUAN");
			var arr   = nCalWrbtr * nQuan;
			
			//금액계산
			ds_list.SetColumn(fv_nRow,"S_WRBTR",arr);  
			ds_list.SetColumn(fv_nRow,"S_WRBTR2",arr);  
		}
	}
	else
	{
		ds_list.SetColumn(fv_nRow,"S_WRBTR",'');  
		ds_list.SetColumn(fv_nRow,"S_WRBTR2",'');
		ds_list.SetColumn(fv_nRow,"WRBTR",'');
	}
}

var arg = "pjt="+quote(ed_pjt.Text);
	gfn_openPopup("CS9601002A", true, arg);
*/


/********************************************************************************
* 기      능   : 예산대비실적 계산 함수
********************************************************************************/
function ufn_CalSumTwbtr(nRow)
{
	// 기존 예산대비 실적 가져오기
	ds_list_temp.ClearData();
	ds_list_temp.InsertRow(0);
	ds_list_temp.CopyRow(0, ds_list, nRow);
	
	tit_clearActionInfo();
	tit_addSearchActionInfo("ps04:PS0410002A_S18");                 
	tit_callService(
	  ""
	, ""
	, "ds_list_temp=ds_list_temp"
	, "ds_sum_twbtr=ds_sum_twbtr"
	  , ""
	  , ""//"ufn_afterdaesuCount"
	  , ""
	   , ""
	   , true);
	   
	   
	var sPspid       = ds_list.GetColumn(nRow, "PSPID");
	var sHkont       = ds_list.GetColumn(nRow, "HKONT");
	var nCurSumTwbtr = ToNumber(ds_sum_twbtr.getColumn(0, "SUM_TWBTR"));
	var nSum         = 0;
	
	// 현재 변경한 Row의 예산대비실적을 프로젝트, 사용계정이 같은 Row에 예산대비실적 update
	for(var i=0 ; i < ds_list.rowcount ; i++)
	{
		var sCurPspid = ds_list.getColumn(i, "PSPID");
		var sCurHkont = ds_list.GetColumn(i, "HKONT");
		
		//프로젝트, 사용계정이 같은 데이터일 경우, 예산대비실적 합계 변경( 구분은 고정 )
		if(sCurPspid == sPspid && sCurHkont == sHkont)
		{
			var nPreSwrbtr = ds_list.GetOrgColumn(i, "S_WRBTR2");	// 이전 금액
			var nCurSwrbtr = ds_list.GetColumn(i, "S_WRBTR2");		// 현재 금액
			
			// 금액 = 현재금액 - 이전금액
			nSum += ToNumber(nCurSwrbtr) - ToNumber(nPreSwrbtr);
			
			//trace(ToNumber(nCurSwrbtr));
			//trace(ToNumber(nPreSwrbtr));
			//trace("------------------");
			//trace(nSum);
			//trace("------------------");
		}
		
	}
	
	
	var nFinalSum = ToNumber(nCurSumTwbtr) + ToNumber(nSum);
	
	for(var i=0 ; i < ds_list.rowcount ; i++)
	{
		var sCurPspid = ds_list.getColumn(i, "PSPID");
		var sCurHkont = ds_list.GetColumn(i, "HKONT");
		
		//프로젝트, 사용계정이 같은 데이터일 경우, 예산대비실적 합계 변경( 구분은 고정 )
		if(sCurPspid == sPspid && sCurHkont == sHkont)
		{
			ds_list.fireevent = false;
			ds_list.SetColumn(i, "SUM_TWBTR", nFinalSum);
			ds_list.fireevent = true;
		}
	}
	
	
	
	
}
]]></Script>
</Window>