<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="WB0106001A" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="기준&#32;및&#32;표준코드&#32;관리" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_gubun">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="LANG" size="256" summ="default" type="STRING"/>
					<record>
						<GUBUN></GUBUN>
						<LANG></LANG>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list">
				<Contents>
					<colinfo id="CODE1" size="256" summ="default" type="STRING"/>
					<colinfo id="CTEXT1" size="256" summ="default" type="STRING"/>
					<colinfo id="LANG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_lang_cd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<record>
						<CODE>ko</CODE>
						<CODE_NAME>Korean</CODE_NAME>
					</record>
					<record>
						<CODE>zh</CODE>
						<CODE_NAME>Chinese</CODE_NAME>
					</record>
					<record>
						<CODE>en</CODE>
						<CODE_NAME>English</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="30" Height="30" Id="Shape0" Left="0" LineColor="user1" Right="978" TabOrder="1" Top="0" Type="Rectangle" Width="978"></Shape>
		<Static Align="Right" Height="20" Id="Static0" Left="5" Style="sty_lb_search" TabOrder="2" Text="구분&#32;" Top="5" VAlign="Middle" Width="80"></Static>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="GUBUN" DataColumn="CODE_NAME" Height="20" Id="cb_gubun" InnerDataset="ds_gubun" Left="86" Style="sty_ipt_search" TabOrder="3" Top="4" Width="120"></Combo>
		<Grid AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="552" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="490" Id="grd_list" InputPanel="FALSE" Left="10" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_list_OnCellDblClick" OnHeadClick="grd_list_OnHeadClick" Right="968" RowHeight="20" Style="sty_grid" TabOrder="4" TabStop="true" Top="62" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="958">
			<contents>
				<format id="Default">
					<columns>
						<col width="40"/>
						<col width="256"/>
						<col width="136"/>
						<col width="130"/>
						<col width="130"/>
						<col width="130"/>
						<col width="130"/>
						<col width="22"/>
					</columns>
					<head>
						<cell col="0" display="text" font="굴림,9" text="No">
							<cell align="center" col="0" color="user21" display="text" font="굴림,9" rowspan="2" text="No"/>
						</cell>
						<cell col="1" display="text" font="굴림,9" text="코드명">
							<cell align="center" col="0" color="user21" display="text" font="굴림,9" rowspan="2" text="코드"/>
						</cell>
						<cell col="2" display="text" font="굴림,9" text="코드">
							<cell align="center" col="0" color="user21" display="text" font="굴림,9" rowspan="2" text="코드명"/>
						</cell>
						<cell col="3" colspan="5" display="text">
							<cell align="center" col="0" color="user21" colspan="5" display="text" font="굴림,9" text="비고"/>
						</cell>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
						<cell align="left" bkcolor2="user22" col="1" colid="CTEXT1" display="text"/>
						<cell align="center" bkcolor2="user22" col="2" colid="CODE1" display="text"/>
						<cell align="left" bkcolor2="user22" col="3" colspan="5" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="Button0" ImageID="btn_sub_04" Left="897" LeftMargin="12" OnClick="ufn_openReg" Style="sty_btn" TabOrder="5" Text="새로등록" Top="38" Transparent="TRUE" Width="71"></Button>
		<Static Align="Right" Height="20" Id="Static1" Left="208" Style="sty_lb_search" TabOrder="6" Text="언어&#32;" Top="5" VAlign="Middle" Width="80"></Static>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="LANG" DataColumn="CODE_NAME" Height="20" Id="cb_lang" InnerDataset="ds_lang_cd" Left="289" Style="sty_ipt_search" TabOrder="7" Top="4" Width="120"></Combo>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	gfn_initForm();	
	
	fn_initCombo();
	cb_gubun.Index=0;
	cb_lang.Index=0;
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {

}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() {

	tit_clearActionInfo();
	tit_addSearchActionInfo("wb01:WB0106001A_S2");
	
	tit_callService(
        ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_list=ds_list"
        , ""
        , "fn_afterQuery"
        , true);
}
/********************************************************************************
* 기      능   : 삽입 20
********************************************************************************/
function fn_insert() {
	// 그리드에 row 추가 
	var newRow = gfn_addGridRow(grd_list, -1, "FLAG");
}
/********************************************************************************
* 기      능   : Delete 
********************************************************************************/
function fn_delete() {
	if ( ds_list.rowCount() < 1 ) {
		// 삭제할 정보 없음. 
		
		return;
	}
	
	// Grid 삭제 처리 
	gfn_deleteGridRow( grd_list, ds_list.row, "FLAG" );
}
/********************************************************************************
* 기      능   : 저장 
********************************************************************************/
function fn_save() {

}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}
/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	// Excel Export 
	gfn_saveToExcel(grd_list, true );
}
/********************************************************************************
* 기      능   : 접수 5
********************************************************************************/
function fn_receipt() {

}
/********************************************************************************
* 기      능   : 승인 10
********************************************************************************/
function fn_approval() {

}
/********************************************************************************
* 기      능   : d결재 15
********************************************************************************/
function fn_decide() {

}
/********************************************************************************
* 기      능   : 취소 35
********************************************************************************/
function fn_cancel() {

}
/********************************************************************************
* 기      능   : print 40
********************************************************************************/
function fn_print() {

}
/********************************************************************************
* 기      능   : 발행 50
********************************************************************************/
function fn_out() {

}
/********************************************************************************
* 기      능   : 신청 55
********************************************************************************/
function fn_request() {

}
/********************************************************************************
* 기      능   : 전송 60
********************************************************************************/
function fn_trans() {

}
/********************************************************************************
* 기      능   : 반송 65
********************************************************************************/
function fn_sendback() {

}
/********************************************************************************
* 기      능   : 계산 70
********************************************************************************/
function fn_cal() {

}
/********************************************************************************
* 기      능   : 복사 75
********************************************************************************/
function fn_copy() {

}
/********************************************************************************
* 기      능   : 확인 80
********************************************************************************/
function fn_confirm() {

}
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
	// 메시지 처리 
	gfn_showSearchMsg(grd_list);
}
/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
	if ( ds_error.rowcount() > 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
	}
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/
function fn_initCombo() {
	tit_clearActionInfo();
	tit_addSearchActionInfo("wb01:WB0106001A_S1");
	
	tit_callService(
        ""
        , ""
        , ""
        , "ds_gubun=ds_gubun"
        , ""
        , ""
        , true
        , true
        , true);
}
function ufn_openReg() {
	var arg;
	gfn_openPopup("WB0106001B",true,arg);
}
//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if ( nCell == 0 ) {
		// 그리드 표시할 컬럼 선택 
		gfn_selectGridCol(obj);
	} else {
		// 그리드 정렬 처리 
		gfn_sortGrid(obj,nCell);
	}
}
/********************************************************************************
* 기      능   : 데이터셋 값 변경 시 - Flag 처리 
********************************************************************************/
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	gfn_changeFlag( obj, strColumnID, nRow, "FLAG" );
}

/********************************************************************************
* 기      능   : 그리드 더블클릭시 
********************************************************************************/
function grd_list_OnCellDblClick(obj, nRow, nCell, nX, nY)
{
	var arg = "paramCode1="+quote(ds_list.GetColumn(ds_list.currow,"CODE1"));
	arg += " paramCode2="+quote(ds_list.GetColumn(ds_list.currow,"LANG"));
	gfn_openPopup("WB0106001B",true,arg);
}

]]></Script>
</Window>