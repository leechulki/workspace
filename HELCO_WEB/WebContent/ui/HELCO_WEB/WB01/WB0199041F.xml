<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="394" Id="WB0199041F" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="주소록관리" Top="8" Ver="1.0" Width="480" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_list">
				<Contents></Contents>
			</Dataset>
		</Datasets>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="386" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" FixedColSizing="TRUE" HeadBorder="Flat" HeadHeight="20" Height="342" Id="grd_list" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" OnHeadClick="grd_list_OnHeadClick" Right="472" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="44" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="464">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="18"/>
						<col fix="left" width="20"/>
						<col fix="left" width="80"/>
						<col width="100"/>
						<col width="228"/>
					</columns>
					<head>
						<cell align="center" col="0" display="checkbox" edit="checkbox" font="Default,9" text="0" TrimType="Both"/>
						<cell align="center" col="1" display="text" font="Default,9" TrimType="Both"/>
						<cell align="center" col="2" display="text" font="Default,9" text="사용자&#32;ID" TrimType="Both"/>
						<cell align="center" col="3" display="text" font="Default,9" text="사용자&#32;명" TrimType="Both"/>
						<cell align="center" col="4" display="text" font="Default,9" text="업체명" TrimType="Both"/>
					</head>
					<body>
						<cell align="left" bkcolor2="user22" col="0" colid="CHK" display="checkbox" edit="checkbox"/>
						<cell align="left" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" display="text"/>
						<cell align="left" bkcolor2="user22" col="2" colid="JUSORNAM" display="text"/>
						<cell align="left" bkcolor2="user22" col="3" colid="USERNAME" display="text"/>
						<cell align="left" bkcolor2="user22" col="4" colid="VEND_NAME" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Static Color="user5" Font="굴림,10,Bold" Height="20" Id="Static0" Left="28" TabOrder="1" Text="search&#32;user" Top="8" VAlign="Middle" Width="176"></Static>
		<Div Height="36" Id="div_btn" TabOrder="1" Text="Div0" Url="WB01::CommBtnForm.xml" Width="480">
			<Contents></Contents>
		</Div>
		<Static Height="24" Id="st_title" Left="624" TabOrder="4" Text="주소록&#32;검색" Top="64" Visible="FALSE" Width="152"></Static>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 주소록 관리 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initFormNotAuth("WB0199041F", st_title.value, "20,25,30,45,80");
	
	fn_query();
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {

}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return true;
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 
********************************************************************************/
function fn_query() {
	var arr = split(G_ORG_USER_INFO, "^", true);

	tit_clearActionInfo();
	tit_addSearchActionInfo("wb01:WB0199041F_S1");	// 주소록 조회 
	
	tit_callService(
        ""
        , ""
        , ""
        , "ds_list=ds_list"
        , "USER_ID=" + quote(arr[0])
        , "fn_afterQuery"
        , true);	
}
/********************************************************************************
* 기      능   : 삭제  
********************************************************************************/
function fn_delete() {
	gfn_deleteGridRow( grd_list, ds_list.row, "FLAG" );
}
/********************************************************************************
* 기      능   : 저장  
********************************************************************************/
function fn_save() {
	if ( !gfn_isChangeDs(ds_list, true, "FLAG") ) {
		return;
	}
	
	tit_clearActionInfo();
	tit_addSaveActionInfo(
		"wb01:WB0199041F_I1"
		, ""
		, "wb01:WB0199041F_D1"
		, "FLAG");	// 주소록 저장 
		
	tit_addSearchActionInfo("wb01:WB0199041F_S1");	// 주소록 조회 
	
	tit_callService(
        ""
        , ""
        , "ds_list=ds_list:U"
        , "ds_list=ds_list"
        , "USER_ID=" + quote(G_USER_ID)
        , ""
        , true);	
}
/********************************************************************************
* 기      능   :  확인 
* 리턴 값 : 이차원 배열 - 0 - 사용자 아이디 , 1 - 사용자 명 
*                       , 2 - 업체 코드 , 3 - 업체명
********************************************************************************/
function fn_confirm() {
	// 선택한 정보 화면 하단으로 내리기 
	var rtn = Array();
	var cnt = 0;
	for( var i = 0; i < ds_list.rowcount(); i++ ) {
		if ( ds_list.getColumn(i, "CHK") == "1" ) {
			rtn[cnt++] = [
				ds_list.getColumn(i, "JUSORNAM")
				, ds_list.getColumn(i, "USERNAME")
				, ds_list.getColumn(i, "USERCODE")
				, ds_list.getColumn(i, "VEND_NAME")
			];
		}
	}
	
	if ( cnt == 0 ) {
		gfn_showAlert("CW00046");
		return;
	}
	
	close( rtn );
}
/********************************************************************************
* 기      능   : 사용자 추가  
********************************************************************************/
function fn_input() {
	var arr = gfn_openPopupUrl("WB01::WB0199041B.xml", true);
	var tmp = null;
	if( arr != null ) {
		for( var i = 0; i < arr.length; i++ ) {
			tmp = arr[i];
			var row = ds_list.findRow("JUSORNAM", tmp[0]);
			if ( row >= 0 || tmp[0] == G_USER_ID ) {
				// 이미 존재 
				continue;
			}
			
			row = ds_list.addRow();
			ds_list.setColumn(row, "FLAG", "I");
			ds_list.setColumn(row, "JUSONUMB", G_USER_ID);
			ds_list.setColumn(row, "MANDT", G_MANDT);
			ds_list.setColumn(row, "JUSORNAM", tmp[0]);
			ds_list.setColumn(row, "USERNAME", tmp[1]);
			ds_list.setColumn(row, "USERCODE", tmp[2]);
			ds_list.setColumn(row, "VEND_NAME", tmp[3]);
		}
	}
}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close(null);
}
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
	gfn_showSearchMsg(grd_list, errCode, errMsg);
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/


//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if( nCell == 0 ) {
		gfn_selectAllGrid(obj,nCell,nCell,true);
	} else if( nCell != 1 ) {
		gfn_sortGrid(obj, nCell);
	}	
}
/********************************************************************************
* 기      능   : 사용자 검색하여 주소록에 추가 
********************************************************************************/
function btn_add_OnClick(obj)
{
	fn_input();
}

/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	// Excel Export 
	gfn_saveToExcel(grd_list, true );
}]]></Script>
</Window>