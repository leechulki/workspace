<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="70" Id="main_top" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnSize="main_top_OnSize" OnTimer="main_top_OnTimer" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="main_top" Top="8" Ver="1.0" Width="1016" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_menu1">
				<Contents>
					<colinfo id="PGM_ID" size="256" type="STRING"/>
					<colinfo id="GRP_ID" size="256" type="STRING"/>
					<colinfo id="PGM_NAME" size="256" type="STRING"/>
					<colinfo id="USE_YN" size="256" type="STRING"/>
					<colinfo id="REMARK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_menu2">
				<Contents>
					<colinfo id="PGM_ID" size="256" type="STRING"/>
					<colinfo id="GRP_ID" size="256" type="STRING"/>
					<colinfo id="PGM_NAME" size="256" type="STRING"/>
					<colinfo id="USE_YN" size="256" type="STRING"/>
					<colinfo id="REMARK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_menu3">
				<Contents>
					<colinfo id="PGM_ID" size="256" type="STRING"/>
					<colinfo id="GRP_ID" size="256" type="STRING"/>
					<colinfo id="PGM_NAME" size="256" type="STRING"/>
					<colinfo id="USE_YN" size="256" type="STRING"/>
					<colinfo id="REMARK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_menu4">
				<Contents>
					<colinfo id="PGM_ID" size="256" type="STRING"/>
					<colinfo id="GRP_ID" size="256" type="STRING"/>
					<colinfo id="PGM_NAME" size="256" type="STRING"/>
					<colinfo id="USE_YN" size="256" type="STRING"/>
					<colinfo id="REMARK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_menu5">
				<Contents>
					<colinfo id="PGM_ID" size="256" type="STRING"/>
					<colinfo id="GRP_ID" size="256" type="STRING"/>
					<colinfo id="PGM_NAME" size="256" type="STRING"/>
					<colinfo id="USE_YN" size="256" type="STRING"/>
					<colinfo id="REMARK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_menu6">
				<Contents>
					<colinfo id="PGM_ID" size="256" type="STRING"/>
					<colinfo id="GRP_ID" size="256" type="STRING"/>
					<colinfo id="PGM_NAME" size="256" type="STRING"/>
					<colinfo id="USE_YN" size="256" type="STRING"/>
					<colinfo id="REMARK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_menu7">
				<Contents>
					<colinfo id="PGM_ID" size="256" type="STRING"/>
					<colinfo id="GRP_ID" size="256" type="STRING"/>
					<colinfo id="PGM_NAME" size="256" type="STRING"/>
					<colinfo id="USE_YN" size="256" type="STRING"/>
					<colinfo id="REMARK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list">
				<Contents>
					<colinfo id="MAIL" size="90" summ="default" type="STRING"/>
					<record>
						<MAIL></MAIL>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="MAIL" size="90" summ="default" type="STRING"/>
					<record>
						<MAIL></MAIL>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_pgmLog">
				<Contents>
					<colinfo id="PGMID" size="256" summ="default" type="STRING"/>
					<colinfo id="PGMNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PGMURL" size="256" summ="default" type="STRING"/>
					<colinfo id="USERID" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Image Height="70" Id="img_topBack" ImageID="top_back" TabOrder="1" Top="-2" Width="1012"></Image>
		<Image FillType="STRETCH" Height="70" Id="Image1" ImageID="top_back_02" Left="1012" TabOrder="2" Top="-2" Width="120"></Image>
		<Image Enable="FALSE" Height="20" Id="img_ci" ImageID="img::top_ci.gif" Left="12" OnClick="img_ci_OnClick" Static="FALSE" TabOrder="3" Top="21" Width="176"></Image>
		<Tab Border="Flat" BorderColor="#bbcfd5" Color="#638490" FixedImage="FALSE" Font="굴림,9" Height="24" Id="tab_menu" Left="2" MouseOverColor="#3a5673" OnChanged="ufn_OnTabChanged" OnChanging="ufn_OnTabChaning" SelColor="#3a5673" SelectFont="굴림,9" TabOrder="4" Top="46" Width="979">
			<Contents>
				<TabPage Height="-1" Id="tab1" ImageEdgeWidth="20" ImageID="tab_main" Left="2" TabOrder="12" Text="&#32;&#32;업무화면1&#32;&#32;" Top="23" Width="975"></TabPage>
			</Contents>
		</Tab>
		<Image Cursor="HAND" Height="13" Id="img_icon" ImageID="btn_icon_window" Left="992" OnClick="img_icon_OnClick" Static="FALSE" TabOrder="5" Top="51" Width="15"></Image>
		<PopupDiv BKColor="#d0e4dc" Border="Flat" BorderColor="#7ca595" Height="87" Id="pDiv_icon" Left="988" TabOrder="6" TabStop="FALSE" Top="68" Width="23">
			<Contents>
				<Image Height="13" Id="img_arrangeV" ImageID="icon_window_01" Left="3" OnClick="pDiv_icon_img_arrangeV_OnClick" Static="FALSE" TabOrder="1" Top="3" Width="15"></Image>
				<Image Height="15" Id="img_arrangeH" ImageID="icon_window_02" Left="3" OnClick="pDiv_icon_img_arrangeH_OnClick" Static="FALSE" TabOrder="2" Top="19" Width="15"></Image>
				<Image Height="13" Id="img_arrangeM" ImageID="icon_window_03" Left="3" OnClick="pDiv_icon_img_arrangeM_OnClick" Static="FALSE" TabOrder="3" Top="37" Width="15"></Image>
				<Image Cursor="HAND" Height="13" Id="img_arrangeC" ImageID="icon_window_04" Left="3" OnClick="pDiv_icon_img_arrangeC_OnClick" Static="FALSE" TabOrder="4" Top="53" Width="15"></Image>
				<Image Height="13" Id="img_closeAll" ImageID="icon_window_05" Left="3" OnClick="pDiv_icon_img_closeAll_OnClick" Static="FALSE" TabOrder="5" Top="69" Width="15"></Image>
			</Contents>
		</PopupDiv>
		<PopupDiv Height="262" Id="pDiv_menu" Left="5" OnCloseUp="pDiv_menu_OnCloseUp" TabOrder="7" TabStop="FALSE" Top="500" Width="1007">
			<Contents>
				<Image Height="262" Id="Image0" ImageID="top_menu_back" TabOrder="1" Width="1007"></Image>
				<Static Align="Center" Color="#355c45" Font="굴림,9,Bold" Height="18" Id="st_menu1" Left="19" TabOrder="3" Text="영업관리" Top="10" VAlign="Middle" Width="116"></Static>
				<Static Align="Center" Color="#355c45" Font="굴림,9,Bold" Height="18" Id="st_menu2" Left="163" TabOrder="4" Text="자재관리" Top="10" VAlign="Middle" Width="116"></Static>
				<Static Align="Center" Color="#355c45" Font="굴림,9,Bold" Height="18" Id="st_menu3" Left="303" TabOrder="5" Text="생산관리" Top="10" VAlign="Middle" Width="116"></Static>
				<Static Align="Center" Color="#355c45" Font="굴림,9,Bold" Height="18" Id="st_menu4" Left="446" TabOrder="6" Text="품질관리" Top="10" VAlign="Middle" Width="116"></Static>
				<Static Align="Center" Color="#355c45" Font="굴림,9,Bold" Height="18" Id="st_menu5" Left="589" TabOrder="7" Text="설치관리" Top="10" VAlign="Middle" Width="116"></Static>
				<Static Align="Center" Color="#355c45" DomainID="com.menu_cs" Font="굴림,9,Bold" Height="18" Id="st_menu6" Left="731" TabOrder="8" Text="보수관리" Top="10" VAlign="Middle" Width="116"></Static>
				<Static Align="Center" Color="#355c45" Font="굴림,9,Bold" Height="18" Id="st_menu7" Left="873" TabOrder="9" Text="내부업무" Top="10" VAlign="Middle" Width="116"></Static>
				<Grid AutoFit="TRUE" BindDataset="ds_menu1" BkColor2="default" BkSelColor="white" BoldHead="true" Border="None" Bottom="220" Color="#0c7737" Enable="true" EndLineColor="default" Font="굴림,9" Height="180" Id="grd_menu1" InputPanel="FALSE" Left="7" LineColor="default" LineType="NONE" MinWidth="100" OnCellClick="grd_menu_OnCellClick" Right="148" SelColor="#0c7737" TabOrder="10" TabStop="true" Top="40" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="141">
					<contents>
						<format id="Default">
							<columns>
								<col width="137"/>
							</columns>
							<body>
								<cell bkimagealign="left" bkimageid="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;top_menu_bg01&apos;,&#32;&apos;&apos;)" col="0" colid="PGM_NAME" color="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;default&apos;,&#32;&apos;gray&apos;)" cursor="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;hand&apos;,&#32;&apos;arrow&apos;)" display="text" text="&#32;&#32;&#32;&#32;서브메뉴&#32;01"/>
							</body>
						</format>
					</contents>
				</Grid>
				<Grid AutoFit="TRUE" BindDataset="ds_menu2" BkColor2="default" BkSelColor="white" BoldHead="true" Border="None" Bottom="220" Color="#0c7737" Enable="true" EndLineColor="default" Font="굴림,9" Height="180" Id="grd_menu2" InputPanel="FALSE" Left="149" LineColor="default" LineType="NONE" MinWidth="100" OnCellClick="grd_menu_OnCellClick" Right="290" SelColor="#0c7737" TabOrder="11" TabStop="true" Top="40" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="141">
					<contents>
						<format id="Default">
							<columns>
								<col width="137"/>
							</columns>
							<body>
								<cell bkimagealign="left" bkimageid="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;top_menu_bg01&apos;,&#32;&apos;&apos;)" col="0" colid="PGM_NAME" color="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;default&apos;,&#32;&apos;gray&apos;)" cursor="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;hand&apos;,&#32;&apos;arrow&apos;)" display="text" text="&#32;&#32;&#32;&#32;서브메뉴&#32;01"/>
							</body>
						</format>
					</contents>
				</Grid>
				<Grid AutoFit="TRUE" BindDataset="ds_menu3" BkColor2="default" BkSelColor="white" BoldHead="true" Border="None" Bottom="220" Color="#0c7737" Enable="true" EndLineColor="default" Font="굴림,9" Height="180" Id="grd_menu3" InputPanel="FALSE" Left="291" LineColor="default" LineType="NONE" MinWidth="100" OnCellClick="grd_menu_OnCellClick" Right="432" SelColor="#0c7737" TabOrder="12" TabStop="true" Top="40" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="141">
					<contents>
						<format id="Default">
							<columns>
								<col width="137"/>
							</columns>
							<body>
								<cell bkimagealign="left" bkimageid="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;top_menu_bg01&apos;,&#32;&apos;&apos;)" col="0" colid="PGM_NAME" color="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;default&apos;,&#32;&apos;gray&apos;)" cursor="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;hand&apos;,&#32;&apos;arrow&apos;)" display="text" text="&#32;&#32;&#32;&#32;서브메뉴&#32;01"/>
							</body>
						</format>
					</contents>
				</Grid>
				<Grid AutoFit="TRUE" BindDataset="ds_menu4" BkColor2="default" BkSelColor="white" BoldHead="true" Border="None" Bottom="220" Color="#0c7737" Enable="true" EndLineColor="default" Font="굴림,9" Height="180" Id="grd_menu4" InputPanel="FALSE" Left="433" LineColor="default" LineType="NONE" MinWidth="100" OnCellClick="grd_menu_OnCellClick" Right="574" SelColor="#0c7737" TabOrder="13" TabStop="true" Top="40" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="141">
					<contents>
						<format id="Default">
							<columns>
								<col width="137"/>
							</columns>
							<body>
								<cell bkimagealign="left" bkimageid="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;top_menu_bg01&apos;,&#32;&apos;&apos;)" col="0" colid="PGM_NAME" color="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;default&apos;,&#32;&apos;gray&apos;)" cursor="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;hand&apos;,&#32;&apos;arrow&apos;)" display="text" text="&#32;&#32;&#32;&#32;서브메뉴&#32;01"/>
							</body>
						</format>
					</contents>
				</Grid>
				<Grid AutoFit="TRUE" BindDataset="ds_menu6" BkColor2="default" BkSelColor="white" BoldHead="true" Border="None" Bottom="220" Color="#0c7737" Enable="true" EndLineColor="default" Font="굴림,9" Height="180" Id="grd_menu6" InputPanel="FALSE" Left="718" LineColor="default" LineType="NONE" MinWidth="100" OnCellClick="grd_menu_OnCellClick" Right="859" SelColor="#0c7737" TabOrder="15" TabStop="true" Top="40" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="141">
					<contents>
						<format id="Default">
							<columns>
								<col width="137"/>
							</columns>
							<body>
								<cell bkimagealign="left" bkimageid="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;top_menu_bg01&apos;,&#32;&apos;&apos;)" col="0" colid="PGM_NAME" color="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;default&apos;,&#32;&apos;gray&apos;)" cursor="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;hand&apos;,&#32;&apos;arrow&apos;)" display="text" text="&#32;&#32;&#32;&#32;서브메뉴&#32;01"/>
							</body>
						</format>
					</contents>
				</Grid>
				<Grid AutoFit="TRUE" BindDataset="ds_menu5" BkColor2="default" BkSelColor="white" BoldHead="true" Border="None" Bottom="220" Color="#0c7737" Enable="true" EndLineColor="default" Font="굴림,9" Height="180" Id="grd_menu5" InputPanel="FALSE" Left="576" LineColor="default" LineType="NONE" MinWidth="100" OnCellClick="grd_menu_OnCellClick" Right="717" SelColor="#0c7737" TabOrder="14" TabStop="true" Top="40" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="141">
					<contents>
						<format id="Default">
							<columns>
								<col width="137"/>
							</columns>
							<body>
								<cell bkimagealign="left" bkimageid="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;top_menu_bg01&apos;,&#32;&apos;&apos;)" col="0" colid="PGM_NAME" color="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;default&apos;,&#32;&apos;gray&apos;)" cursor="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;hand&apos;,&#32;&apos;arrow&apos;)" display="text" text="&#32;&#32;&#32;&#32;서브메뉴&#32;01"/>
							</body>
						</format>
					</contents>
				</Grid>
				<Grid AutoFit="TRUE" BindDataset="ds_menu7" BkColor2="default" BkSelColor="white" BoldHead="true" Border="None" Bottom="220" Color="#0c7737" Enable="true" EndLineColor="default" Font="굴림,9" Height="180" Id="grd_menu7" InputPanel="FALSE" Left="860" LineColor="default" LineType="NONE" MinWidth="100" OnCellClick="grd_menu_OnCellClick" Right="1001" SelColor="#0c7737" TabOrder="16" TabStop="true" Top="40" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="141">
					<contents>
						<format id="Default">
							<columns>
								<col width="137"/>
							</columns>
							<body>
								<cell bkimagealign="left" bkimageid="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;top_menu_bg01&apos;,&#32;&apos;&apos;)" col="0" colid="PGM_NAME" color="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;default&apos;,&#32;&apos;gray&apos;)" cursor="expr:decode(getColumn(currow,&#32;&apos;USE_YN&apos;),&#32;&apos;Y&apos;,&#32;&apos;hand&apos;,&#32;&apos;arrow&apos;)" display="text" text="&#32;&#32;&#32;&#32;서브메뉴&#32;01"/>
							</body>
						</format>
					</contents>
				</Grid>
				<Image Cursor="HAND" Height="22" Id="img_close" ImageID="top_menu_btn_close" Left="984" OnClick="pDiv_menu_img_close_OnClick" Static="FALSE" TabOrder="2" ToolTipText="Close&#32;menu" Top="238" Width="17"></Image>
			</Contents>
		</PopupDiv>
		<Button Cursor="HAND" Height="27" Id="btn_menu" ImageID="btn_sys_menu" Left="422" OnClick="btn_menu_OnClick" OnMouseOver="btn_menu_OnMouseOver" TabOrder="8" Width="148"></Button>
		<Image Cursor="HAND" Height="20" Id="img_home" ImageID="btn_sys_home" Left="719" OnClick="img_home_OnClick" Static="FALSE" TabOrder="14" Top="16" Width="54"></Image>
		<Image Cursor="HAND" Height="20" Id="img_notice" ImageID="btn_sys_board" Left="774" OnClick="img_notice_OnClick" Static="FALSE" TabOrder="13" Top="16" Width="59"></Image>
		<Image Cursor="HAND" Height="20" Id="Image7" ImageID="btn_sys_help" Left="889" Static="FALSE" TabOrder="12" Top="40" Visible="FALSE" Width="50"></Image>
		<Image Cursor="HAND" Height="20" Id="img_note" ImageID="btn_sys_note" Left="898" OnClick="img_note_OnClick" Static="FALSE" TabOrder="11" Top="16" Width="44"></Image>
		<Image Cursor="HAND" Height="20" Id="img_myInfo" ImageID="btn_sys_myinfo" Left="834" OnClick="img_myInfo_OnClick" Static="FALSE" TabOrder="10" Top="16" Width="63"></Image>
		<Image Cursor="HAND" Height="20" Id="img_logout" ImageID="btn_sys_logout" Left="945" OnClick="img_logout_OnClick" Static="FALSE" TabOrder="9" Top="16" Width="53"></Image>
		<Static Align="Center" BKColor="yellow" Font="맑은&#32;고딕,9,Bold" Height="20" Id="st_SysInfo" Left="198" TabOrder="16" Top="21" VAlign="Middle" Visible="FALSE" Width="90"></Static>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 프레임 - 상단 영역 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
#include "LIB::common_cs.js";	// 서비스 공통 스크립트 
#include "LIB::common_hdel.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var F_MAX_OPEN_CNT = 10;	// 최대로 열수 있는 창 갯수
var F_CURR_MID_CD = null;	// 현재 표시하고 있는 메뉴 중분류 
var F_G_WIN_CNT = 4;
var F_READ_MSG_TIME = 1000 * 60 * 30;	// 0.5시간 1000 * 60 - 1분 
var cnt=0;
var sso = null;
//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) 
{
	gfn_initForm();

	st_SysInfo.Text = "["+g_sysid+" - "+G_MANDT+"]";
	ds_cond.SetColumn(0,"MAIL",G_EMAIL);
	tit_clearActionInfo();

	tit_addSearchActionInfo("wb01:MAIL_S1");

	tit_callService(
        ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_list=ds_list"
        , ""
        , "fn_afterMail"
        , true
        , true);
	
	tab_menu.DeleteTab(0);
	// 초기 페이지 보여주기 
	ufn_goHome();    
	// 메뉴 정보 생성 
	ufn_createMenuInfo();
	// 쪽지 읽어오기 
	ufn_queryMsg();
	// 사용자변경
	if( toNumber(right(G_USER_GROUP, 2)) >= 20
		|| toNumber(right(G_USER_GROUP_B, 2)) >= 20
		|| toNumber(right(G_USER_GROUP_E, 2)) >= 20
		|| toNumber(right(G_USER_GROUP_M, 2)) >= 20
		|| toNumber(right(G_USER_GROUP_R, 2)) >= 20)
	{
		img_ci.enable = true;
		img_ci.Cursor = "hand";
	}
	//'10'권한도 사용자 변경할수 있도록 처리 - 20090325 syj
	// 권한 문제로 임시로 막음 2014.08.11. hss
	// img_ci.enable = true;
	// img_ci.Cursor = "hand";
	
	if(G_VEND_WGBN == "E") { 
		img_notice.Visible = false;
		img_note.Visible = false;
		
	} else {
		img_notice.Visible = true; 
		img_note.Visible = true;
	}
	
	if (gfn_getAuthGroup("ZCS81")) {
		// 해외부품 청구 권한자에 한해 메뉴명 숨김처리 20170306
		pDiv_menu.st_menu1.Visible = false;
		pDiv_menu.st_menu2.Visible = false;
		pDiv_menu.st_menu3.Visible = false;
		pDiv_menu.st_menu4.Visible = false;
		pDiv_menu.st_menu5.Visible = false;
		pDiv_menu.st_menu7.Visible = false;
	}
	
	//5분에 한번씩 서버시간 가져오기
	gfn_getCurrDate2();
	
	SetTimer(9000,1000*60*5);	
	
	/*if(G_USER_ID > '900000' && SubStr(G_USER_ID,0,1) != 'S') {
		img_join.Visible = false;
	}else{
		img_join.Visible = true;
	}*/
	// if(g_user_id != '2022532') {
		// img_join.Visible = false;
	// }else{
		// img_join.Visible = true;
	// }
	
	/* SSO 처리 때문에 주석처리
	sso = CreateObject("NETS.EnterpriseSSOAgent.1",false,false);
	if(sso != null){
		sso.StartSSO();
		SetTimer(101,3000);
	}
	*/
	//2031205
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) 
{

}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
var _F_CLOSE = false;
function fn_OnUnloadCompleted(obj) 
{
//	_F_CLOSE = true;
//	img_logout_OnClick();
//	return false;
//	img_logout_OnClick(img_logout, 0, 0);

	if ( G_LOGOUT == "0" ) // Http Errror시 처리 
	{
		return;
	}
	
	this.OnUnloadCompleted = "";	
	
	// 서버에서 logout 처리  zh
	http.Sync = true;
	
	Transaction(
		  "logout"
		, G_SERVER_URL + "Login"
		, ""
		, "" 
		, "cmd='logout' G_USER_ID=" + quote( G_USER_ID )
		, "");

	http.Sync = false;
	
	return true;
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================


//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================


//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 메뉴 아이디에 해당하는 이미 Open되어 있는 Form 찾기 
********************************************************************************/
function ufn_findOpenForm(sMenuId) 
{
	var nCount = global.AllWindows.count - 1; 
	for(var i=nCount; i>=0; i--) 
	{
		if( global.AllWindows[i].id == sMenuId )
		{
			return global.AllWindows[i];
		}
	}
	
	return null;
}
/********************************************************************************
* 기      능   : 창이 열릴 때 탭에 메뉴 추가 
********************************************************************************/
function ufc_addTab(sMenuId, sMenuNm) 
{
	//첫번째 디자인용 탶 삭제
	if(tab_menu.tabCount == 1 && tab_menu.getItem(0).id == "tab1")
	{
		tab_menu.DeleteTab(0);
	}

	//이미존재 하는 폼인지 체크
	for (var i=0; i < tab_menu.TabCount; i++)
	{
		if (tab_menu.GetItem(i).id == sMenuId)
		{
			tab_menu.TabIndex = i;
			return;		
		}
	}
	
	tab_menu.OnChanged = "";

	var subIdx = tab_menu.insertTab(sMenuId, -1, "", " " + sMenuNm + " ", ufn_getTabImgNm(sMenuNm));
	tab_menu.TabIndex  = subIdx;	
	tab_menu.OnChanged = "ufn_OnTabChanged";
	
	// 하단의 메시지 표시 
	global.FRM_BOTTOM.ufn_changePgm(sMenuId, sMenuNm);
}
/********************************************************************************
* 기      능   : 메뉴 이미지 
********************************************************************************/
function ufn_getTabImgNm(strMenuNm) 
{
	var len = length(strMenuNm);
//	if ( len < 6 ) {
		return "tab_main";
//	} else if ( len < 10 ) {
//		return "tab_form_10";
//	}
//	return "tab_form_15";
}
/********************************************************************************
* 기      능   : 탭이 변경된 후 처리 
********************************************************************************/
function ufn_OnTabChanged(obj,nOldIndex,nNewindex)
{	
	if(tab_menu.tabCount != 0) 
	{
		var sTabId = tab_menu.GetItem(nNewindex).id;	

		if(length(trim(sTabId)) > 2) 
		{
			var win = ufn_findOpenForm(sTabId);
			if ( win != null ) 
			{
				win.setFocus();
				
				// 하단의 메시지 표시 
				global.FRM_BOTTOM.ufn_changePgm(sTabId, tab_menu.GetItem(nNewindex).Text);
			}	
		}	
	}
}
/********************************************************************************
* 기      능   : 탭이 변경될 때 처리 
********************************************************************************/
function ufn_OnTabChaning(sTabId){
	for(var i=0; i < tab_menu.TabCount; i++)	
	{
		if( tab_menu.GetItem(i).id == sTabId )
		{
			tab_menu.TabIndex = i;
			return ;
		}
	}	
}
/********************************************************************************
* 기      능   : 탭에서 메뉴 삭제 
********************************************************************************/
function ufc_deleteTab(sTabId)
{	
	for(var i=0; i < tab_menu.TabCount;i++)
	{	
		if( tab_menu.GetItem(i).id == sTabId ) 
		{		
			tab_menu.DeleteTab(i);
			return;
		}
	}
}
/********************************************************************************
* 기      능   : 전체 메뉴 닫기  
********************************************************************************/
function ufc_closeAllWindows()
{
	for(var i = tab_menu.TabCount; i >= 0 ; i--) 
	{
		object(tab_Menu.GetItem(i).id).close();	
	}
}
/********************************************************************************
* 기      능   : MDI 창 열기 
********************************************************************************/
function ufc_openForm( sPgmId , sClientArg, sMult ) 
{
	//MAX Open 창 개수 체크
	if(tab_menu.TabCount == F_MAX_OPEN_CNT ) 
	{
		// ZW00004=최대 사용할 수 있는 화면 갯수는 최대 ${}개 입니다.
		gfn_showAlert("ZW00004", F_MAX_OPEN_CNT+" ");
		return;
	}
	
	var objWin = ufn_findOpenForm(sPgmId);
	if( objWin != null)
	{
		if ( sMult != "Y" && length( sClientArg ) > 0 ) 
		{
			objWin.close();
		} 
		else if (sMult != "Y")
		{
			ufn_OnTabChaning(sPgmId);
			return;
		}	
	}
	
	sPgmId = trim(sPgmId);
    var nRow = gds_auth.findRow("PGM_ID" , sPgmId);
    var sPgmUrl = gds_auth.GetColumn(nRow, "PGM_URL");
	if(nRow == -1 || length(trim(sPgmUrl)) == 0)
	{
		// ZW00005=해당 프로그램을 사용할 권한이 없습니다.
		gfn_showAlert("ZW00003");
		return;
    }	
	
	var pgmName = gds_auth.getColumn(nRow, "PGM_NAME");
	if ( length( trim(pgmName) ) == 0 ) 
	{
		pgmName = sPgmId;
	}
	
	var j = 0;
	if( objWin != null)
	{
		if ( sMult == "Y") 
		{
				for (var i=0; i < tab_menu.TabCount; i++)
				{
					if (substr(tab_menu.GetItem(i).id,0,10) == sPgmId)
					{
						j++;
					}
				}
		} 
	}	
	if (j > 0)
	{
		sPgmId = sPgmId+j;
	}
	var sArg = "fa_pgmId=" + quote( sPgmId )
			+ " fa_pgmName=" + quote( pgmName )
			+ " fa_pgmUrl=" + quote( sPgmUrl )
			+ " fa_btnList=" + quote( ufn_getBtnList(substr(sPgmId,0,10)) )
			+ " fa_pathAuth=" + quote( ufn_getMyLevel(substr(sPgmId,0,10)) );
	if ( length( sClientArg ) > 0 ) 
	{
		sArg += " " + sClientArg;
	}

	
    NewWindow(sPgmId, "WB01::CommWorkForm.xml", sArg, "", "", "OpenStyle=MAX Title=True Status=False", -1, -1);
    
    /*  
	메뉴 선택시 로그 남기기 기능 추가
	*/ 
	ds_pgmLog.ClearData();
	ds_pgmLog.AddRow();
    ds_pgmLog.SetColumn(0, "PGMID", sPgmId);
	ds_pgmLog.SetColumn(0, "PGMNAME", pgmName);
	ds_pgmLog.SetColumn(0, "PGMURL", sPgmUrl);
	ds_pgmLog.SetColumn(0, "USERID", G_USER_ID);
    
    tit_clearActionInfo();
		
	tit_addSingleActionInfo("wb01:PGMACCESSLOG_I01");
	
	tit_callService(
		""
		, ""
		, "ds_pgmLog=ds_pgmLog"
		, ""
		, ""
		, ""
		, true);
			
    //alert("PGMID는  "+ sPgmId);
	//alert("PGMNAME는  "+ pgmName);
	//alert("PGMURL는  "+ sPgmUrl);
	//alert("USERID는  "+ G_USER_ID);

    ufc_addTab(sPgmId, pgmName);
}
/********************************************************************************
* 기      능   :  폼 로드시에 메뉴 정보 생성  
********************************************************************************/
function ufn_createMenuInfo() 
{
	var menu = ["BS", "MM", "PP", "QM", "PS", "CS", "MG"];
	
	// 국세청 감사용
	if(G_USER_ID == "7000452" || G_USER_ID == "7000453")
	{
		menu = ["PP","","","","","",""];
	}
	var dsMenu = null;
	// 메뉴 정보 표시 : 대분류, 중분류 
	for( var i = 0; i < menu.length(); i++ ) 
	{
		object("pDiv_menu.st_menu" + (i+1)).value = ufn_getMenuName("00", menu[i]);
		// 데이터셋 복사
		dsMenu = object("ds_menu" + (i+1));
		
		for( var r = 0; r < gds_menu.rowCount(); r++ ) 
		{
			if ( gds_menu.getColumn(r, "GRP_ID") != menu[i] ) 
			{
				continue;
			}
			
			var newRow = dsMenu.addRow();
			dsMenu.setColumn(newRow, "PGM_ID",   gds_menu.getColumn(r, "PGM_ID") );
			dsMenu.setColumn(newRow, "GRP_ID",   gds_menu.getColumn(r, "GRP_ID") );
			dsMenu.setColumn(newRow, "PGM_NAME", "   " + gds_menu.getColumn(r, "PGM_NAME") );
			dsMenu.setColumn(newRow, "REMARK",   gds_menu.getColumn(r, "REMARK") );
			// 사용 유무 
			if( gds_auth.findRow("MID_CD", dsMenu.getColumn(newRow, "REMARK")) != -1 ) 
			{
				dsMenu.setColumn(newRow, "USE_YN", "Y");
			}
		}
	}
}
/********************************************************************************
* 기      능   :  메뉴명 가져오기 
********************************************************************************/
function ufn_getMenuName(grpId, memuCode) 
{
	var row = gds_menu.searchRow("trim(PGM_ID)==" + quote(memuCode)	+ " && GRP_ID==" + quote(grpId));

	return gds_menu.getColumn(row, "PGM_NAME");
}
/********************************************************************************
* 기      능   :  현재 사용 가능한 권한 가져오기 
********************************************************************************/
function ufn_getMyLevel(pgmId) 
{
	var row = gds_auth.findRow("PGM_ID" ,pgmId);
	var lastLevel = toNumber(gds_auth.getColumn(row, "MY_LEVEL"));
	
	for( var i = row+1; i < gds_auth.rowcount(); i++) 
	{
		if ( trim(gds_auth.getColumn(i,"PGM_ID")) != pgmId ) 
		{
			break;
		}
		
		if( lastLevel > toNumber( gds_auth.getColumn(i, "MY_LEVEL")) ) 
		{
			lastLevel = toNumber( gds_auth.getColumn(i, "MY_LEVEL"));
		}
	}
	
	return lastLevel;
}
/********************************************************************************
* 기      능   :  현재내 권한 가져오기 
********************************************************************************/
function ufn_getBtnList(pgmId) 
{
	var row = gds_auth.findRow("PGM_ID" ,pgmId);
	var btnList = gds_auth.getColumn(row, "BTN_LIST");
	
	for( var i = row + 1; i < gds_auth.rowcount(); i++) 
	{
		if ( trim(gds_auth.getColumn(i,"PGM_ID")) != pgmId ) 
		{
			break;
		}
		
		if ( length( btnList ) > 0 ) 
		{
			btnList += ",";
		}
		
		btnList += gds_auth.getColumn(i, "BTN_LIST");
	}
	return btnList;
}
/********************************************************************************
* 기      능   : 메뉴 정보 보여주기 
********************************************************************************/
function ufn_showMenu() 
{
	// 현재 메뉴가 표시 모드가 아닐 경우 보여주기 
	if ( !global.FRM_LEFT.visible || global.FRM_LEFT.tv_menu.bindDataset != "ds_leftMenu") 
	{
		global.FRM_LEFTBAR.img_menu.imageId = "btn_left_menu_on";
		global.FRM_LEFTBAR.img_myMenu.imageId = "btn_left_mymenu_off";
		global.FRM_LEFT.tv_menu.bindDataset = "ds_leftMenu";
		global.FRM_LEFT.visible = true;
	}	
}
/********************************************************************************
* 기      능   :  가로, 세로 정렬 시키기 
********************************************************************************/
function ufn_arrangeWindowTile(sTile) 
{
	var nWinCount = ufn_getWindowCount();
	if (nWinCount <= 0) return;

	var nColCnt = array(ufn_getArrangeColCount(nWinCount,sTile));	// 가로로 위치 시킬 창 갯수 구하기
	var nHeight;	// Window Height
	var nCnt = 0;
	var nLeft;		// Window Left
	var nTop;		// Window Top

	// 변경될 Window Width (WorkArea Width / 가로로 위치 시킬 창 갯수)
	var nWidth = truncate(ufn_getScreenAxis("BODY", "width") / bound(nColCnt), 0);

	var nTempCnt = nWinCount % bound(nColCnt);
	var nWin = F_G_WIN_CNT;

	for (var i=bound(nColCnt)-1; i>=0; i--) 
	{
		if (bound(nColCnt) > 1) 
		{
			nColCnt[i] = truncate(nWinCount / bound(nColCnt)) + iif(nTempCnt>0, 1, 0);
		}
		else 
		{
			nColCnt[i] = truncate(nWinCount / bound(nColCnt));
		}

		nHeight = truncate(ufn_GetScreenAxis("BODY", "height") / nColCnt[i],0);
		nLeft = nWidth * i;

		for (var j=nColCnt[i]-1; j>=0; j--) 
		{
			nTop = nHeight * j;

			var objWindows = global.windows(nWin);
			objWindows.MDIStatus     = "Normal";
			objWindows.window.left   = nLeft;
			objWindows.window.top    = nTop;
			objWindows.window.width  = nWidth;
			objWindows.window.height = nHeight;

			nWin++;
		}
		nTempCnt--;
	}
}
/********************************************************************************
* 기      능   :  계단식 배열 
********************************************************************************/
function ufn_arrangeWindowC() 
{
	var nCascade = 7;	// 계단식 정렬 Max Count
	var nGapX    = ufn_GetUserTitleHeight();		// 이동시킬 X축 값 (MDI Title Height만큼 이동)
	var nGapY    = nGapX;						// 이동시킬 X축 값

	var nWorkWidth = ufn_getScreenAxis("BODY", "width");		// MDI Work Width
	var nWorkHeight = ufn_getScreenAxis("BODY", "height");	// MDI Work height

	var nWidth  = nWorkWidth - (nGapX * nCascade);		// 변경될 Window Width
	var nHeight = nWorkHeight - (nGapY * nCascade);		// 변경될 Window Height
	var nLeft	= 0;		// 변경될 Window Left
	var nTop	= 0;		// 변경될 Window Top

	// 열려진 Window의 갯수만큼 Loop.
	for (var i=0; i<global.Windows.count; i++) 
	{
		if (i < F_G_WIN_CNT) continue;	// Frame Window면 통과

		var objWindows = global.windows(i);
		// 화면 위치가 WorkArea를 벗어나면 0으로 이동
		if ((toNumber(nLeft)+toNumber(nWidth)) > nWorkWidth || (toNumber(nTop)+toNumber(nHeight)) > nWorkHeight) 
		{
			nLeft = 0;
			nTop  = 0;
		}

		objWindows.MDIStatus     = "Normal";
		objWindows.window.left   = nLeft;
		objWindows.window.top    = nTop;
		objWindows.window.width  = nWidth;
		objWindows.window.height = nHeight;

		nLeft	+= nGapX;		// 다음 Window는 nGapX만큼 Left를 이동
		nTop	+= nGapY;		// 다음 Window는 nGapY만큼 Top을 이동
	}
}
/********************************************************************************
* 기      능   :  타이틀 사이즈 가져오기 
********************************************************************************/
function ufn_getUserTitleHeight() 
{
	return toInteger(GetPlatformInfo("Title","Cy"));
}
/********************************************************************************
* 기      능   :  화면 건수 
********************************************************************************/
function ufn_getWindowCount() 
{
	return global.windows.count - F_G_WIN_CNT;
}
/********************************************************************************
* 기      능   :  사이즈 가져오기 
********************************************************************************/
function ufn_getScreenAxis(sBand,sProp)
{
	var nValue = 0;
	var objMenuBar   = global.FRM_TOP;	// Top Frame
	var objBottomBar = global.FRM_BOTTOM;	// Bottom Frame
	var objWindow;

	switch(toUpper(sBand)) 
	{
		case "T":
		case "TOP":
			objWindow = objMenuBar;
			break;
		case "B":
		case "BOTTOM":
			objWindow = objBottomBar;
			break;
	}

	switch(toLower(sProp)) 
	{
		case "left":
			if (isValid(objWindow) == false) 
			{
				nValue = toInteger(global.GetPlatformInfo("WorkArea","Left"));
			} 
			else 
			{
				nValue = ClientToScreenX(objWindow, 0);
			}
			break;
		case "top":
			if (isValid(objWindow) == false) 
			{
				nValue = toInteger(global.GetPlatformInfo("WorkArea","Top"));
			} 
			else 
			{
				nValue = ClientToScreenY(objWindow, 0); 
			}
			break;
		case "right":
			if (isValid(objWindow) == false) 
			{
				nValue = toInteger(global.GetPlatformInfo("WorkArea","Right"));
			} 
			else 
			{
				nValue = ClientToScreenX(objWindow, objWindow.window.width);
			}
			break;
		case "bottom":
			if (isValid(objWindow) == false) 
			{
				nValue = toInteger(global.GetPlatformInfo("WorkArea","Bottom"));
			} 
			else 
			{
				nValue = ClientToScreenY(objWindow, objWindow.window.height);
			}
			break;
		case "width":
			if (isValid(objWindow) == false) 
			{
				nValue = toInteger(global.GetPlatformInfo("WorkArea","Width")) - 5;
			} 
			else 
			{
				nValue = objWindow.window.width; 
			}
			break;
		case "height":
			if (isValid(objWindow) == false) 
			{
				nValue = toInteger(global.GetPlatformInfo("WorkArea","Height")) - 5;
			} 
			else 
			{
				nValue = objWindow.window.height; 
			}
			break;
	}

	return nValue;
}
/********************************************************************************
* 기      능   :  정렬시 한 줄에 보여야할 건수 
********************************************************************************/
function ufn_getArrangeColCount(nWinCnt, sTile) 
{
	
	if (nWinCnt <= 0) return 0;
	
	if ( sTile == "M") 
	{
		if ( nWinCnt <= 6 ) 
		{
			return 2;
		} 
		else 
		{
			return 3;
		}	
	} 
	else if (toUpper(sTile) == "V") { // 세로창 배열일 때...
		for (var i = 6; i > 0; i--) 
		{
			if (truncate(nWinCnt % i) == 0) 
			{
				if (truncate(nWinCnt / i) >= (i-2)) 
				{
					return i;
					break;
				}
			} 
			else 
			{
				if (truncate(nWinCnt / i) >= (i-1)) 
				{
					return i;
					break;
				}
			}
		}	// end for
	} 
	else {	// 가로일 경우 
		if (nWinCnt <= 3) 
		{
			return 1;
		} 
		else if ( nWinCnt <= 8) 
		{
			return 2;
		} 
		else if ( nWinCnt <= 15) 
		{
			return 3;
		} 
		else if ( nWinCnt <= 24) 
		{
			return 4;
		} 
		else 
		{
			return 5;
		}
	}
}
/********************************************************************************
* 기      능   : 쪽지 읽어 오기 
********************************************************************************/
var NOTE_CNT = 0;

function ufn_queryMsg() 
{
	if( img_note.imageId == "btn_sys_note_new.gif") 
	{
		// 다시 조회 하지 않음. 
		ufn_afterQueryMsg("", "");
		return;
	}
	
	tit_callService(
	      "COMM_ACT"
		, "readNote"
		, ""
		, ""
		, ""
		, "ufn_afterQueryMsg"
		, false
		, true);
}

/********************************************************************************
* 기      능   : 쪽지 읽어 오기 - 콜백 
********************************************************************************/
function fn_afterMail(errCode, errMsg) 
{
	if( ds_list.GetColumn(0,"MAIL") > 1)
	{
		G_EMAIL = "multi";
	}
}

/********************************************************************************
* 기      능   : 쪽지 읽어 오기 - 콜백 
********************************************************************************/
function ufn_afterQueryMsg(errCode, errMsg) 
{
	// 팝업 되어 있을 경우 return 
	if( F_OPEN_NOTE ) 
	{
		return;
	}

	if( NOTE_CNT > 0 ) 
	{
		// 데이터 존재시 
		img_note.imageId = "btn_sys_note_new.gif";
		// 소리 보내기 
		//Ext_Beep(400,500);
    
		//var strFilePath = 'D:\\CIA\\workspace\\CIA_UI\\AP_PID\\attention.wav';
		//str_SoundFlag 'T', str_ErrorFlag 'T' 인 경우에만 Sound Play
		if (NOTE_CNT > cnt)
		{
			var strFilePath = fn_GetComponentPath() + 'memo_on.wav';
			play(strFilePath);
			cnt = NOTE_CNT;
		}
	}
	// 쪽지 타이머 
	SetTimer(100, F_READ_MSG_TIME);
}

/******************************
로칼 Path를 얻는다. 
******************************/
function fn_GetComponentPath()
{
	var UserPath = GetReg("ComponentPath", AliasToRealPath("%COMPONENT%"));

	return UserPath + "\\";
}


/********************************************************************************
* 기      능   : 홈으로 이동 
********************************************************************************/
function ufn_goHome() 
{	
	// 홈 찾아 보기 
	var sPgmId = "HOME";
	var objWin = ufn_findOpenForm(sPgmId);
	if( objWin != null)
	{
		ufn_OnTabChaning(sPgmId);
	//	objWin.setFocus();
		return;
	}
	
	NewWindow(sPgmId, "WB01::CommMainForm.xml", "", "", "", "OpenStyle=MAX Title=True Status=False", -1, -1);
    ufc_addTab(sPgmId, "  HOME  ");
}
//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 버튼에 마우스 over 시 처리 
********************************************************************************/
function btn_menu_OnMouseOver(obj,nX,nY)
{
//	obj.OnMouseOver = "";
}
/********************************************************************************
* 기      능   :  Popup Divsion 닫기 
********************************************************************************/
function pDiv_menu_OnCloseUp(obj,varReturn,bSelOk)
{
	// mouse over event 연결 
	btn_menu.ImageID = "btn_sys_menu" ;
//	btn_menu.OnMouseOver = "btn_menu_OnMouseOver";
}
/********************************************************************************
* 기      능   :  Popup Divsion 메뉴 처리 
********************************************************************************/
function btn_menu_OnClick(obj)
{
	obj.ImageID = "btn_sys_menu_sel";
	var x = ClientToScreenX(this, 0) + 5;
	var y = ClientToScreenY(this, 0) + btn_menu.height + 10;
	pDiv_menu.TrackPopup(x, y);
	pDiv_menu.SetFocus();
	
}
/********************************************************************************
* 기      능   :  Popup Divsion 닫기 
********************************************************************************/
function pDiv_menu_img_close_OnClick(obj,nX,nY)
{
	pDiv_menu.ClosePopup(null);
}
/********************************************************************************
* 기      능   :  로그 아웃 버튼 처리 
********************************************************************************/
function img_logout_OnClick(obj,nX,nY)
{
	// 서버에 조회 
	http.Sync = true;
	
	Transaction(
		  "logout"
		, G_SERVER_URL + "Login"
		, ""
		, "" 
		, "cmd='logout'"
		, "fn_logout");
		
	http.Sync = false;
}
/********************************************************************************
* 기      능   :  로그 아웃 Callback 처리 
********************************************************************************/
function fn_logout(svcId, errCode, errMsg) 
{
	if ( errCode != 0 ) 
	{
		gfn_alert(errCode + ":" + errMsg);
	} 
	else 
	{
		// 창 닫은 후 다시 띄위기  
		setReg("OnlyOne",false); //프로그램이 종료되기 전에 실행해야 하므로 임시로 OnlyOne설정을 풀어줌
		execProc(AliasToRealPath("%TOBE%" + "MiPlatform320U\\MiPlatform320U.exe" ), "HELCO_WEB"); 
		Exit();
	}	
}
/********************************************************************************
* 기      능   :  메뉴 선택  
********************************************************************************/
function grd_menu_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
    // 이메일 없거나 test.com 인 경우 alert을 표현하고 사용자 정보변경 화면 popup 2013.035.10 hss
	if(length(G_EMAIL) < 1 || toUpper(SubStr(G_EMAIL,IndexOf(G_EMAIL,"@"),length(G_EMAIL))) == "@TEST.COM")
	{
		gfn_showAlert("ZW00013","");
		return;
	} else if(G_EMAIL == "multi" )   // 이메일이 중복되는 경우 alet표시 사용자 정보변경 화면 popup 2015.06.15 hss
	{
		gfn_showAlert("ZW00014","");
		return;
	}
	
	var dsMenu = object( obj.bindDataset );
	// 사용 권한 없음. 
	if( dsMenu.getColumn(nRow, "USE_YN") != "Y" ) 
	{
		return;
	}
	
	var smallCd = Array();
	var cnt = 0;
	var prevSmallCd = null;
	var firstPgmId = null;

	// 메뉴 정보 복사 
	if ( F_CURR_MID_CD != dsMenu.getColumn(nRow, "REMARK") ) 
	{
		// 현재 중분류 
		F_CURR_MID_CD =  dsMenu.getColumn(nRow, "REMARK");
		// 복사 처리 
		var dsLeft = global.FRM_LEFT.ds_leftMenu;
		dsLeft.fireevent = false;
		dsLeft.clearData();
		
		var sc = gds_auth.findRow("MID_CD",F_CURR_MID_CD);
		var rc = gds_auth.rowCount();

		for( var r = sc; r < rc; r++ ) 
		{
			if ( gds_auth.getColumn(r, "MID_CD") != F_CURR_MID_CD ) 
			{
				// continue;
				break;
			}			
			// 사용 권한 없음. 
			// if ( ufn_getMyLevel( gds_auth.getColumn(r, "PGM_ID") ) > toNumber(gds_auth.getColumn(r, "PGM_LEVEL")) ) 
			// {
				// continue;
			// }		
			// pgm_url 없거나 , popup_yn - y 안됨. 
			if ( length( gds_auth.getColumn(r, "PGM_URL") ) == 0 || gds_auth.getColumn(r, "POPUP_YN") == "Y" ) 
			{
				continue;
			}		
			// 이중등록
			// if ( dsLeft.findRow("PGM_ID", gds_auth.getColumn(r, "PGM_ID")) != -1 ) 
			// {
				// continue;
			// }
			
			// 복사 
			var newRow = dsLeft.addRow();
			dsLeft.setColumn(newRow, "PGM_ID",      gds_auth.getColumn(r, "PGM_ID") );
			dsLeft.setColumn(newRow, "PGM_NAME",    gds_auth.getColumn(r, "PGM_NAME") );
			dsLeft.setColumn(newRow, "MENU_LEVEL",  2 );
			dsLeft.setColumn(newRow, "BIG_CD",      gds_auth.getColumn(r, "BIG_CD") );
			dsLeft.setColumn(newRow, "MID_CD",      gds_auth.getColumn(r, "MID_CD") );
			dsLeft.setColumn(newRow, "SMALL_CD",    gds_auth.getColumn(r, "SMALL_CD") );
			dsLeft.setColumn(newRow, "IMG_COL",     "1");

			if ( prevSmallCd != gds_auth.getColumn(r, "SMALL_CD") ) 
			{
				smallCd[cnt++] = gds_auth.getColumn(r, "SMALL_CD");
				prevSmallCd = gds_auth.getColumn(r, "SMALL_CD");
			}
			if ( newRow == 0 ) 
			{
				firstPgmId = gds_auth.getColumn(r, "PGM_ID");
			}
		}	// end for 
		
		// 소분류 정보 복사 
		for( var i = 0; i < smallCd.length; i++ ) 
		{
			// var sR = dsLeft.findRow("PGM_ID", smallCd[i]);
			
			// if ( sR == -1 ) 
			// {
				var newRow = dsLeft.insertRow(dsLeft.findRow("SMALL_CD", smallCd[i]));
				var mRow = gds_menu.searchRow("REMARK==" + quote(smallCd[i]));

				dsLeft.setColumn(newRow, "PGM_ID", smallCd[i]);
				dsLeft.setColumn(newRow, "PGM_NAME", gds_menu.getColumn(mRow, "PGM_NAME") );
				dsLeft.setColumn(newRow, "MENU_LEVEL", 1 );
				dsLeft.setColumn(newRow, "BIG_CD", "00");
				dsLeft.setColumn(newRow, "MID_CD", F_CURR_MID_CD);
				dsLeft.setColumn(newRow, "SMALL_CD",smallCd[i] );
				dsLeft.setColumn(newRow, "IMG_COL", "0");
			// }
		}
		
		dsLeft.fireevent = true;
		dsLeft.row = 1;
	}	// end if 
		
	pDiv_menu.ClosePopup(null);

	// 메뉴 보여주기 
	ufn_showMenu();

	// 프로그램 호출 
	if ( firstPgmId != null ) 
	{
		//ufc_openForm( firstPgmId );
	}
}
/********************************************************************************
* 기      능   :  window 정렬 기능 
********************************************************************************/
function img_icon_OnClick(obj,nX,nY)
{
	var x = ClientToScreenX(obj, 0);
	var y = ClientToScreenY(obj, 0) + obj.height + 5;
	pDiv_icon.TrackPopup(x, y);
}
/********************************************************************************
* 기      능   :  window 정렬 기능 - 계단식 정렬 
********************************************************************************/
function pDiv_icon_img_arrangeC_OnClick(obj,nX,nY)
{
	ufn_arrangeWindowC();
}
/********************************************************************************
* 기      능   :  가로 
********************************************************************************/
function pDiv_icon_img_arrangeH_OnClick(obj,nX,nY)
{
	ufn_arrangeWindowTile("H");
}
/********************************************************************************
* 기      능   :  세로 
********************************************************************************/
function pDiv_icon_img_arrangeV_OnClick(obj,nX,nY)
{
	ufn_arrangeWindowTile("V");
}
/********************************************************************************
* 기      능   :  바둑판식 
********************************************************************************/
function pDiv_icon_img_arrangeM_OnClick(obj,nX,nY)
{
	ufn_arrangeWindowTile("M");
}
/********************************************************************************
* 기      능   :  창 전체 닫기 
********************************************************************************/
function pDiv_icon_img_closeAll_OnClick(obj,nX,nY)
{
	for (var i=0; i<global.Windows.count; i++) 
	{
		if (i < F_G_WIN_CNT) 
		{
			continue;	// Frame Window면 통과
		}
		
		if( global.Windows[i].id == "HOME" ) 
		{
			continue;
		}
		
		global.Windows[i].onUnLoadcompleted = "";
		global.Windows[i].close();
	}
	
	tab_menu.onChanged = "";
	tab_menu.onChanging = "";
	for( var i = tab_menu.tabCount-1; i > 0; i-- ) 
	{
		if ( tab_menu.getItem(i).id == "HOME") 
		{
			continue;
		}
		tab_menu.DeleteTab(i);
	}
	
	tab_menu.onChanged = "ufn_OnTabChanged";
	tab_menu.onChanging = "ufn_OnTabChaning";
}
/********************************************************************************
* 기      능   :  쪽지 읽어 오기 
********************************************************************************/
function main_top_OnTimer(obj,nEventID)
{
	if( nEventID == 100 ) 			// 쪽지 읽는 이벤트
	{
		KillTimer(nEventID);
		ufn_queryMsg();
	}
	else if( nEventID == 9000 ) 	// 서버시간 불러오기
	{
		gfn_getCurrDate2();
	}else if( nEventID == 101 ) 	// 서버시간 불러오기
	{
		if(sso.errorNo == 2){
			KillTimer(nEventID);
			img_logout_OnClick();
		}
	}
}
/********************************************************************************
* 기      능   :  사용자 정보 입력
********************************************************************************/
/*function img_join_OnClick(obj,nX,nY)
{
	gfn_openPopupUrl("WB01::WB0199021G.xml", true, 220, 570);
}*/
/********************************************************************************
* 기      능   :  Home으로 이동 
********************************************************************************/
function img_home_OnClick(obj,nX,nY)
{
	ufn_goHome();
}
/********************************************************************************
* 기      능   :  쪽지 보기 
********************************************************************************/
var F_OPEN_NOTE = false;

function img_note_OnClick(obj,nX,nY)
{
	KillTimer(100);
	F_OPEN_NOTE = true;
	obj.imageId = "btn_sys_note";
	gfn_openPopupUrl("WB01::WB0199041A.xml", false);
	SetTimer(100, F_READ_MSG_TIME);
	F_OPEN_NOTE = false;
}
/********************************************************************************
* 기      능   :  내 정보 수정 
********************************************************************************/
function img_myInfo_OnClick(obj,nX,nY)
{
	gfn_openPopupUrl("WB01::WB0199021D.xml", true, 220, 570);
}
/********************************************************************************
* 기      능   :  공지사항 보여주기 
********************************************************************************/
function img_notice_OnClick(obj,nX,nY)
{
	// 공지사항 보여주기 
	gfn_openPopupUrl("WB01::WB0199051A.xml", true, "fa_gubun='1'");
}
/********************************************************************************
* 기      능   :   이미지 보여주기 
********************************************************************************/
function img_ci_OnClick(obj,nX,nY)
{
	gfn_openPopupUrl("WB01::CommChangeUserForm.xml", true);
}

function main_top_OnSize(obj,nCx,nCy,nState)
{
	Image1.Right = nCx + 14;
}
]]></Script>
</Window>