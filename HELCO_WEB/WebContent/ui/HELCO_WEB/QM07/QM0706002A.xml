<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="QM0706002A" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="(UP)항목별&#32;도면/자재&#32;기준&#32;등록" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="GJAHR" size="256" type="STRING"/>
					<colinfo id="DEPT" size="256" type="STRING"/>
					<colinfo id="ITEM" size="256" type="STRING"/>
					<record>
						<DEPT></DEPT>
						<GJAHR></GJAHR>
						<ITEM></ITEM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list" OnColumnChanged="fn_ds_list_OnColumnChanged" OnRowInserted="fn_ds_list_OnRowInserted">
				<Contents>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEM" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNRNM" size="256" summ="default" type="STRING"/>
					<colinfo id="BFUAMT" size="256" summ="default" type="STRING"/>
					<colinfo id="AFUAMT" size="256" summ="default" type="STRING"/>
					<colinfo id="SVAMT" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="DEPT" size="256" summ="default" type="STRING"/>
					<colinfo id="GJAHR" size="256" summ="default" type="STRING"/>
					<colinfo id="BFMATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="BFMATNRNM" size="256" summ="default" type="STRING"/>
					<colinfo id="REGDT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_gjahr_cd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_dept_cd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_item_cd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_gubun_cd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<record>
						<CODE>1</CODE>
						<CODE_NAME>자재</CODE_NAME>
					</record>
					<record>
						<CODE>2</CODE>
						<CODE_NAME>도면</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_excel">
				<Contents>
					<colinfo id="NO" size="256" type="STRING"/>
					<colinfo id="FLAG" size="256" type="STRING"/>
					<colinfo id="ITEM" size="256" type="STRING"/>
					<colinfo id="GUBUN" size="256" type="STRING"/>
					<colinfo id="BFMATNR" size="256" type="STRING"/>
					<colinfo id="BFMATNRNM" size="256" type="STRING"/>
					<colinfo id="BFUAMT" size="256" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="MATNRNM" size="256" type="STRING"/>
					<colinfo id="AFUAMT" size="256" type="STRING"/>
					<colinfo id="SVAMT" size="256" type="STRING"/>
					<colinfo id="BIGO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_delete_cond" OnColumnChanged="fn_ds_list_OnColumnChanged" OnRowInserted="fn_ds_list_OnRowInserted">
				<Contents>
					<colinfo id="FLAG" size="256" type="STRING"/>
					<colinfo id="ITEM" size="256" type="STRING"/>
					<colinfo id="DEPT" size="256" type="STRING"/>
					<colinfo id="GJAHR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_matnr_cond">
				<Contents>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="GUBUN" size="256" type="STRING"/>
					<record>
						<GUBUN></GUBUN>
						<MATNR></MATNR>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_matnr_list">
				<Contents>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="MATNRNM" size="256" type="STRING"/>
					<record>
						<MATNR></MATNR>
						<MATNRNM></MATNRNM>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="30" Height="30" Id="Shape0" Left="0" LineColor="user1" Right="978" TabOrder="4" Top="0" Type="Rectangle" Width="978"></Shape>
		<Static Align="Right" Height="20" Id="st_gjahr" Left="5" Style="sty_lb_search" TabOrder="5" Text="기준년도&#32;" Top="5" VAlign="Middle" Width="80"></Static>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="554" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="498" Id="grd_list" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" OnExpandEdit="fn_grd_list_OnExpandEdit" Right="966" RowHeight="20" Style="sty_grid" TabOrder="3" TabStop="true" Top="56" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="958">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="40"/>
						<col fix="left" width="30"/>
						<col fix="left" width="309"/>
						<col fix="left" width="60"/>
						<col width="170"/>
						<col width="230"/>
						<col width="110"/>
						<col width="170"/>
						<col width="230"/>
						<col width="110"/>
						<col width="110"/>
						<col width="100"/>
						<col width="190"/>
					</columns>
					<head>
						<cell col="0" display="text" font="굴림,9" rowspan="2" text="No"/>
						<cell col="1" display="text" font="굴림,9" rowspan="2" text="변경"/>
						<cell col="2" display="text" font="굴림,9" rowspan="2" text="항목"/>
						<cell col="3" display="text" font="굴림,9" rowspan="2" text="구분"/>
						<cell col="4" colspan="3" display="text" font="굴림,9" text="상승전"/>
						<cell col="4" display="text" font="굴림,9" row="1" text="도면/자재&#32;번호">
							<cell col="0" display="text" font="굴림,9" text="도면/자재&#32;번호"/>
						</cell>
						<cell col="5" display="text" font="굴림,9" row="1" text="품명">
							<cell col="0" display="text" font="굴림,9" text="품명"/>
						</cell>
						<cell col="6" display="text" font="굴림,9" row="1" text="단가">
							<cell col="0" display="text" font="굴림,9" text="단가"/>
						</cell>
						<cell col="7" colspan="3" display="text" font="굴림,9" text="상승후"/>
						<cell col="7" display="text" font="굴림,9" row="1" text="도면/자재&#32;번호"/>
						<cell col="8" display="text" font="굴림,9" row="1" text="품명"/>
						<cell col="9" display="text" font="굴림,9" row="1" text="단가"/>
						<cell col="10" display="text" font="굴림,9" rowspan="2" text="상승단가"/>
						<cell col="11" display="text" font="굴림,9" rowspan="2" text="등록일자"/>
						<cell col="12" display="text" font="굴림,9" rowspan="2" text="비고"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
						<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
						<cell align="left" bkcolor2="user22" col="2" colid="ITEM" combocol="CODE" combodataset="ds_item_grid" combotext="CODE_NAME" display="combo" edit="expr:decode(FLAG,&#32;&apos;I&apos;,&#32;&apos;combo&apos;,&#32;&apos;none&apos;)"/>
						<cell align="center" bkcolor2="user22" col="3" colid="GUBUN" combocol="CODE" combodataset="ds_gubun_cd" combotext="CODE_NAME" display="combo" edit="expr:decode(FLAG,&#32;&apos;I&apos;,&#32;&apos;combo&apos;,&#32;&apos;none&apos;)"/>
						<cell align="center" bkcolor2="user22" checklength="Byte" col="4" colid="BFMATNR" display="text" expandchar="선택" expandshow="expr:iif(FLAG&#32;==&#32;&apos;I&apos;,&#32;true,&#32;false)" expandsize="30" limit="30"/>
						<cell align="left" bkcolor2="user22" col="5" colid="BFMATNRNM" display="text"/>
						<cell align="right" bkcolor2="user22" col="6" colid="BFUAMT" display="number" edit="number" Mask="###,###,###,##0"/>
						<cell align="center" bkcolor2="user22" checklength="Byte" col="7" colid="MATNR" display="text" expandchar="선택" expandshow="expr:iif(FLAG&#32;==&#32;&apos;I&apos;,&#32;true,&#32;false)" expandsize="30" limit="30"/>
						<cell align="left" bkcolor2="user22" col="8" colid="MATNRNM" display="text"/>
						<cell align="right" bkcolor2="user22" col="9" colid="AFUAMT" display="number" edit="number" Mask="###,###,###,##0"/>
						<cell align="right" bkcolor2="user22" col="10" colid="SVAMT" display="number" edit="number" Mask="###,###,###,##0"/>
						<cell align="center" bkcolor2="user22" col="11" colid="REGDT" display="text" Mask="####.##.##"/>
						<cell align="left" bkcolor2="user22" checklength="Byte" col="12" colid="BIGO" display="text" edit="normal" limit="100"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="GJAHR" DataColumn="CODE_NAME" Height="20" Id="cb_gjahr" InnerDataset="ds_gjahr_cd" Left="86" OnChanged="fn_cb_gjahr_OnChanged" Style="sty_ipt_search" TabOrder="1" Top="4" Width="75"></Combo>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="DEPT" DataColumn="CODE_NAME" Height="20" Id="cb_dept" InnerDataset="ds_dept_cd" Left="273" OnChanged="fn_cb_dept_OnChanged" Style="sty_ipt_search_ind" TabOrder="2" Top="4" Width="100"></Combo>
		<Static Align="Right" Height="20" Id="st_dept" Left="200" Style="sty_lb_search" TabOrder="6" Text="부서명&#32;" Top="5" VAlign="Middle" Width="72"></Static>
		<Static Align="Right" Height="20" Id="st_item" Left="416" Style="sty_lb_search" TabOrder="7" Text="항목&#32;" Top="5" VAlign="Middle" Width="72"></Static>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="ITEM" DataColumn="CODE_NAME" Height="20" Id="cb_item" InnerDataset="ds_item_cd" Left="489" Style="sty_ipt_search_ind" TabOrder="8" Top="4" Width="479"></Combo>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_import" ImageID="btn_sub_05" Left="883" LeftMargin="12" OnClick="btn_import_OnClick" Style="sty_btn" TabOrder="9" Text="엑셀&#32;Import" Top="33" Transparent="TRUE" Width="88"></Button>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

var F_ADMIN_DEPT = "F2,F6";	// 효율개선부 -> 총무부로 변경(조직개편2016.04), 정보기술실(관리부서)		
var F_ADMIN_YN   = "Y";		// 관리부서 여부
var F_QUERY_YN   = "N";		// 조회여부
var F_SAVE_SAVE  = "";		// excel import 시 사용

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initForm(true);

	var curYear = substr(gfn_getCurrDate(),0,4);
	fn_makeYear(curYear,-2,1);

	cb_gjahr.SetFocus();

	// 관리부서가 아닌경우 부서정보 변경 불가
	if (IndexOf(F_ADMIN_DEPT, G_DPT1) == -1)		{
		F_ADMIN_YN = "N";
	}

	// 추후 정보 확인 후 삭제 필요 &&&&
	if (length(trim(G_DPT1)) == 0)	{
		F_ADMIN_YN = "Y";
	}

	// 부서정보  활성화
	if (F_ADMIN_YN == "Y")		{
		cb_dept.Enable      = true;
		cb_dept.Value       = "";
	}else	{
		cb_dept.Enable      = true;
	}
	
	if(F_ADMIN_YN == "Y")
	{
		// 원가절감 부서정보 조회
		var codeArr    = ["QM01"];
		var dsObjArr   = [ds_dept_cd];
		var addTypeArr = [G_CODE_NONE];
		gfn_searchCommCode(codeArr, dsObjArr, addTypeArr);
	}
	else
	{
		// 로그인 사용자별 권한에 따른 부서정보 조회
		tit_clearActionInfo();
		tit_addSearchActionInfo("qm07:QM0701001A_S4");
	
		tit_callService(
			  ""
			, ""
			, "ds_cond=ds_cond"
			, "ds_dept_cd=ds_dept_cd"
			, ""
			, "fn_completeInit"
			, true);
	}
}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}

/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
    ds_dept_cd.Filter("CODE<>'CK'");
	cb_dept.Value = G_DPT1;
	

	// 원가상승 항목등록에서 호출된 경우
	if (isExistVar("P_DEPT", true))	{
		cb_dept.onChanged = "";
		cb_dept.Value = P_DEPT;
		cb_dept.onChanged = "fn_cb_dept_OnChanged";
	}

	// 항목정보 조회
	tit_clearActionInfo();
	tit_addSearchActionInfo("qm07:QM0706002A_S1");
	tit_callService(
          ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_item_cd=ds_item_cd"
        , ""
        , "fn_afterItemQuery"
        , true);
}

/********************************************************************************
* 기      능   : 기준년도 계산(현재년도,당해년도에서 뺄 년수, 당해년도에서 더할 년수
********************************************************************************/
function fn_makeYear(curYear,sNum,eNum)
{
	var rowCnt = eNum-sNum;
	var row = 0;

	for(var i=rowCnt; i>-1; i--)
	{
		ds_gjahr_cd.AddRow();
		ds_gjahr_cd.SetColumn(row,"CODE",parseInt(curYear)+i+parseInt(sNum));
		ds_gjahr_cd.SetColumn(row,"CODE_NAME",(parseInt(curYear)+i+parseInt(sNum))+"년");
		row++;
	}

	// 원가상승 항목등록에서 호출된 경우
	if (isExistVar("P_GJAHR", true))	{
		cb_gjahr.Value = P_GJAHR;
	}else	{
		cb_gjahr.index = eNum;
	}
}

/********************************************************************************
* 기      능   : 항목(내역)정보 조회 (최초 화면 로딩 시에만 적용)
********************************************************************************/
function fn_afterItemQuery(errCode, errMsg) {

	Destroy("ds_item_grid");
	Create("Dataset", "ds_item_grid");
	
	ds_item_grid.Copy("ds_item_cd");

	ds_item_cd.InsertRow(0);
	ds_item_cd.SetColumn(0, "CODE", "");
	ds_item_cd.SetColumn(0, "CODE_NAME", "전체");

	cb_item.Value = "";

	// 원가상승 항목등록에서 호출된 경우 (최초 화면 로딩 시에만 적용)
	if (isExistVar("P_ITEM", true))	{
		cb_item.Value = P_ITEM;
		fn_query();
	}
}

/********************************************************************************
* 기      능   : 항목(내역)정보 조회
********************************************************************************/
function fn_afterItemQuery2(errCode, errMsg) {

	Destroy("ds_item_grid");
	Create("Dataset", "ds_item_grid");
	
	ds_item_grid.Copy("ds_item_cd");

	ds_item_cd.InsertRow(0);
	ds_item_cd.SetColumn(0, "CODE", "");
	ds_item_cd.SetColumn(0, "CODE_NAME", "전체");

	cb_item.Value = "";
}

/********************************************************************************
* 기      능   : 조회 (header 조회)
********************************************************************************/
function fn_query() {
	gfn_showMsg("");

	//년도필드 필수체크	
	if(gfn_isNull(cb_gjahr, true, st_gjahr.value))
		return;

	//부서필드 필수체크	
	if(gfn_isNull(cb_dept, true, st_dept.value))
		return;

	F_SAVE_SAVE = "";

	// HTTP SESSION TIMEOUT을 변경
	//http.TimeOut = 1800;

	tit_clearActionInfo();
	tit_addSearchActionInfo("qm07:QM0706002A_S2");

	tit_callService(
          ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_list=ds_list"
        , ""
        , "fn_afterQuery"
        , true);
}
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {

	if (errCode = 0)	{
		F_QUERY_YN = "Y";	// 정상조회
	}

	gfn_showSearchMsg(grd_list, errCode, errMsg);
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================

/********************************************************************************
* 기      능   : 입력  
********************************************************************************/
function fn_input()	{

	gfn_showMsg("");

	if (F_QUERY_YN == "N")	{
		gfn_showMsg("CW00054");
		return;
	}

	//년도필드 필수체크	
	if(gfn_isNull(cb_gjahr, true, st_gjahr.value))
		return;

	//부서 필수체크	
	if(gfn_isNull(cb_dept, true, st_dept.value))
		return;

	//항목 필수체크	
	if(gfn_isNull(cb_item, true, st_item.value))
		return;

	// 레코드 추가
	ds_list.AddRow();	
}

/********************************************************************************
* 기      능   : 삭제 
********************************************************************************/
function fn_delete()	{

	gfn_showMsg("");

	var vMsg = "삭제 대상을";
	if (ds_list.currow < 0)	{
		gfn_showMsg("CW00116", vMsg);
		return;
	}

	if (ds_list.GetColumn(ds_list.currow, "FLAG") == "I")	{
		// 레코드 삭제 (추가건으로 화면상에서 제거)
		ds_list.DeleteRow(ds_list.currow);
	}else	{
		if (ds_list.GetColumn(ds_list.currow, "FLAG") == "D")	{
			// 레코드 상태 원복
			ds_list.SetColumn(ds_list.currow, "FLAG",  "");
		}else	{
			// 레코드 삭제 상태로 변경
			ds_list.SetColumn(ds_list.currow, "FLAG",  "D");
		}
	}
}

/********************************************************************************
* 기      능   : 저장
********************************************************************************/
function fn_save()	{

	gfn_showMsg("");

	if (!ds_list.GetUpdate())	{
		gfn_showAlert("CW00005");
		return;
	}

	if (!fn_save_check())	{
		return;
	}

	if (F_SAVE_SAVE == "Y")		{
		;
	}

	if (!gfn_showConfirm("CI00008"))	{
		return;
	}

	if (F_SAVE_SAVE != "Y")		{	// 기본 처리
		tit_clearActionInfo();
		tit_addSaveActionInfo(
			  "qm07:QM0706002A_I1"
			, "qm07:QM0706002A_U1"
			, "qm07:QM0706002A_D1"
			, "FLAG");
	
		tit_callService(
			""
			, ""
			, "ds_list=ds_list:U"
			, ""
			, ""
			, "fn_afterSave");
	}else	{	// excel import 처리	(기존 정보 삭제 후 저장)
		// 삭제 조건 처리
		ds_list.InsertRow(0);
		ds_list.SetColumn(0, "FLAG",  "D");
		ds_list.SetColumn(0, "ITEM",  cb_item.Value);
		ds_list.SetColumn(0, "DEPT",  cb_dept.Value);
		ds_list.SetColumn(0, "GJAHR", cb_gjahr.Value);

		tit_clearActionInfo();
		tit_addSaveActionInfo(
			  "qm07:QM0706002A_I1"
			, ""
			, "qm07:QM0706001A_D3"
			, "FLAG");

		tit_callService(
			""
			, ""
			, "ds_list=ds_list:A"
			, ""
			, ""
			, "fn_afterSave");
	}
}

/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) 	{
	if ( errCode != 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");		
	}
	F_SAVE_EXCEL = "";
	fn_query();
}

/********************************************************************************
* 기      능   : 저장 전 유효성 체크
********************************************************************************/
function fn_save_check()	{
	for (var nRow = 0; nRow < ds_list.GetRowCount(); nRow++)	{
		if (ds_list.GetColumn(nRow, "FLAG") == "I" ||
		    ds_list.GetColumn(nRow, "FLAG") == "U")
		{

			//항목
			if (!fn_dataSetIsNullCheck(ds_list, nRow, "ITEM"))	{
				var arr = [nRow+1, "항목"];
				gfn_showMsg("CW00224",arr);
				fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"ITEM"));
				return false;
			}

			//구분(자재, 도면)
			if (!fn_dataSetIsNullCheck(ds_list, nRow, "GUBUN"))	{
				var arr = [nRow+1, "구분"];
				gfn_showMsg("CW00224",arr);
				fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"GUBUN"));
				return false;
			}

			//도면/자재 번호
			if (!fn_dataSetIsNullCheck(ds_list, nRow, "MATNR"))	{
				var arr = [nRow+1, "도면/자재 번호"];
				gfn_showMsg("CW00224",arr);
				fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"MATNR"));
				return false;
			}

			//상승전
			if (!fn_dataSetIsNullCheck(ds_list, nRow, "BFUAMT"))	{
				var arr = [nRow+1, "상승전 단가"];
				gfn_showMsg("CW00224",arr);
				fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"BFUAMT"));
				return false;
			}
			if (ds_list.GetColumn(nRow, "BFUAMT") < 0)	{
				var arr = [nRow+1, "상승전 단가"];
				gfn_showMsg("CW00055",arr);
				fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"BFUAMT"));
				return false;
			}
			
			//상승후
			if (!fn_dataSetIsNullCheck(ds_list, nRow, "AFUAMT"))	{
				var arr = [nRow+1, "상승후 단가"];
				gfn_showMsg("CW00224",arr);
				fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"AFUAMT"));
				return false;
			}
			if (ds_list.GetColumn(nRow, "AFUAMT") < 0)	{
				var arr = [nRow+1, "상승후 단가"];
				gfn_showMsg("CW00055",arr);
				fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"AFUAMT"));
				return false;
			}

			// 2013.07.26 비교로직제거 요청
			//if (toNumber(ds_list.GetColumn(nRow, "BFUAMT")) < toNumber(ds_list.GetColumn(nRow, "AFUAMT")))	{
			//	gfn_showMsg((nRow+1) + "번째 " + "절감후 단가는 절감전 단가보다 클 수 없습니다.");
			//	fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"BFUAMT"));
			//	return false;
			//}

			//상승액
			if (!fn_dataSetIsNullCheck(ds_list, nRow, "SVAMT"))	{
				var arr = [nRow+1, "상승단가"];
				gfn_showMsg("CW00224",arr);
				fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"SVAMT"));
				return false;
			}
			// 2013.07.26 마이너스 금액 가능
			//if (ds_list.GetColumn(nRow, "SVAMT") < 0)	{
			//	var arr = [nRow+1, "절감단가"];
			//	gfn_showMsg("CW00055",arr);
			//	fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"SVAMT"));
			//	return false;
			//}
		}
	}
	return true;
}

/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	//gfn_saveToExcel(grd_list, true );
	//if (ds_list.GetRowCount() > 0)
		gfn_exportExcel(grd_list, "QM0706002A" );
}

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}

/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function fn_grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if ( nCell == 0 ) {
		// 현재 처리할 format 기억
		gfn_selectGridCol("grd_list");
	} else {
		gfn_sortGrid(obj,nCell);
	}
}


/********************************************************************************
* 기      능   : 데이터Set 추가
********************************************************************************/
function fn_ds_list_OnRowInserted(obj,nRow,nCount)
{
	ds_list.SetColumn(nRow, "FLAG",  "I");
	ds_list.SetColumn(nRow, "DEPT",  cb_dept.Value);
	ds_list.SetColumn(nRow, "GJAHR", cb_gjahr.Value);
	ds_list.SetColumn(nRow, "ITEM",  cb_item.Value);
	ds_list.SetColumn(nRow, "WAERK", "KRW");	// 원화Setting
}

/********************************************************************************
* 기      능   : 입력/수정의 항목의 필드 필수 확인 
********************************************************************************/
function fn_dataSetIsNullCheck(obj, nRow, colNm) {
	if (length(trim(obj.GetColumn(nRow, colNm))) == 0)	{
		return false;		
	}

	return true;
}

/********************************************************************************
* 기      능   : 항목 수정
********************************************************************************/
function fn_ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if (ds_list.getColumn(nRow, "FLAG") != "I")	{
		if (strColumnID != "FLAG")	{
			if (varOldValue != varNewValue)		{
				ds_list.SetColumn(nRow, "FLAG",  "U");
			}
		}
	}else	{
		// 항목 및 구분 변경 시 도면/자재 및 품명Clear
		if (strColumnID == "ITEM" || strColumnID == "GUBUN")	{
			ds_list.SetColumn(nRow, "MATNR", "");
			ds_list.SetColumn(nRow, "MATNRNM", "");
			ds_list.SetColumn(nRow, "BFUAMT", "");
			ds_list.SetColumn(nRow, "AFUAMT", "");
			ds_list.SetColumn(nRow, "SVAMT", "");
			ds_list.SetColumn(nRow, "BIGO", "");
		}
	}

	if (strColumnID == "BFUAMT" || strColumnID == "AFUAMT")	{
		var vBfuamt = ds_list.GetColumn(nRow, "BFUAMT");
		var vAfuamt = ds_list.GetColumn(nRow, "AFUAMT");

		if (toNumber(vBfuamt) > 0 && toNumber(vAfuamt) > 0)	{
			//ds_list.SetColumn(nRow, "SVAMT", toNumber(vBfuamt) - toNumber(vAfuamt));
			ds_list.SetColumn(nRow, "SVAMT", toNumber(vAfuamt) - toNumber(vBfuamt));
		}
	}
}

/********************************************************************************
* 기      능   : 기준년도 변경 시
********************************************************************************/
function fn_cb_gjahr_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
	// 기준년도 변경 시 항목 정보 재 조회
	if (nOldIndex != nNewIndex)	{
		ds_item_cd.ClearData();

		fn_queryItem();
	}
}

/********************************************************************************
* 기      능   : 부서 정보 변경 시
********************************************************************************/
function fn_cb_dept_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
	// 부서정보 변경 시 항목 정보 재 조회
	if (nOldIndex != nNewIndex)	{
		ds_item_cd.ClearData();

		fn_queryItem();
	}
}

/********************************************************************************
* 기      능   : 항목 조회
********************************************************************************/
function fn_queryItem()	{
	// 항목정보 조회
	tit_clearActionInfo();
	tit_addSearchActionInfo("qm07:QM0706002A_S1");
	tit_callService(
		  ""
		, ""
		, "ds_cond=ds_cond"
		, "ds_item_cd=ds_item_cd"
		, ""
		, "fn_afterItemQuery2"
		, true);
}

/********************************************************************************
* 기      능   : Grid 포커스
********************************************************************************/
function fn_SetFocusGrid(pObjGrd, pRowNum, pColNum)  
{   
	var ObjDataset =  object(pObjGrd.BindDataset);
	
	pObjGrd.SetFocus();
	pObjGrd.SetCellPos(pColNum);
	
	ObjDataset.Fireevent 	= false; 
	ObjDataset.row 			= pRowNum;
	ObjDataset.Fireevent 	= true;
}

/********************************************************************************
* 기      능   : Grid 선택 클릭 시
********************************************************************************/
function fn_grd_list_OnExpandEdit(obj,nRow,nCell,strVal,nPivotIndex)
{
	var vColId   = gfn_getColIdx(grd_list,"MATNR");
	var vBfColId = gfn_getColIdx(grd_list,"BFMATNR");	//이전 도면/자재 번호 클릭 시

	// 도면/자재 번호 클릭 시
	if (nCell == vColId || nCell == vBfColId)	{
		// 항목 우선 선택
		if (!fn_dataSetIsNullCheck(ds_list, nRow, "ITEM"))	{
			var arr = ["도면/자재 번호", "항목"];
			gfn_showMsg("CW00004",arr);
			fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"ITEM"));
			return false;
		}

		// 구분을 우선 선택
		if (!fn_dataSetIsNullCheck(ds_list, nRow, "GUBUN"))	{
			var arr = ["도면/자재 번호", "구분"];
			gfn_showMsg("CW00004",arr);
			fn_SetFocusGrid(grd_list, nRow, gfn_getColIdx(grd_list,"GUBUN"));
			return false;
		}

		// POP-UP 화면 호출
		var arg = "";
		var arr = gfn_openPopup("MM0901002B", true, arg);

		if (arr != null && arr != 0)	{
			var vMatnr = "";

			if (ds_list.GetColumn(nRow, "GUBUN") == "1")	{	// 1 : 자재, 2 : 도면
				vMatnr = arr[0];

				if (nCell == vColId)	{
					ds_list.SetColumn(nRow, "MATNRNM", arr[2]);			// 품명 (자재번호의 경우만 표시)
				}else if (nCell == vBfColId)	{
					ds_list.SetColumn(nRow, "BFMATNRNM", arr[2]);		// 품명 (자재번호의 경우만 표시)
				}
			}else	{
				if (length(trim(arr[5])) == 0)	{
					var vMsg = "도면번호";

					if (nCell == vBfColId)	{
						vMsg = "이전 도면번호";
					}
					gfn_showMsg("CW00038", vMsg);
					return;
				}
				vMatnr = arr[5];
			}

			// 중복 등록 여부 확인
			if (nCell == vColId)	{
				var vSearchRow = ds_list.SearchRow("ITEM ==" + quote(ds_list.GetColumn(nRow, "ITEM")) + "&& MATNR ==" + quote(vMatnr));
				if (vSearchRow != -1)	{
					var vMsg = "도면/자재 번호 : " + vMatnr;
					gfn_showMsg("CW00040", vMsg);
					return;
				}

				ds_list.SetColumn(nRow, "MATNR", vMatnr);
			}else if (nCell == vBfColId)	{
				ds_list.SetColumn(nRow, "BFMATNR", vMatnr);
			}
		}
	}
}

/*********************************************************************
* Function : 엑셀파일을 DataGrid로 업로드
* Argument : objGrid	- 엑셀업로드 대상이 되는 그리드
*            strDsName	- 그리드에 매핑된 데이타셋 이름
* Return   : 
**********************************************************************/
function ufn_ExcelToGrid(objGrid, strDsName){
	//Dialog 생성
	if(!IsValid(object("_fdgCommon"))){
		Create( "FileDialog" , "_fdgCommon");
	}
	_fdgCommon.Type = "Open";
	_fdgCommon.Filter = "Excel 통합문서 (*.xlsx)|*.xlsx|Excel 97-2003 통합문서 (*.xls)|*.xls|";

	//실패시 컴포넌트 제거
	if(!_fdgCommon.Open()){
		Destroy("_fdgCommon");
	}
	
	objGrid.redraw = false;
	var IRtn = ext_ExcelImportByIndex(_fdgCommon.FilePath +"\\"+_fdgCommon.FileName,0,strDsName,1, 1, 0, 3,,);
	objGrid.redraw = true;
	Destroy("_fdgCommon");
}


/********************************************************************************
* 기      능   : 엑셀 Import
********************************************************************************/
function btn_import_OnClick(obj)
{
	//년도필드 필수체크	
	if(gfn_isNull(cb_gjahr, true, st_gjahr.value))
		return;

	//부서 필수체크	
	if(gfn_isNull(cb_dept, true, st_dept.value))
		return;

	//항목 필수체크	
	if(gfn_isNull(cb_item, true, st_item.value))
		return;

	F_SAVE_SAVE = "Y";

	ds_list_excel.ClearData();
	fn_createWait("",this);
	ufn_ExcelToGrid(grd_list, "ds_list_excel");

	// 자재 정보 정합성 확인
	fn_checkMatnr(ds_list_excel);

	fn_afterExcelImport(ds_list, ds_list_excel);

	fn_destroyWait();
}

/********************************************************************************
* 기      능   : 엑셀 자료가 import의 자재 정보 확인
********************************************************************************/
function fn_checkMatnr(dsSource)
{
// ITEM 및 자재/도면번호 정보 변경
	for (var i = 0; i < dsSource.GetRowCount(); i++)	{
		var vGubun = decode(dsSource.GetColumn(i, "GUBUN"), "자재", "1", "2");

		// 자재번호를 검증하는 로직 추가 반영
		ds_matnr_cond.ClearData();
		ds_matnr_cond.InsertRow(0);
		ds_matnr_cond.SetColumn(0, "GUBUN", vGubun);
		ds_matnr_cond.SetColumn(0, "MATNR", dsSource.GetColumn(i, "MATNR"));

		tit_clearActionInfo();
		tit_addSearchActionInfo("qm07:QM0706002A_S3");
		tit_callService(
			  ""
			, ""
			, "ds_cond=ds_matnr_cond"
			, "ds_matnr_list=ds_list"
			, ""
			, ""
			, false
			, false
			, true);	// 동기식 처리

		// 정보가 없는 경우 품명에 오류라고 표시
		if(ds_matnr_list.GetRowCount() == 0)		{	// 자료가 없음
			var vMatnrNm = "오류 : " + dsSource.GetColumn(i, "MATNR");
			dsSource.SetColumn(i, "MATNR",   "");
			dsSource.SetColumn(i, "MATNRNM", vMatnrNm);
		}else	{
			dsSource.SetColumn(i, "MATNRNM", ds_matnr_list.GetColumn(0, "MATNRNM"));
		}
	}
}

/********************************************************************************
* 기      능   : 엑셀 자료가 import가 완료된 시점
********************************************************************************/
function fn_afterExcelImport(dsTarget, dsSource)
{
	dsTarget.ClearData();

	// ITEM 및 자재/도면번호 정보 변경
	for (var i = 0; i < dsSource.GetRowCount(); i++)	{
		var vRow = dsTarget.AddRow();

		//dsTarget.SetColumn(vRow, "ITEM",    cb_item.Value);
		var vGubun = decode(dsSource.GetColumn(i, "GUBUN"), "자재", "1", "2");
		dsTarget.SetColumn(vRow, "GUBUN",  vGubun);
		dsTarget.SetColumn(vRow, "MATNR",   dsSource.GetColumn(i, "MATNR"));
		dsTarget.SetColumn(vRow, "MATNRNM", dsSource.GetColumn(i, "MATNRNM"));
		dsTarget.SetColumn(vRow, "BFUAMT",  dsSource.GetColumn(i, "BFUAMT"));
		dsTarget.SetColumn(vRow, "AFUAMT",  dsSource.GetColumn(i, "AFUAMT"));
		if (toNumber(dsSource.GetColumn(i, "SVAMT")) == 0)	{
			//dsTarget.SetColumn(vRow, "SVAMT",   toNumber(dsSource.GetColumn(i, "BFUAMT")) - toNumber(dsSource.GetColumn(i, "AFUAMT")));
			dsTarget.SetColumn(vRow, "SVAMT",   toNumber(dsSource.GetColumn(i, "AFUAMT")) - toNumber(dsSource.GetColumn(i, "BFUAMT")) );
		}else	{
			dsTarget.SetColumn(vRow, "SVAMT",   dsSource.GetColumn(i, "SVAMT"));
		}
		dsTarget.SetColumn(vRow, "BFMATNR",   dsSource.GetColumn(i, "BFMATNR"));		// 이전 도면/자재번호
		dsTarget.SetColumn(vRow, "BFMATNRNM", dsSource.GetColumn(i, "BFMATNRNM"));		// 이전 도면/자재번호
		dsTarget.SetColumn(vRow, "BIGO",      dsSource.GetColumn(i, "BIGO"));
	}
}
]]></Script>
</Window>