<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="Form" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="이동계획&#32;오픈&#32;및&#32;마감" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_output" OnColumnChanged="ds_output_OnColumnChanged" UpdateControl="False">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZMPINC" size="256" type="STRING"/>
					<colinfo id="ZPYM" size="256" type="STRING"/>
					<colinfo id="ZPMONTHS" size="256" type="STRING"/>
					<colinfo id="ZOPFLG" size="256" type="STRING"/>
					<colinfo id="ZCLFLG" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="CDATE" size="256" type="STRING"/>
					<colinfo id="CTIME" size="256" type="STRING"/>
					<colinfo id="CUSER" size="256" type="STRING"/>
					<colinfo id="UDATE" size="256" type="STRING"/>
					<colinfo id="UTIME" size="256" type="STRING"/>
					<colinfo id="UUSER" size="256" type="STRING"/>
					<colinfo id="DDATE" size="256" type="STRING"/>
					<colinfo id="DTIME" size="256" type="STRING"/>
					<colinfo id="DUSER" size="256" type="STRING"/>
					<colinfo id="BTN_EVENT" size="256" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_output" BkColor2="default" BoldHead="true" Border="Flat" Bottom="552" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="520" Id="Grid" InputPanel="FALSE" Left="4" LineColor="user20" LineType="ExHORZ" OnCellClick="Grid_OnCellClick" OnCellPosChanged="Grid_OnCellPosChanged" OnHeadClick="grd_list_OnHeadClick" Right="970" RowHeight="20" Style="sty_grid" TabOrder="-2" TabStop="true" Top="32" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="966">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="30"/>
						<col fix="left" width="0"/>
						<col fix="left" width="0"/>
						<col fix="left" width="0"/>
						<col fix="left" width="0"/>
						<col fix="left" width="70"/>
						<col fix="left" width="38"/>
						<col fix="left" width="64"/>
						<col fix="left" width="75"/>
						<col fix="left" width="67"/>
						<col fix="left" width="44"/>
						<col fix="left" width="36"/>
						<col fix="left" width="316"/>
					</columns>
					<head>
						<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="클라이언트"/>
						<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="이동계획차수"/>
						<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="계획년월"/>
						<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="차수"/>
						<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="편성년월"/>
						<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="편성개월수"/>
						<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="오픈여부"/>
						<cell align="center" col="10" color="user21" colspan="2" display="text" font="굴림,9" text="마감여부"/>
						<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="비고"/>
					</head>
					<body>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox" edit="checkbox"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid='expr:fn_getFlagBkImageID(GetColumn(currow,&#32;&quot;STATUS&quot;))' col="2" display="normal"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="MANDT" display="text"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="ZMPINC" display="text"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" display="text" expr="ZMPINC.substr(0,6)" Mask="####-##"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" display="text" expr="ZMPINC.substr(6,2)"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="ZPYM" display="text" Mask="####-##"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="8" colid="ZPMONTHS" display="normal" edit="combo" limit="2"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="9" colid="ZOPFLG" display="text"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="10" colid="ZCLFLG" display="text" expandimage="bottom_icon_user" expandsize="25"/>
						<cell align="center" bkcolor="user0" bkcolor2="user22" col="11" display="null"/>
						<cell align="left" bkcolor="user0" bkcolor2="user22" col="12" colid="ZRMK" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Shape BKColor="user0" Bottom="26" Height="48" Id="Shape1" Left="0" LineColor="user1" Right="978" TabOrder="2" Top="-22" Type="Rectangle" Width="978"></Shape>
		<Static Align="Right" Height="20" Id="st_year" Left="5" Style="sty_lb_search" TabOrder="2" Text="계획년도&#32;" Top="2" VAlign="Middle" Width="80"></Static>
		<Combo Border="Flat" CodeColumn="CODE" DataColumn="CODE_NAME" Height="20" Id="cb_year" Left="89" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Style="sty_ipt_search" TabOrder="4" Top="1" Width="106"></Combo>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 이동계획 오픈&마감(smp0070)
 * 작  성  자   : 
 * 작성  일자   : 2012.06
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/

#include "LIB::tit_comm_0001.js";	// Server 연결 
#include "LIB::common.js";			// 공통 Script 
#include "LIB::common_sd.js";
//=========================================================================================
// 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// Form Loading 
//=========================================================================================
function fn_OnLoadCompleted(obj) 
{
	// 리사이징
	fn_FormResize(true);	
	
	// 계획년도 콤보 데이타 Load 및 기본값 SETTING 
	var curYear = substr(gfn_getCurrDate(),0,4); 
	fn_Year(curYear,-5,5,0);
				
	// 편성개월수 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
	fn_SetListCode( 8, "months", "ds_months", "N", "grid");
}


/********************************************************************************
* form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) 
{
	// Tab에서 해당 화면 삭제
	return gfn_isFormUnload(obj);
}


/********************************************************************************
* 조회 
********************************************************************************/
var fn_query_chk = false; //중복 조회방지용 flag

function fn_query() { 
	
	//trace("fn_query()호출 start");
	
	// sort mark 삭제 
	gfn_clearGridSortMark(Grid); 
	
	// 출력데이타셋 초기화
	ds_output.ClearData();  	
	
	// 계획년도
	var year = cb_year.value;				// 계획년도
			
	// 필수 체크 - [계획년도]
	if ( length(year) == 0 )
	{
		//"필수 입력항목입니다.\n확인하여 주십시오."
		gfn_showAlert("CW00002", "계획년도");
		cb_year.setFocus();
		return;
	}
	
	if(!fn_query_chk) {
		fn_query_chk = true;
	} else {
		gfn_showAlert("CW10025", "조회중입니다..");
		return;
	}
	
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	
	callServiceN("query"					// srvId
				, "smp0070/find"			// url
				, ""						// biz에서 받는 명, mip에서 보내는 명
				, "ds_output=ds_output"		// mip에서 받는 명, biz에서 보내는 명
				, "year="+year				// strParam
				, "fn_bfCallResult"			// CallBackFunc
				);
 
}

function fn_bfCallResult(strSvcID, nErrorCode, strErrorMag) {
	fn_query_chk = false;
	fn_destroyWait();
	callResult(strSvcID, nErrorCode, strErrorMag);
}

/********************************************************************************
* 마감
* 마감성공  후에는 마감테이블내에 update와 insert를 추가로 처리해줘야 한다.
********************************************************************************/
function fn_copy(flag) { 
	
	//trace("fn_copy()호출 start");
	
	// 계획년도
	var year = cb_year.value;				// 계획년도
			
	callServiceN(flag						// srvId
				, "smp0070/copy"			// url
				, "ds_input=ds_input"		// biz에서 받는 명, mip에서 보내는 명
				, "ds_output=ds_output"		// mip에서 받는 명, biz에서 보내는 명
				, "year="+year+" flag="+flag// strParam
				, ""						// CallBackFunc
				);
 
}


/********************************************************************************
* 조회 Callback  
********************************************************************************/
function fn_afterQuery(strSvcID, nErrorCode, strErrorMag)
{ 
	//trace("@@@@@@@@@@@@@@ call back @@@@@@@@@@@@@@");
	//trace("@@@@@@ strSvcID : "+strSvcID+" / nErrorCode : "+nErrorCode+" / strErrorMag : "+strErrorMag);
	
	// 에러일 경우
	if ( nErrorCode < 0 )
	{
		//  CE00001 : "처리에 실패했습니다.\n확인 후 다시 처리해 주십시오.");
		gfn_showMsg("CE00001");
	}
	else
	{
		// [조회] 일 경우
		if ( strSvcID == "query" )
		{	
			// 건수가 있을경우
			if ( ds_output.GetRowCount() > 0 )
			{
			
				// CI00002 : "조회를 완료했습니다.조회건수 [${}건]"
				gfn_showMsg("CI00002", ds_output.RowCount() + ""); 
								
				// 조회 후 로직
				fn_searchAfter();
			}
			// 건수가 없을경우
			else
			{
				// CW00010 : "데이터가 없습니다."
				gfn_showMsg("CW00010"); 
				
				// 그리드에 표시
				Grid.NoDataText = "조회된 데이터가 없습니다.";
			}
			
		}
		// [copy-마감]일 경우
		else if ( strSvcID == "copy" )
		{
			//trace("@@@@@@@ [copy]마감 성공 후!!");
			
			// 마감 성공후에는
			// [마감여부]컬럼을 [X]로 변경하고
			// 행을 추가하고 추가된 행에 
			// 마감된 row의 정보를 복사한다.
			var nrow = ds_output.GetRowCount();
			ds_output.SetColumn(nrow-1, "ZCLFLG", "X");
			ds_output.AppendRow();
			ds_output.CopyRow(ds_output.row, "ds_output", nrow-1);
			
			// 마감된 row의 정보중 
			// [이동계획차수]로 추가된 행의 이동계획차수를 생성한다.
			// 이동계획차수 생성 전제조건은
			//  - 월별 2건의 차수가 존재
			var zmpinc 			= ds_output.GetColumn(nrow-1, "ZMPINC");// 이동계획차수
			var zmpinc_month 	= substr(zmpinc,4,2);					// 이동계획월
			var zmpinc_day 		= substr(zmpinc,6);						// 이동계획차수
			
			//trace("@@@@@@ zmpinc info --> "+zmpinc+" : "+zmpinc_month+" : "+zmpinc_day);
				
			// 추가된 행에 반영할 [이동계획차수] 값
			var zmpinc_year = substr(zmpinc,0,4);	// 생성될 이동계획 년
			var zmpinc_mon_val;						// 생성될 이동계획 월
			var zmpinc_day_val;						// 생성될 이동계획 차수
			
			// [이동계획차수]가 '02'일 경우
			// 차수는 02 or 01이므로 토글처리해준다.
			// 단, 02->01로 변경시는 월이 증가해야한다.
			// 단, 월이 증가시 값이 12가 넘을경우 01로 셋팅해주고
			// 년도도 증가한다.
			if ( zmpinc_day == '02' ) 
			{ 
				zmpinc_day_val = '01';
				zmpinc_mon_val = toNumber(zmpinc_month) + 1;
				
				if ( toNumber(zmpinc_mon_val) < 10 )
				{
					zmpinc_mon_val = "0"+zmpinc_mon_val;
				}
				else if ( toNumber(zmpinc_mon_val) > 12 )
				{
					zmpinc_mon_val = "01";
					zmpinc_year = toNumber(zmpinc_year)+1;					
				}
			}
			// [이동계획차수]가 '01'일 경우
			// 차수는 02 or 01이므로 토글처리해준다.
			// 월은 변경되지 않으므로 [이동계획월]그대로 셋팅.
			else if ( zmpinc_day == '01' ) 
			{ 
				zmpinc_day_val = '02';
				zmpinc_mon_val = zmpinc_month;
			}
			
			//trace("@@@@@@ zmpinc info --> "+zmpinc+":"+zmpinc_mon_val+":"+zmpinc_day_val);
			
			// dataset에 값을 지정할때
			// dataset에 걸려있는 이벤트가 발생하지 않도록 처리하고,
			// 생성된 [이동계획차수] 데이타를 맵핑한다.
			// 단, [마감여부]컬럼을 []로 설정한다.
			ds_output.fireevent = false;
			ds_output.SetColumn(ds_output.row, "ZMPINC", zmpinc_year+zmpinc_mon_val+zmpinc_day_val );	// 이동계획차수
			ds_output.SetColumn(ds_output.row, "ZPYM", zmpinc_year+zmpinc_mon_val );					// 편성년월
			ds_output.SetColumn(ds_output.row, "ZPMONTHS", "3");										// 편성개월수 - 디폴트[3]
			ds_output.SetColumn(ds_output.row, "ZCLFLG", "");											// 마감여부
			ds_output.fireevent = true;
						
			// 기존에 생성된 dataset을 삭제 후 생성처리.(중복방지를 위함)
			// getrowtype이 normal아닌 행만을 생성된dataset에 매핑.
			destroy("ds_input");
			create("Dataset", "ds_input");
			object("ds_input").copy(ds_output);
			object("ds_input").DeleteAll();
			for ( var ii = 0 ; ii < ds_output.getRowCount(); ii++ )
			{
				if ( ds_output.GetRowType(ii) != 'normal' ) 
				{
					object("ds_input").addrow();
					object("ds_input").CopyRow(ds_input.row, "ds_output", ii);				
				}
			}
			
			//trace(ds_input.saveXML());
			//trace(ds_input.getRowCount());
				
			callServiceN("copyNext"					// srvId
						, "smp0070/copyNext"		// url
						, "ds_input=ds_input"		// biz에서 받는 명, mip에서 보내는 명
						, ""						// mip에서 받는 명, biz에서 보내는 명
						, "flag='copy'"				// strParam
						, ""						// CallBackFunc
						);
		}
		// [cancel-취소]일 경우
		else if ( strSvcID == "cancel" )
		{
			//trace("@@@@@@@@@@@@@취소 성공 후!!!!!!");
			
			// *** "BTN_EVENT" --> 마감[1],취소[2]플래그를 가지는 컬럼이다.
			
			
			// 취소 성공 후에는
			// 취소된 row의 [마감여부]컬럼을 []로 셋팅한다.
			// 단, btn_event == 2일경우는 
			// 해당년도의 데이타가 full일경우이므로 nrow-1 처리한다.
			// 부가설명
			// * nrow = 총건수, row을 나타낼때는 nrow-1
			// * 총건수기준으로 처리하므로 년도가 바뀔때에는 
			// * 아래처럼 분기로직이 필요(화면참조)			
			var nrow = ds_output.GetRowCount();
			
			// 해당년도의 데이타가 full일 경우
			if ( ds_output.GetColumn(nrow-1, "BTN_EVENT") == '2' )
			{
				ds_output.SetColumn(nrow-1, "ZCLFLG", "");
			}
			// 해당년도의 데이터가 not full일 경우
			else
			{
				ds_output.SetColumn(nrow-2, "ZCLFLG", "");
			}
			
			// 기존에 생성된 dataset을 삭제 후 생성처리.(중복방지를 위함)
			// getrowtype이 normal아닌 행만을 생성된dataset에 매핑.
			// 임의의 [FLAG]컬럼을 생성이유
			// * [취소]시 [마감]플래그 행을 삭제해야한다.
			// * dataset(ds_input)을 넘겨서 biz에서 처리시
			// * [마감]행인지 [취소]행인지 알수가 없으므로 
			// * [ROW_TYPE]값에 그 구분여부를 설정.
			destroy("ds_input");
			create("Dataset", "ds_input");
			object("ds_input").copy(ds_output);
			object("ds_input").DeleteAll();
			object("ds_input").addColumn("ROW_TYPE", "STRING", 256);
			for ( var ii = 0 ; ii < ds_output.getRowCount(); ii++ )
			{
				if ( ds_output.GetRowType(ii) != 'normal' ) 
				{
					object("ds_input").addrow();
					object("ds_input").CopyRow(ds_input.row, "ds_output", ii);
					object("ds_input").setColumn(ds_input.row, "ROW_TYPE", "update");
				}
			}
			// 단, btn_event == 2일경우는 
			// 해당년도의 데이타가 full일경우이므로 
			// [취소]row의 데이타를 복사한 후
			// [이동계획차수]를 그 다음년월의 '01'차수로 임의로 설정
			// (이유는 이 화면의 업무는 월별로 2건의 데이타가 존재한다는 전제이므로)
			// * 아래처럼 분기로직참조
			object("ds_input").addrow();
			if ( ds_output.GetColumn(nrow-1, "BTN_EVENT") == '2' )
			{
				object("ds_input").CopyRow(ds_input.row, "ds_output", nrow-1);	
				
				var lastYMD = object("ds_input").getColumn(ds_input.row, "ZMPINC");
				lastYMD = toNumber(lastYMD.substr(0,4))+1;
				lastYMD += "0101";
				//trace("@@@@@ 후년도 데이타 정보 : "+ lastYMD);
				object("ds_input").setColumn(ds_input.row, "ZMPINC", lastYMD);
			}
			else
			{
				object("ds_input").CopyRow(ds_input.row, "ds_output", nrow-1);	
			}
					
			//trace("@@@@@@@@@@@@@@@@@@@@@@@@@ cancel @@@@@@@@@@@@@@@@@");
			//trace(ds_input.saveXML());
			//trace(ds_input.getRowCount());
			
			callServiceN("copyNext"					// srvId
						, "smp0070/copyNext"		// url
						, "ds_input=ds_input"		// biz에서 받는 명, mip에서 보내는 명
						, ""						// mip에서 받는 명, biz에서 보내는 명
						, "flag='cancel'"			// strParam
						, ""						// CallBackFunc
						);
						
		}
		// [마감&취소 - copyNext] 처리 후
		else if ( strSvcID == 'copyNext' )
		{
			//trace("@@@@@ copyNext sucess!!!");
			// 재조회
			fn_query();
		}
		
		
	}
	
	
}


/********************************************************************************
* 조회 성공 후 로직
* 취소&마감 버튼 활성여부
********************************************************************************/
function fn_searchAfter()
{
	
	// 버튼 활성여부를 표시할 그리드내에 expr
	Grid.SetCellProp('Body', 11, "Display", "expr:decode(BTN_EVENT.value, '1', 'Button', decode(BTN_EVENT.value,'2','Button','none') )");
	Grid.SetCellProp('Body', 11, "expr", "decode(BTN_EVENT.value, '1', '마감', decode(BTN_EVENT.value, '2', '취소', ''))");
		
	// [편성개월수, 오픈여부, 비고] Edit 여부
	Grid.SetCellProp('Body', 8, "Edit", "expr:decode(BTN_EVENT.value, '1', 'combo', 'none')");
	Grid.SetCellProp('Body', 12, "Edit", "expr:decode(BTN_EVENT.value, '1', 'normal', 'none')");
	
}


/******************************************************
* 그리드 헤더 클릭시 정렬 처리 
*******************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex) 
{
	if (nCell == 0) 
	{
		// 컬럼 display 여부
		gfn_selectGridCol(obj); 
	} 
	else 
	{
		// 이 업무는 정렬하지 않음.
		
	}
	
}
   
 
/******************************************************
// Grid_OnCellClick
******************************************************/
function Grid_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{

	// 마감여부버튼을 클릭시에만
	if ( nCell == 11 )
	{
		// [이동계획차수]값이 BTN_EVENT == "1" [마감]가능
		if ( ds_output.GetColumn(nRow, "BTN_EVENT") == "1" )
		{
			//${} 작업을 진행 하시겠습니까?
			if ( gfn_showConfirm("CI00024","마감") )
			{
				//trace("마감 시작!!!");
				
				destroy("ds_input");
				create("Dataset", "ds_input");
				object("ds_input").copy(ds_output);
				object("ds_input").DeleteAll();
				object("ds_input").addrow();
				object("ds_input").CopyRow(0, "ds_output", nRow);
				
				fn_copy("copy");
			}
		}
		// [이동계획차수]값이 BTN_EVENT == "2" [취소]가능
		else if ( ds_output.GetColumn(nRow, "BTN_EVENT") == "2" )
		{
			//${} 작업을 진행 하시겠습니까?
			if ( gfn_showConfirm("CI00024","취소") )
			{
				//trace("취소 시작!!!");
				
				destroy("ds_input");
				create("Dataset", "ds_input");
				object("ds_input").copy(ds_output);
				object("ds_input").DeleteAll();
				object("ds_input").addrow();
				object("ds_input").CopyRow(0, "ds_output", nRow);
						
				fn_copy("cancel");
			}
		}
		
		
	}
}

var posNrow=0; // 포커스 row
var posNcell=0;// 포커스 cell
/******************************************************
// 데이타가 변경시
******************************************************/
function ds_output_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	//trace(" @@@ column id :"+varNewValue);
	
	// [편성개월수]가 변경 시
	if ( strColumnID == 'ZPMONTHS' )
	{
		if ( ( length(varNewValue) < 1) || (toNumber(varNewValue) > 12) )
		{
			posNrow = nRow;
			posNcell = 8;
			return;
		}
	}
	
	
}

/******************************************************
* 엑셀로 export
*******************************************************/
function fn_excel()
{
	gfn_exportExcel(Grid, "이동계획 오픈 및 마감");
}

function fn_save()
{
	alert("[저장]버튼 없는 화면입니다. 버튼 권한생성하지 마세요.");
	return;
}

/******************************************************
// 그리스 포커스 변경시
******************************************************/
function Grid_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex)
{
//trace(" nCell : "+nCell);
//trace(" nOldCell : "+nOldCell);
//trace(" nCell 2: "+ds_output.GetColumn(nRow, "ZPMONTHS"));
//trace(" nOldCell 2: "+ds_output.GetColumn(nOldRow, "ZPMONTHS"));
	if ( posNrow != 0 && posNcell != 0 )
	{
		//trace(" pps : "+nRow+"//"+nCell);
		//trace(" p0s : "+nOldRow+"//"+nOldCell);
		if ( nOldCell == 8 )
		{
			var ZPMONTHS = ds_output.GetColumn(nOldRow, "ZPMONTHS");
			
			if ( ( length(ZPMONTHS) < 1) || (toNumber(ZPMONTHS) > 12) )
			{
				//"[편성개월수]는 1~12월내에서 입력할수 있습니다."
				gfn_showAlert("CW10020", "편성개월수");
				ds_output.SetColumn(nRow, "ZPMONTHS", "0");
				
				Grid.MoveToPrevCell();
				return;
			}
		}
	}
}

]]></Script>
</Window>