<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form BKColor="user0" Height="24" Id="Form" Left="8" OnLoadCompleted="fn_OnLoadCompleted" PidAttrib="7" Title="거래선" Top="8" Ver="1.0" Width="304" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="Ds_rtn">
				<Contents>
					<colinfo id="SIGN" size="256" type="STRING"/>
					<colinfo id="OPTION" size="256" type="STRING"/>
					<colinfo id="LOW" size="256" type="STRING"/>
					<colinfo id="HIGH" size="256" type="STRING"/>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
					<record>
						<HIGH></HIGH>
						<LOW></LOW>
						<OPTION></OPTION>
						<SIGN></SIGN>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_buyr">
				<Contents>
					<colinfo id="BUYR_CD" size="256" type="STRING"/>
					<colinfo id="BUYR_NM" size="256" type="STRING"/>
					<colinfo id="BUYR_NM_SORT" size="256" type="STRING"/>
					<colinfo id="BUYR_ADDR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_buyr">
				<Contents>
					<colinfo id="BUYR_CD" size="10" type="STRING"/>
					<colinfo id="BUYR_NM" size="105" type="STRING"/>
					<record>
						<BUYR_CD></BUYR_CD>
						<BUYR_NM></BUYR_NM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error_buyr">
				<Contents>
					<colinfo id="IDX" size="256" type="STRING"/>
					<colinfo id="ERRMSG" size="256" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Button Height="18" Id="btn_pop" ImageID="btn_icon_post" Left="283" OnClick="btn_pop_OnClick" TabOrder="1" Text="btn_pop" Top="1" Transparent="TRUE" Width="18"></Button>
		<Static Height="16" Id="Static1" Left="24" TabOrder="2" Text="s/o번호" Top="32" Width="146"></Static>
		<Static Height="16" Id="Static0" Left="320" TabOrder="3" Text="hidden&#32;(삭제하지마세요)" Top="24" Width="146"></Static>
		<Static Align="Center" Height="18" Id="st_toNm" Left="132" TabOrder="4" Text="종료" Top="2" VAlign="Middle" Width="31"></Static>
		<Button Appearance="FLAT" Cursor="HAND" Height="18" Id="btn_fr_popBuyr" ImageID="btn_icon_search" Left="63" OnClick="fn_OnClick_popup" TabOrder="5" Text="Button0" Top="1" Transparent="TRUE" Width="18"></Button>
		<Edit Border="Flat" Height="20" Id="fr_ed_buyr_cd" LeftMargin="4" OnChanged="fr_ed_buyr_cd_OnChanged" OnFocus="ufn_OnFocus" OnKeyDown="fr_ed_buyr_cd_OnKeyDown" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="6" Width="62"></Edit>
		<Button Appearance="FLAT" Cursor="HAND" Height="18" Id="btn_to_popBuyr" ImageID="btn_icon_search" Left="264" OnClick="fn_OnClick_popup" TabOrder="7" Text="Button0" Transparent="TRUE" Width="18"></Button>
		<Edit Border="Flat" Height="20" Id="to_ed_buyr_cd" Left="200" LeftMargin="4" OnChanged="to_ed_buyr_cd_OnChanged" OnFocus="ufn_OnFocus" OnKeyDown="to_ed_buyr_cd_OnKeyDown" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="8" Width="62"></Edit>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 거래선
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */ 
#include "LIB::commons.js";	// 공통 스크립트 
#include "LIB::common_sd.js";

//================================================
// Form Loading / Unloading 시 작업 정의
//================================================
function fn_OnLoadCompleted(obj) 
{ 
}


//================================================
// to_ed_buyr_cd_OnChanged 
// 시작컬럼 변경시
//================================================
function fr_ed_buyr_cd_OnChanged(obj,strText)
{
	// 아래 로직은
	// 텍스트의 값이 변경되거나 입력되었으나 
	// 팝업을 호출 안하고 이벤트를 발생할경우
	// 현재 입력된값을 ds_rtn에 넣기 위함이다.
	
	// 시작컬럼 & 종료컬럼이 null이 될경우 로우 삭제
	if ( length(fr_ed_buyr_cd.Text) == 0 && length(to_ed_buyr_cd.Text) == 0 )
	{
		if ( length(Ds_rtn.GetColumn(1, "SIGN")) > 0 )
		{
			Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(1, "SIGN"));
			Ds_rtn.SetColumn(0, "OPTION", 	Ds_rtn.GetColumn(1, "OPTION"));
			Ds_rtn.SetColumn(0, "LOW", 		Ds_rtn.GetColumn(1, "LOW"));
			Ds_rtn.SetColumn(0, "HIGH", 	Ds_rtn.GetColumn(1, "HIGH"));
			
			fr_ed_buyr_cd.Text = Ds_rtn.GetColumn(1, "LOW");
			to_ed_buyr_cd.Text = Ds_rtn.GetColumn(1, "HIGH");
		}	
		Ds_rtn.DeleteRow(0);
		return;
	}
	
	// toEdit값이 있을경우(변경이나 입력과 상관없이)
	// BT로 처리해야함
	if ( length(to_ed_buyr_cd.text) > 0 )
	{
		// dataset에 데이타가 존재할경우는 변경처리
		if ( length(Ds_rtn.GetColumn(0, "SIGN")) > 0 )
		{
			// [*] 존재여부에 따라 변경처리되는 방식이 다름
			if ( fn_ValidChk(to_ed_buyr_cd.text) || fn_ValidChk(strText) )
			{
				Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(0, "SIGN"));
				Ds_rtn.SetColumn(0, "OPTION", 	"CP");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	to_ed_buyr_cd.Text);
			}
			else
			{
				Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(0, "SIGN"));
				Ds_rtn.SetColumn(0, "OPTION", 	"BT");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	to_ed_buyr_cd.Text);
			}
		}
		// dataset에 데이터가 존재하지 않을경우 입력처리
		else
		{
			// [*] 존재여부에 따라 변경처리되는 방식이 다름
			if ( fn_ValidChk(to_ed_buyr_cd.text) || fn_ValidChk(strText) )
			{
				Ds_rtn.SetColumn(0, "SIGN", 	"I");
				Ds_rtn.SetColumn(0, "OPTION", 	"CP");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	to_ed_buyr_cd.Text);
			}
			else
			{
				Ds_rtn.SetColumn(0, "SIGN", 	"I");
				Ds_rtn.SetColumn(0, "OPTION", 	"BT");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	to_ed_buyr_cd.Text);
			}
			
		}
		
	}
	// 단건처리 - EQ로 처리
	else if ( length(to_ed_buyr_cd.text) == 0 )
	{
		// dataset에 데이타가 존재할경우는 변경처리
		if ( length(Ds_rtn.GetColumn(0, "SIGN")) > 0 )
		{
			// [*] 존재여부에 따라 변경처리되는 방식이 다름
			if ( fn_ValidChk(strText) )
			{
				Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(0, "SIGN"));
				Ds_rtn.SetColumn(0, "OPTION", 	"CP");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	"");
			}
			else
			{
				Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(0, "SIGN"));
				Ds_rtn.SetColumn(0, "OPTION", 	"EQ");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	"");
			}
		}
		// dataset에 데이터가 존재하지 않을경우 입력처리
		else
		{
			// [*] 존재여부에 따라 변경처리되는 방식이 다름
			if ( fn_ValidChk(strText) )
			{
				Ds_rtn.SetColumn(0, "SIGN", 	"I");
				Ds_rtn.SetColumn(0, "OPTION", 	"CP");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	"");
			}
			else
			{
				Ds_rtn.SetColumn(0, "SIGN", 	"I");
				Ds_rtn.SetColumn(0, "OPTION", 	"EQ");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	"");
			}
			
		}
	}
	//Ds_rtn.SetColumn(0, "LOW", strText);
}

//================================================
// to_ed_buyr_cd_OnChanged 
// 종료컬럼 변경시
//================================================
function to_ed_buyr_cd_OnChanged(obj,strText)
{
	// 아래 로직은
	// 텍스트의 값이 변경되거나 입력되었으나 
	// 팝업을 호출 안하고 이벤트를 발생할경우
	// 현재 입력된값을 ds_rtn에 넣기 위함이다.
	
	// 시작컬럼 & 종료컬럼이 null이 될경우 로우 삭제
	if ( length(fr_ed_buyr_cd.Text) == 0 && length(to_ed_buyr_cd.Text) == 0 )
	{
		if ( length(Ds_rtn.GetColumn(1, "SIGN")) > 0 )
		{
			Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(1, "SIGN"));
			Ds_rtn.SetColumn(0, "OPTION", 	Ds_rtn.GetColumn(1, "OPTION"));
			Ds_rtn.SetColumn(0, "LOW", 		Ds_rtn.GetColumn(1, "LOW"));
			Ds_rtn.SetColumn(0, "HIGH", 	Ds_rtn.GetColumn(1, "HIGH"));
			
			fr_ed_buyr_cd.Text = Ds_rtn.GetColumn(1, "LOW");
			to_ed_buyr_cd.Text = Ds_rtn.GetColumn(1, "HIGH");
		}	
		Ds_rtn.DeleteRow(0);
		return;
	}
	
	// fromEdit값이 있을경우(변경이나 입력과 상관없이)
	// BT로 처리해야함
	if ( length(fr_ed_buyr_cd.text) > 0 )
	{
		// dataset에 데이타가 존재할경우는 변경처리
		if ( length(Ds_rtn.GetColumn(0, "SIGN")) > 0 )
		{
			// [*] 존재여부에 따라 변경처리되는 방식이 다름
			if ( fn_ValidChk(fr_ed_buyr_cd.text) || fn_ValidChk(strText) )
			{
				Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(0, "SIGN"));
				Ds_rtn.SetColumn(0, "OPTION", 	"CP");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	to_ed_buyr_cd.Text);
			}
			else
			{
				// toEdit가 null이면 단건으로 변경 처리
				if ( strText == '' || strText == null )
				{
					Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(0, "SIGN"));
					Ds_rtn.SetColumn(0, "OPTION", 	"EQ");
					Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
					Ds_rtn.SetColumn(0, "HIGH", 	to_ed_buyr_cd.Text);
				}
				// toEdit가 null이 아니면 BT로 변경처리
				else
				{
					Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(0, "SIGN"));
					Ds_rtn.SetColumn(0, "OPTION", 	"BT");
					Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
					Ds_rtn.SetColumn(0, "HIGH", 	to_ed_buyr_cd.Text);
				}
			}
		}
		// dataset에 데이터가 존재하지 않을경우 입력처리
		else
		{
			// [*] 존재여부에 따라 변경처리되는 방식이 다름
			if ( fn_ValidChk(strText) )
			{
				Ds_rtn.SetColumn(0, "SIGN", 	"I");
				Ds_rtn.SetColumn(0, "OPTION", 	"CP");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	to_ed_buyr_cd.Text);
			}
			else
			{
				Ds_rtn.SetColumn(0, "SIGN", 	"I");
				Ds_rtn.SetColumn(0, "OPTION", 	"BT");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	to_ed_buyr_cd.Text);
			}
			
		}
		
	}
	// from이 null이어도 BT로 처리한다.
	else if( length(fr_ed_buyr_cd.text) == 0 )
	{
		// dataset에 데이타가 존재할경우는 변경처리
		if ( length(Ds_rtn.GetColumn(0, "SIGN")) > 0 )
		{
			// [*] 존재여부에 따라 변경처리되는 방식이 다름
			if ( fn_ValidChk(strText) )
			{
				Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(0, "SIGN"));
				Ds_rtn.SetColumn(0, "OPTION", 	"CP");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	strText);
			}
			else
			{
				Ds_rtn.SetColumn(0, "SIGN", 	Ds_rtn.GetColumn(0, "SIGN"));
				Ds_rtn.SetColumn(0, "OPTION", 	"BT");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	strText);
			}
		}
		// dataset에 데이터가 존재하지 않을경우 입력처리
		else
		{
			// [*] 존재여부에 따라 변경처리되는 방식이 다름
			if ( fn_ValidChk(strText) )
			{
				Ds_rtn.SetColumn(0, "SIGN", 	"I");
				Ds_rtn.SetColumn(0, "OPTION", 	"CP");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	strText);
			}
			else
			{
				Ds_rtn.SetColumn(0, "SIGN", 	"I");
				Ds_rtn.SetColumn(0, "OPTION", 	"BT");
				Ds_rtn.SetColumn(0, "LOW", 		fr_ed_buyr_cd.Text);
				Ds_rtn.SetColumn(0, "HIGH", 	strText);
			}
			
		}
	}
	//Ds_rtn.SetColumn(0, "HIGH", strText);
}



//================================================
// btn_pop_OnClick 
// 선택팝업 호출
//================================================
function btn_pop_OnClick(obj)
{
	// 팝업 호출시 validation 체크
	if ( fn_CompareCheck() == false ) return; 
	
	var arg  = "ParentTitle=거래선"; 							// 타이틀지정
		arg += " ParentStaEdit=" + quote(fr_ed_buyr_cd.Text);	// 시작컬럼
		arg += " ParentEndEdit=" + quote(to_ed_buyr_cd.Text);	// 종료컬럼
		
	gfn_openPopupUrl("COM::Com0010.xml", true, arg);
	
	// 필터와 별개로 ds_rtn중 1번째 row정보를 보여주기 위함.
	Ds_rtn.UnFilter();
	fr_ed_buyr_cd.Text = Ds_rtn.GetColumn(0, "LOW");
	to_ed_buyr_cd.Text = Ds_rtn.GetColumn(0, "HIGH");
	
}


//================================================
// fn_CompareCheck 
// validation 체크
//================================================
function fn_CompareCheck()
{
	var before = fn_Replace(fr_ed_buyr_cd.Text);
	var after = fn_Replace(to_ed_buyr_cd.Text);
	
	if ( (after!='') && (ToNumber(before) > ToNumber(after)) )
	{
		// 하한값이 상한값보다 큽니다
		var arr = Array(2);
		arr[0] = "하한값";
		arr[1] = "상한값";
		gfn_showAlert("CW10023", arr);
		return false;
	}
	
}

//================================================
// fn_Replace 
// 문자열 치환
//================================================
function fn_Replace(val)
{
	//trace( "1 : "+val.IndexOf("*", 0) );
	var RepYn = val.IndexOf("*", 0);
	var RepVal;
	if ( RepYn == -1 ) return val;
	else
	{
		RepVal = val.substr(0, RepYn);
		//trace("2 : "+val.substr(0, RepYn));
		RepVal += 1;
		RepVal += val.substr(RepYn+1, length(val));
	}
	
	return RepVal;
	
}


//================================================
// 사이즈 조정
// FromEditSize 	--> From text 
// ToStaticStartWidth --> btn_fr_popBuyr right와 ToStaticSize left의 gap크기.
// ToStaticNm 		--> To Static
// ToStaticSize 	--> To Static
// ToEditStartWidth	--> ToStaticSize right와 ToEditSize left의 gap크기.
// ToEditSize 		--> To text 
// 단일/복수 구분자 flag(1,2) --> default(2)
//================================================
function fn_reSize(FromEditSize, ToStaticStartWidth, ToStaticNm, 
ToStaticSize, ToEditStartWidth, ToEditSize, flag) 
{	
	// From text
	if ( FromEditSize != '' ) this.fr_ed_buyr_cd.Width = FromEditSize; 
	
	// To Static
	if ( ToStaticNm != '' ) this.st_toNm.Text = ToStaticNm; 
	
	// To text
	if ( ToEditSize != '' ) this.to_ed_buyr_cd.Width = ToEditSize; 
	
	// flag 단수ver
	if ( flag != '' ) 
	{	
		//trace("@@@@ flag != null : "+flag);
		
		// to 거래선 코드
		this.to_ed_buyr_cd.Visible = false;  
		
		// 거래선 to 팝업
		this.btn_to_popBuyr.Visible = false; 
		  
		// 거래선 from 팝업
		this.btn_fr_popBuyr.Left = this.fr_ed_buyr_cd.Right + 1;
		
		// 선택팝업 호출
		this.btn_pop.Left = this.fr_ed_buyr_cd.Right + 20;
		
		// To Static
		this.st_toNm.Visible = false;  

	}
	// 복수ver
	else 
	{ 
		//trace("@@@@ flag == null : "+flag);
		
		// to 거래선 코드
		this.to_ed_buyr_cd.Visible = true; 
		
		// To Static
		if ( ToStaticSize != '' ) this.st_toNm.Width = ToStaticSize; 
		
		// ToStaticStartWidth
		if ( ToStaticStartWidth != '' ) this.st_toNm.Left = this.fr_ed_buyr_cd.Right + toNumber(ToStaticStartWidth) + 18 ; 
		else this.st_toNm.Left = this.fr_ed_buyr_cd.Right + 19 ; 
		
		// ToEditStartWidth
		if ( ToEditStartWidth != '' ) this.to_ed_buyr_cd.Left = this.st_toNm.Right + toNumber(ToEditStartWidth) ; 
		else this.to_ed_buyr_cd.Left = this.st_toNm.Right + 1 ; 
		
		// 거래선 from 팝업
		this.btn_fr_popBuyr.Left = this.fr_ed_buyr_cd.Right + 1;
		
		// 거래선 to 팝업
		this.btn_to_popBuyr.Left = this.to_ed_buyr_cd.Right + 1;
		
		// 선택팝업 호출
		this.btn_pop.Left = this.to_ed_buyr_cd.Right + 20;
	}
	
}



//================================================
// 거래선코드f 에서 엔터키 누르면
//================================================
function fr_ed_buyr_cd_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
	if (nChar == 13)
	{
		// 입력된 조건이 없으면
		if ( length(trim(fr_ed_buyr_cd.text)) == 0 )
		{
			fn_OnClick_popup(btn_fr_popBuyr);  // 팝업화면 호출
		}
		
	}

}
//================================================
// 거래선코드t 에서 엔터키 누르면
//================================================
function to_ed_buyr_cd_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
	if (nChar == 13)
	{
		// 입력된 조건이 없으면
		if ( length(trim(to_ed_buyr_cd.text)) == 0 )
		{
			fn_OnClick_popup(btn_fr_popBuyr);  // 팝업화면 호출
		}
		
	}
}
 

//================================================
// fn_OnClick_popup
//================================================
function fn_OnClick_popup(obj)
{
	
	var paramVal;
	if ( obj.id == 'btn_fr_popBuyr' ) 
	{
		paramVal = fr_ed_buyr_cd.Text;
	}
	else
	{
		paramVal = to_ed_buyr_cd.Text;
	}
	
	// 거래선조회 팝업화면 OPEN
	var arg = "fa_buyr_cd=" 	+ quote(paramVal)   // 거래코드
			 + " fa_buyr_nm=" 	+ quote('')
			 ;
			 
	var arr = gfn_openPopUpUrlHdel("Com::Com0040.xml", true, arg );	
	
	//trace("arr : " + arr);
	
	if (arr != null && arr != 0)
	{
		if ( obj.id == 'btn_fr_popBuyr' ) 
		{
			fr_ed_buyr_cd.text = arr[0];	// 리턴된 거래선코드로 검색조건 SET
			fr_ed_buyr_cd.SetFocus();
		}
		else
		{
			to_ed_buyr_cd.text = arr[0];	// 리턴된 거래선코드로 검색조건 SET
			to_ed_buyr_cd.SetFocus();
		}

	}
}



]]></Script>
</Window>