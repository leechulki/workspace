<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="344" Id="Com0010" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="조회조건의&#32;기능" Top="8" Ver="1.0" Width="552" WorkArea="true">
		<Tab Border="Flat" FixedImage="FALSE" Font="굴림,9" Height="248" Id="Tab00" Left="8" MouseOverColor="user16" OnChanging="Tab00_OnChanging" SelColor="user15" SelectFont="굴림,9" Style="sty_tab" TabOrder="0" Top="56" Width="528">
			<Contents>
				<TabPage BorderColor="black" Height="223" Id="tab1" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="19" Text="단일값&#32;선택" Top="23" Width="524">
					<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoEnterType="Key" BindDataset="Ds_rtn" BkColor2="default" BoldHead="true" Border="Flat" Bottom="217" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="208" Id="grd_list" InputPanel="FALSE" Left="6" LineColor="user20" LineType="ExHORZ" OnKeyDown="Tab00_tab1_grd_list_OnKeyDown" Right="510" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="9" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="504">
						<contents>
							<format id="Default">
								<columns>
									<col fix="left" width="0"/>
									<col fix="left" width="0"/>
									<col fix="left" width="68"/>
								</columns>
								<head>
									<cell col="0" text="sign"/>
									<cell col="1" text="option"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="단일&#32;값"/>
								</head>
								<body>
									<cell col="0" colid="sign"/>
									<cell col="1" colid="option"/>
									<cell align="center" bkcolor2="user22" col="2" colid="low" display="text" edit="normal" limit="24"/>
								</body>
							</format>
						</contents>
					</Grid>
				</TabPage>
				<TabPage BorderColor="black" Height="223" Id="tab2" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="12" Text="범위&#32;선택" Top="23" Width="524">
					<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoEnterType="Key" BindDataset="Ds_rtn" BkColor2="default" BoldHead="true" Border="Flat" Bottom="217" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="208" Id="grd_list" InputPanel="FALSE" Left="6" LineColor="user20" LineType="ExHORZ" OnKeyDown="Tab00_tab1_grd_list_OnKeyDown" Right="510" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="9" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="504">
						<contents>
							<format id="Default">
								<columns>
									<col fix="left" width="0"/>
									<col fix="left" width="0"/>
									<col fix="left" width="68"/>
									<col fix="left" width="68"/>
								</columns>
								<head>
									<cell col="0" text="sign"/>
									<cell col="1" text="option"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="하한"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="상한"/>
								</head>
								<body>
									<cell col="0" colid="sign"/>
									<cell col="1" colid="option"/>
									<cell align="center" bkcolor2="user22" col="2" colid="low" display="text" edit="normal" limit="24"/>
									<cell align="center" bkcolor2="user22" col="3" colid="high" display="text" edit="normal" limit="24"/>
								</body>
							</format>
						</contents>
					</Grid>
				</TabPage>
				<TabPage BorderColor="black" Height="223" Id="tab3" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="12" Text="단일값&#32;제외" Top="23" Width="524">
					<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoEnterType="Key" BindDataset="Ds_rtn" BkColor2="default" BoldHead="true" Border="Flat" Bottom="217" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="208" Id="grd_list" InputPanel="FALSE" Left="6" LineColor="user20" LineType="ExHORZ" OnKeyDown="Tab00_tab1_grd_list_OnKeyDown" Right="510" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="9" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="504">
						<contents>
							<format id="Default">
								<columns>
									<col fix="left" width="0"/>
									<col fix="left" width="0"/>
									<col fix="left" width="68"/>
								</columns>
								<head>
									<cell col="0" text="sign"/>
									<cell col="1" text="option"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="단일&#32;값"/>
								</head>
								<body>
									<cell col="0" colid="sign"/>
									<cell col="1" colid="option"/>
									<cell align="center" bkcolor2="user22" col="2" colid="low" display="text" edit="normal" limit="24"/>
								</body>
							</format>
						</contents>
					</Grid>
				</TabPage>
				<TabPage BorderColor="black" Height="223" Id="tab4" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="12" Text="범위&#32;제외" Top="23" Width="524">
					<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoEnterType="Key" BindDataset="Ds_rtn" BkColor2="default" BoldHead="true" Border="Flat" Bottom="217" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="208" Id="grd_list" InputPanel="FALSE" Left="6" LineColor="user20" LineType="ExHORZ" OnKeyDown="Tab00_tab1_grd_list_OnKeyDown" Right="510" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="9" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="504">
						<contents>
							<format id="Default">
								<columns>
									<col fix="left" width="0"/>
									<col fix="left" width="0"/>
									<col fix="left" width="68"/>
									<col fix="left" width="68"/>
								</columns>
								<head>
									<cell col="0" text="sign"/>
									<cell col="1" text="option"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="하한"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="상한"/>
								</head>
								<body>
									<cell col="0" colid="sign"/>
									<cell col="1" colid="option"/>
									<cell align="center" bkcolor2="user22" col="2" colid="low" display="text" edit="normal" limit="24"/>
									<cell align="center" bkcolor2="user22" col="3" colid="high" display="text" edit="normal" limit="24"/>
								</body>
							</format>
						</contents>
					</Grid>
				</TabPage>
			</Contents>
		</Tab>
		<Div Height="36" Id="div_btn" TabOrder="2" Text="Div0" Url="WB01::CommBtnForm.xml" Width="552">
			<Contents></Contents>
		</Div>
		<Button Appearance="FLAT" ButtonStyle="TRUE" Color="user5" Cursor="HAND" DomainID="btn.confirm" Height="22" Id="btn_confirm" ImageID="btn_comm_copy_k" Left="88" LeftMargin="20" OnClick="btn_confirm_OnClick" TabOrder="3" Text="복사" Top="312" Width="52"></Button>
		<Button Appearance="FLAT" ButtonStyle="TRUE" Color="user5" Cursor="HAND" DomainID="btn.cancel" Height="22" Id="btn_delete" ImageID="btn_comm_delete_u" Left="144" LeftMargin="20" OnClick="btn_delete_OnClick" TabOrder="4" Text="행&#32;삭제" Top="312" Width="72"></Button>
		<Button Appearance="FLAT" ButtonStyle="TRUE" Color="user5" Cursor="HAND" DomainID="btn.cancel" Height="22" Id="btn_append" ImageID="btn_comm_input_u" Left="216" LeftMargin="20" OnClick="btn_append_OnClick" TabOrder="5" Text="행&#32;추가" Top="312" Width="72"></Button>
		<Button Appearance="FLAT" ButtonStyle="TRUE" Color="user5" Cursor="HAND" DomainID="btn.cancel" Height="22" Id="btn_allDel" ImageID="btn_comm_delete_u" Left="280" LeftMargin="20" OnClick="btn_allDel_OnClick" TabOrder="6" Text="전체삭제" Top="312" Width="72"></Button>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 조회조건의 기능 (Com0010) 팝업
 * 작  성  자   : 
 * 작성  일자   : 2012.05.17
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 * COMMENT
   1. WFC URL 				: 
   2. WFC OPERATION NAME 	: 
   3. WFC OBJ NAME 			: 
   4. 개발자료 :  
 ******************************************************************************************
*/
 
#include "LIB::commons.js";		// 공통 스크립트 
#include "LIB::common_hdel.js";	// 공통 스크립트  /* GNY 추가 */


//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var filter1 = "(SIGN='I'&&(OPTION='EQ'||OPTION='CP'))||(SIGN=''&&OPTION='')";// 단일값 선택
var filter2 = "(SIGN='I'&&OPTION='BT')||(SIGN=''&&OPTION='')";// 범위 선택
var filter3 = "(SIGN='E'&&(OPTION='EQ'||OPTION='CP'))||(SIGN=''&&OPTION='')";// 단일값 제외
var filter4 = "(SIGN='E'&&OPTION='BT')||(SIGN=''&&OPTION='')";// 범위 제외

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {

	gfn_initForm();		// Form 로드 이벤트 맨 첫줄에 기술 
	
	var title 	= ParentTitle; 	 // 헤더타이틀
	var staEdit = ParentStaEdit; // 시작param
	var endEdit = ParentEndEdit; // 종료param
	
	// param 함수 호출
	fn_ParentParam_set(staEdit, endEdit);
	
	div_btn.fn_loadUseBtn("", title+" 복수 선택", "", "");   	// 화면제목 설정 및 버튼 활성화
	
	
}

/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {

}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}
/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if ( nCell == 0 ) {
		gfn_selectGridCol("grd_list"); // 현재 처리할 format 기억
	} else {
		gfn_sortGrid(obj,nCell);
	}
} 
 

/********************************************************************************
* 기      능   : 확인버튼 클릭 시
********************************************************************************/
function fn_confirm() {
	

}

/********************************************************************************
// 취소버튼 클릭 시
********************************************************************************/
function fn_cancel(obj)
{  
	fn_OnClick_btn(btn_close); 	// 팝업화면을 닫는다.
} 



//param 함수 호출
function fn_ParentParam_set( sta, end )
{
	// param 값이 없으면 패스
	if( sta == '' && end == '' ) return;
	
	
	// dataSet에 건수가 0건이라면
	// SIGN = I 인것으로 간주하고
	// sta 값만 존재 - 단일건 처리
	// end 값이 존재 - 범위건 처리
	var TotCnt=0;
	for ( var i = 0 ; i < parent.Ds_rtn.GetRowCount() ; i++ )
	{
		// 값이 넘어온상태에서 수정없이 재호출할경우
		// update가 아닌 normal상태이므로
		// 건수를 체크하여 0건이 아닐때도 가능하도록 수정함.
		if ( ( parent.Ds_rtn.GetRowType(i) == 'update' ) || 
			( parent.Ds_rtn.GetRowCount() > 0 ) )
		{
			TotCnt++;
		}
		
	}
	
	if ( TotCnt == 0 )
	{
			
		if ( length(end) > 0 )
		{
			parent.Ds_rtn.Filter(filter2);	//데이터셋을 범위용으로 필터링
			parent.Ds_rtn.SetColumn(0, "SIGN",   "I");
			// [*]가 존재한다면
			if ( parent.fn_ValidChk(sta) == true )
			{
				parent.Ds_rtn.SetColumn(0, "OPTION", "CP");
			}
			else
			{
				parent.Ds_rtn.SetColumn(0, "OPTION", "BT");
			}
			parent.Ds_rtn.SetColumn(0, "LOW", 	 sta);
			parent.Ds_rtn.SetColumn(0, "HIGH", 	 end);
			Tab00.tabindex = 1;
			
		}
		else
		{
			parent.Ds_rtn.Filter(filter1);	//데이터셋을 단일값용으로 필터링
			parent.Ds_rtn.SetColumn(0, "SIGN",   "I");
			
			// [*]가 존재한다면
			if ( parent.fn_ValidChk(sta) == true )
			{
				parent.Ds_rtn.SetColumn(0, "OPTION", "CP");
			}
			else
			{
				parent.Ds_rtn.SetColumn(0, "OPTION", "EQ");
			}
			
			parent.Ds_rtn.SetColumn(0, "LOW", 	 sta);
			Tab00.tabindex = 0;
			
		}
		
	}
	else // TotCnt != 0
	{
		if ( length(end) > 0 )
		{
			if ( parent.Ds_rtn.GetColumn(0, "SIGN") == 'E' )
			{
				parent.Ds_rtn.Filter(filter4);	//데이터셋을 범위제외용으로 필터링
				Tab00.tabindex = 3;
			}
			else
			{
				parent.Ds_rtn.Filter(filter2);	//데이터셋을 범위용으로 필터링
				Tab00.tabindex = 1;
			}
			
		}
		else
		{
			if ( parent.Ds_rtn.GetColumn(0, "SIGN") == 'E' )
			{
				parent.Ds_rtn.Filter(filter3);	//데이터셋을 단일값제외용으로 필터링
				Tab00.tabindex = 2;
			}
			else
			{
				parent.Ds_rtn.Filter(filter1);	//데이터셋을 단일값용으로 필터링
				Tab00.tabindex = 0;
			}
			
		}
		
	}
	
	
}



// 탭이 변경되었을때
function Tab00_OnChanging(obj,nOldIndex,nNewIndex)
{

	//복사 후 이동
	btn_confirm_OnClick(obj, nOldIndex, null);
	
	var updNum = 0;	// 건수체크용
	if ( nNewIndex == 0 ) // 단일값 선택
	{
	
		// 필터링되지 않는 데이타셋의 총건수만큼 돌면서
		// 필터링된 데이타셋의 변경여부를 체크하여 
		// 체크된 건수를 넘버링한 후 
		// 탭 제목에 표시한다.
		for ( var i = 0 ; i < parent.Ds_rtn.GetRowCount() ; i++ )
		{
			parent.Ds_rtn.Filter(filter1);	//데이터셋을 단일값용으로 필터링
			if ( parent.Ds_rtn.GetRowType(i) == 'update' )
			{
				updNum++;
			}
			
		}
		Tab00.tab1.Text = "단일 값 선택("+updNum+")";
		//parent.Ds_rtn.UnFilter();
		
	}
	else if ( nNewIndex == 1 ) // 범위 선택
	{
		// 필터링되지 않는 데이타셋의 총건수만큼 돌면서
		// 필터링된 데이타셋의 변경여부를 체크하여 
		// 체크된 건수를 넘버링한 후 
		// 탭 제목에 표시한다.
		for ( var i = 0 ; i < parent.Ds_rtn.GetRowCount() ; i++ )
		{
			parent.Ds_rtn.Filter(filter2);	//데이터셋을 범위용으로 필터링
			if ( parent.Ds_rtn.GetRowType(i) == 'update' )
			{
				updNum++;
			}
			
		}
		Tab00.tab2.Text = "범위 값 선택("+updNum+")";
	}
	else if ( nNewIndex == 2 ) // 단일값 제외
	{
	
		// 필터링되지 않는 데이타셋의 총건수만큼 돌면서
		// 필터링된 데이타셋의 변경여부를 체크하여 
		// 체크된 건수를 넘버링한 후 
		// 탭 제목에 표시한다.
		for ( var i = 0 ; i < parent.Ds_rtn.GetRowCount() ; i++ )
		{
			parent.Ds_rtn.Filter(filter3);	//데이터셋을 단일값용으로 필터링
			if ( parent.Ds_rtn.GetRowType(i) == 'update' )
			{
				updNum++;
			}
			
		}
		Tab00.tab3.Text = "단일 값 제외("+updNum+")";
		//parent.Ds_rtn.UnFilter();
		
	}
	if ( nNewIndex == 3 ) // 범위 제외
	{
		// 필터링되지 않는 데이타셋의 총건수만큼 돌면서
		// 필터링된 데이타셋의 변경여부를 체크하여 
		// 체크된 건수를 넘버링한 후 
		// 탭 제목에 표시한다.
		for ( var i = 0 ; i < parent.Ds_rtn.GetRowCount() ; i++ )
		{
			parent.Ds_rtn.Filter(filter4);	//데이터셋을 범위용으로 필터링
			if ( parent.Ds_rtn.GetRowType(i) == 'update' )
			{
				updNum++;
			}
			
		}
		Tab00.tab4.Text = "범위 값 제외("+updNum+")";
	}
	
}


/********************************************************************************
// 복사
********************************************************************************/
function btn_confirm_OnClick(obj, nOldIndex, delLinkYn)
{
	//alert("nOldIndex : "+nOldIndex);
	
	var tabIndex; // 현재 탭의 index
	
	// 복사버튼을 클릭하여 함수가 호출되었을때는 tab00.tabIndex
	// 탭을 이동할때 복사를 하기위해 호출되었을때는 
	// 탭이 이동되기전의 탭 위치 nOldIndex
	if ( nOldIndex != null ) 
	{
		tabIndex = nOldIndex;
	}
	else 
	{
		tabIndex = Tab00.TabIndex;
	}
	trace("@@@@@@ tabIndex : "+tabIndex);
	
	
	// 탭별로 갱신된 로우에 대한 로직 처리
	if ( tabIndex == 0 ) // 단일값 선택
	{				
		for ( var i = 0 ; i < parent.Ds_rtn.GetRowCount() ; i++ )
		{
			parent.Ds_rtn.Filter(filter1);
			if ( parent.Ds_rtn.GetRowType(i) == 'update' )
			{
				
				// 기존에 복사한 내역이 있거나...
				// [단일값 선택]에서 복사한 내용이 있으면 덮어쓰게 되므로
				// 기존데이타를 갱신하지 않기 위함임.
				if( parent.Ds_rtn.GetColumn(i, "SIGN") == '' ) {
					
					// [*]가 존재한다면
					if ( parent.fn_ValidChk( parent.Ds_rtn.GetColumn(i, "LOW") ) == true )
					{	
						parent.Ds_rtn.SetColumn(i, "OPTION", "CP");
					}
					else
					{
						parent.Ds_rtn.SetColumn(i, "OPTION", "EQ");//단일
					}
					parent.Ds_rtn.SetColumn(i, "SIGN",   "I");//포함
				}
				//parent.Ds_rtn.SetRowType(i, "Normal");
				
			}
			
		}		
		
	}
	
	else if ( tabIndex == 1 ) // 범위 선택
	{				
		for ( var i = 0 ; i < parent.Ds_rtn.GetRowCount() ; i++ )
		{
			parent.Ds_rtn.Filter(filter2);
			if ( parent.Ds_rtn.GetRowType(i) == 'update' )
			{
				
				// 기존에 복사한 내역이 있거나...
				// [단일값 선택]에서 복사한 내용이 있으면 덮어쓰게 되므로
				// 기존데이타를 갱신하지 않기 위함임.
				if( parent.Ds_rtn.GetColumn(i, "SIGN") == '' ) {
				
					// [*]가 존재한다면
					if ( parent.fn_ValidChk( parent.Ds_rtn.GetColumn(i, "LOW") || parent.Ds_rtn.GetColumn(i, "HIGH") ) == true )
					{	
						parent.Ds_rtn.SetColumn(i, "OPTION", "CP");
					}
					else
					{
						parent.Ds_rtn.SetColumn(i, "OPTION", "BT");//범위
					}
					parent.Ds_rtn.SetColumn(i, "SIGN",   "I");//포함
				}
				//parent.Ds_rtn.SetRowType(i, "Normal");
				
			}
			
		}
		
	}	
	else if ( tabIndex == 2 ) // 단일값 제외
	{				
		for ( var i = 0 ; i < parent.Ds_rtn.GetRowCount() ; i++ )
		{
			parent.Ds_rtn.Filter(filter3);
			if ( parent.Ds_rtn.GetRowType(i) == 'update' )
			{
				
				// 기존에 복사한 내역이 있거나...
				// [단일값 선택]에서 복사한 내용이 있으면 덮어쓰게 되므로
				// 기존데이타를 갱신하지 않기 위함임.
				if( parent.Ds_rtn.GetColumn(i, "SIGN") == '' ) {
					
					// [*]가 존재한다면
					if ( parent.fn_ValidChk( parent.Ds_rtn.GetColumn(i, "LOW") ) == true )
					{	
						parent.Ds_rtn.SetColumn(i, "OPTION", "CP");
					}
					else
					{
						parent.Ds_rtn.SetColumn(i, "OPTION", "EQ");//단일
					}
					parent.Ds_rtn.SetColumn(i, "SIGN",   "E");//제외
				}
				
			}
			
		}		
		
	}
	else if ( tabIndex == 3 ) // 범위 제외
	{				
		for ( var i = 0 ; i < parent.Ds_rtn.GetRowCount() ; i++ )
		{
			parent.Ds_rtn.Filter(filter4);
			if ( parent.Ds_rtn.GetRowType(i) == 'update' )
			{
				
				// 기존에 복사한 내역이 있거나...
				// [범위 선택]에서 복사한 내용이 있으면 덮어쓰게 되므로
				// 기존데이타를 갱신하지 않기 위함임.
				if( parent.Ds_rtn.GetColumn(i, "SIGN") == '' ) {
				
					// [*]가 존재한다면
					if ( parent.fn_ValidChk( parent.Ds_rtn.GetColumn(i, "LOW") || parent.Ds_rtn.GetColumn(i, "HIGH") ) == true )
					{	
						parent.Ds_rtn.SetColumn(i, "OPTION", "CP");
					}
					else
					{
						parent.Ds_rtn.SetColumn(i, "OPTION", "BT");//범위
					}
					parent.Ds_rtn.SetColumn(i, "SIGN",   "E");//포함
				}
				
			}
			
		}
		
	}
	
	
	
	// 복사버튼을 클릭하여 함수가 호출되었을때
	// parent로 값 이관
	if ( nOldIndex == null && delLinkYn == null ) 
	{
		//parent.Edit0.text = parent.Ds_rtn.GetColumn(0, "LOW");
		//parent.Edit1.text = parent.Ds_rtn.GetColumn(0, "HIGH");
		this.close();
	}
	
}




/********************************************************************************
// 행삭제
********************************************************************************/
function btn_delete_OnClick(obj)
{
	trace("@@@@@@@ 현재 행 :" + parent.Ds_rtn.Currow );
	
	var CurRow = parent.Ds_rtn.Currow;

	if ( Tab00.TabIndex == 0 ) {
		// 단일값 선택
		parent.Ds_rtn.DeleteRow(CurRow);
		//parent.Ds_rtn.AppendRow();
		//parent.Ds_rtn.row = CurRow;
	}
	else if ( Tab00.TabIndex == 1 ) {
		// 범위 선택
		parent.Ds_rtn.DeleteRow(CurRow);
		//parent.Ds_rtn.AppendRow();
		//parent.Ds_rtn.row = CurRow;
	}
	else if ( Tab00.TabIndex == 2 ) {
		// 단일값 제외
		parent.Ds_rtn.DeleteRow(CurRow);
		//parent.Ds_rtn.AppendRow();
		//parent.Ds_rtn.row = CurRow;
	}
	else if ( Tab00.TabIndex == 3 ) {
		// 범위 제외
		parent.Ds_rtn.DeleteRow(CurRow);
		//parent.Ds_rtn.AppendRow();
		//parent.Ds_rtn.row = CurRow;
	}
		

}


/********************************************************************************
// 모든 행 삭제
********************************************************************************/
function btn_allDel_OnClick(obj)
{

	parent.Ds_rtn.UnFilter();
	for ( var i = 0 ; i < parent.Ds_rtn.GetRowCount() ; i++ )
	{
		// row 수는 변하지 않고 데이타만 삭제함.
		parent.Ds_rtn.SetColumn(i, "SIGN", '');
		parent.Ds_rtn.SetColumn(i, "OPTION", '');
		parent.Ds_rtn.SetColumn(i, "LOW", '');
		parent.Ds_rtn.SetColumn(i, "HIGH", '');
		
	}
	
	//복사
	btn_confirm_OnClick(obj, null, 'Y');
	
}


/********************************************************************************
// 행추가
********************************************************************************/
function btn_append_OnClick(obj)
{
	trace("@@@@@@@ 현재 행 :" + parent.Ds_rtn.Currow );
	
	var CurRow = parent.Ds_rtn.Currow;

	if ( Tab00.TabIndex == 0 ) {
		// 단일값 선택
		parent.Ds_rtn.InsertRow(CurRow);
		//parent.Ds_rtn.row = CurRow;
	}
	else if ( Tab00.TabIndex == 1 ) {
		// 범위 선택
		parent.Ds_rtn.InsertRow(CurRow);
		//parent.Ds_rtn.row = CurRow;
	}
	else if ( Tab00.TabIndex == 2 ) {
		// 단일값 제외
		parent.Ds_rtn.InsertRow(CurRow);
		//parent.Ds_rtn.row = CurRow;
	}
	else if ( Tab00.TabIndex == 3 ) {
		// 범위 제외
		parent.Ds_rtn.InsertRow(CurRow);
		//parent.Ds_rtn.row = CurRow;
	}
	
}







var strSeparator = "	";

/*********************************************************************
 * 기능 : 그리드의 선택영역을 Clipboard로 Copy 한다.
 * 인수 : objGrid       : Area Select 된 Grid
         strSeparator  : Colunm 구분자.
 * 예제 : grd_fn_ClipboardCopy(objGrid, ",");
 *********************************************************************/
function grd_fn_CellCopy(objGrid) {
	grd_fn_ClipboardCopy(objGrid, "	");
}

function grd_fn_ClipboardCopy(objGrid, strSeparator) {

	var objCase;
	if ( Tab00.TabIndex == 0 ) 
	{
		// 단일값 선택
		objCase = object("Tab00.tab1.grd_list");
	}
	else if ( Tab00.TabIndex == 1 ) 
	{
		// 범위 선택
		objCase = object("Tab00.tab2.grd_list");
	}
	else if ( Tab00.TabIndex == 2 ) 
	{
		// 단일값 제외
		objCase = object("Tab00.tab3.grd_list");
	}
	else if ( Tab00.TabIndex == 3 ) 
	{
		// 범위 제외
		objCase = object("Tab00.tab4.grd_list");
	}
	
	//trace("@@@@ objGrid:"+objCase);
	
	var orgDataset = eval(objCase.BindDataset);
	//trace("@@@@ orgDataset:"+orgDataset);

	var strColID;
	var strValue;

	var strClipboard = "";

	var nAreaStartRow;
	var nAreaEndRow;
	var nAreaStartCol;
	var nAreaEndCol;

	//trace("@@@@ objCase.AreaSelect:"+objCase.AreaSelect);
	if(objCase.AreaSelect == true) {

		nAreaStartRow = objCase.GetAreaStartRow();
		nAreaEndRow   = objCase.GetAreaEndRow();
		nAreaStartCol = objCase.GetAreaStartCol();
		nAreaEndCol   = objCase.GetAreaEndCol();

	} else {

		nAreaStartRow = objCase.CurrentRow;
		nAreaEndRow   = objCase.CurrentRow;
		nAreaStartCol = objCase.CurrentCell;
		nAreaEndCol   = objCase.CurrentCell+1;
	}
	
	//trace("@@@@ nAreaStartRow:"+nAreaStartRow);
	//trace("@@@@ nAreaEndRow:"+nAreaEndRow);
	//trace("@@@@ nAreaStartCol:"+nAreaStartCol);
	//trace("@@@@ nAreaEndCol:"+nAreaEndCol);

	for(var nRow = nAreaStartRow; nRow <= nAreaEndRow; nRow++) {

		for(var nCell = nAreaStartCol; nCell < nAreaEndCol; nCell++) {

			if(objCase.GetColProp(nCell,"Width") > 0) {

				strColID = objCase.GetCellProp("body",nCell,"colid");
				//trace("@@@ strColID : "+strColID);
				strValue = parent.Ds_rtn.GetColumn(nRow,strColID);
				//trace("@@@ strValue : "+strValue);
				strClipboard = strClipboard + strValue + strSeparator;
				//trace("@@@ strClipboard : "+strClipboard);

			}
		}

		strClipboard = substr(strClipboard,0,length(strClipboard));
		strClipboard = strClipboard + "\n";
	}

	strClipboard = substr(strClipboard,0,length(strClipboard));

	//trace("@@@ strClipboard last : "+strClipboard);
	
	ClearClipboard();
	SetClipBoard("CF_CSV",strClipboard);

	return;
}

/*********************************************************************
 * 기능 : Clipboard에 Copy된 내용을 그리드의 선택된 영역에 Paste 한다.
 * 인수 : objGrid       : Area Select 된 Grid
         strSeparator  : Colunm 구분자.
 * 예제 : grd_fn_ClipboardPaste(objGrid, ",");
 *********************************************************************/
function grd_fn_CellPaste(objGrid) {
	grd_fn_ClipboardPaste(objGrid, "	");
}

function grd_fn_ClipboardPaste(objGrid, strSeparator) {

	var objCase;
	if ( Tab00.TabIndex == 0 ) 
	{
		// 단일값 선택
		objCase = object("Tab00.tab1.grd_list");
	}
	else if ( Tab00.TabIndex == 1 ) 
	{
		// 범위 선택
		objCase = object("Tab00.tab2.grd_list");
	}
	else if ( Tab00.TabIndex == 2 ) 
	{
		// 단일값 제외
		objCase = object("Tab00.tab3.grd_list");
	}
	else if ( Tab00.TabIndex == 3 ) 
	{
		// 범위 제외
		objCase = object("Tab00.tab4.grd_list");
	}
	
	//var orgDataset = eval(objGrid.BindDataset);
	var orgDataset = eval(objCase.BindDataset);

	var nSearchRow = 0;
	var nSearchCol = 0;
	var strColID;
	var strValue;
	var strBgColor;

	// 숫자 자릿수 구분은 comma 를 사용하기 때문에 호환을 위해서 comma 를 제거한다.
	var strClipboardData = replace(GetClipBoard("CF_CSV"),",","");

	if(strSeparator != " ") {
		// 유럽의 숫자 자릿수 구분은 space 를 사용하기 때문에 호환을 위해서 space 를 제거한다.
		strClipboardData = replace(strClipboardData," ","");
	}

	var strClipboardRecord = split(strClipboardData,"\n","webstyle");
	var strClipboardColunm;

	var nAreaStartRow;
	var nAreaEndRow;
	var nAreaStartCol;
	var nAreaEndCol;

	if(objCase.AreaSelect == true) {

		nAreaStartRow = objCase.GetAreaStartRow();
		nAreaEndRow   = objCase.GetAreaEndRow();
		nAreaStartCol = objCase.GetAreaStartCol();
		nAreaEndCol   = objCase.GetAreaEndCol();

	} else {

		nAreaStartRow = objCase.CurrentRow;
		nAreaEndRow   = objCase.CurrentRow;
		nAreaStartCol = objCase.CurrentCell;
		nAreaEndCol   = objCase.CurrentCell+1;
	}
	//trace("@@@@ nAreaStartRow:"+nAreaStartRow);
	//trace("@@@@ nAreaEndRow:"+nAreaEndRow);
	//trace("@@@@ nAreaStartCol:"+nAreaStartCol);
	//trace("@@@@ nAreaEndCol:"+nAreaEndCol);

	for(var nRow = nAreaStartRow; nRow < (nAreaStartRow + length(strClipboardRecord)); nRow++) {

		strClipboardColunm = split(strClipboardRecord[nSearchRow],strSeparator,"webstyle");

		nSearchCol = 0;
		var nAreaCell = nAreaStartCol + length(strClipboardColunm);
		for(var nCell = nAreaStartCol; nCell < nAreaCell && nCell < objCase.GetColCount(); nCell++) {

			if(objCase.GetColProp(nCell,"Width") > 0) {

				strColID = objCase.GetCellProp("body",nCell,"colid");
				strBgColor = parent.Ds_rtn.GetColumn(nRow,"BGCOLOR"+strColID);

				strValue = trim(strClipboardColunm[nSearchCol]);
				parent.Ds_rtn.SetColumn(nRow,strColID,strValue);

				nSearchCol++;

			} else {
				nAreaCell++;
			}
		}

		nSearchRow++;
	}

	return;
}

/*********************************************************************
 * 기능 : 그리드의 선택된 영역을 Reset 한다.
 * 인수 : objGrid     : Area Select 된 Grid
 * 예제 : grd_fn_CellReset(objGrid);
 *********************************************************************/
function grd_fn_CellReset(objGrid) {

	var objCase;
	if ( Tab00.TabIndex == 0 ) 
	{
		// 단일값 선택
		objCase = object("Tab00.tab1.grd_list");
	}
	else if ( Tab00.TabIndex == 1 ) 
	{
		// 범위 선택
		objCase = object("Tab00.tab2.grd_list");
	}
	else if ( Tab00.TabIndex == 2 ) 
	{
		// 단일값 제외
		objCase = object("Tab00.tab3.grd_list");
	}
	else if ( Tab00.TabIndex == 3 ) 
	{
		// 범위 제외
		objCase = object("Tab00.tab4.grd_list");
	}
	
	//var orgDataset = eval(objGrid.BindDataset);
	var orgDataset = eval(objCase.BindDataset);
	
	var strColID;

	var nAreaStartRow = objCase.GetAreaStartRow();
	var nAreaEndRow   = objCase.GetAreaEndRow();
	var nAreaStartCol = objCase.GetAreaStartCol();
	var nAreaEndCol   = objCase.GetAreaEndCol();

	var strRowTitle;

	for(var nRow = nAreaStartRow; nRow <= nAreaEndRow; nRow++) {

		for(var nCell = nAreaStartCol; nCell < nAreaEndCol; nCell++) {

			strColID = objCase.GetCellProp("body",nCell,"colid");
			parent.Ds_rtn.SetColumn(nRow, strColID, parent.Ds_rtn.GetOrgColumn(nRow, strColID));
		}
	}
}

//***********
// OnKeyDown
//***********
function Tab00_tab1_grd_list_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,nLLParam,nHLParam)
{
	
	// Ctrl + C
	if ( bCtrl == 1 && nChar == 67 ) 
	{
		grd_fn_ClipboardCopy(obj, strSeparator);
	}
	// Ctrl + V
	else if ( bCtrl == 1 && nChar == 86 ) 
	{
		grd_fn_ClipboardPaste(obj, strSeparator);    
	}
	// Ctrl + Z
	else if ( bCtrl == 1 && nChar == 90 ) 
	{
		grd_fn_CellReset(obj);
	}
	
}



]]></Script>
</Window>