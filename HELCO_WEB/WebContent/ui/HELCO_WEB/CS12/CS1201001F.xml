<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="304" Id="CS1201001F" Left="8" OnKeyDown="gfn_EnterInForm" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="영업사원&#32;검색" Top="8" Ver="1.0" Width="464" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="QNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="QID" size="256" summ="default" type="STRING"/>
					<record>
						<QID></QID>
						<QNAME></QNAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list2">
				<Contents>
					<colinfo id="SNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="SID" size="256" summ="default" type="STRING"/>
					<colinfo id="SDEPT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="66" Height="30" Id="Shape0" Left="0" LineColor="user1" Right="464" TabOrder="1" Top="36" Type="Rectangle" Width="464"></Shape>
		<Static Align="Right" Height="20" Id="Static0" Left="5" Style="sty_lb_search" TabOrder="2" Text="영업사원명&#32;" Top="41" VAlign="Middle" Width="80"></Static>
		<Edit BindDataset="ds_cond" Border="Flat" Column="QNAME" Height="20" Id="ed_qname" ImeMode="native" Left="87" Style="sty_ipt_search" TabOrder="3" Top="41" Width="142"></Edit>
		<Static Align="Right" Height="20" Id="Static1" Left="231" Style="sty_lb_search" TabOrder="4" Text="아이디&#32;" Top="41" VAlign="Middle" Width="80"></Static>
		<Grid AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list2" BkColor2="default" BoldHead="true" Border="Flat" Bottom="296" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="222" Id="grd_list" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="ufn_closeWindow" Right="448" RowHeight="20" Style="sty_grid" TabOrder="5" TabStop="true" Top="74" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="440">
			<contents>
				<format id="Default">
					<columns>
						<col width="40"/>
						<col width="80"/>
						<col width="80"/>
						<col width="140"/>
					</columns>
					<head>
						<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="순번"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="영업사원명"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="아이디"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="업체"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
						<cell align="center" bkcolor2="user22" col="1" colid="SNAME" display="text"/>
						<cell align="center" bkcolor2="user22" col="2" colid="SID" display="text"/>
						<cell align="center" bkcolor2="user22" col="3" colid="SDEPT" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Div Height="36" Id="div_btn" TabOrder="6" Text="Div0" Url="WB01::CommBtnForm.xml" Width="464">
			<Contents></Contents>
		</Div>
		<Edit BindDataset="ds_cond" Border="Flat" Column="QID" Height="20" Id="med_qid" ImeMode="native" Left="313" Style="sty_ipt_search" TabOrder="7" Top="41" Width="142"></Edit>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) 
{
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initForm();	
	
	ed_qname = sid;
	med_qid  = sname;
	
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) 
{	
}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) 
{
	return gfn_isFormUnload(obj);
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() 
{	
	tit_clearActionInfo();
	
	tit_addSearchActionInfo("cs12:CS1201001F_S1");
	
	tit_callService(
          ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_list2=ds_list2"
        , ""
        , "fn_afterQuery"
        , true);
}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() 
{
	close(null);
}
/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() 
{
	// Excel Export 
	gfn_saveToExcel(grd_list, true );	
}
/********************************************************************************
* 기      능   : 취소 35
********************************************************************************/
function fn_cancel() 
{
	ds_cond.SetColumn(0,"COMNAME","");
	ds_cond.SetColumn(0,"LIFNR","");	
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) 
{
/*
	var searchStr = "1=1";	
	if(ds_cond.GetColumn(0,"COMNAME")!=""){
		searchStr = searchStr + " && pos(COMNAME," + "'" + ed_comName.Text + "') >= 0";		
	}
	if(ds_cond.GetColumn(0,"LIFNR")!=""){
		searchStr = searchStr + " && pos(LIFNR," + "'" + med_lifnr.Text + "') = 0";		
	}	
	//alert(ed_comName.Text+":"+med_lifnr.Text);
	ds_list.Filter(searchStr);
	*/
	gfn_showSearchMsg(grd_list);
}
/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) 
{
	if ( ds_error.rowcount() > 0 ) 
	{
		gfn_showMsg("CE00001");
	} 
	else 
	{
		gfn_showMsg("CI00003");
	}
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/
function ufn_closeWindow() 
{
	var arr = [ds_list2.GetColumn(ds_list2.currow,"SID"), ds_list2.GetColumn(ds_list2.currow,"SNAME")];

	close(arr);
	
}
//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if ( nCell == 0 ) 
	{
		// 그리드 표시할 컬럼 선택 
		gfn_selectGridCol(obj);
	} 
	else 
	{
		// 그리드 정렬 처리 
		gfn_sortGrid(obj,nCell);
	}
}
/********************************************************************************
* 기      능   : 데이터셋 값 변경 시 - Flag 처리 
********************************************************************************/
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	gfn_changeFlag( obj, strColumnID, nRow, "FLAG" );
}

]]></Script>
</Window>