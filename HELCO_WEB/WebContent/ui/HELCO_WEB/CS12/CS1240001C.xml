<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="447" Id="CS1240001C" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="투입예상자재" Top="8" Ver="1.0" Width="776" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_list3" OnColumnChanged="ds_list3_OnColumnChanged">
				<Contents>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="TEM" size="256" summ="default" type="STRING"/>
					<colinfo id="RDT" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SIR" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="MAKTX" size="256" summ="default" type="STRING"/>
					<colinfo id="MTART" size="256" summ="default" type="STRING"/>
					<colinfo id="MENGE" size="256" summ="default" type="STRING"/>
					<colinfo id="MEINS" size="256" summ="default" type="STRING"/>
					<colinfo id="SAMT1" size="256" summ="default" type="STRING"/>
					<colinfo id="SAMT2" size="256" summ="default" type="STRING"/>
					<colinfo id="TAMT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ma_cond">
				<Contents>
					<colinfo id="BUSSI" size="255" summ="default" type="STRING"/>
					<colinfo id="LGORT" size="255" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="255" summ="default" type="STRING"/>
					<colinfo id="MTART" size="255" summ="default" type="STRING"/>
					<colinfo id="INPUTROW" size="5" summ="default" type="INT"/>
					<record>
						<BUSSI></BUSSI>
						<INPUTROW/>
						<LGORT></LGORT>
						<MATNR></MATNR>
						<MTART></MTART>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ma_list">
				<Contents>
					<colinfo id="BANNAB" size="1" summ="default" type="STRING"/>
					<colinfo id="BISMT" size="54" summ="default" type="STRING"/>
					<colinfo id="BLOCK_NO" size="60" summ="default" type="STRING"/>
					<colinfo id="BRGEW" size="15" summ="default" type="DECIMAL"/>
					<colinfo id="DZEINR" size="120" summ="default" type="STRING"/>
					<colinfo id="EXEDT" size="24" summ="default" type="STRING"/>
					<colinfo id="EXEID" size="36" summ="default" type="STRING"/>
					<colinfo id="EXETM" size="18" summ="default" type="STRING"/>
					<colinfo id="EXTWG" size="54" summ="default" type="STRING"/>
					<colinfo id="GEWEI" size="9" summ="default" type="STRING"/>
					<colinfo id="MAKTX" size="120" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="9" summ="default" type="STRING"/>
					<colinfo id="MATKL" size="27" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="54" summ="default" type="STRING"/>
					<colinfo id="MATNR_NM" size="120" summ="default" type="STRING"/>
					<colinfo id="MEINS" size="9" summ="default" type="STRING"/>
					<colinfo id="MTART" size="12" summ="default" type="STRING"/>
					<colinfo id="NTGEW" size="15" summ="default" type="DECIMAL"/>
					<colinfo id="PARLAB1" size="33" summ="default" type="DECIMAL"/>
					<colinfo id="SAMT1" size="11" summ="default" type="DECIMAL"/>
					<colinfo id="SAMT2" size="11" summ="default" type="DECIMAL"/>
					<colinfo id="SPEC" size="180" summ="default" type="STRING"/>
					<colinfo id="VOLEH" size="9" summ="default" type="STRING"/>
					<colinfo id="VOLUM" size="15" summ="default" type="DECIMAL"/>
					<colinfo id="WRKST" size="144" summ="default" type="STRING"/>
					<colinfo id="ZSIZE" size="180" summ="default" type="STRING"/>
					<colinfo id="LVORM" size="1" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_mtart_cd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list4" OnColumnChanged="ds_list3_OnColumnChanged">
				<Contents>
					<colinfo id="TEM" size="256" summ="default" type="STRING"/>
					<colinfo id="RDT" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SIR" size="256" summ="default" type="STRING"/>
					<colinfo id="AMG" size="256" summ="default" type="STRING"/>
					<colinfo id="TOT1" size="256" summ="default" type="STRING"/>
					<colinfo id="TOT2" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond3" OnColumnChanged="ds_list3_OnColumnChanged">
				<Contents>
					<colinfo id="TEM" size="256" summ="default" type="STRING"/>
					<colinfo id="RDT" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SIR" size="256" summ="default" type="STRING"/>
					<colinfo id="DOC" size="256" summ="default" type="STRING"/>
					<colinfo id="AMG" size="256" summ="default" type="STRING"/>
					<record>
						<AMG></AMG>
						<DOC></DOC>
						<RDT></RDT>
						<SEQ></SEQ>
						<SIR></SIR>
						<TEM></TEM>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Div Height="36" Id="div_btn" TabOrder="1" Text="Div0" Url="WB01::CommBtnForm.xml" Width="776">
			<Contents></Contents>
		</Div>
		<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list3" BkColor2="default" BoldHead="true" Border="Flat" Bottom="440" CellMoving="TRUE" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="394" Id="grd_list" InputPanel="FALSE" Left="5" LineColor="user20" LineType="ExHORZ" OnExpandUp="btn_matnr_OnClick" Right="768" RowHeight="20" Style="sty_grid" TabOrder="2" TabStop="true" Top="46" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="763">
			<contents>
				<format id="Default">
					<columns>
						<col width="20"/>
						<col width="90"/>
						<col width="280"/>
						<col width="70"/>
						<col width="60"/>
						<col width="60"/>
						<col width="80"/>
						<col width="80"/>
					</columns>
					<head>
						<cell bkimageid="icon_grid_sel" col="0" display="text" rowspan="2"/>
						<cell align="center" col="1" display="text" font="굴림,9" rowspan="2" text="자재코드"/>
						<cell align="center" col="2" display="text" font="굴림,9" rowspan="2" text="자재내역"/>
						<cell align="center" col="3" display="text" font="굴림,9" rowspan="2" text="자재유형"/>
						<cell align="center" col="4" display="text" font="굴림,9" rowspan="2" text="요청수량"/>
						<cell align="center" col="5" display="text" font="굴림,9" rowspan="2" text="수량단위"/>
						<cell col="6" display="text" font="굴림,9" rowspan="2" text="판매단가"/>
						<cell col="7" display="text" font="굴림,9" rowspan="2" text="판매금액"/>
					</head>
					<body>
						<cell bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="0" display="text"/>
						<cell align="center" bkcolor2="user22" bkimagealign="right" col="1" colid="MATNR" display="text" expandimage="btn_icon_search" expandshow="true" expandsize="18"/>
						<cell align="left" bkcolor2="user22" col="2" colid="MAKTX" display="text"/>
						<cell align="center" bkcolor2="user22" col="3" colid="MTART" combocol="CODE" combodataset="ds_mtart_cd" combotext="CODE_NAME" display="combo"/>
						<cell align="right" bkcolor2="user22" bkimagealign="left" bkimageid="icon_grid_edit" col="4" colid="MENGE" display="number" edit="normal" LimitDec="2"/>
						<cell align="center" bkcolor2="user22" col="5" colid="MEINS" display="text"/>
						<cell align="right" bkcolor2="user22" col="6" colid="SAMT1" display="number" Mask="###,###"/>
						<cell align="right" bkcolor2="user22" col="7" colid="TAMT" display="number" Mask="###,###"/>
					</body>
					<summary>
						<cell align="center" col="0" colspan="6" display="text" text="합계"/>
						<cell align="right" bkcolor="user25" col="6" display="number" expr='SUM(&quot;SAMT1&quot;)' Mask="###,###"/>
						<cell align="right" bkcolor="user25" col="7" display="number" expr='SUM(&quot;TAMT&quot;)' Mask="###,###"/>
					</summary>
				</format>
			</contents>
		</Grid>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
#include "LIB::utility.js";	// 다중 선택 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var userGroup;
//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	gfn_initForm();

    // 자재유형코드 DataSet 가져오기
    var codeArr = ["1"];
    var dsObjArr = [ds_mtart_cd];
    var addTypeArr = [G_CODE_NONE];
    gfn_searchCommCode(codeArr, dsObjArr, addTypeArr, true);
}

/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
	fn_query();
}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================

/********************************************************************************
* 기      능   : 조회 
********************************************************************************/
function fn_query() {
	ds_cond3.SetColumn(0, "TEM", ds_cond2.GetColumn(0, "TEM"));
	ds_cond3.SetColumn(0, "RDT", ds_cond2.GetColumn(0, "RDT"));
	ds_cond3.SetColumn(0, "SEQ", ds_cond2.GetColumn(0, "SEQ"));
	ds_cond3.SetColumn(0, "SIR", ds_cond2.GetColumn(0, "SIR"));
	ds_cond3.SetColumn(0, "DOC", ds_cond2.GetColumn(0, "DOC"));
	ds_cond3.SetColumn(0, "AMG", t_amg);

	tit_clearActionInfo();

	if(fa_reqno == null || length(trim(fa_reqno)) == 0) {
		tit_addSearchActionInfo("cs12:CS1240001C_S1");
	} else {
		tit_addSearchActionInfo("cs12:CS1240001C_S2");
	}	

	tit_callService(
        ""
        , ""
        , "ds_cond3=ds_cond3"
        , "ds_list3=ds_list3"
        , ""
        , "fn_afterQuery"
        , true
        , true);
}

/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
	gfn_showMsg("CI00002", ds_list3.RowCount()+"");
}

/********************************************************************************
* 기      능   : 저장
********************************************************************************/
function fn_save() {
	if(t_pst > "A1") {
		gfn_showAlert("작성상태에서만 자재입력 가능합니다.");
		return false;
	}

	if(length(t_apstat) > 0) {
		gfn_showAlert("결재상신후 수정은 불가능합니다.");
		return false;
	}

	var tot1, tot2;

	for(var i=0; i<ds_list3.rowcount; i++) {
		if(length(ds_list3.GetColumn(i, "MATNR")) == 0) {
			gfn_showAlert("자재코드를 입력하십시요.");
			return false;
		}

		tot1 = tot1 + (ToNumber(ds_list3.GetColumn(i, "MENGE")) * ToNumber(ds_list3.GetColumn(i, "SAMT1")));
		tot2 = tot2 + (ToNumber(ds_list3.GetColumn(i, "MENGE")) * ToNumber(ds_list3.GetColumn(i, "SAMT2")));
	}

	ds_list4.ClearData();
	ds_list4.AddRow();
	ds_list4.SetColumn(0, "TEM", ds_cond2.GetColumn(0, "TEM"));
	ds_list4.SetColumn(0, "RDT", ds_cond2.GetColumn(0, "RDT"));
	ds_list4.SetColumn(0, "SEQ", ds_cond2.GetColumn(0, "SEQ"));
	ds_list4.SetColumn(0, "SIR", ds_cond2.GetColumn(0, "SIR"));
	ds_list4.SetColumn(0, "AMG", t_amg);
	ds_list4.SetColumn(0, "TOT1", tot1);
	ds_list4.SetColumn(0, "TOT2", tot2);

	tit_clearActionInfo();
	tit_addSingleActionInfo("cs12:CS1240001C_D1");
	tit_addSingleActionInfo("cs12:CS1240001C_D2");
	tit_addSingleActionInfo("cs12:CS1240001C_I1");
	tit_addMultiActionInfo("cs12:CS1240001C_I2");
	tit_callService(
		""
		, ""
		, "ds_list4=ds_list4 ds_list3=ds_list3"
		, ""
		, ""
		, "fn_afterSave"
		, true);
}

/********************************************************************************
* 기      능   : 삽입 
********************************************************************************/
function fn_input() {
	ds_list3.AddRow();
	ds_list3.SetColumn(ds_list3.row, "FLAG", "I");
	ds_list3.SetColumn(ds_list3.row, "TEM", ds_cond2.GetColumn(0, "TEM"));
	ds_list3.SetColumn(ds_list3.row, "RDT", ds_cond2.GetColumn(0, "RDT"));
	ds_list3.SetColumn(ds_list3.row, "SEQ", ds_cond2.GetColumn(0, "SEQ"));
	ds_list3.SetColumn(ds_list3.row, "SIR", ds_cond2.GetColumn(0, "SIR"));
	ds_list3.SetColumn(ds_list3.row, "MATNR", "");
	ds_list3.SetColumn(ds_list3.row, "MAKTX", "");
	ds_list3.SetColumn(ds_list3.row, "MTART", "");
	ds_list3.SetColumn(ds_list3.row, "MENGE", "");
	ds_list3.SetColumn(ds_list3.row, "MEINS", "");
	ds_list3.SetColumn(ds_list3.row, "SAMT1", 0);
	ds_list3.SetColumn(ds_list3.row, "SAMT2", 0);
	ds_list3.SetColumn(ds_list3.row, "TAMT", 0);
}

/********************************************************************************
* 기      능   : 삭제
********************************************************************************/
function fn_delete() {	
	var row = ds_list3.rowpos;
	ds_list3.DeleteRow(ds_list3.rowpos);
}

/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
	if(errCode != 0) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00005");
	}
}

/********************************************************************************
* 기      능   : 삭제 Callback  
********************************************************************************/
function fn_afterDelete(errCode, errMsg) {
	if(errCode != 0) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00005");
	}
}

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
function btn_matnr_OnClick() {
	var row = ds_list3.row;

	fn_clearMatnr(row);

	var mat = gfn_openPopup("MM0901002A", true); 

	ds_list3.SetColumn(row, "MATNR", mat);
	ds_ma_cond.SetColumn(0, "MATNR", mat);

	if(ds_list3.GetColumn(row, "MATNR") == "0") {
		ds_list3.SetColumn(row, "MATNR", "");
	} else {
		tit_clearActionInfo();
		tit_addSearchActionInfo("cs01:CS0101001A_S3");
		tit_callService(
			""
			,""
			, "ds_ma_cond=ds_ma_cond"
			, "ds_ma_list=ds_ma_list"
			, ""
			, "fn_setMatnr"
			, false
			, true);
	}
}

function fn_setMatnr() {
	var tamt;

	if(ds_ma_list.rowcount > 0) {
		if(ds_ma_list.GetColumn(0, "LVORM") == 'X') {
	   		gfn_showAlert("삭제 표기된 자재번호 입니다. 확인하십시요.");
			return;
     	}

     	tamt = ToNumber(ds_ma_list.GetColumn(0,"SAMT1")) * 1;

		ds_list3.fireevent = false;
		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"),"TEM",ds_cond2.GetColumn(0,"TEM"));
		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"),"RDT",ds_cond2.GetColumn(0,"RDT"));
		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"),"SEQ",ds_cond2.GetColumn(0,"SEQ"));
		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"),"SIR",ds_cond2.GetColumn(0,"SIR"));
		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"),"MATNR",ds_ma_list.GetColumn(0,"MATNR"));
		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"),"MAKTX",ds_ma_list.GetColumn(0,"MAKTX"));
		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"),"MTART",ds_ma_list.GetColumn(0,"MTART"));
		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"),"MEINS",ds_ma_list.GetColumn(0,"MEINS"));

		if(parseInt(ds_list3.GetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"),"MENGE")) < 1) {
			ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"),"MENGE",1);
		}

		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"), "SAMT1", ds_ma_list.GetColumn(0,"SAMT1"));
		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"), "SAMT2", ds_ma_list.GetColumn(0,"SAMT2"));
		ds_list3.SetColumn(ds_ma_cond.GetColumn(0,"INPUTROW"), "TAMT", tamt);
		ds_list3.fireevent = true;
	}
}

function fn_clearMatnr(nRow) {
	if(ds_ma_list.rowcount > 0) {
		ds_list3.SetColumn(nRow, "TEM", "");
		ds_list3.SetColumn(nRow, "RDT", "");
		ds_list3.SetColumn(nRow, "SEQ", "");
		ds_list3.SetColumn(nRow, "SIR", "");
		ds_list3.SetColumn(nRow, "MATNR", "");
		ds_list3.SetColumn(nRow, "MAKTX", "");
		ds_list3.SetColumn(nRow, "MTART", "");
		ds_list3.SetColumn(nRow, "MENGE", 0);
		ds_list3.SetColumn(nRow, "MEINS", "");
		ds_list3.SetColumn(nRow, "SAMT1", 0);
		ds_list3.SetColumn(nRow, "SAMT2", 0);
		ds_list3.SetColumn(nRow, "TAMT", 0);
	}
}

function ds_list3_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex) {
	var tamt;

	tamt = ToNumber(ds_list3.GetColumn(nRow, "SAMT1")) * ToNumber(ds_list3.GetColumn(nRow, "MENGE"));

	switch(strColumnID) {
		case "FLAG"  :
			ds_list3.SetColumn(nRow, "FLAG", "I");
		case "MATNR" :
			ds_ma_cond.SetColumn(0,"INPUTROW", nRow);
		case "MENGE" :
			ds_list3.SetColumn(nRow, "TAMT", tamt);
	}
}

function fn_excel() {
	// Excel Export
	gfn_saveToExcel(grd_list, true);
}
]]></Script>
</Window>