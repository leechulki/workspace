<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="224" Id="CS1240003F" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="유상계약기간&#32;상세" Top="8" Ver="1.0" Width="472" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_detail_pri2" ReverseSubSum="True">
				<Contents>
					<colinfo id="SEQ2" size="256" summ="default" type="STRING"/>
					<colinfo id="STD" size="256" summ="default" type="STRING"/>
					<colinfo id="ETD" size="256" summ="default" type="STRING"/>
					<colinfo id="TOT" size="256" summ="default" type="STRING"/>
					<colinfo id="MON" size="256" summ="default" type="STRING"/>
					<colinfo id="STOT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_detail_pri2" BkColor2="default" BoldHead="true" Border="Flat" Bottom="216" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="168" Id="grd_list2" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" Right="465" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="48" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="457">
			<contents>
				<format id="Default">
					<columns>
						<col width="0"/>
						<col width="65"/>
						<col width="70"/>
						<col width="70"/>
						<col width="40"/>
						<col width="105"/>
						<col width="105"/>
					</columns>
					<head>
						<cell col="0" display="text" font="굴림,9" text="No"/>
						<cell col="1" display="text" font="굴림,9" text="(계약연차)"/>
						<cell col="2" display="text" font="굴림,9" text="(From)"/>
						<cell col="3" display="text" font="굴림,9" text="(To)"/>
						<cell col="4" display="text" font="굴림,9" text="개월"/>
						<cell col="5" display="text" font="굴림,9" text="(금액)"/>
						<cell col="6" display="text" font="굴림,9" text="(합계금액)"/>
					</head>
					<body>
						<cell align="center" col="0" display="text" expr="currow+1"/>
						<cell align="center" col="1" colid="SEQ2" display="text"/>
						<cell align="center" col="2" colid="STD" display="text"/>
						<cell align="center" col="3" colid="ETD" display="text"/>
						<cell align="center" col="4" colid="MON" display="text"/>
						<cell align="right" col="5" colid="TOT" display="number" edit="number"/>
						<cell align="right" col="6" colid="STOT" display="number" expr="total_sum(currow)"/>
					</body>
					<summary>
						<cell col="0" display="text"/>
						<cell align="center" bkcolor="user25" col="1" color="user26" colspan="3" display="text" text="합&#32;&#32;계"/>
						<cell align="center" bkcolor="user25" col="4" color="user26" display="text" expr='sum(&quot;MON&quot;)'/>
						<cell align="right" bkcolor="user25" col="5" color="user26" display="number" expr='(sum(&quot;TOT&quot;)/GetTotalRowCount())'/>
						<cell align="right" bkcolor="user25" col="6" color="user26" display="number" expr='TotalSum(&quot;STOT&quot;)'/>
					</summary>
				</format>
			</contents>
		</Grid>
		<Div Height="36" Id="div_btn" TabOrder="2" Text="Div0" Url="WB01::CommBtnForm.xml" Width="464">
			<Contents></Contents>
		</Div>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿﻿﻿
﻿﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	gfn_initForm();
	gfn_copyDs(ds_detail_pri, ds_detail_pri2, "");
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {

}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() {
}
/********************************************************************************
* 기      능   : 삽입 20
********************************************************************************/
function fn_insert() {
	// 그리드에 row 추가 
	var newRow = gfn_addGridRow(grd_list, -1, "FLAG");
}
/********************************************************************************
* 기      능   : Delete 
********************************************************************************/
function fn_delete() {
	if ( ds_list.rowCount() < 1 ) {
		// 삭제할 정보 없음. 
		
		return;
	}
	
	// Grid 삭제 처리 
	gfn_deleteGridRow( grd_list, ds_list.row, "FLAG" );
}
/********************************************************************************
* 기      능   : 저장 
********************************************************************************/
function fn_save() {

	var oTot = toNumber(ds_list2.TotalSum("AMT"));
	var sTot = toNumber(ds_detail_pri2.TotalSum("STOT"));
	
	oTot = oTot * gfn_getMonthCnt(cal_from.Value,cal_to.Value);
	
	if(oTot != sTot) {
		alert('총계약금액('+oTot+')과 ' + '계약기간 별 금액합('+sTot+')이 틀립니다. ');
		return;
	}
	
	gfn_copyDs(ds_detail_pri2, ds_detail_pri, "");
	close();
}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}
/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	// Excel Export 
	gfn_saveToExcel(grd_list, true );
}
/********************************************************************************
* 기      능   : 접수 5
********************************************************************************/
function fn_receipt() {

}
/********************************************************************************
* 기      능   : 승인 10
********************************************************************************/
function fn_approval() {

}
/********************************************************************************
* 기      능   : d결재 15
********************************************************************************/
function fn_decide() {

}
/********************************************************************************
* 기      능   : 취소 35
********************************************************************************/
function fn_cancel() {

}
/********************************************************************************
* 기      능   : print 40
********************************************************************************/
function fn_print() {

}
/********************************************************************************
* 기      능   : 발행 50
********************************************************************************/
function fn_out() {

}
/********************************************************************************
* 기      능   : 신청 55
********************************************************************************/
function fn_request() {

}
/********************************************************************************
* 기      능   : 전송 60
********************************************************************************/
function fn_trans() {

}
/********************************************************************************
* 기      능   : 반송 65
********************************************************************************/
function fn_sendback() {

}
/********************************************************************************
* 기      능   : 계산 70
********************************************************************************/
function fn_cal() {

}
/********************************************************************************
* 기      능   : 복사 75
********************************************************************************/
function fn_copy() {

}
/********************************************************************************
* 기      능   : 확인 80
********************************************************************************/
function fn_confirm() {

}
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
	// 메시지 처리 
	gfn_showSearchMsg(grd_list);
}
/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
	if ( ds_error.rowcount() > 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
	}
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/
function ufn_userfunction() {

}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if ( nCell == 0 ) {
		// 그리드 표시할 컬럼 선택 
		gfn_selectGridCol(obj);
	} else {
		// 그리드 정렬 처리 
		gfn_sortGrid(obj,nCell);
	}
}
/********************************************************************************
* 기      능   : 데이터셋 값 변경 시 - Flag 처리 
********************************************************************************/
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	gfn_changeFlag( obj, strColumnID, nRow, "FLAG" );
}
  
function total_sum(nRow) 
{
	
	var mon = toNumber(ds_detail_pri2.GetColumn(nRow, "MON"));
	var tot = toNumber(ds_detail_pri2.GetColumn(nRow, "TOT"));
	
	ds_detail_pri2.SetColumn(nRow, "STOT", mon*tot);
	//alert(nRow + "::" + mon + "/" + tot + "||" + mon*tot);
	return mon*tot;
}]]></Script>
</Window>