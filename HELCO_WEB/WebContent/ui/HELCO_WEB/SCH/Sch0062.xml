<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="470" Id="Sch0062" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="법조치관리" Top="8" Ver="1.0" Width="496" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="PSPID" size="24" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list" OnColumnChanged="ds_list_OnColumnChanged" OnRowPosChanged="ds_list_OnRowPosChanged">
				<Contents>
					<colinfo id="SAVE_YN" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="NEW_YN" size="1" type="STRING"/>
					<colinfo id="MEDAT" size="256" type="STRING"/>
					<colinfo id="MEKIND" size="256" type="STRING"/>
					<colinfo id="MEKINDT" size="256" type="STRING"/>
					<colinfo id="DEBTR" size="256" type="STRING"/>
					<colinfo id="DEBTRT" size="256" type="STRING"/>
					<colinfo id="ERDAT" size="8" type="STRING"/>
					<colinfo id="ERZZT" size="6" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_save" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="PSPID" size="2" type="STRING"/>
					<colinfo id="MEDAT" size="8" type="STRING"/>
					<colinfo id="MEKIND" size="2" type="STRING"/>
					<colinfo id="DEBTR" size="2" type="STRING"/>
					<colinfo id="DEBTRT" size="20" type="STRING"/>
					<colinfo id="ERDAT" size="8" type="STRING"/>
					<colinfo id="ERZZT" size="6" type="STRING"/>
					<colinfo id="ERNAM" size="12" type="STRING"/>
					<colinfo id="AEDAT" size="8" type="STRING"/>
					<colinfo id="AEZZT" size="6" type="STRING"/>
					<colinfo id="AENAM" size="12" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user12" Bottom="74" Height="26" Id="Shape1" Left="0" LineColor="user13" Right="490" TabOrder="5" Top="48" Type="Rectangle" Width="490"></Shape>
		<Div Height="36" Id="div_btn" TabOrder="4" Text="Div0" Top="8" Url="WB01::CommBtnForm.xml" Width="496">
			<Contents></Contents>
		</Div>
		<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="459" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="376" Id="grd_list" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" OnExpandEdit="grd_list_OnExpandEdit" OnHeadClick="grd_list_OnHeadClick" OnKeyDown="grd_list_OnKeyDown" Right="488" RowHeight="20" Style="sty_grid" TabOrder="2" TabStop="true" Top="83" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="480">
			<contents>
				<format id="Default">
					<columns>
						<col width="38"/>
						<col width="28"/>
						<col width="33"/>
						<col width="74"/>
						<col width="45"/>
						<col width="96"/>
						<col width="45"/>
						<col width="97"/>
					</columns>
					<head>
						<cell align="center" bkimageid="icon_grid_sel" col="0" color="expr:GC_FONTCOLOR_EDITABLE_F" display="text" font="굴림,9"/>
						<cell align="center" col="1" color="user21" display="image" font="굴림,9"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="변경"/>
						<cell align="center" col="3" color="expr:GC_FONTCOLOR_EDITABLE_T" display="text" font="굴림,9" text="법조치일"/>
						<cell align="center" col="4" color="expr:GC_FONTCOLOR_EDITABLE_T" display="text" font="굴림,9" text="법조치"/>
						<cell align="center" col="5" color="expr:GC_FONTCOLOR_EDITABLE_T" display="text" font="굴림,9" text="법조치내역"/>
						<cell align="center" col="6" color="expr:GC_FONTCOLOR_EDITABLE_T" display="text" font="굴림,9" text="채무자"/>
						<cell align="center" col="7" color="expr:GC_FONTCOLOR_EDITABLE_T" display="text" font="굴림,9" text="채무자내역"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
						<cell align="center" bkcolor2="user22" col="1" colid="CHK" display="checkbox" edit="checkbox"/>
						<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="2" colid="FLAG" display="image"/>
						<cell align="left" autosizing="none" bkcolor2="user22" checklength="Byte" col="3" colid="MEDAT" display="date" edit="date"/>
						<cell align="left" autosizing="none" bkcolor2="user22" checklength="Byte" col="4" colid="MEKIND" display="text" expandshow="true"/>
						<cell align="left" autosizing="none" bkcolor2="user22" checklength="Byte" col="5" colid="MEKINDT" display="text"/>
						<cell align="left" autosizing="none" bkcolor2="user22" checklength="Byte" col="6" colid="DEBTR" display="text" expandshow="true"/>
						<cell align="left" autosizing="none" bkcolor2="user22" checklength="Byte" col="7" colid="DEBTRT" display="text" edit='expr:decode(DEBTR,&#32;&quot;&quot;,&#32;&quot;normal&quot;,&#32;&quot;&#32;&quot;,&#32;&quot;normal&quot;,&#32;&quot;none&quot;)'/>
					</body>
				</format>
			</contents>
		</Grid>
		<Static Align="Right" Height="20" Id="Static0" Left="3" Style="sty_lb_form_basic" TabOrder="3" Text="프로젝트&#32;" Top="51" VAlign="Middle" Width="70"></Static>
		<Edit Border="Flat" Enable="FALSE" Height="20" Id="ed_kidno" Left="75" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="1" TabStop="FALSE" Top="51" Width="157"></Edit>
		<Static Align="Right" Height="20" Id="Static1" Left="234" Style="sty_lb_form_basic" TabOrder="7" Text="프로젝트명&#32;" Top="51" VAlign="Middle" Width="70"></Static>
		<Edit Border="Flat" Column="NAME1" Enable="FALSE" Height="20" Id="ed_kidno_t" Left="306" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="6" TabStop="FALSE" Top="51" Width="181"></Edit>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 매출채권 명세 및 채권 현황(청구) _법조치관리 (Sch0162)
 * 작  성  자   : 구란이
 * 작성  일자   : 2012.06.20
 * ----------------------------------------------------------------------------------------
 ** HISTORY    : V1.0 : 2012.09.03 : 신규
 * COMMENT
   0. T-CODE                : ZSDR152
   1. RFC URL 				: 조회/저장 : http://elsdev.hyundaielevator.co.kr:8000/sap/bc/srt/wsdl/bndg_4FDFC4BCD68E0205E1008000CBF22518/wsdl11/allinone/ws_policy/document?sap-client=910			
   2. RFC OPERATION NAME 	: ZWEB_SD_CHN_152_LAW  : 조회/저장 
   3. RFC OBJ NAME 			: ZSDS0048(조회,저장목록), ZSDS0049(법조치별최종자료)
   4. 개발자료 : 2012.05  
 ******************************************************************************************
*/
#include "LIB::commons.js";			// 공통 스크립트  
#include "LIB::nsfRequest.js";		// 공통 스크립트  /* GNY 추가 */
#include "LIB::common_hdel.js";		// 공통 스크립트  /* GNY 추가 */

//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var F_FORM_ID 			= "Sch0162";   

// 폼파라메터정보  

// 컬럼번호 
var F_COLNUM_MEKIND		= "";  // 법조치 종류	
var F_COLNUM_MEKINDT	= "";  // 법조치 내역	
var F_COLNUM_MEDAT		= "";  // 법조치일자 	
var F_COLNUM_DEBTR		= "";  // 채무자정보 	
var F_COLNUM_DEBTRT		= "";  // 채무자내역 	 

var F_SYSDATE           = ""; 			// 현재년월일(8자리)
var F_CHG_ROWNUM        = "";			// 최종 변경된 헹번호
var F_CHG_COLNUM        = "";			// 최종 변경된 컬럼번호
var F_USER_GROUP_B 		= "";  			// 사용자권한 (G_USER_GROUP_B)   

var F_SAVE_ARR          = ["FLAG","MEDAT", "MEKIND", "MEKINDT", "DEBTR", "DEBTRT"];    // 저장 시 변경여부 체크할 항목들
var F_CHG_ARR          	= ["MEDAT", "MEKIND", "MEKINDT", "DEBTR", "DEBTRT"];			// 변경 시 변경여부 체크할 항목들
 
//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initForm();	 
	
	// 화면제목 설정 및 버튼 활성화 (조회:1, 입력:20,삭제:25,저장:30)
	div_btn.fn_loadUseBtn("1,20,25,30", "법조치관리", "", "");   
	
	// 폼 파라메터 체크 및 fa_kunnr 설정 
	// trace("fa_kidno 		: " + fa_kidno);  
	// trace("fa_kidno_t 	: " + fa_kidno_t);  
 
	if (isValidObject(fa_kidno  )==false) ed_kidno.text		= fa_kidno  ; // 공사번호 (프로젝트번호)
	if (isValidObject(fa_kidno_t)==false) ed_kidno_t.text 	= fa_kidno_t; // 현장명
	
	// 폼 초기화
	fn_init_form();
	
	// 자동 조회 (공사번호 존재 시)
	if (length(trim(ed_kidno.Text)) > 0 )
	{
		fn_query(); // 임시주석처리
	}
	
}

/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 (common.js에서 호출됨)
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
	gfn_showMsg("CI00007");  
}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
 
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() { 
	gfn_clearMsgBar(); 

	// sort mark 삭제 
	gfn_clearGridSortMark(grd_list); 

	// 조회조건 항목오류검증
	if (fn_valid_chk("query") == false)  return;

	// 조회조건 설정
	ds_cond.ClearData();   
	if (fn_param_set("query") == false)  return;

	// 데이타셋 이벤트 비활성화
	ds_list.Fireevent = false; 

	// 최종 변경된 셀정보 초기화
	F_CHG_COLNUM	= "";	 // 변경된 컬럼번호
	F_CHG_ROWNUM	= "";	 // 변경된 행번호   

	// 서비스 호출 
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	ds_list.ClearData();   		// 결과목록
	nsfRequest("query"									// srvId
				, "sch0062/find"						// url
				, "ds_cond=ds_cond ds_list=ds_list"		// inDsList
				, "ds_list=ds_list"						// outDsList
				, ""									// strParam
				, "fn_afterQuery"						// CallBackFunc
				);
 
}


// INPUT PARAM SET
// pProcGb : 처리구분 (query:조회)
function fn_param_set(pProcGb)
{   
	
	switch(pProcGb)
	{
		case "query" :  // 조회 시
			 
			ds_cond.AddRow();
			ds_cond.SetColumn(ds_cond.row, "PSPID"	, trim(ed_kidno.Text) 	); // 공사번호
			break;  
			
		case "save" :  // 진행사항 저장 시
			ds_cond.AddRow();
			ds_cond.SetColumn(ds_cond.row, "PSPID"	, trim(ed_kidno.Text) 	); // 공사번호

			for (var i=0; i<ds_list.RowCount(); i++) {
				if (ds_list.getcolumn(i, "CHK") == "1" &&
					ds_list.getcolumn(i, "SAVE_YN") == "Y")  // 저장대상 행에 한해서만 저장수행
				{
					ds_list_save.AddRow();
					ds_list_save.SetColumn(ds_list_save.row, "PSPID"	, ed_kidno.Text						);  // 프로젝트번호
					ds_list_save.SetColumn(ds_list_save.row, "MEKIND"	, ds_list.GetColumn(i, "MEKIND"	)	);  // 법조치종류
					ds_list_save.SetColumn(ds_list_save.row, "MEDAT" 	, ds_list.GetColumn(i, "MEDAT")		);  // 법조치일자
					ds_list_save.SetColumn(ds_list_save.row, "DEBTR" 	, ds_list.GetColumn(i, "DEBTR"	)	);  // 채무자정보
					ds_list_save.SetColumn(ds_list_save.row, "DEBTRT" 	, ds_list.GetColumn(i, "DEBTRT" )	);  // 채무자내용
					ds_list_save.SetColumn(ds_list_save.row, "ERDAT" 	, substr(GetDate(),0,8)				);  // 등록일자		
					ds_list_save.SetColumn(ds_list_save.row, "ERZZT" 	, substr(GetDate(),8,6)				);  // 등록시간
					ds_list_save.SetColumn(ds_list_save.row, "ERNAM" 	, G_USER_NAME						);  // 등록자이름
					ds_list_save.SetColumn(ds_list_save.row, "AEDAT" 	, substr(GetDate(),0,8) 			);  // 수정일자
					ds_list_save.SetColumn(ds_list_save.row, "AEZZT" 	, substr(GetDate(),8,6) 			);  // 수정시간
					ds_list_save.SetColumn(ds_list_save.row, "AENAM" 	, G_USER_NAME						);  // 수정자이름
				}
			}
			break;    
			
		default: 
			break; 
	}   

	return true;
	
}

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	var arr = ds_list.GetColumn(ds_list.RowCount() - 2, "MEKIND");

	close(arr);
} 

/********************************************************************************
* 기      능   : 복원 
********************************************************************************/
function fn_reset() 
{
	ds_list.Reset(); 
}

/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	
	//  trace("fn_excel()호출 start");
 	
 	gfn_clearMsgBar(); 
 	
	// 조회조건 항목오류검증
	if (fn_valid_chk("excel") == false)  return; 
	
	// Excel Export  
	gfn_saveToExcel(grd_list, true); 
	
}


//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 저장 : 진행사항 등록, 수정, 삭제
********************************************************************************/
function fn_save() {
	gfn_clearMsgBar();   

	// 저장항목 오류검증
	if (fn_valid_chk("save") == false) return false;

	// 저장항목 값설정 
	ds_cond.ClearData();
	ds_list_save.ClearData();
	if (fn_param_set("save") == false)  return false;

	// 서비스 호출
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	ds_error.ClearData();  
	nsfRequest("update"															// srvId
				, "sch0062/save"												// url
				, "ds_cond=ds_cond ds_list=ds_list ds_list_save=ds_list_save"	// inDsList
				, "ds_list=ds_list"												// outDsList
				, ""															// strParam
				, "fn_afterSave"												// CallBackFunc
				);

}
 
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {  
	
	fn_destroyWait(); 
	
	// 결과값 trace
	//  trace("fn_afterQuery 호출 start"); 
	//  trace(ds_error.SaveXML());  
	//  trace(ds_list.SaveXML()); 
	//  trace(ds_last_law.SaveXML()); 
	
	// 데이타셋 이벤트 활성화
	ds_list.Fireevent = true; 
	
	if(ds_error.RowCount() > 0) 	// 조회실패
	{ 
		gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG")); 
	} 
	else 
	{ 
		// 조회된 자료가 있을 경우 그리드 첫번째 행에 포커스 위치시킨다.
		if (ds_list.RowCount() > 0) {
			alert("조회를 완료했습니다. 조회건수 [" + ds_list.RowCount() +"건]");
		} else {
			alert("데이터가 없습니다.");
		} 
		
		// 행추가버튼으로 빈 행 자동추가해줌
		fn_input();
		
	}  
	
	//  trace("fn_afterQuery 호출 end");
	
} 

/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) { 
	
	fn_destroyWait(); 

	//  trace("fn_afterSave 호출 start");  
	//  trace(ds_error.SaveXML()); 
	
	if(ds_error.RowCount() > 0) 	// 저장실패
	{ 
		gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG")); 
	} 
	else 
	{  
		ds_list.ApplyChange();
	
		// 재조회
		fn_query(); 
	}
	
	//  trace("fn_afterSave 호출 end");
} 
 
// 임시코딩
function fn_OnClick_btn(obj)
{ 
	var fncName = "fn_" + substr(obj.id, 4); 
	eval( fncName + "()");
}

// 항목 오류 검증
// pProcGb : 처리구분 (query:조회,excel:엑셀)
function fn_valid_chk(pProcGb)
{   
	var arr   = "";
	var ChgYn = "N";
	var SaveCount = 0;
	
 	switch(pProcGb)
	{
		case "query" :   
			if (length(ed_kidno.Text) == 0)
			{ 
				// CW00208 : "[${}]은/는 필수입력 입니다.확인바랍니다.")
				gfn_showAlert("CW00208","프로젝트");
				gfn_SetFocus(ed_kidno,"N"); 
				return false;
			}
			break;  
			
		case "excel" :   // 엑셀
			 
			if (ds_list.RowCount() <=0) {
				alert("데이터가 없습니다.");
				return false;
			} 
			 
			// 변경된 내역이 존재할 경우 엑셀출력 불가처리
			if(gfn_isChangeDs(ds_list, false, "FLAG", "법조치")== true) 
			{  
				//"CW10003", "변경된 ${}이 존재하여 ${}이 불가능합니다. 변경된 정보를 저장후 다시 실행하여 주십시오.");  // 2012.06.13 : GRY : 추가
				arr = ["진행사항", "엑셀출력"];
				gfn_showAlert("CW10003", arr);
				return false;
			}   
			
			break; 
			
		case "save":   	// 법조치저장
		
			if (length(ed_kidno.Text) == 0)
			{ 
				// CW00208 : "[${}]은/는 필수입력 입니다.확인바랍니다.")
				gfn_showAlert("CW00208","프로젝트");
				gfn_SetFocus(ed_kidno,"N"); 
				return false;
			}    
				
			// 선택된 행 존재여부 체크
			if (ds_list.FindRow("CHK",1) < 0) {
				alert("처리할 자료를 먼저 선택해 주십시오.");
				return false; 
			} 
			
			// 변경된 내역 존재여부 체크  
			if(gfn_isChangeDs(ds_list, true, "FLAG", "법조치")== false) 
			{ 
				return false; 
			}     
			 
			// 행별 오류 체크  
			for (var i=0; i<=ds_list.RowCount(); i++)
			{    
				
				// 선택된 행 중 등록/수정 대상 행에 대하여
				if (ds_list.GetColumn(i, "CHK") == 1)
				{
					// 등록,수정,삭제대상여부 GET
					ChgYn = gfn_GetDatasetChgYN(grd_list, i, F_SAVE_ARR, "Y");    
					
					//  trace("fn_valid_chk.ChgYn : " + ChgYn);
					
					if (ChgYn == "Y")  			// 변경된 자료가 있으면
					{  
						if (ds_list.GetColumn(i, "FLAG") == "I" || ds_list.GetColumn(i, "FLAG") == "U")
						{  
						
							if (length(trim(ds_list.GetColumn(i, "MEDAT"))) == 0)
							{ 
								// CW10009 : "${}의 ${}는 반드시 입력하셔야 합니다."
								arr = ["No:"+toNumber(i+1)+"행", "법조치일"];
								gfn_showAlert("CW10009", arr); 
								gfn_SetFocusGrid(grd_list, i, F_COLNUM_MEDAT);
								return false;  
							}
							
							arr = ["No:"+toNumber(i+1)+"행의 법조치일"];
							if (gfn_chkDate(trim(ds_list.GetColumn(i, "MEDAT")), arr, true)==-1)
							{ 
								gfn_SetFocusGrid(grd_list, i, F_COLNUM_MEDAT);
								return false;  
							}
							
						}
						
						gfn_SetColumn(ds_list, i, "SAVE_YN", "Y");  // 저장대상=Y로 SET
						SaveCount++;								// 저장대상건수 누적
						
					}
					else
					{ 
						gfn_SetColumn(ds_list, i, "SAVE_YN", "N");  // 저장대상=N로 원복
					}
				}
			} 
			
			if (SaveCount == 0)
			{ 
				// CW00006=${}에 변경된 정보가 없습니다.
				gfn_showAlert("CW00006", "법조치");
				return false; 
			}
			
			break; 
			
		case "delete":   	// 진행사항삭제 
			 
			// 조회된 행 존재여부 체크
			if (ds_list.row < 0 || ds_list.rowCount() < 1) {
				alert("데이터가 없습니다.");
				return false; 
			} 
			
		default: 
			break; 
	}   

	return true;
}

/********************************************************************************
* 기      능   : 새로고침
********************************************************************************/
function fn_refresh() {

	// 폼초기화
	//fn_init_form();
	
}  

// 폼 초기화 
function fn_init_form()
{ 
	// 메세지바 초기화
	gfn_clearMsgBar();   
	
	// 폼변수 초기화 
	F_CHG_COLNUM	= "";	// 변경된 컬럼번호
	F_CHG_ROWNUM	= "";	// 변경된 행번호   
	F_USER_GROUP_B  = G_USER_GROUP_B;  // 임시 추가
	F_SYSDATE   	= substr(gfn_getCurrDate(),0,8); // 현재년월일(8자리)
	
	// 데이타셋 초기화
	ds_list.ClearData(); 			// 검색결과 그리드 데이타셋 초기화    
	
	// 코딩 시 필요한 그리드 컬럼 인덱스	  
	F_COLNUM_MEKIND	= gfn_getColIdx(grd_list,"MEKIND"	);  // 법조치종류
	F_COLNUM_MEKINDT= gfn_getColIdx(grd_list,"MEKINDT"	);  // 법조치내역 
	F_COLNUM_MEDAT 	= gfn_getColIdx(grd_list,"MEDAT"	);  // 법조치일자 
	F_COLNUM_DEBTR 	= gfn_getColIdx(grd_list,"DEBTR"	);  // 채무자정보 
	F_COLNUM_DEBTRT = gfn_getColIdx(grd_list,"DEBTRT"	);  // 채무내역  
					
	//  trace("F_COLNUM_MEKIND 	: " + F_COLNUM_MEKIND);
	//  trace("F_COLNUM_MEKINDT : " + F_COLNUM_MEKINDT);
	//  trace("F_COLNUM_MEDAT 	: " + F_COLNUM_MEDAT);
	//  trace("F_COLNUM_ 		: " + DEBTR);
	//  trace("F_COLNUM_DEBTRT 	: " + F_COLNUM_DEBTRT);
	
}     

// 그리드 헤더 클릭 시
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if (nCell == 0) {
		gfn_selectGridCol(obj); 
	} 
	else if (nCell == 1) { 						// 선택 CELL 인 경우
		gfn_selectAllGrid2(obj,1,1,true);	// 전체 선택  
	} else { 								// 그 외 CELL 인 경우
		// gfn_sortGrid(obj,nCell);			// 그리드 정렬 처리  (순번 채번 처리로 인해 정렬기능 삭제)
	} 
}

// 그리드에서 키 입력 시
function grd_list_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,nLLParam,nHLParam)
{
	// 엔터키이면
	if (nChar==13)
	{ 
		ds_list.row = ds_list.row + 1;  // 다음 행으로 이동
	} else {
		gfn_GrdCellCopyPasteReset(obj, ds_list, bCtrl, nChar);
	}
} 
 
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{  
	var nCol = grd_list.GetCellPos();  // 현재 컬럼번호
	
	//  trace("ds_list_OnColumnChanged.row,col : " + nRow + ", " + nCol);  
	
	// 변경여부를 체크
	if (strColumnID == "MEKIND" || strColumnID == "MEKINDT"
								|| strColumnID == "MEDAT"
								|| strColumnID == "DEBTR"
								|| strColumnID == "DEBTRT")
	{  
		// 값이 변경되었을 경우 변경구분 컬럼 자동 SET 
		if (varNewValue != varOldValue)  
		{  
			switch (strColumnID)
			{  
				case "MEKIND": 		// 법조치 종류
					break;  
				case "MEKINDT":  	// 법조치 내역	
					break; 
				case "MEDAT": 	  	// 법조치일자 
					break; 
				case "DEBTR": 	  	// 채무자정보 
					break; 
				case "DEBTRT": 	  	// 채무자내역 
					break; 
			} 
			
			obj.Fireevent = false; 
			obj.SetColumn(nRow, "CHK" , "1");	// 선택여부   
			obj.Fireevent = true; 
			
			// FLAG 변경 : U
			gfn_changeFlag( obj, strColumnID, nRow, "FLAG");
			
			// 변경된 현재 행번호,컬럼번호
			F_CHG_COLNUM = nCol; 	// 현재 컬럼번호
			F_CHG_ROWNUM = nRow;	// 현재 행번호
		}
	} 
	 
}

// 행추가 버튼 클릭 시
function fn_input()
{    
	// 행추가 (맨뒤에 추가됨)
	var newRow = gfn_addGridRow(grd_list, -1, "FLAG");	// 추가된 행번호를 받아옴 (FLAG:I)
	
	// 법조치일자 셀에 포커싱
	gfn_SetFocusGrid(grd_list, newRow, F_COLNUM_MEDAT);
	
	// 새로 추가된 행에 기본값을 설정한다.   
	ds_list.Fireevent = false;
	// ds_list.SetColumn(newRow, "CHK" 	, 1		);	// 선택여부
	ds_list.SetColumn(newRow, "NEW_YN" 	, "Y"	);	// 신규여부   
	ds_list.Fireevent = true; 
					
} 

// 행삭제 버튼 클릭 시
function fn_delete() {
	ds_cond.ClearData();
	ds_cond.AddRow();
	ds_cond.SetColumn(ds_cond.row, "PSPID"	, trim(ed_kidno.Text) 	); // 공사번호

	ds_list_save.ClearData();

	for (var i=0; i<ds_list.RowCount(); i++) {
		if (ds_list.getcolumn(i, "CHK") == "1") {
			ds_list_save.AddRow();
			ds_list_save.SetColumn(ds_list_save.row, "PSPID"	, ed_kidno.Text						);  // 프로젝트번호
			ds_list_save.SetColumn(ds_list_save.row, "ERDAT" 	, ds_list.GetColumn(i, "ERDAT"	)	);  // 등록일자		
			ds_list_save.SetColumn(ds_list_save.row, "ERZZT" 	, ds_list.GetColumn(i, "ERZZT"	)	);  // 등록시간
		}
	}

	// 서비스 호출
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	ds_error.ClearData();  
	nsfRequest("update"															// srvId
				, "sch0062/delete"												// url
				, "ds_cond=ds_cond ds_list=ds_list ds_list_save=ds_list_save"	// inDsList
				, "ds_list=ds_list"												// outDsList
				, ""															// strParam
				, "fn_afterSave"												// CallBackFunc
				);
}

// 현재 조회된 자료의 MAX 순번 구하기(순번이 문자열이라서 ds_list.Max 로 구할 수 없음)
function fn_getMaxSerno()
{ 
	var max_serno 	= 0;
	var serno 		= 0; 
	for (var i=0;i<ds_list.GetCount();i++)
	{
		serno = ds_list.GetColumn(i, "SERNO");  
		if (ToNumber(serno) > ToNumber(max_serno))
		{
			max_serno = serno;
		}
	}
	return max_serno;
}

function grd_list_OnExpandEdit(obj,nRow,nCell,strVal,nPivotIndex)
{
	// trace("grd_list_OnExpandEdit start ");
	// trace("grd_list_OnExpandEdit start nCell " + nCell);
	
	switch (nCell)
	{
		case F_COLNUM_MEKIND:  // 법조치종류
		
			// 법조치 종류 선택 팝업화면 OPEN
			var arg = ""
					+ " fa_frm_title= " + quote("채권사유선택") 		// 팝업화면 제목
					+ " fa_cd_title= " 	+ quote("법조치종류") 			// 팝업화면 그리드 코드 제목
					+ " fa_nm_title= " 	+ quote("내역") 				// 팝업화면 그리드 코드명 제목
					+ " fa_domname= " 	+ quote(GC_DOMNAME_ZSDDMEKIND) // GC_DOMNAME_ZSDDMEKIND : ZSDDMEKIND
					; 
		
			var arr = gfn_openPopUpUrlHdel("Com::Com0050.xml", true, arg );	 
			
			// trace("arr : " + arr); 
			
			if (arr != null && arr != 0)
			{
				ds_list.SetColumn(ds_list.row, "MEKIND" , arr[0]);	// 리턴된 법조치 종류 SET
				ds_list.SetColumn(ds_list.row, "MEKINDT", arr[1]);	// 리턴된 법조치 내역 SET
			}
			
			break;
			
		case F_COLNUM_DEBTR:  // 채무자정보 
		
			// 채무자정보 선택 팝업화면 OPEN
			var arg = ""
					+ " fa_frm_title= " + quote("채무자정보 선택") 		// 팝업화면 제목
					+ " fa_cd_title= " 	+ quote("채무자정보") 			// 팝업화면 그리드 코드 제목
					+ " fa_nm_title= " 	+ quote("내역") 				// 팝업화면 그리드 코드명 제목
					+ " fa_domname= " 	+ quote(GC_DOMNAME_ZSDDDEBTR) 	// GC_DOMNAME_ZSDDDEBTR : ZSDDDEBTR
					; 
		
			var arr = gfn_openPopUpUrlHdel("Com::Com0050.xml", true, arg );	 
			
			// trace("arr : " + arr); 
			
			if (arr != null && arr != 0)
			{
				ds_list.SetColumn(ds_list.row, "DEBTR" , arr[0]);	// 리턴된 채무자정보  종류 SET
				ds_list.SetColumn(ds_list.row, "DEBTRT", arr[1]);	// 리턴된 채무자내역  내역 SET 
			}
			
			break;	
			
		default :
			break;
			
	} 
}

// 데이타셋 행 자료가 변경되었을 경우
function ds_list_OnRowPosChanged(obj,nOldRow,nRow)
{
	// trace("ds_list_OnRowPosChanged.nOldRow : " + nOldRow); 
	// trace("ds_list.GetColumn(FLAG) : " + obj.GetColumn(nOldRow, "FLAG"));
	
	// 변경된 행에 대해서만 체크함	
	if (obj.GetColumn(nOldRow, "FLAG") <> "U") return;  
	   
	// F_CHG_ARR에 선언된 컬럼에 대해서만 변경여부 체크 (Y)  
	var ChgYn = gfn_GetDatasetChgYN(grd_list, nOldRow, F_CHG_ARR, "Y");  
	
	// trace("ds_list_OnRowPosChanged.ChgYn : " + ChgYn);
	
	/// 변경된 자료가 없으면 선택여부,변경구분 초기화
	if (ChgYn == "N")  
	{
		gfn_SetDatasetChgFlag(obj, nOldRow); 
	}
}
]]></Script>
</Window>