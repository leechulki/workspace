<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="680" Id="Ses0414" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="리모델링&#32;대표&#32;설치PM&#32;관리" Top="8" Ver="1.0" Width="840" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="TEMNO" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<record>
						<TEMNO></TEMNO>
						<VKGRP></VKGRP>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error">
				<Contents>
					<colinfo id="IDX" size="256" type="STRING"/>
					<colinfo id="ERRMSG" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_sman">
				<Contents>
					<colinfo id="SMAN_CD" size="256" type="STRING"/>
					<colinfo id="SMAN_NM" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_sman">
				<Contents>
					<colinfo id="SMAN_CD" size="10" type="STRING"/>
					<colinfo id="SMAN_NM" size="105" type="STRING"/>
					<record>
						<SMAN_CD></SMAN_CD>
						<SMAN_NM></SMAN_NM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error_sman">
				<Contents>
					<colinfo id="IDX" size="256" type="STRING"/>
					<colinfo id="ERRMSG" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list" OnColumnChanged="ds_list_OnColumnChanged" OnRowInserted="ds_list_OnRowInserted">
				<Contents>
					<colinfo id="CHGSTS" size="256" summ="default" type="STRING"/>
					<colinfo id="TEMNO" size="256" summ="default" type="STRING"/>
					<colinfo id="TEMNONM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZACTSS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEVE" size="256" summ="default" type="STRING"/>
					<colinfo id="CELLP" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTEXT" size="256" summ="default" type="STRING"/>
					<colinfo id="RETIF" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRPNM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_temno">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zzactss">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_vkgrp">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset CanColumnChange="ds_temno_CanColumnChange" CanRowPosChange="ds_temno_CanRowPosChange" DataSetType="Dataset" Id="ds_temnonm" OnColumnChanged="ds_temno_OnColumnChanged" OnRowPosChanged="ds_temno_OnRowPosChanged">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Static Align="Right" Height="24" Id="st_name" Left="-116" Style="sty_lb_search" TabOrder="1" Text="현장명&#32;" Top="-6" VAlign="Middle" Width="61"></Static>
		<Div Height="30" Id="div_btn" TabOrder="1" Text="Div0" Url="WB01::CommBtnForm.xml" Width="840">
			<Contents></Contents>
		</Div>
		<Static Align="Center" Height="24" Id="st_zrqseq" Left="8" Style="sty_lb_search" TabOrder="1" Text="설치PM" Top="34" VAlign="Middle" Width="85"></Static>
		<Static Align="Center" Height="24" Id="Static3" Left="8" Style="sty_lb_search" TabOrder="1" Text="팀" Top="60" VAlign="Middle" Width="85"></Static>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="VKGRP" DataColumn="CODE_NAME" Height="20" Id="cb_vkgrp" InnerDataset="ds_vkgrp" Left="96" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Style="sty_ipt_search" TabOrder="5" Top="61" Width="133"></Combo>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="TEMNO" DataColumn="CODE_NAME" Height="20" Id="cb_temno" InnerDataset="ds_temno" Left="96" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Style="sty_ipt_search" TabOrder="6" Top="36" Width="133"></Combo>
		<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="352" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="248" Id="grd_list" InputPanel="true" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_file_OnCellDblClick" OnHeadClick="grd_list_OnHeadClick" Right="830" RowHeight="20" Style="sty_grid" TabOrder="7" TabStop="true" Top="104" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="830">
			<contents>
				<format id="Default">
					<columns>
						<col width="30"/>
						<col width="30"/>
						<col width="60"/>
						<col width="60"/>
						<col width="60"/>
						<col width="60"/>
						<col width="70"/>
						<col width="100"/>
						<col width="60"/>
						<col width="120"/>
					</columns>
					<head>
						<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="변경"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="PM번호"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="PM명"/>
						<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="사무소"/>
						<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="직급"/>
						<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="핸드폰"/>
						<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="비고"/>
						<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="퇴직여부"/>
						<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="팀"/>
					</head>
					<body>
						<cell align="center" col="0" display="text" expr="currow+1"/>
						<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;CHGSTS&quot;))' col="1" combodisplayrowcnt="0" display="image"/>
						<cell align="center" bkcolor2="user22" col="2" colid="TEMNO" combocol="CODE" combodataset="ds_temno" combodisplayrowcnt="10" combotext="CODE" display="combo" useime="false"/>
						<cell align="center" bkcolor2="user22" col="3" colid="TEMNO" combocol="CODE" combodataset="ds_temno" combodisplaynltext="true" combodisplayrowcnt="30" combofilter='expr:&quot;CODE&#32;&lt;&gt;&#32;&apos;&apos;&quot;' combotext="CODE_NAME" display="combo" edit="expr:decode(CHGSTS,&apos;I&apos;,&#32;&apos;combo&apos;&#32;,&apos;none&apos;)"/>
						<cell align="center" bkcolor2="user22" col="4" colid="ZZACTSS" combocol="CODE" combodataset="ds_zzactss" combodisplayrowcnt="0" combotext="CODE_NAME" display="combo"/>
						<cell align="center" bkcolor2="user22" col="5" colid="ZLEVE" combodisplayrowcnt="0" display="text"/>
						<cell align="center" bkcolor2="user22" col="6" colid="CELLP" combodisplayrowcnt="0" display="text"/>
						<cell align="center" bkcolor2="user22" col="7" colid="ZTEXT" combodisplayrowcnt="0" display="text"/>
						<cell align="center" bkcolor2="user22" col="8" colid="RETIF" combodisplayrowcnt="0" display="text"/>
						<cell align="center" bkcolor2="user22" col="9" colid="VKGRP" combocol="CODE" combodataset="ds_vkgrp" combodisplayrowcnt="30" combofilter='expr:&quot;CODE&#32;&lt;&gt;&#32;&apos;&apos;&quot;' combotext="CODE_NAME" display="combo" edit="combo"/>
					</body>
				</format>
			</contents>
		</Grid>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
#include "LIB::nsfRequest.js";	// 공통 스크립트 
#include "LIB::common_hdel.js";	// 공통 스크립트  /* GNY 추가 */

//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var F_USER_GBN   = '';
var F_BUTTON_DIS = '';
var F_SERVER_DIR = 'SD';
var F_SMS_TITLE  = '리모델링 현장CHECK 요청';
var curEvtRow;

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj)
{
	gfn_initForm(false);	// Form 로드 이벤트 맨 첫줄에 기술

	F_USER_GBN = right(G_USER_GROUP_B, 2 );		// 30 : 담당, 40 : 팀장, 50 : 관리자

	fn_init_form();			// 폼 초기화

	div_btn.btn_sendback.DomainId = '';
	div_btn.btn_sendback.Text     = '반려';
	div_btn.btn_approval.DomainId = '';
	div_btn.btn_approval.Text     = '완료';
}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj)
{
	return gfn_isFormUnload(obj);
}
/********************************************************************************
* 기      능   : 폼 초기화
********************************************************************************/
function fn_init_form()
{
	nsfRequest('comboVkgrp','combo/comboFrVgAll','ds_frvg_cd=ds_vkgrp','ds_vkgrp=ds_frvg_cd ds_error=ds_error','', 'fn_afterQuery_combo');
	nsfRequest('comboTemno','combo/comboTemno','ds_temno=ds_temno','ds_temno=ds_temno ds_error=ds_error','', 'fn_afterQuery_combo');
	nsfRequest('comboZzactss','combo/comboJ1AACTT','ds_cond=ds_zzactss','ds_zzactss=ds_cond ds_error=ds_error','', 'fn_afterQuery_combo');

	F_BUTTON_DIS = '1,20,25,30';

	div_btn.ds_currBtnList.ClearData();
	div_btn.fn_loadUseBtn(F_BUTTON_DIS, Ses0414.Title, '', '');
}

function fn_afterQuery_combo(svcId, errCode, errMsg) {  
	switch(svcId) {
	case 'comboTemno':
		gfn_InsertRowCombo(ds_temno, 0, 'Y', 'N'); // 시작팀코드목록에 전체 행 추가
		cb_temno.index = 0;
		//invert_code(ds_temno, ds_temnonm);
		break;
	case 'comboVkgrp':
		gfn_InsertRowCombo(ds_vkgrp, 0, 'Y', 'N'); // 시작팀코드목록에 전체 행 추가
		cb_vkgrp.index = 0;
		break;
	case 'comboZzactss':
		break;
	default:
	}
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회
********************************************************************************/
function fn_query() {
	fn_createWait('',this);     // 처리중입니다. 메시지 처리

	var inDs =  'ds_cond=ds_cond ds_list=ds_list';
	var outDs = 'ds_list=ds_list'
			 + ' ds_error=ds_error'
	;

	nsfRequest('search', 'ses0412/selectRepPm', inDs, outDs, '', 'fn_afterQuery');
}
function fn_searchPM(temno) {
	destroy('gds_condPM');
	create('dataset','gds_condPM');
	gds_condPM.Copy(ds_cond);

	destroy('gds_listPM');
	create('dataset','gds_listPM');
	gds_listPM.Copy(ds_list);

	gds_condPM.SetColumn(0,'TEMNO',temno);

	var inDs =  'ds_cond=gds_condPM ds_list=gds_listPM';
	var outDs = 'gds_listPM=ds_list'
			 + ' ds_error=ds_error'
	;

	nsfRequest('searchPM', 'ses0412/searchPsPm', inDs, outDs, '', 'fn_afterQuery');
}
/********************************************************************************
* 기      능   : 저장 (기술영업 담당자 변경)
********************************************************************************/
function fn_save() {
	if ( !gfn_showConfirm('CI00024', '[저장]') ) { // [저장]을 하시겠습니까?
		return;
	}

	if(!checkValidData())
		return;

	fn_createWait('',this);     // 처리중입니다. 메시지 처리

	destroy('gds_saveList');
	create('dataset','gds_saveList');
	ds_list.Filter('CHGSTS != null');
	gds_saveList.CopyF(ds_list);
	ds_list.UnFilter();

	var inDs =  'ds_list=gds_saveList';
	var outDs = 'gds_saveList=ds_list'
			 + ' ds_error=ds_error';

	nsfRequest('saveRepPm', 'ses0412/saveRepPm', inDs, outDs, '', 'fn_afterSave');

}

function fn_delete() {
	changeStates(ds_list, ds_list.GetCurrow(), 'D');
}
function fn_input() {
	ds_list.InsertRow();
}

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	this.close();
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 저장 Callback
********************************************************************************/
function fn_afterQuery(svcId, errCode, errMsg) {
	fn_destroyWait();
	if ( ds_error.GetRowCount() > 0 ) {
		gfn_showAlert('CE00001');
		return;
	}
	switch(svcId) {
	case 'search':
		break;
	case 'searchPM':
		ds_list.Filter('ROW != '+ds_list.currow);
		var foundRow = ds_list.FindRow('TEMNO', gds_listPM.GetColumn(0,'TEMNO'));
		ds_list.UnFilter();
		if(foundRow != -1) {
			ds_list.DeleteRow(curEvtRow);
			break;
		}
			ds_list.SetColumn(curEvtRow, 'ZZACTSS', gds_listPM.GetColumn(0,'ZZACTSS'));
			ds_list.SetColumn(curEvtRow, 'ZLEVE', gds_listPM.GetColumn(0,'ZLEVE'));
			ds_list.SetColumn(curEvtRow, 'CELLP', gds_listPM.GetColumn(0,'CELLP'));
			ds_list.SetColumn(curEvtRow, 'ZTEXT', gds_listPM.GetColumn(0,'ZTEXT'));
			ds_list.SetColumn(curEvtRow, 'ZRETIF', gds_listPM.GetColumn(0,'ZRETIF'));
			ds_list.SetColumn(curEvtRow, 'VKGRP', gds_listPM.GetColumn(0,'VKGRP'));

		if(gds_listPM.GetColumn(0,'VKGRP') != '') {
			ds_list.SetColumn(curEvtRow, 'CHGSTS', '');
		}
		break;
	}
}
/********************************************************************************
* 기      능   : 저장 Callback
********************************************************************************/
function fn_afterSave(svcId, errCode, errMsg) {
	fn_destroyWait();
	gfn_showAlert("CI00003"); // 저장을 완료했습니다.
	fn_query();
}

function fn_afterSMS(svcId, errCode, errMsg) {
	this.close();
	//fn_query();
}

/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
	return;
}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================

function ds_list_CanColumnChange(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex) {
	switch(strColumnID) {
	case 'VKGRP':
		if(obj.GetColumn(nRow, 'TEMNO') == '')
			return false;
		break;
	default:
	}
}
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex) {
	switch(strColumnID) {
	case 'TEMNO':
		curEvtRow = nRow;
		fn_searchPM(varNewValue);
		break;
	case 'VKGRP':
		changeStates(obj, nRow, 'U');
		break;
	default:
	}
}
function changeStates(ds, nRow, newStates) {
	if(nRow < 0 || ds.GetCount() -1 < nRow)
		return;

	switch(ds.GetColumn(nRow,'CHGSTS')) {
	case 'I':
		if(newStates == 'D')
			ds.DeleteRow(nRow);
		break;
	case 'U':
		if(newStates == 'U' || newStates == 'D')
			ds.SetColumn(nRow,'CHGSTS', newStates);
		break;
	case 'D':
		if(newStates == 'U')
			ds.SetColumn(nRow,'CHGSTS', newStates);
		break;
	default:
		if(newStates == 'U' || newStates == 'D')
			ds.SetColumn(nRow,'CHGSTS', newStates);
		break;
	}
}

function ds_list_OnRowInserted(obj,nRow,nCount) {
	obj.SetColumn(nRow, 'CHGSTS', 'I');
}

function invert_code(ds_source, ds_target) {
	for(var i=0; i < ds_source.GetCount(); i++) {
		ds_target.InsertRow(ds_target.GetCount());
		ds_target.SetColumn(i,'CODE',ds_source.GetColumn(i,'CODE_NAME'));
		ds_target.SetColumn(i,'CODE_NAME',ds_source.GetColumn(i,'CODE'));
	}
}
function checkValidData() {
	for(var i=0; i < ds_list.GetCount(); i++) {
		if(ds_list.GetColumn(i,'TEMNO') == '' || ds_list.GetColumn(i,'TEMNO') == null) {
			gfn_showAlert('CW00001', 'PM번호');
			return false;
		}
		switch(ds_list.GetColumn(i,'CHGSTS')) {
		case 'I':
		case 'U':
			if(ds_list.GetColumn(i,'VKGRP') == '' || ds_list.GetColumn(i,'TEMNO') == null) {
				gfn_showAlert('CW00001', '팀');
				return false;
			}
			break;
		case 'D':
			break;
		default:
		}
	}

	return true;
}
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex) {
	if ( nCell == 0 || nCell == 1 )
		return;

	gfn_sortGrid(obj,nCell);
}
]]></Script>
</Window>