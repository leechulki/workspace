<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="Ses0051E" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="견적상세(해외대리점)" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_header" OnColumnChanged="ds_header_OnColumnChanged" OnRowPosChanged="ds_header_OnRowPosChanged">
				<Contents>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTDAT" size="256" type="STRING"/>
					<colinfo id="SPART" size="256" type="STRING"/>
					<colinfo id="QTGBN" size="256" type="STRING"/>
					<colinfo id="ZBDTYP" size="256" type="STRING"/>
					<colinfo id="ZPRGFLG" size="256" type="STRING"/>
					<colinfo id="VKBUR" size="256" type="STRING"/>
					<colinfo id="VKGRP" size="256" type="STRING"/>
					<colinfo id="ZKUNNR" size="256" type="STRING"/>
					<colinfo id="ZAGNT" size="256" type="STRING"/>
					<colinfo id="KUNNR" size="256" type="STRING"/>
					<colinfo id="ZCST" size="256" type="STRING"/>
					<colinfo id="ZGNM" size="256" type="STRING"/>
					<colinfo id="ZDEV" size="256" type="STRING"/>
					<colinfo id="GSNAM" size="256" type="STRING"/>
					<colinfo id="ZREGN" size="256" type="STRING"/>
					<colinfo id="ZPID" size="256" type="STRING"/>
					<colinfo id="ZTEL" size="256" type="STRING"/>
					<colinfo id="ZADDR_ZPOST" size="256" type="STRING"/>
					<colinfo id="ZADDR_ADR1" size="256" type="STRING"/>
					<colinfo id="ZADDR_ADR2" size="256" type="STRING"/>
					<colinfo id="SOABLE" size="256" type="STRING"/>
					<colinfo id="ZESTDAT" size="256" type="STRING"/>
					<colinfo id="DELDAT" size="256" type="STRING"/>
					<colinfo id="ZDVMTS" size="256" type="STRING"/>
					<colinfo id="ZSUM_ZNUMBER" size="256" type="STRING"/>
					<colinfo id="ZSUM_ZCOST" size="256" type="STRING"/>
					<colinfo id="ZSUM_ZEAM" size="256" type="STRING"/>
					<colinfo id="ZSUM_SHANG" size="256" type="STRING"/>
					<colinfo id="ZICIF_PPRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_PPCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_PPCD" size="256" type="STRING"/>
					<colinfo id="ZICIF_1STRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_1STCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_1STCD" size="256" type="STRING"/>
					<colinfo id="ZICIF_2STRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_2STCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_2STCD" size="256" type="STRING"/>
					<colinfo id="ZICIF_RMRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_RMCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_RMCD" size="256" type="STRING"/>
					<colinfo id="SPRMK1" size="256" type="STRING"/>
					<colinfo id="SPRMK2" size="256" type="STRING"/>
					<colinfo id="SPRMK3" size="256" type="STRING"/>
					<colinfo id="SPRMK4" size="256" type="STRING"/>
					<colinfo id="SPRMK5" size="256" type="STRING"/>
					<colinfo id="SPRMK6" size="256" type="STRING"/>
					<colinfo id="SPRMK7" size="256" type="STRING"/>
					<colinfo id="SPRMK8" size="256" type="STRING"/>
					<colinfo id="SPRMK9" size="256" type="STRING"/>
					<colinfo id="SPRMK10" size="256" type="STRING"/>
					<colinfo id="ZSOFLG" size="256" type="STRING"/>
					<colinfo id="SONNR" size="256" type="STRING"/>
					<colinfo id="VBELN" size="256" type="STRING"/>
					<colinfo id="AUART" size="256" type="STRING"/>
					<colinfo id="WAERK" size="256" type="STRING"/>
					<colinfo id="CO_DDVRTQ" size="256" type="STRING"/>
					<colinfo id="CO_DEPHTQ" size="256" type="STRING"/>
					<colinfo id="CO_DSSQ" size="256" type="STRING"/>
					<colinfo id="CO_BCLCDTQ" size="256" type="STRING"/>
					<colinfo id="CO_CHPITQ" size="256" type="STRING"/>
					<colinfo id="CO_ASPC" size="256" type="STRING"/>
					<colinfo id="CO_DSV1" size="256" type="STRING"/>
					<colinfo id="CO_DSV1TQ" size="256" type="STRING"/>
					<colinfo id="CO_DSV2" size="256" type="STRING"/>
					<colinfo id="CO_DSV2TQ" size="256" type="STRING"/>
					<colinfo id="INCO" size="256" type="STRING"/>
					<colinfo id="ZLZONE" size="256" type="STRING"/>
					<colinfo id="REGION" size="256" type="STRING"/>
					<colinfo id="BUYR_NM" size="256" type="STRING"/>
					<colinfo id="ZEAM" size="256" type="STRING"/>
					<colinfo id="ZKUNNR_NM" size="256" type="STRING"/>
					<colinfo id="KUNNR_NM" size="256" type="STRING"/>
					<colinfo id="ZAGNT_NM" size="256" type="STRING"/>
					<colinfo id="ZAGNTFLG" size="1" type="STRING"/>
					<colinfo id="INCO2" size="84" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="GTYPE" size="256" type="STRING"/>
					<colinfo id="RTYPE" size="256" type="STRING"/>
					<colinfo id="TYPE1" size="256" type="STRING"/>
					<colinfo id="TYPE2" size="256" type="STRING"/>
					<colinfo id="TYPE3" size="256" type="STRING"/>
					<colinfo id="ZNUMBER" size="256" type="STRING"/>
					<colinfo id="SHANGH" size="256" type="STRING"/>
					<colinfo id="TEL" size="20" type="STRING"/>
					<colinfo id="FAX" size="20" type="STRING"/>
					<colinfo id="CEL" size="20" type="STRING"/>
					<colinfo id="CONQTY20" size="256" type="STRING"/>
					<colinfo id="CONQTY40" size="256" type="STRING"/>
					<colinfo id="EGIS_FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="EGIS_EST_NO" size="256" summ="default" type="STRING"/>
					<colinfo id="EGIS_EST_SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID_CO" size="256" summ="default" type="STRING"/>
					<colinfo id="OPENDT" size="256" summ="default" type="STRING"/>
					<colinfo id="DESTPORT" size="256" summ="default" type="STRING"/>
					<colinfo id="DEPTPORT" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDCD" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDNM" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SNDSYS" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_header_all">
				<Contents>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset CanRowPosChange="ds_detail_CanRowPosChange" DataSetType="Dataset" Id="ds_detail" OnColumnChanged="ds_detail_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="NEW_YN" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="SHANGH" size="256" type="STRING"/>
					<colinfo id="ZSAREA" size="256" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="ZPRDGBN" size="256" type="STRING"/>
					<colinfo id="SPEC" size="256" type="STRING"/>
					<colinfo id="GTYPE" size="256" type="STRING"/>
					<colinfo id="TYPE1" size="256" type="STRING"/>
					<colinfo id="TYPE2" size="256" type="STRING"/>
					<colinfo id="TYPE3" size="256" type="STRING"/>
					<colinfo id="ZNUMBER" size="256" type="STRING"/>
					<colinfo id="ZACAPA" size="256" type="STRING"/>
					<colinfo id="ZUSE" size="256" type="STRING"/>
					<colinfo id="ZUSE_NM" size="256" type="STRING"/>
					<colinfo id="ZOPN" size="256" type="STRING"/>
					<colinfo id="ZLEN" size="256" type="STRING"/>
					<colinfo id="ZOUTC" size="256" type="STRING"/>
					<colinfo id="ZUAM" size="256" type="STRING"/>
					<colinfo id="ZCOST" size="256" type="STRING"/>
					<colinfo id="ZCOSTM" size="256" type="STRING"/>
					<colinfo id="ZEAM" size="256" type="STRING"/>
					<colinfo id="SHANG" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="SONNR" size="256" type="STRING"/>
					<colinfo id="CONQTY20" size="256" type="STRING"/>
					<colinfo id="CONQTY40" size="256" type="STRING"/>
					<colinfo id="EGIS_EST_NO" size="256" summ="default" type="STRING"/>
					<colinfo id="EGIS_EST_SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EGIS_EST_SERNO" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDCD" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDNM" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SNDSYS" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error">
				<Contents>
					<colinfo id="IDX" size="256" type="STRING"/>
					<colinfo id="ERRMSG" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_waerk">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_merge">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="SHANGH" size="256" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="SPEC" size="256" type="STRING"/>
					<colinfo id="GTYPE" size="256" type="STRING"/>
					<colinfo id="TYPE1" size="256" type="STRING"/>
					<colinfo id="TYPE2" size="256" type="STRING"/>
					<colinfo id="TYPE3" size="256" type="STRING"/>
					<colinfo id="ZNUMBER" size="256" type="STRING"/>
					<colinfo id="ZUSE" size="256" type="STRING"/>
					<colinfo id="ZOPN" size="256" type="STRING"/>
					<colinfo id="ZLEN" size="256" type="STRING"/>
					<colinfo id="ZUAM" size="256" type="STRING"/>
					<colinfo id="ZCOST" size="256" type="STRING"/>
					<colinfo id="ZEAM" size="256" type="STRING"/>
					<colinfo id="SHANG" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zbdtyp">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_spart_cd">
				<Contents>
					<colinfo id="CODE" size="1" type="STRING"/>
					<colinfo id="CODE_NAME" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zprgflg">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_vkbur">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<colinfo id="DTEXT2" size="90" type="STRING"/>
					<colinfo id="DTEXT3" size="120" type="STRING"/>
					<colinfo id="DTEXT4" size="9" type="STRING"/>
					<colinfo id="CODE2" size="2" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_head">
				<Contents>
					<colinfo id="BS101_AD1" size="300" type="STRING"/>
					<colinfo id="BS101_AD2" size="300" type="STRING"/>
					<colinfo id="BS101_CDT" size="24" type="STRING"/>
					<colinfo id="BS101_CID" size="30" type="STRING"/>
					<colinfo id="BS101_EAM" size="22" type="DECIMAL"/>
					<colinfo id="BS101_FCD" size="6" type="STRING"/>
					<colinfo id="BS101_FRT" size="22" type="DECIMAL"/>
					<colinfo id="BS101_GNM" size="300" type="STRING"/>
					<colinfo id="BS101_LCD" size="6" type="STRING"/>
					<colinfo id="BS101_LDT" size="24" type="STRING"/>
					<colinfo id="BS101_LRT" size="22" type="DECIMAL"/>
					<colinfo id="BS101_MCD" size="6" type="STRING"/>
					<colinfo id="BS101_MRT" size="22" type="DECIMAL"/>
					<colinfo id="BS101_PST" size="6" type="STRING"/>
					<colinfo id="BS101_RDT" size="18" type="STRING"/>
					<colinfo id="BS101_RMK" size="600" type="STRING"/>
					<colinfo id="BS101_SEQ" size="15" type="STRING"/>
					<colinfo id="BS101_SPT" size="300" type="STRING"/>
					<colinfo id="BS101_TEL" size="90" type="STRING"/>
					<colinfo id="BS101_ZIP" size="18" type="STRING"/>
					<colinfo id="NAME1" size="105" type="STRING"/>
					<colinfo id="BS101_QTY" size="256" type="STRING"/>
					<colinfo id="BS101_OAM" size="256" type="STRING"/>
					<colinfo id="BS101_RAT" size="256" type="STRING"/>
					<colinfo id="BS101_PID" size="256" type="STRING"/>
					<colinfo id="BS101_GBN" size="256" type="STRING"/>
					<record>
						<BS101_AD1></BS101_AD1>
						<BS101_AD2></BS101_AD2>
						<BS101_CDT></BS101_CDT>
						<BS101_CID></BS101_CID>
						<BS101_EAM/>
						<BS101_FCD></BS101_FCD>
						<BS101_FRT/>
						<BS101_GBN></BS101_GBN>
						<BS101_GNM></BS101_GNM>
						<BS101_LCD></BS101_LCD>
						<BS101_LDT></BS101_LDT>
						<BS101_LRT/>
						<BS101_MCD></BS101_MCD>
						<BS101_MRT/>
						<BS101_OAM></BS101_OAM>
						<BS101_PID></BS101_PID>
						<BS101_PST></BS101_PST>
						<BS101_QTY></BS101_QTY>
						<BS101_RAT></BS101_RAT>
						<BS101_RDT></BS101_RDT>
						<BS101_RMK></BS101_RMK>
						<BS101_SEQ></BS101_SEQ>
						<BS101_SPT></BS101_SPT>
						<BS101_TEL></BS101_TEL>
						<BS101_ZIP></BS101_ZIP>
						<NAME1></NAME1>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_sukum">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="INT"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="ATNAM" size="256" type="STRING"/>
					<colinfo id="FR_QTDAT" size="256" type="STRING"/>
					<colinfo id="TO_QTDAT" size="256" type="STRING"/>
					<colinfo id="FR_ZESTDAT" size="256" type="STRING"/>
					<colinfo id="TO_ZESTDAT" size="256" type="STRING"/>
					<colinfo id="VKBUR" size="256" type="STRING"/>
					<colinfo id="VKGRP" size="256" type="STRING"/>
					<colinfo id="ZPRGFLG" size="256" type="STRING"/>
					<colinfo id="SMAN" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="BLOCKGBN" size="256" type="STRING"/>
					<colinfo id="BRNDCD" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDSEQ" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zregn1">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_vkgrp">
				<Contents>
					<colinfo id="CODE" size="9" type="STRING"/>
					<colinfo id="CODE_NAME" size="60" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template0" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template1" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="INT"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template2" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template3" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template4" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template5" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template6" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template_save">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user0">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user1">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user2">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user3">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user4">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user5">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user6">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template_add">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="INT"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_check">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="3" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PSPID" size="24" type="STRING"/>
					<colinfo id="POSID" size="24" type="STRING"/>
					<colinfo id="ATYPE" size="30" type="STRING"/>
					<colinfo id="GUBUN" size="1" type="STRING"/>
					<colinfo id="BLSEQ" size="6" type="STRING"/>
					<colinfo id="BLNUM" size="10" type="STRING"/>
					<colinfo id="BLNAM" size="50" type="STRING"/>
					<colinfo id="MESSG" size="50" type="STRING"/>
					<colinfo id="STATE" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zgtype">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="GTYPE" size="256" type="STRING"/>
					<colinfo id="GTYPEO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_inco1">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_class">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="CLASS_CD" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_temp" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_atnam">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="KLART" size="256" type="STRING"/>
					<colinfo id="CLASS1" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="ATNAM" size="256" type="STRING"/>
					<colinfo id="WHERE" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zregn2">
				<Contents>
					<colinfo id="CLASS1" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="ATNAM" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="ATINN" size="256" type="STRING"/>
					<colinfo id="ATZHL" size="256" type="STRING"/>
					<colinfo id="ATWRT" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zregn3">
				<Contents>
					<colinfo id="CLASS1" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="ATNAM" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="ATINN" size="256" type="STRING"/>
					<colinfo id="ATZHL" size="256" type="STRING"/>
					<colinfo id="ATWRT" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_duty_block">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME>ALL</CODE_NAME>
					</record>
					<record>
						<CODE>00</CODE>
						<CODE_NAME>0)&#32;기본&#32;LAYOUT</CODE_NAME>
					</record>
					<record>
						<CODE>01</CODE>
						<CODE_NAME>1)&#32;카&#32;자중</CODE_NAME>
					</record>
					<record>
						<CODE>02</CODE>
						<CODE_NAME>2)&#32;TM&#32;&amp;&#32;3)&#32;로핑</CODE_NAME>
					</record>
					<record>
						<CODE>04</CODE>
						<CODE_NAME>4)&#32;TM&#32;모터&#32;&amp;&#32;5)&#32;TM&#32;인버터</CODE_NAME>
					</record>
					<record>
						<CODE>06</CODE>
						<CODE_NAME>6)&#32;TM&#32;MAIN&#32;SHEAVE&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>08</CODE>
						<CODE_NAME>8)&#32;TM&#32;RPM</CODE_NAME>
					</record>
					<record>
						<CODE>09</CODE>
						<CODE_NAME>9)&#32;DEF&#32;SHEAVE&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>10</CODE>
						<CODE_NAME>10)&#32;TM&#32;WRAP</CODE_NAME>
					</record>
					<record>
						<CODE>11</CODE>
						<CODE_NAME>11)&#32;ROPE&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>12</CODE>
						<CODE_NAME>12)&#32;ROPE&#32;본수</CODE_NAME>
					</record>
					<record>
						<CODE>13</CODE>
						<CODE_NAME>13)&#32;COMPEN&#32;CHAIN&#32;수량</CODE_NAME>
					</record>
					<record>
						<CODE>14</CODE>
						<CODE_NAME>14)&#32;COMPEN&#32;CHAIN&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>15</CODE>
						<CODE_NAME>15)&#32;SAFETY</CODE_NAME>
					</record>
					<record>
						<CODE>16</CODE>
						<CODE_NAME>16)&#32;CAR&#32;RAIL</CODE_NAME>
					</record>
					<record>
						<CODE>17</CODE>
						<CODE_NAME>17)&#32;CWT&#32;RAIL</CODE_NAME>
					</record>
					<record>
						<CODE>18</CODE>
						<CODE_NAME>18)&#32;GOVERNOR</CODE_NAME>
					</record>
					<record>
						<CODE>19</CODE>
						<CODE_NAME>19)&#32;CAR&#32;GUIDE&#32;SHOE</CODE_NAME>
					</record>
					<record>
						<CODE>20</CODE>
						<CODE_NAME>20)&#32;CWT&#32;GUIDE&#32;SHOE</CODE_NAME>
					</record>
					<record>
						<CODE>21</CODE>
						<CODE_NAME>21)&#32;CAR&#32;BUFFER</CODE_NAME>
					</record>
					<record>
						<CODE>22</CODE>
						<CODE_NAME>22)&#32;CWT.&#32;BUFFER</CODE_NAME>
					</record>
					<record>
						<CODE>23</CODE>
						<CODE_NAME>23)&#32;SUSPEN&#32;SHEAVE&#32;DIA</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_acapa">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ATINN" size="256" type="STRING"/>
					<colinfo id="ATZHL" size="256" type="STRING"/>
					<colinfo id="ATWRT" size="256" type="STRING"/>
					<colinfo id="ZACAPA" size="256" type="STRING"/>
					<colinfo id="SPRAS" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_exchange">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZYEAR" size="256" type="STRING"/>
					<colinfo id="ZMONTH" size="256" type="STRING"/>
					<colinfo id="KRWUSD" size="256" type="STRING"/>
					<colinfo id="KRWJPY" size="256" type="STRING"/>
					<colinfo id="KRWEUR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_email">
				<Contents>
					<colinfo id="FROM" size="256" type="STRING"/>
					<colinfo id="TO" size="256" type="STRING"/>
					<colinfo id="TITLE" size="256" type="STRING"/>
					<colinfo id="CONTENT" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_shangh">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<record>
						<CODE>국내</CODE>
						<CODE_NAME>Korea</CODE_NAME>
					</record>
					<record>
						<CODE>상해</CODE>
						<CODE_NAME>Shanghai</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list1">
				<Contents>
					<colinfo id="GNM" size="256" type="STRING"/>
					<colinfo id="SPT" size="256" type="STRING"/>
					<colinfo id="QTY" size="256" type="STRING"/>
					<colinfo id="EAM" size="256" type="STRING"/>
					<colinfo id="OAM" size="256" type="STRING"/>
					<colinfo id="RAT" size="256" type="STRING"/>
					<colinfo id="GAM" size="256" type="STRING"/>
					<colinfo id="CDT" size="256" type="STRING"/>
					<colinfo id="COM" size="256" type="STRING"/>
					<colinfo id="RDT" size="256" type="STRING"/>
					<colinfo id="MON" size="256" type="STRING"/>
					<colinfo id="AD1" size="256" type="STRING"/>
					<colinfo id="AD2" size="256" type="STRING"/>
					<colinfo id="TEL" size="256" type="STRING"/>
					<colinfo id="FAX" size="256" type="STRING"/>
					<colinfo id="CEL" size="256" type="STRING"/>
					<colinfo id="NAM" size="256" type="STRING"/>
					<colinfo id="T01" size="256" type="STRING"/>
					<colinfo id="T02" size="256" type="STRING"/>
					<colinfo id="T03" size="256" type="STRING"/>
					<colinfo id="T04" size="256" type="STRING"/>
					<colinfo id="T05" size="256" type="STRING"/>
					<colinfo id="T06" size="256" type="STRING"/>
					<colinfo id="T07" size="256" type="STRING"/>
					<colinfo id="T08" size="256" type="STRING"/>
					<colinfo id="T09" size="256" type="STRING"/>
					<colinfo id="T10" size="256" type="STRING"/>
					<colinfo id="PID" size="256" type="STRING"/>
					<colinfo id="P01" size="256" type="STRING"/>
					<colinfo id="P02" size="256" type="STRING"/>
					<colinfo id="P03" size="256" type="STRING"/>
					<colinfo id="P04" size="256" type="STRING"/>
					<colinfo id="C01" size="256" type="STRING"/>
					<colinfo id="C02" size="256" type="STRING"/>
					<colinfo id="C03" size="256" type="STRING"/>
					<colinfo id="C04" size="256" type="STRING"/>
					<colinfo id="PST" size="256" type="STRING"/>
					<colinfo id="PST_NM" size="256" type="STRING"/>
					<colinfo id="MNO" size="256" type="STRING"/>
					<colinfo id="WAERK" size="256" type="STRING"/>
					<colinfo id="TOT" size="256" type="STRING"/>
					<colinfo id="INCO" size="256" type="STRING"/>
					<colinfo id="INCO2" size="256" type="STRING"/>
					<colinfo id="LAND1" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list3">
				<Contents>
					<colinfo id="RNO" size="256" type="STRING"/>
					<colinfo id="USE" size="256" type="STRING"/>
					<colinfo id="SPC" size="256" type="STRING"/>
					<colinfo id="QTY" size="256" type="STRING"/>
					<colinfo id="AMT" size="256" type="STRING"/>
					<colinfo id="GAM" size="256" type="STRING"/>
					<colinfo id="UNM" size="256" type="STRING"/>
					<colinfo id="SHANGH" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_kunnr">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="KUNNR" size="256" type="STRING"/>
					<colinfo id="LAND1_NM" size="256" type="STRING"/>
					<colinfo id="LAND1" size="256" type="STRING"/>
					<colinfo id="KUNNR_NM" size="256" type="STRING"/>
					<colinfo id="TELF1" size="256" type="STRING"/>
					<colinfo id="TELFX" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_brnd_flag">
				<Contents>
					<colinfo id="F_BRND_FLAG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template_org">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="INT"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template_des">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="INT"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_ds_header">
				<Contents>
					<colinfo id="SYSID" size="256" summ="default" type="STRING"/>
					<colinfo id="CALLSYS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZFLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="AUART" size="256" summ="default" type="STRING"/>
					<colinfo id="START_IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="END_IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="zprdgbn" size="256" summ="default" type="STRING"/>
					<colinfo id="USER_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="LAND" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_ds_template">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_out_ds_template">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_ds_log">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="PRCSYS" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="LOGMSG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_out_ds_header">
				<Contents>
					<colinfo id="HEAD" size="256" summ="default" type="STRING"/>
					<colinfo id="TIT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_brnd_del">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="60" Height="26" Id="Shape1" Left="8" LineColor="user1" Right="970" TabOrder="1" Top="34" Type="Rectangle" Width="962"></Shape>
		<Static Align="Right" Height="24" Id="st_qtnum" Left="9" Style="sty_lb_search" TabOrder="2" Text="estimate&#32;number&#32;" Top="35" VAlign="Middle" Width="72" WordWrap="TRUE"></Static>
		<Static Align="Right" Height="24" Id="st_qtdat" Left="480" Style="sty_lb_search" TabOrder="3" Text="quote&#32;Date&#32;" Top="35" VAlign="Middle" Width="72"></Static>
		<Calendar BindDataset="ds_header" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="QTDAT" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cal_qtdat" Left="556" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_form" SundayTextColor="user35" TabOrder="4" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="37" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="105"></Calendar>
		<Static Align="Right" Height="24" Id="st_name" Left="-116" Style="sty_lb_search" TabOrder="5" Text="현장명&#32;" Top="-6" VAlign="Middle" Width="61"></Static>
		<Static Align="Right" Height="24" Id="st_ser" Left="208" Style="sty_lb_search" TabOrder="6" Text="estimate&#32;sequence&#32;" Top="35" VAlign="Middle" Width="72" WordWrap="TRUE"></Static>
		<Edit BindDataset="ds_header" Border="Flat" Column="QTNUM" Enable="FALSE" Height="20" Id="ed_qtnum" Left="85" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="7" Top="37" Width="105"></Edit>
		<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="QTSER" Enable="FALSE" Height="20" Id="ed_ser" ImeMode="native" Left="284" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="8" Top="37" Width="105"></Edit>
		<Div Height="30" Id="div_btn" TabOrder="9" Text="Div0" Url="WB01::CommBtnForm.xml" Width="976">
			<Contents></Contents>
		</Div>
		<Tab Border="Flat" FixedImage="FALSE" Font="굴림,9" Height="495" Id="tab" Left="2" MouseOverColor="user16" OnChanged="tab_OnChanged" SelColor="user15" SelectFont="굴림,9" Style="sty_tab" TabIndex="1" TabOrder="10" Top="61" Width="972">
			<Contents>
				<TabPage BorderColor="black" Height="470" Id="main" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="19" Text="estimate" Top="23" Width="968">
					<Div Height="468" Id="div_header" Left="2" TabOrder="1" Text="Div0" Width="964">
						<Contents>
							<Shape BKColor="user0" Bottom="26" Height="26" Id="Shape1" Left="1" LineColor="user1" Right="963" TabOrder="16" Top="0" Type="Rectangle" Width="962"></Shape>
							<Shape BKColor="user0" Bottom="78" Height="26" Id="Shape3" Left="1" LineColor="user1" Right="963" TabOrder="15" Top="52" Type="Rectangle" Width="962"></Shape>
							<Shape BKColor="user0" Bottom="52" Height="26" Id="Shape2" Left="1" LineColor="user1" Right="963" TabOrder="14" Top="26" Type="Rectangle" Width="962"></Shape>
							<Static Align="Right" Height="24" Id="st_vkgrp" Left="474" Style="sty_lb_search" TabOrder="1" Text="team&#32;" Top="1" VAlign="Middle" Width="72"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="VKGRP" DataColumn="CODE_NAME" Enable="FALSE" Height="20" Id="cb_vkgrp" InnerDataset="ds_vkgrp" Left="549" Style="sty_ipt_form" TabOrder="2" Top="2" Width="107"></Combo>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="VKBUR" DataColumn="CODE_NAME" Enable="FALSE" Height="20" Id="cb_vkbur" InnerDataset="ds_vkbur" Left="276" OnChanged="cb_vkbur_OnChanged" Style="sty_ipt_form" TabOrder="3" Top="2" Width="107"></Combo>
							<Static Align="Right" Height="24" Id="st_kunnr" Left="201" Style="sty_lb_search" TabOrder="4" Text="customer&#32;number&#32;" Top="27" VAlign="Middle" Width="72" WordWrap="TRUE"></Static>
							<Static Align="Right" Height="24" Id="st_sman" Left="474" Style="sty_lb_search" TabOrder="5" Text="PIC&#32;" Top="27" VAlign="Middle" Width="72"></Static>
							<Div BKColor="user0" Height="22" Id="div_sman" Left="550" OnLoadCompleted="fn_OnLoadCompleted" TabOrder="6" Text="Div0" Top="29" Url="COM::Coms002.xml" Width="180">
								<Contents></Contents>
							</Div>
							<Static Align="Right" Height="24" Id="st_vkbur" Left="201" Style="sty_lb_search" TabOrder="7" Text="DPT&#32;" Top="1" VAlign="Middle" Width="72"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="ZPRGFLG" DataColumn="CODE_NAME" Enable="FALSE" Height="20" Id="cb_zprgflg" InnerDataset="ds_zprgflg" Left="830" Style="sty_ipt_search" TabOrder="8" Top="2" Width="107"></Combo>
							<Static Align="Right" Height="24" Id="st_zprgflg" Left="755" Style="sty_lb_search" TabOrder="9" Text="progress&#32;status&#32;" Top="1" VAlign="Middle" Width="72" WordWrap="TRUE"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="SPART" DataColumn="CODE_NAME" Enable="FALSE" Height="20" Id="cb_spart" InnerDataset="ds_spart_cd" Left="77" Style="sty_ipt_form" TabOrder="10" Top="2" Width="107"></Combo>
							<Static Align="Right" Height="24" Id="st_spart" Left="2" Style="sty_lb_search" TabOrder="11" Text="product&#32;" Top="1" VAlign="Middle" Width="72"></Static>
							<Edit BindDataset="ds_header" Border="Flat" Column="GSNAM" Enable="FALSE" Height="20" Id="ed_gsnam" ImeMode="english" Left="78" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="12" Top="29" UpperOnly="TRUE" Width="105"></Edit>
							<Static Align="Right" Height="24" Id="st_gsnam" Left="2" Style="sty_lb_search" TabOrder="13" Text="proj.&#32;name&#32;" Top="27" VAlign="Middle" Width="72"></Static>
							<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_detail" BkColor2="default" BoldHead="true" Border="Flat" Bottom="468" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="35" Height="336" Id="grd_detail" InputPanel="FALSE" Left="2" LineColor="user20" LineType="ExHORZ" OnCellClick="grd_detail_OnCellClick" OnCellPosChanged="tab_main_div_header_grd_detail_OnCellPosChanged" OnEnterEdit="tab_main_div_header_grd_detail_OnEnterEdit" OnExpandEdit="grd_detail_OnExpandEdit" OnHeadClick="grd_detail_OnHeadClick" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="grd_detail_OnMouseOver" Right="964" RowHeight="20" Style="sty_grid" TabOrder="17" TabStop="true" Top="132" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="962">
								<contents>
									<format id="Default">
										<columns>
											<col width="30"/>
											<col width="45"/>
											<col width="60"/>
											<col width="55"/>
											<col width="70"/>
											<col width="70"/>
											<col width="50"/>
											<col width="50"/>
											<col width="50"/>
											<col width="45"/>
											<col width="45"/>
											<col width="50"/>
											<col width="60"/>
											<col width="40"/>
											<col width="70"/>
											<col width="80"/>
											<col width="50"/>
											<col width="50"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="change"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="Korea/&#10;Shanghai"/>
											<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="sale&#10;area"/>
											<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="brand"/>
											<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="model"/>
											<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="purpose"/>
											<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="person/&#10;width"/>
											<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="capacity"/>
											<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="speed/&#10;angle"/>
											<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="floor/&#10;height"/>
											<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="stop/&#10;speed"/>
											<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="door&#32;open&#10;/length"/>
											<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="units"/>
											<cell align="center" col="14" color="user21" display="text" font="굴림,9" text="estimate"/>
											<cell align="center" col="15" color="user21" display="text" font="굴림,9" text="order&#10;plan&#32;number"/>
											<cell align="center" col="16" color="user21" display="text" font="굴림,9" text="remarks"/>
											<cell align="center" col="17" color="user21" display="text" font="굴림,9" text="egis&#32;no"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="center" bkcolor2="user22" col="2" colid="SHANGH" combocol="CODE" combodataset="ds_shangh" combotext="CODE_NAME" display="combo"/>
											<cell align="center" bkcolor2="user22" col="3" colid="ZSAREA" display="text"/>
											<cell align="center" bkcolor2="user22" col="4" colid="BRNDNM" display="text"/>
											<cell align="center" bkcolor2="user22" col="5" colid="GTYPE" display="text" expandchar="..." expandshow='expr:iif(MATNR==&quot;T-1000&quot;&#32;||&#32;MATNR==&quot;Y-1000&quot;,false,true)'/>
											<cell align="center" bkcolor2="user22" col="6" colid="ZUSE" display="text"/>
											<cell align="center" bkcolor2="user22" col="7" colid="TYPE1" display="text"/>
											<cell align="center" bkcolor2="user22" col="8" colid="ZACAPA" display="text"/>
											<cell align="center" bkcolor2="user22" col="9" colid="TYPE2" display="text"/>
											<cell align="center" bkcolor2="user22" col="10" colid="TYPE3" display="text" edit="integer"/>
											<cell align="right" bkcolor2="user22" col="11" colid="ZLEN" display="text" edit="integer"/>
											<cell align="right" bkcolor2="user22" col="12" colid="ZOPN" display="text"/>
											<cell align="right" bkcolor2="user22" col="13" colid="ZNUMBER" display="text" edit="integer"/>
											<cell align="right" bkcolor2="user22" col="14" colid="ZEAM" display="number" Mask="###,###,###,##0"/>
											<cell align="center" bkcolor2="user22" col="15" colid="SONNR" display="text"/>
											<cell align="center" bkcolor2="user22" col="16" colid="ZRMK" display="text" edit="normal"/>
											<cell align="center" bkcolor2="user22" col="17" colid="EGIS_EST_SERNO" display="text"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_plus" ImageID="btn_icon_plus" Left="918" LeftMargin="12" OnClick="btn_plus_OnClick" Style="sty_btn" TabOrder="18" Top="110" Transparent="TRUE" Width="22"></Button>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_minus" ImageID="btn_icon_minus" Left="941" LeftMargin="12" OnClick="btn_minus_OnClick" Style="sty_btn" TabOrder="19" Top="110" Transparent="TRUE" Width="22"></Button>
							<Div BKColor="user0" Height="22" Id="div_kunnr" Left="278" OnLoadCompleted="fn_OnLoadCompleted" TabOrder="20" Text="Div0" Top="29" Url="COM::Coms003.xml" Width="169">
								<Contents></Contents>
							</Div>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_popup" ImageID="btn_sub_09" Left="778" LeftMargin="12" OnClick="btn_popup_OnClick" OnMouseOver="btn_popup_OnMouseOver" Style="sty_btn" TabOrder="21" Text="to&#32;add&#32;an&#32;order&#32;plan" Top="110" Transparent="TRUE" Width="136"></Button>
							<Static Align="Right" Height="24" Id="st_inco1" Left="2" Style="sty_lb_search" TabOrder="23" Text="terms&#32;of&#32;delivery&#32;1&#32;" Top="53" VAlign="Middle" Width="72" WordWrap="TRUE"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="INCO" DataColumn="CODE" Height="20" Id="cb_inco1" InnerDataset="ds_inco1" Left="77" Style="sty_ipt_form" TabOrder="22" Top="54" Width="197"></Combo>
							<Div Height="28" Id="div_sprmk" scroll="true" TabOrder="24" Text="Div0" Top="78" Width="963">
								<Contents>
									<Shape BKColor="user0" Bottom="27" Height="26" Id="Shape7" Left="1" LineColor="user1" Right="946" TabOrder="1" Top="1" Type="Rectangle" Width="945"></Shape>
									<Shape BKColor="user0" Bottom="53" Height="26" Id="Shape8" Left="1" LineColor="user1" Right="946" TabOrder="2" Top="27" Type="Rectangle" Width="945"></Shape>
									<Static Align="Right" Height="24" Id="st_sprmk1" Left="2" Style="sty_lb_search" TabOrder="3" Text="remark&#32;&#32;1&#32;" Top="3" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk2" Left="274" Style="sty_lb_search" TabOrder="4" Text="remark&#32;&#32;2&#32;" Top="3" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk3" Left="2" Style="sty_lb_search" TabOrder="5" Text="remark&#32;&#32;3&#32;" Top="29" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk4" Left="474" Style="sty_lb_search" TabOrder="6" Text="remark&#32;&#32;4&#32;" Top="29" VAlign="Middle" Width="72"></Static>
									<Shape BKColor="user0" Bottom="79" Height="26" Id="Shape9" Left="1" LineColor="user1" Right="946" TabOrder="7" Top="53" Type="Rectangle" Width="945"></Shape>
									<Shape BKColor="user0" Bottom="105" Height="26" Id="Shape10" Left="1" LineColor="user1" Right="946" TabOrder="8" Top="79" Type="Rectangle" Width="945"></Shape>
									<Static Align="Right" Height="24" Id="st_sprmk5" Left="2" Style="sty_lb_search" TabOrder="9" Text="remark&#32;&#32;5&#32;" Top="55" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk6" Left="474" Style="sty_lb_search" TabOrder="10" Text="remark&#32;&#32;6&#32;" Top="55" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk7" Left="2" Style="sty_lb_search" TabOrder="11" Text="remark&#32;&#32;7&#32;" Top="81" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk8" Left="474" Style="sty_lb_search" TabOrder="12" Text="remark&#32;&#32;8&#32;" Top="81" VAlign="Middle" Width="72"></Static>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK1" Enable="FALSE" Height="20" Id="ed_sprmk1" ImeMode="native" Left="78" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="13" Top="5" Width="192"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK2" Enable="FALSE" Height="20" Id="ed_sprmk2" ImeMode="native" Left="350" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="14" Top="4" Width="104"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK3" Height="20" Id="ed_sprmk3" ImeMode="native" Left="78" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="15" Top="30" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK4" Height="20" Id="ed_sprmk4" ImeMode="native" Left="550" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="16" Top="30" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK5" Height="20" Id="ed_sprmk5" ImeMode="native" Left="78" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="17" Top="56" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK6" Height="20" Id="ed_sprmk6" ImeMode="native" Left="550" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="18" Top="56" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK7" Height="20" Id="ed_sprmk7" ImeMode="native" Left="78" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="19" Top="82" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK8" Height="20" Id="ed_sprmk8" ImeMode="native" Left="550" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="20" Top="82" Width="392"></Edit>
									<Shape BKColor="user0" Bottom="131" Height="26" Id="Shape0" Left="1" LineColor="user1" Right="946" TabOrder="25" Top="105" Type="Rectangle" Width="945"></Shape>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK10" Height="20" Id="ed_sprmk10" ImeMode="native" Left="550" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="24" Top="108" Width="392"></Edit>
									<Static Align="Right" Height="24" Id="st_sprmk10" Left="474" Style="sty_lb_search" TabOrder="22" Text="remark&#32;10&#32;" Top="107" VAlign="Middle" Width="72"></Static>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK9" Height="20" Id="ed_sprmk9" ImeMode="native" Left="78" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="23" Top="108" Width="392"></Edit>
									<Static Align="Right" Height="24" Id="st_sprmk9" Left="2" Style="sty_lb_search" TabOrder="21" Text="remark&#32;&#32;9&#32;" Top="107" VAlign="Middle" Width="72"></Static>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="DESTPORT" Enable="FALSE" Height="20" Id="ed_destport" ImeMode="native" Left="550" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="27" Top="4" Width="104"></Edit>
									<Static Align="Center" Height="24" Id="st_destport" Left="474" Style="sty_lb_search" TabOrder="26" Text="dest&#32;port" Top="3" VAlign="Middle" Width="72"></Static>
								</Contents>
							</Div>
							<Static Align="Right" Height="24" Id="st_waerk" Left="755" Style="sty_lb_search" TabOrder="25" Text="currency&#32;" Top="27" VAlign="Middle" Width="72"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="WAERK" DataColumn="CODE_NAME" Enable="FALSE" Height="20" Id="cb_waerk" InnerDataset="ds_waerk" Left="829" Style="sty_ipt_form" TabOrder="26" Top="28" Width="107"></Combo>
							<Edit BindDataset="ds_header" Border="Flat" Column="ZDEV" Height="20" Id="ed_mailaddress" Left="450" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="27" Text="MJ.SHIN@hdel.co.kr" Top="109" Visible="FALSE" Width="88"></Edit>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_mail" ImageID="btn_sub_04" Left="539" LeftMargin="12" OnClick="btn_mail_OnClick" Style="sty_btn" TabOrder="28" Text="send&#32;mail" Top="110" Transparent="TRUE" Visible="FALSE" Width="71"></Button>
							<Static Align="Right" Height="24" Id="st_inco2" Left="274" Style="sty_lb_search" TabOrder="29" Text="terms&#32;of&#32;delivery&#32;2&#32;" Top="52" VAlign="Middle" Width="72" WordWrap="TRUE"></Static>
							<Edit BindDataset="ds_header" Border="Flat" Column="INCO2" Height="20" Id="ed_inco2" Left="350" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="30" Text="MJ.SHIN@hdel.co.kr" Top="54" Width="105"></Edit>
							<Static Align="Right" Border="None" Height="24" Id="st_dev" Left="658" Style="sty_lb_search" TabOrder="31" Text="conduct&#32;party&#32;" Top="52" VAlign="Middle" Width="48" WordWrap="TRUE"></Static>
							<Edit BindDataset="ds_header" Border="Flat" Column="ZDEV" Height="20" Id="ed_dev" Left="709" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="32" Top="54" Width="73"></Edit>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_common" ImageID="btn_sub_11" Left="618" LeftMargin="12" OnClick="btn_common_OnClick" Style="sty_btn" TabOrder="33" Text="to&#32;add&#32;an&#32;common&#32;spec" Top="110" Transparent="TRUE" Visible="FALSE" Width="156"></Button>
							<Static Align="Right" Height="24" Id="st_sum_zeam" Left="322" Style="sty_lb_search" TabOrder="34" Text="estimate&#32;" Top="107" VAlign="Middle" Width="56"></Static>
							<MaskEdit BindDataset="ds_header" BKColor="user5" Border="Flat" BorderColor="user13" Column="ZSUM_ZEAM" Enable="FALSE" Height="20" Id="ed_sum_zeam" Left="379" TabOrder="35" Top="109" Value="MaskEdit0" Width="70"></MaskEdit>
							<Calendar BindDataset="ds_header" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="DELDAT" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cal_deldat" Left="549" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_form" SundayTextColor="user35" TabOrder="37" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="54" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="105"></Calendar>
							<Static Align="Right" Height="24" Id="Static1" Left="474" Style="sty_lb_search" TabOrder="36" Text="납기예정일" Top="52" VAlign="Middle" Width="72" WordWrap="TRUE"></Static>
							<Edit BindDataset="ds_header" Border="Flat" Column="CONQTY20" Enable="FALSE" Height="20" Id="ed_conqty20" ImeMode="english" Left="822" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="38" Top="54" UpperOnly="TRUE" Width="49"></Edit>
							<Static Align="Center" Height="24" Id="Static0" Left="786" Style="sty_lb_search" TabOrder="39" Text="20&#32;Fit" Top="52" VAlign="Middle" Width="32"></Static>
							<Static Align="Center" Height="24" Id="Static2" Left="874" Style="sty_lb_search" TabOrder="41" Text="40&#32;Fit" Top="52" VAlign="Middle" Width="32"></Static>
							<Edit BindDataset="ds_header" Border="Flat" Column="CONQTY40" Enable="FALSE" Height="20" Id="ed_conqty40" ImeMode="english" Left="910" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="40" Top="54" UpperOnly="TRUE" Width="49"></Edit>
							<Static Align="Center" Height="24" Id="st_est_no" Left="2" Style="sty_lb_search" TabOrder="42" Text="E-GIS견적번호" Top="107" VAlign="Middle" Width="83"></Static>
							<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="EGIS_EST_NO" Height="21" Id="ed_est_no" ImeMode="native" Left="86" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="43" Top="108" Width="65"></Edit>
							<Static Align="Center" Height="24" Id="st_est_seq" Left="153" Style="sty_lb_search" TabOrder="44" Text="E-GIS&#32;견적차수" Top="107" VAlign="Middle" Width="88"></Static>
							<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="EGIS_EST_SEQ" Height="20" Id="ed_est_seq" ImeMode="native" Left="243" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="45" Top="109" Width="75"></Edit>
						</Contents>
					</Div>
				</TabPage>
				<TabPage BorderColor="black" Height="470" Id="template" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="26" Text="specifications" Top="23" Width="968">
					<Div Border="SunkenEdge" Height="467" Id="div_template" scroll="true" TabOrder="1" Text="Div0" Top="1" Width="967">
						<Contents>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template1" BkColor2="default" BoldHead="true" Border="Flat" Bottom="438" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="409" Id="grd_template1" InputPanel="FALSE" Left="4" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="grd_template_OnMouseOver" Right="454" RowHeight="20" Style="sty_grid" TabOrder="5" TabStop="true" Top="29" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="left" col="1" color="user21" display="text" font="굴림,9" text="change"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="BASIC" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="value" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template2" BkColor2="default" BoldHead="true" Border="Flat" Bottom="439" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="409" Id="grd_template2" InputPanel="FALSE" Left="455" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="grd_template_OnMouseOver" Right="905" RowHeight="20" Style="sty_grid" TabOrder="4" TabStop="true" Top="30" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="left" col="1" color="user21" display="text" font="굴림,9" text="change"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="INSIDE" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="value" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template3" BkColor2="default" BoldHead="true" Border="Flat" Bottom="439" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="409" Id="grd_template3" InputPanel="FALSE" Left="906" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="grd_template_OnMouseOver" Right="1356" RowHeight="20" Style="sty_grid" TabOrder="3" TabStop="true" Top="30" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="left" col="1" color="user21" display="text" font="굴림,9" text="change"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="OUTSIDE" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="value" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template4" BkColor2="default" BoldHead="true" Border="Flat" Bottom="439" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="409" Id="grd_template4" InputPanel="FALSE" Left="1357" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="grd_template_OnMouseOver" Right="1807" RowHeight="20" Style="sty_grid" TabOrder="2" TabStop="true" Top="30" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="left" col="1" color="user21" display="text" font="굴림,9" text="change"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="OPTION" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="value" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template5" BkColor2="default" BoldHead="true" Border="Flat" Bottom="439" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="409" Id="grd_template5" InputPanel="FALSE" Left="1808" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="grd_template_OnMouseOver" Right="2258" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="30" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="left" col="1" color="user21" display="text" font="굴림,9" text="change"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="LAYOUT" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="value" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template6" BkColor2="default" BoldHead="true" Border="Flat" Bottom="439" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="409" Id="grd_template6" InputPanel="FALSE" Left="2260" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="grd_template_OnMouseOver" Right="2710" RowHeight="20" Style="sty_grid" TabOrder="5" TabStop="true" Top="30" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="left" col="1" color="user21" display="text" font="굴림,9" text="change"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="LAYOUT" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="value" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template0" BkColor2="default" BoldHead="true" Border="Flat" Bottom="439" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="409" Id="grd_template0" InputPanel="FALSE" Left="2711" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="grd_template_OnMouseOver" Right="3161" RowHeight="20" Style="sty_grid" TabOrder="5" TabStop="true" Top="30" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="left" col="1" color="user21" display="text" font="굴림,9" text="change"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="LAYOUT" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="value" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Shape BKColor="user0" Bottom="26" Height="26" Id="Shape1" Left="0" LineColor="user1" Right="962" TabOrder="6" Top="0" Type="Rectangle" Width="962"></Shape>
							<Static Align="Right" Height="24" Id="st_gtype" Left="2" Style="sty_lb_search" TabOrder="11" Text="model&#32;/&#32;person&#32;/&#32;speed&#32;/&#32;floor&#32;" Top="1" VAlign="Middle" Width="192"></Static>
							<Edit Align="CENTER" BindDataset="ds_detail" Border="Flat" Column="GTYPE" Enable="FALSE" Height="20" Id="ed_gtype" ImeMode="native" Left="198" Readonly="TRUE" Style="sty_ipt_search" TabOrder="10" Top="3" Width="80"></Edit>
							<Edit Align="CENTER" BindDataset="ds_detail" Border="Flat" Column="TYPE1" Enable="FALSE" Height="20" Id="ed_type1" Left="282" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="9" Top="3" Width="80"></Edit>
							<Edit Align="CENTER" BindDataset="ds_detail" Border="Flat" Column="TYPE2" Enable="FALSE" Height="20" Id="ed_type2" Left="366" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="8" Top="3" Width="80"></Edit>
							<Edit Align="CENTER" BindDataset="ds_detail" Border="Flat" Column="TYPE3" Enable="FALSE" Height="20" Id="ed_type3" Left="450" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="7" Top="3" Width="80"></Edit>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_template" ImageID="btn_sub_07" Left="769" LeftMargin="12" OnClick="btn_template_OnClick" OnMouseOver="btn_template_OnMouseOver" Style="sty_btn" TabOrder="12" Text="Call&#32;Template" Top="3" Transparent="TRUE" Width="112"></Button>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_floor" ImageID="btn_sub_08" Left="880" LeftMargin="12" OnClick="btn_floor_OnClick" Style="sty_btn" TabOrder="15" Text="Call&#32;Floor" Top="3" Transparent="TRUE" Width="76"></Button>
						</Contents>
					</Div>
				</TabPage>
			</Contents>
		</Tab>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_qtser_plus" ImageID="btn_sub_04" Left="681" LeftMargin="12" OnClick="btn_qtser_plus_OnClick" OnMouseOver="btn_qtser_plus_OnMouseOver" Style="sty_btn" TabOrder="11" Text="sequence&#32;increase" Top="37" Transparent="TRUE" Width="71" WordWrap="TRUE"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_estimate" ImageID="btn_sub_06" Left="831" LeftMargin="12" OnClick="btn_estimate_OnClick" OnMouseOver="btn_estimate_OnMouseOver" Style="sty_btn" TabOrder="12" Text="request&#32;quote" Top="37" Transparent="TRUE" Width="95" WordWrap="TRUE"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_qtser_minus" ImageID="btn_sub_04" Left="756" LeftMargin="12" OnClick="btn_qtser_minus_OnClick" Style="sty_btn" TabOrder="13" Text="sequence&#32;removal" Top="37" Transparent="TRUE" Width="71" WordWrap="TRUE"></Button>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
#include "LIB::nsfRequest.js";	// 공통 스크립트 
#include "LIB::common_hdel.js";	// 공통 스크립트  /* GNY 추가 */
#include "LIB::brand_template.js"; // 2020 박수근
#include "LIB::plm_webservice.js"; // 2020 박수근
#include "LIB::sayang_copy.js";    // 2020 박수근

//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

var F_FRM_ID 	= "Ses0051";
var F_FRM_TITLE = "Detail Estimate(Agent)";	// 공통코드 화면명 견적상세(해외대리점)
var F_MAX_SERNO = 0;  // 조회된 목록의 MAX(순번)
var F_CHG_DETAIL_ROWNUM = ""; // 최종 변경된 Detail 헹번호
var F_CHG_DETAIL_COLNUM = ""; // 최종 변경된 Detail 컬럼번호
var F_CLICKED_ROW = -1; 	  // ds_detail 그리드의 클릭한 행 2013.02.01
var F_BRND_FLAG = "N";        // 견적서 작성일 또는 시스템일자로 해당 견적서 브랜드 적용여부를 판단하는 변수 Y:적용, N:미적용
var F_OPT1 = "";

// 그룹명칭 정의되면 적용
var F_GROUP_TITLE  = "OTHER";
var F_GROUP_FILTER = "EL_OTHERS";

var flag;
var zprdgbn;
var zprgflg;

var zkunnr;
var zkunnrNm;

var el_dpexq_prc = "";
var el_dpexq_prd = "";
var el_dpexq1 = "";
var el_dpexq2 = "";
var el_dpexq3 = "";


//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {

	tab.TabIndex = 0;

	gfn_initForm(true);	// Form 로드 이벤트 맨 첫줄에 기술

	// 국내상해 ( componentId, comboGubun, DatasetId, 전체여부, 그리드/콤보여부 )
//	fn_SetListCodeGrid( 2, "shangh", "ds_shangh", "tab.main.div_header.grd_detail");

	var codeArr = ["SD107", "BS102", "BS403", "VKBUR", "VKGRP", "CS115", "SPART", "WAERK"]; 	//코드콤보 설정
	var dsObjArr = [ds_zprgflg, ds_sukum, ds_zbdtyp, ds_vkbur, ds_vkgrp, ds_zregn1, ds_spart_cd, ds_waerk];
	var addTypeArr = [G_CODE_NONE,G_CODE_NONE,G_CODE_SELECT]; //[G_CODE_NONE,G_CODE_NONE,G_CODE_NONE]; [G_CODE_ALL];
	var oderTypeArr = ["DTEXT1"];
	gfn_searchCommCode(codeArr, dsObjArr, addTypeArr);

	div_btn.fn_loadUseBtn("30,40", F_FRM_TITLE, "", "");

	// 2020 브랜드 그룹데이터를 조회한다.
	fn_findZsdt1143List();

	fn_resize(); // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정

	nsfRequest("queryInco", "combo/comboInco", "ds_list_inco1=ds_inco1", "ds_inco1=ds_list_inco1 ds_error=ds_error", "", "fn_afterQuery");
}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() {
	nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_cond ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
}

/********************************************************************************
* 기      능   : 저장
********************************************************************************/
function fn_save() {

	var vT1000Cnt = 0;
	var lv_Y200Cnt = 0;
	var lv_Y300Cnt = 0;
	var lv_Y400Cnt = 0;
	var lv_Y500Cnt = 0;

	var lv_Message = "";
	var lv_Gtype = "";
	
	if (zprgflg >= "24" && zprgflg != "32") { // 24 견적반려, 32 원가산출
		gfn_showAlert("CW10057"); return; // CW10057 현재 진행 상태에서는 저장할 수 없습니다
	}
	
//-----< 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	Start 
	// 감시반 및 공통(S/P 제외)은 1개만 등록 가능 
	for (var i = 0; i < ds_detail.GetRowCount(); i++)	{ 
		if (ds_detail.GetColumn(i, "FLAG") != "D") {
		  switch ( ds_detail.GetColumn(i, "MATNR") ) {
		   case "T-1000" : vT1000Cnt++; lv_Gtype = ds_detail.GetColumn(i, "GTYPE"); break;
		   case "Y-200" : lv_Y200Cnt++; lv_Gtype = ds_detail.GetColumn(i, "GTYPE"); break;
		   case "Y-300" : lv_Y300Cnt++; lv_Gtype = ds_detail.GetColumn(i, "GTYPE");	break;
		   case "Y-400" : lv_Y400Cnt++; lv_Gtype = ds_detail.GetColumn(i, "GTYPE"); break;
		   case "Y-500" : lv_Y500Cnt++; lv_Gtype = ds_detail.GetColumn(i, "GTYPE"); break;
		   default : break;
		  }			
		}
	}
	
	lv_Message = "MO에 [" + lv_Gtype + "]은(는) 1개만 존재해야 합니다.  관리팀에 문의 하세요.";
	if(vT1000Cnt > 1 or lv_Y200Cnt > 1 or lv_Y300Cnt > 1 or lv_Y400Cnt > 1 or lv_Y500Cnt > 1) {	
		gfn_showAlert("CW10025", lv_Message);
		return;
	}
	
//-----> 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	End 


	if (gfn_showConfirm("CI10003") == true) { // CI10003 저장하시겠습니까?

		if (fn_save_header() == true) {

			ds_header.SetColumn(0, "FLAG"    , "I");
			ds_header.Setcolumn(0, "ZKUNNR"  , tab.main.div_header.div_sman.ed_sman_cd.Text);
			ds_header.SetColumn(0, "ZAGNTFLG", G_VEND_WGBN);

			fn_createWait("",this); // 처리중입니다. 메시지 처리
			fn_save_template();

            // 2020 브랜드 입력화 ds_brnd_del  추가	
			nsfRequest("saveHeader", "ses0031n/saveHeader", "ds_header=ds_header ds_detail=ds_detail ds_template=ds_template_save ds_brnd_del=ds_brnd_del"
						, "ds_header=ds_header ds_error=ds_error", "", "fn_afterSave");
		}
	} else {
		return;
	}
}

/********************************************************************************
* 기      능   : 폼 초기화
********************************************************************************/
function fn_init_form() {

	var fa_sonnr = fa_sonnr;
	var fa_qtnum = fa_qtnum;
	var fa_qtser = fa_qtser;

	ds_header.ClearData();
	ds_header.AddRow();
	ds_header.SetColumn(0, "MANDT", G_MANDT);

	http.sync = true;

//	nsfRequest("queryGtype" , "ses0031/searchGtype" , "ds_gtype=ds_gtype"  , "ds_gtype=ds_gtype   ds_error=ds_error", "", "fn_afterQuery");
//	nsfRequest("queryZGtype", "ses0031/searchZGtype", "ds_zgtype=ds_zgtype", "ds_zgtype=ds_zgtype ds_error=ds_error", "", "fn_afterQuery");
	nsfRequest("queryClass", "ses0031/searchClass", "ds_class=ds_class", "ds_class=ds_class ds_error=ds_error", "", "fn_afterQuery");

	if (fa_sonnr != null) {
		ds_header.SetColumn(0, "SONNR", fa_sonnr);
		nsfRequest("querySo", "ses0032/search", "ds_cond=ds_header ds_list=ds_header", "ds_header=ds_list ds_error=ds_error", "", "fn_afterQuery");
	} else {
		
		ds_header.SetColumn(0, "QTNUM", fa_qtnum);
		ds_header.SetColumn(0, "QTSER", fa_qtser);
		nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_header ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
	}

	http.sync = false;

	var obj = tab.main.div_header;

	zkunnr   = ds_header.Getcolumn(0, "ZKUNNR"   );
	zkunnrNm = ds_header.Getcolumn(0, "ZKUNNR_NM");

	obj.div_kunnr.ed_buyr_cd.Text = ds_header.GetColumn(0, "KUNNR");
	obj.div_kunnr.ed_buyr_cd.bindDataset = "ds_header";
	obj.div_kunnr.ed_buyr_cd.Column      = "KUNNR";

	var buyr_nm = ds_header.GetColumn(0, "BUYR_NM");
	
	if (buyr_nm == null) {
		buyr_nm = ds_header.GetColumn(0, "KUNNR_NM");
		ds_header.AddColumn("BUYR_NM", "STRING", 256);
		ds_header.SetColumn(0, "BUYR_NM", buyr_nm);
	}

	var qtdat  = ds_header.GetColumn(0, "QTDAT");
	var zyear  = Substr(qtdat,0,4);
	var zmonth = Substr(qtdat,4,2);

	// 2013.02.20 START 원가산출 기준 변경에 따라 제거 &&&&&
	// ds_exchange.ClearData();
	// ds_exchange.AddRow();
	// ds_exchange.SetColumn(0, "MANDT" , G_MANDT);
	// ds_exchange.SetColumn(0, "ZYEAR" , zyear  );
	// ds_exchange.SetColumn(0, "ZMONTH", zmonth );
	// nsfRequest("queryExchange", "ses0031/searchExchange", "ds_exchange=ds_exchange", "ds_exchange=ds_exchange", "", "fn_afterQuery");
	// 2013.02.20 START 원가산출 기준 변경에 따라 제거 &&&&&

	obj.div_kunnr.ed_buyr_nm.Text = ds_header.GetColumn(0, "BUYR_NM");
	obj.div_kunnr.ed_buyr_nm.bindDataset = "ds_header";
	obj.div_kunnr.ed_buyr_nm.Column      = "BUYR_NM";

	obj.div_sman.ed_sman_cd.Text   = ds_header.Getcolumn(0, "ZKUNNR"   );
	obj.div_sman.ed_sman_nm.Text   = ds_header.Getcolumn(0, "ZKUNNR_NM");
	obj.div_sman.ed_sman_cd.Enable = false;

	if (flag != null) {
		cal_qtdat.Text = gfn_getCurrDate();
		obj.cb_zprgflg.Index = 0;
	}

	// 최종 변경된 셀정보 초기화
	F_CHG_DETAIL_COLNUM = ""; // 변경된 Detail 컬럼번호
	F_CHG_DETAIL_ROWNUM = ""; // 변경된 Detail 행번호
	
	F_MAX_SERNO = 0;	            // 최종순번
	F_MAX_SERNO = fn_getMaxSerno(); // 기 저장된 최종순번

	obj.div_kunnr.ed_buyr_cd.Width = 70;
	obj.div_kunnr.btn_popBuyr.Left = 71;
	obj.div_kunnr.ed_buyr_nm.Left  = 90;
	obj.div_kunnr.ed_buyr_nm.Width = 79;

	obj.div_kunnr.ed_buyr_cd.Enable  = false;
	obj.div_kunnr.ed_buyr_nm.Enable  = false;
	obj.div_kunnr.btn_popBuyr.Enable = false;

	obj.div_sman.btn_popSman.Enable  = false;

	var atinn = "";

	switch (G_MANDT) {
		case "183" : atinn = "0000000006"; break;
		default    : atinn = "0000000005"; break;
	}

	ds_acapa.ClearData();
	ds_acapa.AddRow();
	ds_acapa.SetColumn(0, "MANDT", G_MANDT);
	ds_acapa.SetColumn(0, "ATINN", atinn  );
	ds_acapa.SetColumn(0, "SPRAS", "3"    );
	nsfRequest("queryAcapa", "ses0031/searchAcapa", "ds_acapa=ds_acapa", "ds_acapa=ds_acapa", "", "fn_afterQuery");
}

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}

/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
}

/********************************************************************************
* 기      능   : 출력
********************************************************************************/
function fn_print() {
	fn_createWait("",this);     // 처리중입니다. 메시지 처리

	// 고객의 국가 정보 획득 필요
	nsfRequest("printKunnr"
			 , "ses0031/searchKunnr"
			 , "ds_kunnr=ds_kunnr"
			 , "ds_kunnr=ds_kunnr"
			 , "paramKunnr=" + quote(tab.main.div_header.div_kunnr.ed_buyr_cd.Text)
			 , "fn_afterPrintKunnrQuery"
			 );
}

function fn_afterPrintKunnrQuery(svcId, errCode, errMsg)
{
	//견적가 변경여부 체크
	var detailFlag = "";	
	for (var i=0; i<ds_detail.GetRowCount(); i++) {

		detailFlag = ds_detail.GetColumn(i, "FLAG" );

		if (detailFlag!="" && detailFlag!=null) {
			gfn_showAlert("CW10084", ToString(i+1)); h.grd_detail.SetFocus(); return false; // CW10084 {}행의 자료가 저장되지 않았습니다.
		}
	}

	var gnm      = tab.main.div_header.div_kunnr.ed_buyr_nm.Text;	// Recipient
	var qtdat    = ds_header.GetColumn(0, "QTDAT");
		qtdat    = gfn_MonthToEng(Substr(qtdat,4,2)) +"," + Substr(qtdat,6,2) + ", " + Substr(qtdat,0,4);	// 견적일
	var gam      = gfn_formatComma(toNumber(ds_header.GetColumn(0, "ZSUM_ZEAM")), 2)  + " " + ds_header.GetColumn(0, "WAERK");
	var mno      = ds_header.GetColumn(0, "QTNUM") + "-" + ds_header.GetColumn(0, "QTSER");
	var gtype    = "";
	var znumber  = 0; // 대수
	var zuam     = 0; // 단가
	var zeam     = 0; // 견적가
	var zeam_sp  = 0; // sp 견적가
	var zeam_sum = 0; // 견적가 합계
	var rate     = 0; // 비율

	ds_list1.ClearData();
	ds_list1.AddRow();
	ds_list1.SetColumn(0, "MNO", mno                                  ); // 견적번호+차수 Quotaion no.
	ds_list1.SetColumn(0, "GNM", gnm                                  ); // Recipient
	ds_list1.SetColumn(0, "SPT", ds_header.GetColumn(0, "GSNAM"      )); // 공사명 Project Name
	ds_list1.SetColumn(0, "GAM", gam                                  ); // 금액 offer amount
	ds_list1.SetColumn(0, "CDT", qtdat                                ); // 견적일자
	ds_list1.SetColumn(0, "PID", ""                                   ); // 현장담당자 CC
	ds_list1.SetColumn(0, "AD1", "Hyundai group bldg.1-7, Yeonji-dong,"); // 주소1
	ds_list1.SetColumn(0, "AD2", "Jongro-ku, Seoul, 110-754 Korea"    ); // 주소2
	ds_list1.SetColumn(0, "WAERK", ds_header.GetColumn(0, "WAERK"     )); // 통화단위
	ds_list1.SetColumn(0, "TOT", gfn_formatComma(toNumber(ds_header.GetColumn(0, "ZSUM_ZEAM")), 2)); // 전체금액
	ds_list1.SetColumn(0, "INCO", ds_header.GetColumn(0, "INCO")       ); // 인도조건1
	ds_list1.SetColumn(0, "INCO2", ds_header.GetColumn(0, "INCO2")     ); // 인도조건2
	ds_list1.SetColumn(0, "LAND1", ds_kunnr.GetColumn(0, "LAND1_NM")   ); // 고객 국가

	var rowCnt = ds_detail.GetRowCount();

	ds_list3.ClearData();
	var spec_nm;
	var zprdgbn;
	var matnr;
	var spart = ds_header.GetColumn(0, "SPART");
	var vkbur = ds_header.GetColumn(0, "VKBUR");
	var type1;
	var type2;
	var type3;
	var zcapa;
	var zuse;
	var zopen;
	var zlen;
	var shangh;
	var addRow = 0;


	for (var i = 0; i < rowCnt; i++)	{
		addRow = ds_list3.AddRow();
	
		zprdgbn = substr(ds_detail.GetColumn(i, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(i, "GTYPE"  );
		matnr   = ds_detail.GetColumn(i, "MATNR");
	
		// 사양정보 처리 2012.12.31
		// 자재번호, 기종, 인승/폭, 속도/각도, 층수/높이, 용량, 용도, 열림, 정지층수/RISE/길이 
		type1 = ds_detail.GetColumn(i, "TYPE1");
		type2 = ds_detail.GetColumn(i, "TYPE2");
		type3 = ds_detail.GetColumn(i, "TYPE3");
		zcapa = ds_detail.GetColumn(i, "ZACAPA");
		zuse  = ds_detail.GetColumn(i, "ZUSE");
		zopen = ds_detail.GetColumn(i, "ZOPN");
		zlen  = ds_detail.GetColumn(i, "ZLEN");
		
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
	
		ds_list3.SetColumn(addRow, "SPC", spec_nm);
		znumber = decode(matnr, "Y-1000", "0",  ds_detail.GetColumn(i, "ZNUMBER")); 	// SP댓수 제외
		ds_list3.SetColumn(addRow, "QTY", znumber);
		ds_list3.SetColumn(addRow, "RNO", i+1    );
		ds_list3.SetColumn(addRow, "USE", gtype  );
		zeam    = ds_detail.GetColumn(i, "ZEAM"  ); 
		ds_list3.SetColumn(addRow, "GAM", zeam); // 견적가

		zuam    = toNumber(zeam) / toNumber(znumber);  	//단가 = 견적가 / 수량
		ds_list3.SetColumn(addRow, "AMT", zuam   ); 	// 단가
		zuse_nm = ds_detail.GetColumn(i, "ZUSE_NM"); 
		ds_list3.SetColumn(addRow, "UNM", zuse_nm); 	// 용도명
		shangh = ds_detail.GetColumn(i, "SHANGH"); 
		ds_list3.SetColumn(addRow, "SHANGH", decode(shangh, "국내", "KOREA", "CHINA")); // origin
	}

	fn_destroyWait();

	var arg = "fa_spart="+spart;
	Dialog("SES::Ses0370E.xml", arg, -1, -1, "Resize=true");	// UbiReport Call
}

/********************************************************************************
* 기      능   : 전송
********************************************************************************/
function fn_trans() {

	var qtnum = ds_header.GetColumn(0, "QTNUM");
	var qtser = ds_header.GetColumn(0, "QTSER");

	var subject = "Estimate has requested by "+G_USER_NAME+"["+G_USER_ID+"]. Its number is "+qtnum+", sequence is "+qtser+".";
	var content = subject;

	ds_email.ClearData();
	ds_email.AddRow();
	ds_email.SetColumn(0, "FROM"   , G_EMAIL);
	ds_email.SetColumn(0, "TO"	   , tab.main.div_header.ed_mailaddress.Text);
	ds_email.SetColumn(0, "TITLE"  , subject);
	ds_email.SetColumn(0, "CONTENT", content);

	tit_clearActionInfo();
	ds_error.ClearData(); 	// 서비스 호출 
	
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	nsfRequest("sendMail", "ses0031/sendmail", "ds_email=ds_email", "ds_error=ds_error", "", "fn_afterQuery");
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(svcId, errCode, errMsg) {
	
	F_CLICKED_ROW = -1; // 2013.02.01 클릭한행 초기화
	fn_destroyWait();
	
	if        (svcId == "queryInco") {
	} else if (svcId == "sendMail") {
	} else if (svcId == "queryAcapa"   ) { // trace(ds_acapa.SaveXML());
	} else if (svcId == "queryExchange") { // trace(ds_exchange.SaveXML());
	} else if (svcId == "queryDuty"    ) {	// 2013.01.08 적용
		if(ds_error.rowcount() > 0) {
			gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
		} else {
			fn_template("Duty", ds_detail.currow); // trace(ds_template_add.SaveXML());
		}
	} else if (svcId == "queryClass"   ) {
	} else if (svcId == "queryZGtype"  ) { // trace(ds_zgtype.SaveXML());
	} else if (svcId == "queryClass"   ) { // trace(ds_class.SaveXML());
	} else if (svcId == "querySo") {
        // 2020 박수근 추가 브랜드 입력화 적용여부 조회 쿼리 실행 - F_BRND_FLAG
        // 파라미터 견적번호
        fn_brndFlag(ds_header.GetColumn(0, "QTNUM"));

		var zprgflg = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태
		if (zprgflg == "" || zprgflg == null ) ds_header.SetColumn(0, "ZPRGFLG", "20");

		// 상태에 따른 환율정보 상태 처리 2013.02.21 작성의 경우
		if (tab.main.div_header.cb_zprgflg.Value == "20" )	{
			tab.main.div_header.cb_waerk.Enable = true;
		}else	{
			tab.main.div_header.cb_waerk.Enable = false;
		}

		var matnr = ds_header.GetColumn(0, "MATNR");
		if (matnr == null) matnr = ds_detail.GetColumn(0, "MATNR");

		var	searchRow = ds_class.FindRow("MATNR", matnr);
			zprdgbn   = ds_class.GetColumn(searchRow, "CLASS_CD");

		if (zprdgbn != null) fn_queryTemplate();
		else 			     tab.DeleteTab(1);

		fn_setFormByPrd(zprdgbn, svcId, ds_header.GetColumn(0, "SPART")); // 그리드 헤더 텍스트 변경 (2012.12.10)

	} else if (svcId == "queryTemplate") {
		ds_detail.OnColumnChanged = "ds_detail_OnColumnChanged";
		
        // 2020 박수근 추가
        initCreateOptGroup(ds_template);
		
		fn_template("", 0);
		fn_destroyWait();

	} else if (svcId == "queryTemplateAdd") {

		for (var i=0; i<ds_template_add.GetRowCount(); i++) {
			ds_template.addRow();
			ds_template.CopyRow(ds_template.row, "ds_template_add", i);
		}
		
        // 2020 박수근 추가
        initCreateOptGroup(ds_template);
		
		fn_template("A", ds_detail.currow);

		//해상운임비 20190305 by lyk
		var qtseq = ds_detail.GetColumn(ds_detail.currow,"QTSEQ");
		if(qtseq = "") qtseq = 0;		
		var nTmplRow = ds_template.SearchRow("QTSEQ=="+quote(qtseq)+"&&ATKLA=="+quote("EL_OPTION")+"&&PRH=="+quote("EL_YCON20"));		
		ds_detail.SetColumn(ds_detail.currow,"CONQTY20",ds_template.GetColumn(nTmplRow,"PRD"));		
		nTmplRow = ds_template.SearchRow("QTSEQ=="+quote(qtseq)+"&&ATKLA=="+quote("EL_OPTION")+"&&PRH=="+quote("EL_YCON40"));
		ds_detail.SetColumn(ds_detail.currow,"CONQTY40",ds_template.GetColumn(nTmplRow,"PRD"));		
		ds_header.SetColumn(0, "CONQTY20"  , ParseInt(round(ds_detail.caseSum("FLAG!='D'", "CONQTY20"   ),0))); // 20Fit
		ds_header.SetColumn(0, "CONQTY40"  , ParseInt(round(ds_detail.caseSum("FLAG!='D'", "CONQTY40"   ),0))); // 40Fit

	} else if (svcId == "queryHeader") {
        // 2020 박수근 추가 브랜드 입력화 적용여부 조회 쿼리 실행 - F_BRND_FLAG
        // 파라미터 견적번호
        fn_brndFlag(ds_header.GetColumn(0, "QTNUM"));


		// 상태에 따른 환율정보 상태 처리 2013.02.21 작성의 경우
		if (tab.main.div_header.cb_zprgflg.Value == "20" )	{
			tab.main.div_header.cb_waerk.Enable = true;
		}else	{
			tab.main.div_header.cb_waerk.Enable = false;
		}

		nsfRequest("queryDetail", "ses0030/detail", "ds_cond=ds_header ds_detail=ds_detail", "ds_detail=ds_detail ds_error=ds_error", "", "fn_afterQuery");
	
	} else if (svcId == "queryDetail") {
		
		//견적상태 = 견적가승인 요청 또는 수주이후 단계에서만 견적가 확인 가능하도록 보완  - 2013.04.12 신미정 
	    // 이부분 왠지 더 봐야 하지만 아래 로직을 활성화 시키면 견적요청 버튼이 보이지 않게되어 
	    // 일단 주석 처리 .. 2013.04.15 김선호 
	/********************************************************************************************
			var zprgflg = ds_header.GetColumn(0, "ZPRGFLG"); 	// 진행상태
		if ( zprgflg != '34' && ToNumber(zprgflg) < 61 )
		{	
			for ( var i=0; i< ds_detail.GetRowCount(); i++)
			{	
				ds_detail.SetColumn(i, "ZEAM", 0);
			}
		}
		*******************************************************/
		nsfRequest("queryTemplate"
				   , "ses0031n/searchTemplate"
				   , "ds_detail=ds_detail ds_template=ds_template ds_t302=ds_t302"
				   , "ds_template=ds_template ds_error=ds_error ds_t302=ds_t302"
				   , "ATNAM2='EN'"
				   , "fn_afterQuery");


		F_CHG_DETAIL_COLNUM = ""; // 변경된 Detail 컬럼번호
		F_CHG_DETAIL_ROWNUM = ""; // 변경된 Detail 행번호
		fn_zprgflg();

		fn_setFormByPrd(ds_detail.GetColumn(ds_detail.row, "ZPRDGBN"), svcId, ds_header.GetColumn(0, "SPART")); // 그리드 헤더 텍스트 변경 (2012.12.10)

		if(ds_header.GetColumn(0,"OPENDT") == "Y") {
			F_ZFLG = "E";
			gfn_showAlert("견적등록/수정/삭제는 오픈된 E-GIS시스템에서 가능합니다.");	
					
		} else {
			if(ds_header.GetColumn(0,"EGIS_FLAG") == "X") {
				F_ZFLG = "E";
				gfn_showAlert("해당 견적번호는 E-GIS시스템에서 등록/수정/삭제 가능합니다.");	
			}
		}
	} else if (svcId == "queryZ309") {
	}

	fn_setEnableYN(ds_header.GetColumn(0,"OPENDT"),ds_header.GetColumn(0,"EGIS_FLAG"));

	if(ds_error.rowcount() > 0) {
		gfn_showMsg("CE00001");
//		gfn_openWSErrorWin(tab.template.div_template.grd_template1, ds_template, ds_error, "FLAG"); // error 정보 표시
		gfn_openWSErrorWin(grd_template1, ds_template, ds_error, "FLAG"); // error 정보 표시
	} else {
		if(errCode != 0) gfn_showMsg("CE00001");
		else 			 gfn_showMsg("CI00002", ds_header.RowCount() + "");
	}
}

/********************************************************************************
* 기      능   : 저장 Callback
********************************************************************************/
function fn_afterSave(svcId, errCode, errMsg) {

	F_CLICKED_ROW = -1; // 2013.02.01 클릭한행 초기화
	fn_destroyWait();

	if(ds_error.rowcount > 0)	{
		gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
		return;
	}

	if ( tab.TabIndex > 0 ) { // 2012.01.08 저장 후 견적내용 탭으로 이동
		tab.TabIndex = 0;
	}

	var qtdat   = ds_header.GetColumn(0, "QTDAT"  ); // 견적일자
	var zestdat = ds_header.GetColumn(0, "ZESTDAT"); // 입찰예정일
	var vkbur   = ds_header.GetColumn(0, "VKBUR"  ); // 사업장
	var vkgrp   = ds_header.GetColumn(0, "VKGRP"  ); // 영업그룹
	var zprgflg = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태
	var zkunnr  = ds_header.GetColumn(0, "ZKUNNR" ); // 담당자

	ds_cond.SetColumn(0, "FR_QTDAT"  , qtdat  );
	ds_cond.SetColumn(0, "TO_QTDAT"  , qtdat  );
	ds_cond.SetColumn(0, "FR_ZESTDAT", zestdat);
	ds_cond.SetColumn(0, "TO_ZESTDAT", zestdat);
	ds_cond.SetColumn(0, "VKBUR"     , vkbur  );
	ds_cond.SetColumn(0, "VKGRP"     , vkgrp  );
	ds_cond.SetColumn(0, "ZPRGFLG"   , zprgflg);
	ds_cond.SetColumn(0, "SMAN"      , zkunnr );

	switch (svcId) {
		case "saveHeader"     : nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_header ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
								break;
		case "saveDetail"     : break;
		case "deleteDetail"   : break;
		case "saveHeaderFlag" : nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_header ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
//								if (G_LANG == "en") fn_trans();
								break;
		case "saveQtserAdd"   : gfn_showAlert("CI00005");
								parent.fn_query();
								// 재 조회를 위하여 견적번호 및 차수만 정보제공 2013.01.07
								/*ds_cond.ClearData();
								ds_cond.AddRow();
								ds_cond.SetColumn(0, "MANDT", ds_header.GetColumn(0, "MANDT"));
								ds_cond.SetColumn(0, "QTNUM", ds_header.GetColumn(0, "QTNUM"));
								ds_cond.SetColumn(0, "QTSER", ds_header.GetColumn(0, "QTSER"));
								nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_cond ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
								*/
								close();
								break;
		case "saveQtserDel"   : gfn_showAlert("CI00005");
								parent.fn_query();
								close(); //fn_close();
								break;
		default               : break;
	}
}

/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
	fn_init_form(); 	// 폼 초기화
}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 정렬 처리 
********************************************************************************/
function grd_detail_OnHeadClick(obj,nCell,nX,nY,nPivotIndex) {
	if( nCell == 0 ) {
		gfn_selectAllGrid(obj,nCell,nCell,true);
	} else {
		gfn_sortGrid(obj, nCell);
	}	
}

/********************************************************************************
* 기      능   : 조회
********************************************************************************/
function fn_OnClick_btn(obj) {
	var fncName = "fn_" + substr(obj.id, 4); 
	eval( fncName + "()");
}

/********************************************************************************
* 기      능   : 그리드 row 추가
********************************************************************************/
function btn_plus_OnClick(matnr, arr) {

	ds_detail.OnColumnChanged = "";
	ds_detail.CanRowPosChange = "";

	var oldRow = ds_detail.currow;
	var newRow = gfn_addGridRow(tab.main.div_header.grd_detail, -1, "FLAG");// 추가된 행번호 수신(FLAG:I) 

	var qtser  = ds_header.getColumn(0, "QTSER");
	//var qtseq  = ParseInt(ds_detail.Max("QTSEQ")) + 1;
	var qtseq = toNumber(gfn_getColMax(ds_detail, "QTSEQ")) + 1;	// 2013.01.14 수정

	var shangh;
	var gtype;
	var rtype;
	var type1;
	var type2;
	var type3;
	var znumber;
	var sonnr;
	var searchRow;
	var zsarea;
 	var zprdgbn;

    // 2020 박수근 월수주계획을 통해서 견적서 최초 등록 시 그리고 EL 건인 경우
    // ds_header.GetColumn(0, "MATNR"  ) -> L-1000
    // var zprdgbn = ds_detail.GetColumn(nRow, "ZPRDGBN");
    var g_brndcd = "";
    var g_brndnm = "";
    var g_brndseq = "";
    var g_gtype = "";
    var g_sndSys = "PDM";

	if (qtser == null) qtser = "0";

	F_MAX_SERNO++;
	ds_detail.SetColumn(newRow, "CHK" 	, 1	 );	// 선택여부
	ds_detail.SetColumn(newRow, "NEW_YN", "Y");	// 신규여부
	ds_detail.SetColumn(newRow, "SERNO" , F_MAX_SERNO);	// 순번
	ds_detail.SetColumn(newRow, "MANDT" , ds_header.getColumn(0, "MANDT"));
	ds_detail.SetColumn(newRow, "QTNUM" , ds_header.getColumn(0, "QTNUM"));
	ds_detail.SetColumn(newRow, "QTSER" , ds_header.getColumn(0, "QTSER"));
	ds_detail.SetColumn(newRow, "QTSEQ" , qtseq);

	ds_cond.ClearData();
	ds_cond.AddRow();

	if (matnr == "T-1000" || matnr == "Y-1000") {

		znumber = 1;

	} else if (arr != null) {
	
		shangh  = arr[0];
		matnr   = arr[1];
		gtype   = arr[2];
		type1   = arr[3];
		type2   = arr[4];
		type3   = arr[5];
		znumber = arr[6];
		sonnr   = arr[7];

		var detail_shangh = Substr(ds_detail.GetColumn(0, "SHANGH"), 0, 2);

		if (Substr(shangh, 0, 2) != detail_shangh) {
			// 제작구분이 다릅니다. This Factory position is different
			gfn_showAlert("CW10092"); 
			//return; 
			gfn_deleteGridRow(tab.main.div_header.grd_detail, newRow, "FLAG");
			return;
		}
	} else {
		gtype   = ds_header.GetColumn(0, "GTYPE"  );
		shangh  = ds_header.GetColumn(0, "SHANGH" ); // 국내상해구분
		matnr   = ds_header.GetColumn(0, "MATNR"  ); // 자재번호
		type1   = ds_header.GetColumn(0, "TYPE1"  );
		type2   = ds_header.GetColumn(0, "TYPE2"  );
		type3   = ds_header.GetColumn(0, "TYPE3"  );
		znumber = ds_header.GetColumn(0, "ZNUMBER");
		sonnr   = ds_header.GetColumn(0, "SONNR"  ); // 수주계획번호
		rtype   = ds_header.GetColumn(0, "RTYPE"  );

		if (oldRow < 0) oldRow = 0;

		if (gtype  == null || oldRow>0) gtype  = ds_detail.GetColumn(oldRow, "GTYPE"  );
		if (shangh == null || oldRow>0) shangh = ds_detail.GetColumn(oldRow, "SHANGH" );
		if (matnr  == null || oldRow>0) matnr  = ds_detail.GetColumn(oldRow, "MATNR"  );
		if (type1  == null || oldRow>0) type1  = ds_detail.GetColumn(oldRow, "TYPE1"  );
		if (type2  == null || oldRow>0) type2  = ds_detail.GetColumn(oldRow, "TYPE2"  );
		if (type3  == null || oldRow>0) type3  = ds_detail.GetColumn(oldRow, "TYPE3"  );
		if (znumber== null || oldRow>0) znumber= ds_detail.GetColumn(oldRow, "ZNUMBER");
		if (sonnr  == null || oldRow>0) sonnr  = ds_detail.GetColumn(oldRow, "SONNR"  );

		if (fa_sonnr != null && oldRow == 0) gtype = rtype;
	}

	searchRow = ds_class.FindRow("MATNR"    , matnr);
	zprdgbn   = ds_class.GetColumn(searchRow, "CLASS_CD");

	if (shangh=="상해" || shangh=="상해_E") {
		if      (zprdgbn == "ELV_01" || "ELV_02") zprdgbn = "SHN_01";
		else if (zprdgbn == "ESC_01")             zprdgbn = "SHN_02";
	}

	if (zprdgbn=="ELV_01" || zprdgbn=="ELV_02" || zprdgbn=="SHN_01") {

		zsarea = "O";

	} else if (zprdgbn=="ESC_01" || zprdgbn=="SHN_02" || zprdgbn=="MW_01") {

		zsarea = "FOREIGN";

	}  else if (zprdgbn=="AP_01" || zprdgbn=="PSD_01") {
	}

    // 해당 로직은 월수주계획으로 부터 견적서 작성 시 E/L건과 최초 호기 내역을 작성할 때 실행된다.
    // 2020.07.06 시점 zprdgbn = SHN_01: 상해 엘리베이터는 브랜드 적용 대상이 아님
    if(Length(arr) >= 8 && F_BRND_FLAG == "Y") {
        var arg = "fa_mandt="+quote(arr[1])+" fa_qtnum="+quote(ds_header.GetColumn(0, "QTNUM"))+" fa_gtype="+quote(arr[2])+" fa_zprdgbn="+quote(zprdgbn)+" fa_brndcd="+quote("");
        var brndArr = gfn_openPopUpUrlHdel("COM::Coms01A.xml", true, arg);
        if(brndArr == null) {
            return;
        } else {
			if(Length(brndArr) == 5) {
				g_brndseq = brndArr[0];   // 브랜드 차수
				g_brndcd = brndArr[1];    // 브랜드코드
				g_brndnm = brndArr[2];    // 브랜드명
				g_gtype = brndArr[3];     // 기종
				g_sndSys = brndArr[4];    // 시스템전송 구분
			} else {
                return;
			}
        }
//    } else if(F_BRND_FLAG == "Y" && Length(fa_sonnr) > 0 && matnr == 'L-1000' && ds_detail.GetRowCount() == 1) {
    } else if(F_BRND_FLAG == "Y" && Length(fa_sonnr) > 0 && zprdgbn == 'ELV_01' && ds_detail.GetRowCount() == 1) {
        var arg = "fa_mandt="+quote(ds_header.GetColumn(0, "MANDT"))+" fa_qtnum="+quote(ds_header.GetColumn(0, "QTNUM"))+" fa_gtype="+quote(ds_header.GetColumn(0, "RTYPE"))+" fa_zprdgbn="+quote(zprdgbn)+" fa_brndcd="+quote("");
        var brndArr = gfn_openPopUpUrlHdel("COM::Coms01A.xml", true, arg);
        if(brndArr == null) {
            close();
        } else {
			if(Length(brndArr) == 5) {
				g_brndseq = brndArr[0];   // 브랜드 차수
				g_brndcd = brndArr[1];    // 브랜드코드
				g_brndnm = brndArr[2];    // 브랜드명
				g_gtype = brndArr[3];     // 기종
				g_sndSys = brndArr[4];    // 시스템전송 구분
			} else {
			    close();
			}
        }
    //} else if(F_BRND_FLAG == "Y" && matnr == 'L-1000' ) {
    } else if(F_BRND_FLAG == "Y" && zprdgbn == 'ELV_01' ) {
        // 호기 선택되 로우 값 삽입
        var brndcd  = ds_detail.GetColumn(oldRow, "BRNDCD");
        var brndnm  = ds_detail.GetColumn(oldRow, "BRNDNM");
        var brndseq = ds_detail.GetColumn(oldRow, "BRNDSEQ");
        var gtype   = ds_detail.GetColumn(oldRow, "GTYPE");
        g_sndSys = ds_detail.GetColumn(oldRow, "SNDSYS");
	    g_brndseq = brndseq;
		g_brndcd =  brndcd;
		g_brndnm =  brndnm;
		g_gtype  =  gtype;
    } else {
	    g_brndseq = "000";
		g_brndcd =  "";
		g_brndnm =  "";
		g_gtype  =  gtype;
    }

	ds_detail.SetColumn(newRow, "ZSAREA" , zsarea );
	ds_detail.SetColumn(newRow, "SHANGH" , shangh ); // 국내상해구분
	ds_detail.SetColumn(newRow, "MATNR"  , matnr  ); // 자재번호
	ds_detail.SetColumn(newRow, "GTYPE"  , gtype  );
	if (matnr != 'L-1000'){//해외엘리베이터는 인승입력 안함 20130624 김선호
		ds_detail.SetColumn(newRow, "TYPE1"  , type1  );  
	}
	ds_detail.SetColumn(newRow, "TYPE2"  , type2  );
	ds_detail.SetColumn(newRow, "TYPE3"  , type3  );
	ds_detail.SetColumn(newRow, "ZNUMBER", znumber);
	ds_detail.SetColumn(newRow, "SONNR"  , sonnr  ); // 수주계획번호
	ds_detail.SetColumn(newRow, "ZPRDGBN", zprdgbn);
	ds_detail.SetColumn(newRow, "MCLASS" , zprdgbn);

	//해상운임비 추가 BY LYK
	ds_detail.SetColumn(newRow, "CONQTY20" , "0");
	ds_detail.SetColumn(newRow, "CONQTY40" , "0");

	// 2020 박수근
	ds_detail.SetColumn(newRow, "ZLEN" , ""); // 정지층수 추가
    ds_detail.SetColumn(newRow, "BRNDSEQ" , g_brndseq);
	ds_detail.SetColumn(newRow, "BRNDCD" , g_brndcd);
	ds_detail.SetColumn(newRow, "BRNDNM" , g_brndnm);
	ds_detail.SetColumn(newRow, "GTYPE"  , g_gtype  );
	ds_detail.SetColumn(newRow, "SNDSYS" , g_sndSys);

	ds_template.UnFilter();
	ds_template.Filter("QTSEQ !=" + quote(qtseq)); ds_temp.CopyF(ds_template); ds_template.Copy(ds_temp);

	ds_cond.SetColumn(0, "MANDT" , ds_header.GetColumn(0, "MANDT"));
	ds_cond.SetColumn(0, "QTNUM" , ds_header.GetColumn(0, "QTNUM"));
	ds_cond.SetColumn(0, "QTSER" , qtser);
	ds_cond.SetColumn(0, "QTSEQ" , qtseq);
	ds_cond.SetColumn(0, "MCLASS", zprdgbn);

	// 2020 박수근
	ds_cond.SetColumn(0, "BRNDSEQ" , g_brndseq);
	ds_cond.SetColumn(0, "BRNDCD" , g_brndcd);

	nsfRequest("queryTemplateAdd"
				   , "ses0031n/searchAddTemplate"
				   , "ds_detail=ds_cond ds_template=ds_template"
				   , "ds_template=ds_template ds_error=ds_error"
				   , ""
				   , "fn_afterQuery");

	fn_applayHeaderCost(); //Detail의 원가,견적가,대수가 변경되면 헤더의 합계에 반영

	ds_detail.OnColumnChanged = "ds_detail_OnColumnChanged";
	ds_detail.CanRowPosChange = "ds_detail_CanRowPosChange";
}

/********************************************************************************
* 기      능   : 그리드 row 삭제
********************************************************************************/
function btn_minus_OnClick(obj) {
	// 2013.01.14 삭제되는 detail row정보
	var dRowIndex = ds_detail.row;
	var flag = ds_detail.GetColumn(dRowIndex, "FLAG");
	
	// 2013.02.01 화면상에서 MO를 추가 후 삭제 시 최종 추가된 MO부터 삭제 가능
	if(flag == "I") {
	    gfn_deleteGridRow( tab.main.div_header.grd_detail, ds_detail.row, "FLAG" );
	} else if(flag != "D") {
		// 삭제 처리한다.
		gfn_deleteGridRow( tab.main.div_header.grd_detail, ds_detail.row, "FLAG" );

		for (var i = ds_template.GetRowCount()-1; i >=0; i--) {
			if ( ds_detail.GetColumn(dRowIndex, "QTNUM") == ds_template.GetColumn(i, "QTNUM") &&
				 ds_detail.GetColumn(dRowIndex, "QTSER") == ds_template.GetColumn(i, "QTSER") &&
				 ds_detail.GetColumn(dRowIndex, "QTSEQ") == ds_template.GetColumn(i, "QTSEQ") )	{
				// 추가 후 삭제 시 삭제
				ds_template.DeleteRow(i);
			}
		}

		if (ds_detail.currow >= 0 )	{
			fn_template("A", ds_detail.currow);
		}
	
		// 2020 박수근 추가
		fn_coElqty(); // E/L 대수 추가

		//fn_aspc("", "", "", 0, 0, 0, 0, ds_h);					 // 2013.02.18 ★★★★★ 시방서는 삭제시 적용 안함
		fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_header);  // LED 총 수량
		fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_header); 			// LCD 총 수량
		fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_header); // LED 총 수량
		fn_deph("", "", "", 0, 0, 0, 0, ds_header);					// 비상통화장치 DI-PBX 적용대수
		fn_ddvr("", "", "", 0, 0, 0, 0, ds_header);					// DVR 적용대수
		//fn_drvhq("", "", "", 0, 0, 0, 0, ds_header);				// 행선층 예약시스템 적용대수
		fn_dsv1("", "", "", 0, 0, 0, 0, ds_header);					// 감시반1
		fn_dsv2("", "", "", 0, 0, 0, 0, ds_header);					// 감시반2
		fn_aspd();												    // 고속현장 2013.04.03
	
		fn_applayHeaderCost(); //Detail의 원가,견적가,대수가 변경되면 헤더의 합계에 반영		
		
		// 2020 브랜드 입력 로우 삭제 처리한다.
		// 현재 필터링 된 dataset도 삭제한다.
		// 2020 브랜드 입력 처리 - 값을 복사처리하고 삭제한다.
		// ds_template_org ds_user0.Copy(ds0);
		var nRow = 0;
		var ds_List = [ds_template0, ds_template1, ds_template2, ds_template3, ds_template4, ds_template5, ds_template6];
		for ( var iObj = 0; iObj < Length(ds_List); iObj++) {
			for ( var b = ds_List[iObj].GetRowCount()-1 ; b >= 0 ; b-- ) {
				ds_List[iObj].DeleteRow(b);
			}
		}
	}
}

function ds_header_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex) {

	if (varNewValue != varOldValue) { 	// 값이 변경되었을 경우 변경구분 컬럼 자동 SET 
		obj.SetColumn(nRow, "CHK" , "1");
		gfn_changeFlag( obj, strColumnID, nRow, "FLAG"); // FLAG 변경 : U

		var ds0     = object(ds_template0.ID);
		var ds1     = object(ds_template1.ID);
		var atkla   = "";
		var prh     = "";
		var prd     = "";
		var oldPrd  = "";
		var co_flag = "";

		if (strColumnId=="CO_DDVRTQ" || strColumnId=="CO_DEPHTQ" || strColumnId=="CO_DSSQ"   || strColumnId=="CO_BCLCDTQ" || strColumnId=="CO_CHPITQ" ||
			strColumnId=="CO_ASPC"   || strColumnId=="CO_DSV1"   || strColumnId=="CO_DSV1TQ" || strColumnId=="CO_DSV2"    || strColumnId=="CO_DSV2TQ") {

			// 2013.01.16 시방서의 경우 값이 변경되면 전체 MO에 반영되도록 처리
			if (strColumnId == "CO_ASPC")	{
				for (var i = 0; i < ds1.GetRowCountNF(); i++) {
					atkla = ds1.GetColumnNF(i, "ATKLA");
					prh   = ds1.GetColumnNF(i, "PRH"  );

					if ((atkla == "EL_BASIC" && prh == "EL_ASPC") ||
						(atkla == "ES_BASIC" && prh == "ES_ASPC") ||
						(atkla == "MW_BASIC" && prh == "MW_ASPC") )	{
						prd = obj.GetColumn(0, "CO_ASPC");
					
						//oldPrd = ds1.GetColumnNF(i, "PRD");
						//ds1.SetColumnNF(i, "PRD", prd);
						//ds1.SetColumnNF(i, "FLAG", "U");
						setDsTemplateFlagNF(ds1, i, "PRD", prd);
					}
				}	
			}

			for (var i=0; i<ds0.GetRowCountNF(); i++) {

				atkla = ds0.GetColumnNF(i, "ATKLA");
				prh   = ds0.GetColumnNF(i, "PRH"  );

				if (atkla == " ") {
					switch (prh) {
						case "CO_DDVRTQ" : prd = obj.GetColumn(0, "CO_DDVRTQ" ); break;
						case "CO_DEPHTQ" : prd = obj.GetColumn(0, "CO_DEPHTQ" ); break;
						case "CO_DSSQ"   : prd = obj.GetColumn(0, "CO_DSSQ"   ); break;
						case "CO_BCLCDTQ": prd = obj.GetColumn(0, "CO_BCLCDTQ"); break;
						case "CO_CHPITQ" : prd = obj.GetColumn(0, "CO_CHPITQ" ); break;
						case "CO_ASPC"   : prd = obj.GetColumn(0, "CO_ASPC"   ); break;
						case "CO_DSV1"   : prd = obj.GetColumn(0, "CO_DSV1"   ); break;
						case "CO_DSV1TQ" : prd = obj.GetColumn(0, "CO_DSV1TQ" ); break;
						case "CO_DSV2"   : prd = obj.GetColumn(0, "CO_DSV2"   ); break;
						case "CO_DSV2TQ" : prd = obj.GetColumn(0, "CO_DSV2TQ" ); break;
						default          : continue; break;		// 2013.02.18 ★★★★★
					}
				}
				prd = trim(prd);		// 2013.02.18 ★★★★★

				oldPrd = trim(ds0.GetColumnNF(i, "PRD"));	// 2013.02.18 ★★★★★
				if (prd != oldPrd) {
					//co_flag="U";
					//ds0.SetColumnNF(i, "PRD", prd);
					//ds0.SetColumnNF(i, "FLAG", "U");
					setDsTemplateFlagNF(ds0, i, "PRD", prd);
				}
			}
			// 2012.01.25 공통사양 수정 후 ds_user0 정보 수정되도록 조치
			ds_user0.Copy(ds0);
		} else if (strColumnId=="ZLZONE" || strColumnId=="REGION") {

			for (var i=0; i<ds1.GetRowCount(); i++) {

				prh = ds1.GetColumn(i, "PRH");

				switch (prh) {
					case "EL_ALOCT" : prd = obj.GetColumn(0, "ZLZONE"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
					case "EL_ADTA"  : prd = obj.GetColumn(0, "REGION"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
					default         : break;
				}
			}
		} else if (strColumnId=="INCO") {

			for (var i=0; i<ds1.GetRowCount(); i++) {

				prh = ds1.GetColumn(i, "PRH");

				if (prh == "EL_ATT" || prh == "SH_EL_ATT" || prh == "ES_ATT" || prh == "SH_ES_ATT" || prh == "MW_ATT") { // 인도조건
					prd = obj.GetColumn(0, "INCO"); setDsTemplateFlag(ds1, i, "PRD", prd);
				}
			}
		}

		if (co_flag != "U") {
			btn_qtser_plus.Visible = false; btn_qtser_minus.Visible = false; // 차수+-
			btn_estimate.Visible   = false; // 견적요청
		}
	}
}

function btn_mail_OnClick(obj) {
	fn_trans();
}

function ds_header_OnRowPosChanged(obj,nOldRow,nRow) {

	if (obj.GetColumn(nOldRow, "FLAG") <> "U") return;  // 변경된 행만 체크	
	if (ChgYn == "N") gfn_SetDatasetChgFlag(obj, nOldRow); // 변경된 자료가 없으면 선택여부,변경구분 초기화
}

function ds_detail_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex) {

	obj.OnColumnChanged = "";
	obj.CanRowPosChange = "";

	var nCol   = tab.main.div_header.grd_detail.GetCellPos();  // 현재 컬럼번호
	var cId    = strColumnId;
	var atkla  = "";
	var prh    = "";
	var prd    = "";
	var matnr  = "";
	var zeam      = ds_detail.GetColumn(nRow, "ZEAM"   );
	var zuam      = ds_detail.GetColumn(nRow, "ZUAM"   );
	var znumber   = ds_detail.GetColumn(nRow, "ZNUMBER");
	var qtseq     = ds_detail.GetColumn(nRow, "QTSEQ"  );
	var filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("EL_BASIC") + " && PRH == ";
	var shang     = 0;
	var searchRow = 0;

	if (varNewValue != varOldValue) { 	// 값이 변경되었을 경우 변경구분 컬럼 자동 SET 
		//견적가 변경의 경우 제외 - 2013.04.12 신미정
		if(strColumnID != "ZEAM") {
			obj.SetColumn(nRow, "CHK" , "1");
			gfn_changeFlag( obj, strColumnID, nRow, "FLAG"); // FLAG 변경 : U
		}
		F_CHG_DETAIL_COLNUM = nCol; // 현재 컬럼번호
		F_CHG_DETAIL_ROWNUM = nRow;	// 현재 행번호

		btn_qtser_plus.Visible = false; btn_qtser_minus.Visible = false; // 차수+-
		btn_estimate.Visible   = false; // 견적요청

		if (cId=="GTYPE" || cId=="ZUSE" || cId=="ZACAPA" || cId=="ZLEN" || cId=="ZOPN" || cId=="TYPE1" || cId=="TYPE2" || cId=="TYPE3" ) {

			if (zprdgbn == "ELV_01" || zprdgbn == "ELV_02" || zprdgbn == "SHN_01") {

				filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("EL_BASIC") + " && PRH == ";

				switch (cId) {
					case "ZSAREA" : prh = "EL_ACD1" ; break;
					case "GTYPE"  : prh = "EL_ATYP" ; break;
					case "ZUSE"   : prh = "EL_AUSE" ; break;
					case "ZACAPA" : prh = "EL_ACAPA"; break;
					case "ZLEN"   : prh = "EL_ASTQ" ; break;
					case "ZOPN"   : prh = "EL_AOPEN"; break;
					case "TYPE1"  : prh = "EL_AMAN" ; break;
					case "TYPE2"  : prh = "EL_ASPD" ; break;
					case "TYPE3"  : prh = "EL_AFQ"  ; break;
					case "BRNDCD" : prh = "EL_ABRAND" ; break;
					default       : break;
				}

				if (zprdgbn == "SHN_01") prh = "SH_" + prh;

			} else if (zprdgbn == "ESC_01" || zprdgbn == "SHN_02") {

				filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("ES_BASIC") + " && PRH == ";

				switch (cId) {
					case "SHANGH" : prh = "ES_ALOCA" ; break;
					case "ZSAREA" : prh = "ES_ALOCAT"; break;
					case "GTYPE"  : prh = "ES_ATYP"  ; break;
					case "TYPE1"  : prh = "ES_AWID"  ; break;
					case "TYPE2"  : prh = "ES_ADEG"  ; break;
					case "TYPE3"  : prh = "ES_ARISE" ; break;
					case "ZLEN"   : prh = "ES_ASPE"  ; break;
					default       : break;
				}

				if (zprdgbn == "SHN_02") prh = "SH_" + prh;

			} else if (zprdgbn == "MW_01") {

				filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("MW_BASIC") + " && PRH == ";

				switch (cId) {
					case "SHANGH" : prh = "MW_ALOCA" ; break;
					case "ZSAREA" : prh = "MW_ALOCAT"; break;
					case "GTYPE"  : prh = "MW_ATYP"  ; break;
					case "TYPE1"  : prh = "MW_AWID"  ; break;
					case "TYPE2"  : prh = "MW_ADEG"  ; break;
					case "TYPE3"  : prh = "MW_ARIS"  ; break;
					case "ZLEN"   : prh = "MW_ASPE"  ; break;
					case "ZOPN"   : prh = "MW_ALENG" ; break;
					default       : break;
				}
			}
			else if (zprdgbn == "AP_01") // (2012.12.10)
			{
				filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("AP_BASIC") + " && PRH == ";
				
				switch (cId) {
					case "GTYPE"  : prh = "AP_ATYP"; break;
					case "ZUSE"   : prh = "AP_AEA" ; break;
					case "TYPE1"  : prh = "AP_AMOD"; break;
					case "ZACAPA" : prh = "AP_ACS" ; break;
					case "TYPE2"  : prh = "AP_AQL" ; break;
					case "TYPE3"  : prh = "AP_AQC" ; break;
					case "ZLEN"   : prh = "AP_AQT" ; break;
					case "ZOPN"   : prh = "AP_AETS"; break;
					default       : break;
				}
			
			}
			else if (zprdgbn == "PSD_01") // (2012.12.10)
			{
				filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("PSD_BASIC") + " && PRH == ";
				
				switch (cId) {
					case "GTYPE"  : prh = "PSD_AFORM1"; break;
					case "TYPE1"  : prh = "PSD_ANAME" ; break;
					default       : break;
				}
			}

			prd = ds_detail.GetColumn(nRow, cId);
			searchRow = ds_template1.SearchRow(filterStr + quote(prh));
			//ds_template1.SetColumn(searchRow, "PRD" , prd);
			//ds_template1.SetColumn(searchRow, "FLAG", "U");
			setDsTemplateFlagNF(ds_template1, searchRow, "PRD", prd);

			// 2013.05.29 추가 (설계부 요청사항)START
			// 기종, 용도, 인승, 용량, Door open type, 속도, 층수, 정지층수가 변경되면 EL_ECCH를 0으로 변경
			if (cId != "ZSAREA")	{
				// 승강기의 경우에만 적용
				if (zprdgbn == "ELV_01" || zprdgbn == "ELV_02" || zprdgbn == "SHN_01") {

					var vFilter5Str = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("EL_LAYOUT") + " && PRH == " + quote("EL_ECCH");

					// Layout의 CAR : CH의 값을 0으로 변경 처리
					var vSearch5Row = ds_template5.SearchRow(vFilter5Str);
					if (vSearch5Row == -1)	{
						// 필터된 정보에서 처리
						vSearch5Row = ds_template5.SearchRowNF(vFilter5Str);
						//ds_template5.SetColumnNF(vSearch5Row, "PRD" , "0");
						//ds_template5.SetColumnNF(vSearch5Row, "FLAG", "U");
						setDsTemplateFlag(ds_template5, vSearch5Row, "PRD", "0");
					}else	{
						//ds_template5.SetColumn(vSearch5Row, "PRD" , "0");
						//ds_template5.SetColumn(vSearch5Row, "FLAG", "U");
						setDsTemplateFlag(ds_template5, vSearch5Row, "PRD", "0");
					}

					if (vSearch5Row == -1 && (cId == "TYPE3" || cId == "ZLEN"))	{
						// 필터된 정보에서 처리 시 전체 정보에서도 변경
						vSearch5Row = ds_template.SearchRow(vFilter5Str);
						//ds_template.SetColumn(vSearch5Row, "PRD" , "0");
						//ds_template.SetColumn(vSearch5Row, "FLAG", "U");
						setDsTemplateFlag(ds_template, vSearch5Row, "PRD", "0");
					}
				}
			}
			// 2013.05.29 추가 (설계부 요청사항) END

		} else if (strColumnId == "ZNUMBER") {

			var ds_h = object(ds_header.ID);

			// 2020 박수근 추가
			fn_coElqty(); // E/L 대수 추가

			fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); // LCD 총 수량
			fn_bcpi ("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h); // LED 총 수량
			fn_deph ("", "", "", 0, 0, 0, 0, ds_h); // 비상통화장치 DI-PBX 적용대수
			fn_ddvr ("", "", "", 0, 0, 0, 0, ds_h); // DVR 적용대수
			//fn_drvhq("", "", "", 0, 0, 0, 0, ds_h); // 행선층 예약시스템 적용대수 - 2012.01.15 삭제
			fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); // 감시반1
			fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); // 감시반2

			// 2013.02.20 주차 - 대수 변경시 원가 재계산
			if ( zprdgbn == "AP_01" ) {
				ds_detail.SetColumn(nRow, "ZCOST", toNumber(ds_detail.GetColumn(nRow, "ZNUMBER")) * toNumber(ds_detail.GetColumn(nRow, "ZUAM")));
				zcost = ds_detail.GetColumn(nRow, "ZCOST");		//계산된 원가
			}

			fn_shang(nRow, zeam, zuam, znumber, shang); // 시행율
			fn_applayHeaderCost(); // detail 합계를 header에 반영

		} else if (strColumnId == "FLAG") {

			if ( varOldValue == "D" ) { // 2012.01.15 삭제했던 MO 다시 살릴 때
				var ds_h = object(ds_header.ID);

				fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); // LCD 총 수량
				fn_bcpi ("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h); // LED 총 수량
				fn_deph ("", "", "", 0, 0, 0, 0, ds_h); // 비상통화장치 DI-PBX 적용대수
				fn_ddvr ("", "", "", 0, 0, 0, 0, ds_h); // DVR 적용대수
				//fn_drvhq("", "", "", 0, 0, 0, 0, ds_h); // 행선층 예약시스템 적용대수 - 2012.01.15 삭제
				fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); // 감시반1
				fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); // 감시반2
				fn_aspd();								// 고속현장 2013.04.03
			}

		} else if ( strColumnId == "ZUAM" ) { // 단가

			// 2013.02.20 주차 - 단가 변경시 원가 재계산
			if ( zprdgbn == "AP_01" ) {
				ds_detail.SetColumn(nRow, "ZCOST", toNumber(ds_detail.GetColumn(nRow, "ZNUMBER")) * toNumber(ds_detail.GetColumn(nRow, "ZUAM")));
				zcost = ds_detail.GetColumn(nRow, "ZCOST");			// 계산된 원가 
			}

			fn_applayHeaderCost(); // detail 합계를 header에 반영
			
		} else if ( strColumnId == "ZCOST" ) { // 원가
			fn_shang(nRow, zeam, zuam, znumber, shang);
			fn_applayHeaderCost(); // detail 합계를 header에 반영

		} else if (strColumnId == "ZEAM") {

			fn_shang(nRow, zeam, zuam, znumber, shang); // 시행율
			fn_applayHeaderCost(); // detail 합계를 header에 반영

		} else if (strColumnId == "SHANGH") {

			ds_template.UnFilter();
			ds_template.Filter("QTSEQ !=" + quote(qtseq)); ds_temp.CopyF(ds_template); ds_template.Copy(ds_temp);

			zprdgbn = ds_detail.GetColumn(nRow, "ZPRDGBN");
			matnr   = ds_detail.GetColumn(nRow, "MATNR"  );

			if (varNewValue == "상해") {
				if      (zprdgbn == "ELV_01" || "ELV_02") zprdgbn = "SHN_01";
				else if (zprdgbn == "ESC_01")             zprdgbn = "SHN_02";
			} else {
				searchRow = ds_class.FindRow("MATNR"    , matnr);
				zprdgbn   = ds_class.GetColumn(searchRow, "CLASS_CD");
			}

			ds_detail.SetColumn(nRow, "ZPRDGBN", zprdgbn);

			ds_cond.ClearData();
			ds_cond.AddRow();
			ds_cond.SetColumn(0, "MANDT" , ds_header.GetColumn(0, "MANDT"));
			ds_cond.SetColumn(0, "QTNUM" , ds_header.GetColumn(0, "QTNUM"));
			ds_cond.SetColumn(0, "QTSER" , ds_header.GetColumn(0, "QTSER"));
			ds_cond.SetColumn(0, "QTSEQ" , qtseq);
			ds_cond.SetColumn(0, "MCLASS", zprdgbn);

			nsfRequest("queryTemplate"
					   , "ses0031n/searchTemplate"
					   , "ds_detail=ds_detail ds_template=ds_template ds_t302=ds_t302"
					   , "ds_template=ds_template ds_error=ds_error ds_t302=ds_t302"
					   , "ATNAM2='EN'"
					   , "fn_afterQuery");
		}
	}

	obj.OnColumnChanged = "ds_detail_OnColumnChanged";
	obj.CanRowPosChange = "ds_detail_CanRowPosChange";
}

function ds_detail_OnRowPosChanged(obj,nOldRow,nRow) {

	if (obj.GetColumn(nOldRow, "FLAG") <> "U") return;  // 변경된 행만 체크	
	if (ChgYn == "N") gfn_SetDatasetChgFlag(obj, nOldRow); // 변경된 자료가 없으면 선택여부,변경구분 초기화
}

function ds_detail_CanRowPosChange(obj,nOldRow,nRow) {

	//fn_template("C", nRow); // 2013.02.01 fn_template 호출 위치를 그리드 클릭이벤트로 변경
}

function ds_template_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex) {

	if (varNewValue != varOldValue) { 	// 값이 변경되었을 경우 변경구분 컬럼 자동 SET 

		btn_qtser_plus.Visible = false; btn_qtser_minus.Visible = false; // 차수+-
		btn_estimate.Visible   = false; // 견적요청

		var obj_flag = obj.GetColumn(nRow, "FLAG");
		var atkla    = obj.GetColumn(nRow, "ATKLA");
		var prd      = obj.GetColumn(nRow, "PRD"  );
		var prh      = obj.GetColumn(nRow, "PRH"  );
		
		//var userRow  = ds_detail.currow; 
		//var qtseq    = ds_detail.GetColumn(userRow, "QTSEQ");
		var qtseq    = obj.GetColumn(nRow, "QTSEQ"); // 2013.02.01 수정
		var chk_flag = "";
		var ds_h     = object(ds_header.ID);
		var obj_user;

		switch (obj.GetID()) {
//			case "ds_template0"	: obj_user = object(ds_user0.ID); break;
			case "ds_template1"	: obj_user = object(ds_user1.ID); break;
			case "ds_template2"	: obj_user = object(ds_user2.ID); break;
			case "ds_template3"	: obj_user = object(ds_user3.ID); break;
			case "ds_template4"	: obj_user = object(ds_user4.ID); break;
			case "ds_template5"	: obj_user = object(ds_user5.ID); break;
			case "ds_template6"	: obj_user = object(ds_user6.ID); break;
			default : break;
		}

		if (obj.GetID() != "ds_template0") {

			obj.OnColumnChanged = "";

			var searchRow = obj_user.searchRow("ATKLA ==" + quote(atkla) + " && PRH ==" + quote(prh) + " && QTSEQ ==" + quote(qtseq));

			if (searchRow == -1) {
				obj_user.addRow();
				obj_user.CopyRow(obj_user.currow, obj, nRow);
				searchRow = obj_user.currow;
			}
			var user_prd  = obj_user.GetColumn(searchRow, "PRD");

			if (prd != null && prd != "" ) {
				if (prd != user_prd) {
					obj_user.SetColumn(searchRow, "FLAG", "U");
					obj_user.SetColumn(searchRow, "PRD", prd);
					obj.SetColumn(nRow, "PRD", prd);
					if (obj_flag == "I") obj.SetColumn(nRow, "FLAG", "I");
					else                 chk_flag = "Y";
				}
			} else {
				if (obj_flag == "I") {
					obj.SetColumn(nRow, "FLAG", "I");
					obj_user.SetColumn(searchRow, "PRD", prd);
				} else {
					chk_flag = "Y";
					if (prd == null || prd == "") user_prd = prd;
					obj_user.SetColumn(searchRow, "FLAG", "U");
					obj_user.SetColumn(searchRow, "PRD", prd);
					obj.SetColumn(nRow, "PRD", user_prd);
				}
			}

			if (chk_flag == "Y") {
				obj.SetColumn(nRow, "CHK" , "1");
				gfn_changeFlag( obj, strColumnID, nRow, "FLAG"); // FLAG 변경 : U
			}

			switch (obj.GetID()) {
				case "ds_template1"	:
					if (atkla == "EL_BASIC" && prh == "EL_ASPC") fn_aspc("", "", "", 0, 0, 0, 0, ds_h); // 시방서
					if (atkla == "ES_BASIC" && prh == "ES_ASPC") fn_aspc("", "", "", 0, 0, 0, 0, ds_h); // 시방서 2012.01.15 추가
					if (atkla == "MW_BASIC" && prh == "MW_ASPC") fn_aspc("", "", "", 0, 0, 0, 0, ds_h); // 시방서 2012.01.15 추가
					if (atkla == "EL_BASIC" && prh == "EL_ASPD") fn_aspd();								// 고속현장 2013.04.03
					break;	// 2013.02.14 변경

				case "ds_template2"	:
					if (atkla == "EL_INSIDE") {
						switch (prh) {
							case "EL_BCPI"  : fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h); break; // LED 총 수량
							case "EL_BCLCD" : fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); break;
							default         : break;
						}
					} else if (atkla == "ES_OPTION") { // 2013.02.05 추가
						switch (prh) {
							case "ES_DSV1"  : fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반1
							case "ES_DSV2"  : fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반2
							default         : break;
						}
					} else if (atkla == "MW_OPTION") { // 2013.02.05 추가
						switch (prh) {
							case "MW_DSV1"  : fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반1
							case "MW_DSV2"  : fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반2
							default         : break;
						}
					}
					break;

				case "ds_template3"	:
					if (atkla == "EL_OUTSIDE") {
						switch (prh) {
							case "EL_CHLCD" : fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); break; // LCD 총 수량
							default :
								if (prh == "EL_CHPI1" || prh == "EL_CHPI2" || prh == "EL_CHPI3" || prh == "EL_CHPI4") {
									fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h); // LED 총 수량
								} break;
						}
					}
					break;

				case "ds_template4"	:
					if (atkla == "EL_OPTION") {
						switch (prh) {
							case "EL_DEPH"  : fn_deph ("", "", "", 0, 0, 0, 0, ds_h); break; // 비상통화장치 DI-PBX 적용대수
							case "EL_DDVR"  : fn_ddvr ("", "", "", 0, 0, 0, 0, ds_h); break; // DVR 적용대수
							//case "EL_DRVHQ" : fn_drvhq("", "", "", 0, 0, 0, 0, ds_h); break; // 행선층 예약시스템 적용대수 - 2012.01.15 삭제
							case "EL_DSV1"  : fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반1
							case "EL_DSV2"  : fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반2

							//해상운임비 20190305 BY LYK
							case "EL_YCON20" : ds_detail.SetColumn(ds_detail.currow, "CONQTY20"  , ParseInt(varNewValue) ); // 40Fit
											   ds_h.SetColumn(0, "CONQTY20"  , ParseInt(round(ds_detail.caseSum("FLAG!='D'", "CONQTY20"   ),0))); // 20Fit
                                               break; 
							case "EL_YCON40" : ds_detail.SetColumn(ds_detail.currow, "CONQTY40"  , ParseInt(varNewValue) ); // 40Fit
											   ds_h.SetColumn(0, "CONQTY40"  , ParseInt(round(ds_detail.caseSum("FLAG!='D'", "CONQTY40"   ),0))); // 40Fit
                                               break; 
							
							default         : break;
						}
					} else if (atkla == "ES_OPTION") { // 2012.01.15 추가
						switch (prh) {
							case "ES_DSV1"  : fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반1
							case "ES_DSV2"  : fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반2
							default         : break;
						}
					} else if (atkla == "MW_OPTION") { // 2012.01.15 추가
						switch (prh) {
							case "MW_DSV1"  : fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반1
							case "MW_DSV2"  : fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반2
							default         : break;
						}
					}
					break;

				default : break;
			}

			obj.OnColumnChanged = "ds_template_OnColumnChanged";
		}
	}
}

// 2020년 박수근 추가 E/L 대수
function fn_coElqty() {
	var znumSum = round(ds_detail.caseSum("FLAG!='D'&&MATNR='L-1000'", "ZNUMBER"),0);
	//alert("znumSum:"+znumSum);
	for (var i=0; i<ds_template0.GetRowCountNF(); i++) { //CO_ELQTY 요청반영(2020.2.4)
		prh = ds_template0.getColumnNF(i,"PRH");		
		if(prh == "CO_ELQTY" ) {
			setDsTemplateFlagNF(ds_template0, i, "PRD", znumSum);
		}
		
        // 해외 국가 코드 처리 기존 소스 추가
		if(prh == "CO_LAND1") {
		    setDsTemplateFlagNF(ds_template0, i, "PRD", ds_header.GetColumn(0,"LAND1"));
		}
	}
}

function fn_shang(nRow, zeam, zuam, znumber, shang) { // 시행율

	if (ParseInt(zeam) == 0) {
		shang = 0;
	} else {
		shang = ParseFloat(zuam) * 100 / ParseFloat(zeam);

		if (shang >= 999) shang = 999;
		else              shang = Round(shang, 1);
	}
	ds_detail.OnColumnChanged = "";
	ds_detail.SetColumn(nRow, "SHANG", shang);
	ds_detail.SetColumn(nRow, "FLAG", "U"   );
	ds_detail.OnColumnChanged = "ds_detail_OnColumnChanged";
}

function fn_aspc(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // 시방서

	var strFilterPrh = "PRH=="+quote("EL_ASPC")+"||PRH=="+quote("ES_ASPC")+"||PRH=="+quote("MW_ASPC");

	ds_user1.UnFilter();
	ds_user1.Filter(strFilterPrh);

	qtseq_co  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
	searchRow = ds_user1.searchRow("QTSEQ=="+quote(qtseq_co)+"&& ("+strFilterPrh+")");
	prd_co    = ds_user1.GetColumn(searchRow, "PRD");

	for (var i = 0 ; i < ds_user1.GetRowCount(); i++)	{
		ds_user1.SetColumn(i, "PRD", prd_co);
	}

	ds_user1.UnFilter();

	ds_h.SetColumn(0, "CO_ASPC", prd_co);
}

function fn_bclcd(prd_co, prd_co2, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // LCD 총 수량

	ds_user2.UnFilter(); ds_user2.Filter("PRH == " + quote("EL_BCLCD"));
	ds_user3.UnFilter(); ds_user3.Filter("PRH == " + quote("EL_CHLCD"));

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_user2.searchRow("PRH =="+quote("EL_BCLCD")+" && QTSEQ == "+quote(qtseq_co));
		prd_co    = trim(ds_user2.GetColumn(searchRow, "PRD"));

		searchRow = ds_user3.searchRow("PRH =="+quote("EL_CHLCD")+" && QTSEQ == "+quote(qtseq_co));
		prd_co2   = trim(ds_user3.GetColumn(searchRow, "PRD"));

		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (Length(prd_co) > 0 || Length(prd_co2) > 0) znumber_sum = ParseInt(znumber_sum) + znumber;
	}
	ds_user2.UnFilter();
	ds_user3.UnFilter();

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_BCLCDTQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_BCLCDTQ", ""         );
}

function fn_bcpi(prd_co, prd_co2, prd_co3, prd_co4, prd_co5, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // LED 총 수량

	ds_user2.UnFilter(); ds_user2.Filter("PRH == " + quote("EL_BCPI"));
	ds_user3.UnFilter(); ds_user3.Filter("Substr(PRH,0,7)==" + quote("EL_CHPI"));

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_user2.searchRow("PRH =="+quote("EL_BCPI")+" && QTSEQ == "+quote(qtseq_co));
		prd_co    = ds_user2.GetColumn(searchRow, "PRD");

		searchRow = ds_user3.searchRow("PRH =="+quote("EL_CHPI1")+" && QTSEQ == "+quote(qtseq_co));
		prd_co2   = ds_user3.GetColumn(searchRow, "PRD");

		searchRow = ds_user3.searchRow("PRH =="+quote("EL_CHPI2")+" && QTSEQ == "+quote(qtseq_co));
		prd_co3   = ds_user3.GetColumn(searchRow, "PRD");

		searchRow = ds_user3.searchRow("PRH =="+quote("EL_CHPI3")+" && QTSEQ == "+quote(qtseq_co));
		prd_co4   = ds_user3.GetColumn(searchRow, "PRD");

		searchRow = ds_user3.searchRow("PRH =="+quote("EL_CHPI4")+" && QTSEQ == "+quote(qtseq_co));
		prd_co5   = ds_user3.GetColumn(searchRow, "PRD");

		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if ( (prd_co == "L12" || prd_co == "L24")
			|| (prd_co2 == "L12" || prd_co2 == "L24")
			|| (prd_co3 == "L12" || prd_co3 == "L24")
			|| (prd_co4 == "L12" || prd_co4 == "L24")
			|| (prd_co5 == "L12" || prd_co5 == "L24")
		) {
			znumber_sum = ParseInt(znumber_sum) + znumber;
		}
	}
	ds_user2.UnFilter();
	ds_user3.UnFilter();

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_CHPITQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_CHPITQ", ""         );
}

function fn_deph(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // 비상통화장치 DI-PBX 적용대수

	ds_user4.UnFilter(); ds_user4.Filter("PRH == " + quote("EL_DEPH"));

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_user4.searchRow("PRH=="+quote("EL_DEPH")+" && (PRD=="+quote("DI")+"||PRD=="+quote("DILP")+") && QTSEQ=="+quote(qtseq_co));
		prd_co    = ds_user4.GetColumn(searchRow, "PRD");
		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (prd_co == "DI"||prd_co == "DILP") znumber_sum = ParseInt(znumber_sum) + znumber;
	}
	ds_user4.UnFilter();

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_DEPHTQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_DEPHTQ", ""         );
}

function fn_ddvr(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // DVR 적용대수

	ds_user4.UnFilter(); ds_user4.Filter("PRH == " + quote("EL_DDVR"));

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_user4.searchRow("PRH =="+quote("EL_DDVR")+" && QTSEQ == "+quote(qtseq_co));
		prd_co    = trim(ds_user4.GetColumn(searchRow, "PRD"));
		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (Length(prd_co) > 0) znumber_sum = ParseInt(znumber_sum) + znumber;
	}
	ds_user4.UnFilter();

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_DDVRTQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_DDVRTQ", ""         );
}

function fn_drvhq(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // 행선층 예약시스템 적용대수

	ds_user4.UnFilter(); ds_user4.Filter("PRH == " + quote("EL_DRVHQ"));

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함
	
		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_user4.searchRow("PRH =="+quote("EL_DRVHQ")+" && QTSEQ == "+quote(qtseq_co));
		prd_co    = trim(ds_user4.GetColumn(searchRow, "PRD"));
		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (Length(prd_co) > 0) znumber_sum = ParseInt(znumber_sum) + (znumber * ParseInt(prd_co));
	}
	ds_user4.UnFilter();

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_DSSQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_DSSQ", ""         );
}

function fn_dsv1(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) {
	// 2013.02.05 엘리베이터는 ds_user4에, ES, MW는 ds_user2에 있으므로 합쳐서 계산
	destroy("ds_temp");
	create("dataset", "ds_temp");
	ds_temp.copy(ds_user2);
	ds_temp.AppendDataset(ds_user4);

	var strFileterPrh = "PRH=="+quote("EL_DSV1")+"||PRH=="+quote("ES_DSV1")+"||PRH=="+quote("MW_DSV1");
	ds_temp.Filter(strFileterPrh);

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_temp.searchRow("QTSEQ == "+quote(qtseq_co) + "&& ("+strFileterPrh+")");
		prd_co    = trim(ds_temp.GetColumn(searchRow, "PRD"));
		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (Length(prd_co) > 0) znumber_sum = ParseInt(znumber_sum) + znumber;

		if (prd_co == null || prd_co == "") cnt_co++;
		else                                prd_max = prd_co; //if (i==ds_detail.GetRowCount()-1) prd_max = ds_user4.Max("PRD");
	}

	if (cnt_co == ds_detail.GetRowCount()) ds_h.SetColumn(0, "CO_DSV1", "");
	else                                   ds_h.SetColumn(0, "CO_DSV1", prd_max);

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_DSV1TQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_DSV1TQ", ""         );
}

function fn_dsv2(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) {
	// 2013.02.05 엘리베이터는 ds_user4에, ES, MW는 ds_user2에 있으므로 합쳐서 계산
	destroy("ds_temp");
	create("dataset", "ds_temp");
	ds_temp.copy(ds_user2);
	ds_temp.AppendDataset(ds_user4);

	var strFileterPrh = "PRH=="+quote("EL_DSV2")+"||PRH=="+quote("ES_DSV2")+"||PRH=="+quote("MW_DSV2");
	ds_temp.Filter(strFileterPrh);

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_temp.searchRow("QTSEQ == "+quote(qtseq_co) + "&& ("+strFileterPrh+")");
		prd_co    = trim(ds_temp.GetColumn(searchRow, "PRD"));
		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (Length(prd_co) > 0) znumber_sum = ParseInt(znumber_sum) + znumber;

		if (prd_co == null || prd_co == "") cnt_co++;
		else                                prd_max = prd_co; //if (i==ds_detail.GetRowCount()-1) prd_max = ds_user4.Max("PRD");
	}

	if (cnt_co == ds_detail.GetRowCount()) ds_h.SetColumn(0, "CO_DSV2", "");
	else                                   ds_h.SetColumn(0, "CO_DSV2", prd_max);

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_DSV2TQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_DSV2TQ", ""         );
}

// 고속현장 2013.04.03
function fn_aspd() {
// 추가로 발생한 공용사양으로 호기별 사양서에 모두 존재하는 경우에 대하여 확인 필요
	var strFilterPrh = "PRH=="+quote("EL_ASPD");
	
	//ds_user1.UnFilter();
	//ds_user1.Filter(strFilterPrh);

	var varAspd   = "";
	var varCheck  = false;
	var searchRow = -1;
	var qtseq_co  = "";

	// 고속 존재여부 확인
	for (var i = 0; i < ds_detail.GetRowCount(); i++) 	{
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 삭제된 행은 제외

		qtseq_co = ds_detail.GetColumn(i, "QTSEQ");

		searchRow = ds_user1.searchRow("QTSEQ=="+quote(qtseq_co)+"&& ("+strFilterPrh+")");
		// 조건이 존재하는 경우
		if (searchRow != -1)	{
			varAspd = ds_user1.GetColumn(searchRow, "PRD");
			if (varAspd == "180" || varAspd == "210" || varAspd == "240")	{
				varCheck = true;
				break;
			}
		}
	}

	// 공용특성(고속현자)에 반영 처리
	var prd = "";
	var ds0 = object(ds_template0.ID);
	var prh    = "";
	var oldPrd = ""; 

	if (varCheck == true)	{
		prd = "Y";
	}

	for (var i = 0; i < ds0.GetRowCountNF(); i++) {

		prh = ds0.GetColumnNF(i, "PRH"  );
		
		if (prh == "CO_ASPD") 	{
			oldPrd = trim(ds0.GetColumnNF(i, "PRD"));

			if (prd != oldPrd) {
				//ds0.SetColumnNF(i, "PRD", prd);
				//ds0.SetColumnNF(i, "FLAG", "U");
				setDsTemplateFlagNF(ds0, i, "PRD", prd);
			}
		}
	}

	ds_user0.Copy(ds0);
}

// 견적일 공통사양 추가 20150821 김선호 
function fn_qtdat() {

	var qtdat  = substr(cal_qtdat.Text,0,4) + substr(cal_qtdat.Text,5,2) + substr(cal_qtdat.Text,8,2) ;
	
	for (var i = 0; i < ds_template0.GetRowCount(); i++) {

		prh = ds_template0.GetColumn(i, "PRH"  );
		prd = ds_template0.GetColumn(i, "PRD"  );
		
		if (prh == "CO_QTDAT" && prd != qtdat) {
			//ds_template0.SetColumn(i, "PRD", qtdat);
			//ds_template0.SetColumn(i, "FLAG", "U");
			setDsTemplateFlag(ds_template0, i, "PRD", qtdat);
		}		
	}
  
}



//교환기 세팅
function fn_dpex() {
	for (var i = 0; i < ds_template4.GetRowCount(); i++) {
		prh = ds_template4.GetColumn(i, "PRH"  );
		
		if (prh == "EL_DPEXQ" && el_dpexq_prc != "") {
			ds_template4.SetColumn(i, "PRD", el_dpexq_prd);
			ds_template4.SetColumn(i, "FLAG", "U");
		}
	}
	
	for (var i = 0; i < ds_template0.GetRowCount(); i++) {
		prh = ds_template0.GetColumn(i, "PRH"  );

		if (prh == "CO_DPEXQ1" && el_dpexq_prc != "") {
			ds_template0.SetColumn(i, "PRD", el_dpexq1);
			ds_template0.SetColumn(i, "FLAG", "U");
		}		

		if (prh == "CO_DPEXQ2" && el_dpexq_prc != "") {
			ds_template0.SetColumn(i, "PRD", el_dpexq2);
			ds_template0.SetColumn(i, "FLAG", "U");
		}		

		if (prh == "CO_DPEXQ3" && el_dpexq_prc != "") {
			ds_template0.SetColumn(i, "PRD", el_dpexq3);
			ds_template0.SetColumn(i, "FLAG", "U");
		}
	}	
	
}




// 현재 조회된 자료의 MAX 순번 구하기
function fn_getMaxSerno() { 
	var max_serno 	= 0;
	var serno 		= 0; 
	for (var i=0;i<ds_detail.GetCount();i++) {
		serno = ds_detail.GetColumn(i, "SERNO");
		if (ToNumber(serno) > ToNumber(max_serno)) max_serno = serno;
	}
	return max_serno;
}

function grd_detail_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,nLLParam,nHLParam) {

	var ds = object(obj.BindDataset);
	
	if (nChar==13) { 	// 엔터키이면 다음 행으로 이동
		ds.row = ds.row + 1;
	} else if (nChar==27)	{ 	// Esc 키이면 변경전 자료로 되돌린다.
		var nCol = obj.GetCellPos();
		gfn_SetOrgColumn(obj, ds.row, nCol);
	} else {
	
		//2021.05 jss : 사양수정시 영업화면진행서순 반영
		var obj_template;
		switch (obj) {
			case "grd_template0" : obj_template = object(ds_template0.ID); break;
			case "grd_template1" : obj_template = object(ds_template1.ID); break;
			case "grd_template2" : obj_template = object(ds_template2.ID); break;
			case "grd_template3" : obj_template = object(ds_template3.ID); break;
			case "grd_template4" : obj_template = object(ds_template4.ID); break;
			case "grd_template5" : obj_template = object(ds_template5.ID); break;
			case "grd_template6" : obj_template = object(ds_template6.ID); break;
			default : break;
		}
		
		var atnam = obj_template.getcolumn(ds.row, "PRH"  );
		var obj_template6 = object(ds_template6.ID); 
		var findRow = obj_template6.FindRow("PRH", "EL_YSTAT");
		if(findRow > -1 ) {
			obj_template6.SetColumn(findRow, "PRD",atnam);
			obj_template6.SetColumn(findRow, "FLAG", "U");
		}
	
		gfn_GrdCellCopyPasteReset(obj, ds, bCtrl, nChar);
	}
}

function grd_detail_OnExpandEdit(obj,nRow,nCell,strVal,nPivotIndex) {

	if (ds_detail.RowCount()==0) return;
	
	switch (nCell) {
		case  5	: 	var mandt = ds_header.GetColumn(0, "MANDT");
		            var zprdgbn = ds_detail.GetColumn(nRow, "ZPRDGBN");
					// 2020 브랜드
					var matnr = ds_detail.GetColumn(nRow, "MATNR");
					if( zprdgbn == 'ELV_01' && F_BRND_FLAG == "Y" ) {
						var arg = "fa_mandt="+quote(ds_header.GetColumn(0, "MANDT"))+" fa_qtnum="+quote(ds_header.GetColumn(0, "QTNUM"))+" fa_gtype="+quote("")+" fa_zprdgbn="+quote(zprdgbn)+" fa_brndcd="+quote("");
						var arr = gfn_openPopUpUrlHdel("COM::Coms01A.xml", true, arg);
						var orgBrndcd = ds_detail.GetColumn(nRow, "BRNDCD");
						if(arr == null) {
							return;
						} else if(Length(arr) == 5) {
							if(orgBrndcd != arr[1]) {
								var flag = ds_detail.GetColumn(nRow, "FLAG");
								if(flag != "I") {
									// 2020 브랜드 사용자 확인 메시지 출력 후
									if (gfn_showConfirm("CI00024", "브랜드 변경 시 해당 브랜드에만 적용 가능한 영업사양 및 관련 금액은 모두 초기화됩니다.") == true) {
										fn_chanageBrand(nRow, arr, orgBrndcd, arr[1]);
									}
								} else {
									fn_chanageBrand(nRow, arr, orgBrndcd, arr[1]);
								}
							} else {
								ds_detail.SetColumn(ds_detail.row, "BRNDSEQ", arr[0]);  // 브랜드차수
								ds_detail.SetColumn(ds_detail.row, "BRNDCD", arr[1]);   // 브랜드코드
								ds_detail.SetColumn(ds_detail.row, "BRNDNM", arr[2]);   // 브랜드명
								ds_detail.SetColumn(ds_detail.row, "GTYPE", arr[3]);    // 기종
								ds_detail.SetColumn(ds_detail.row, "SNDSYS" , arr[4]);  // 시스템전송구분
							}
						}
						break;
					} else {
						var arg = "fa_mandt="+quote(mandt) + " fa_class="+quote(zprdgbn);
						var arr = gfn_openPopUpUrlHdel("COM::Com0220.xml", true, arg);
						if (arr != null && arr != 0) {
							ds_detail.SetColumn(nRow, "GTYPE", arr[6]);
							ds_detail.SetColumn(nRow, "BRNDCD" , "");
							ds_detail.SetColumn(nRow, "BRNDNM" , "");
							ds_detail.SetColumn(nRow, "BRNDSEQ", "000");
						}
					}
                  break;
		default : break;
	}
}

function grd_detail_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex) {

	// 2013.02.01 fn_template 호출 위치를 그리드 클릭이벤트로 변경
	if ( F_CLICKED_ROW != nRow ) {
		F_CLICKED_ROW = nRow;
		fn_template("C", nRow);
	}
	
	var fa_atkla = "";
	var mclass   = ds_detail.GetColumn(nRow, "ZPRDGBN");

	if (zprdgbn == "ELV_01" || zprdgbn == "ELV_02" || zprdgbn == "SHN_01") {
		fa_atkla = quote("EL_BASIC");
	} else if (zprdgbn == "ESC_01" || zprdgbn == "SHN_02") {
		fa_atkla = quote("ES_BASIC");
	} else if (zprdgbn == "MW_01") {
		fa_atkla = quote("MW_BASIC");
	}  else if (zprdgbn == "AP_01") {
		fa_atkla = quote("AP_BASIC");
	} else if (mclass == "PSD_01") { // (2012.12.10)
		fa_atkla = quote("PSD_BASIC");
	}

	var fa_atnam = "";
	var colId    = "";
	var prd      = "";
	var zacapa   = "";
	var matnr    = ds_detail.GetColumn(nRow, "MATNR"  );
	var h        = tab.main.div_header;
	var searchRow;
	
	// 2020 브랜드 입력
	var brndcd  = ds_detail.GetColumn(nRow, "BRNDCD");
	var brndseq = ds_detail.GetColumn(nRow, "BRNDSEQ");

//-----< 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	Start 		
	// 감시반, SP
	// if (matnr == "T-1000" || matnr == "Y-1000") {
	if (nCell == 13 ) {
		if ( matnr == "Y-200" || matnr == "Y-300" || matnr == "Y-400" || matnr == "Y-500") {
			h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); 	// 대수 - 입력불가
		}else	{
			h.grd_detail.SetCellProp("body", nCell, "Edit", "integer");	// 대수 - 숫자입력
		}
//-----> 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	End 

	} else if (nCell==3 || (nCell>=6 && nCell<=12)) {

		if (zprdgbn == "SHN_01") {
			switch (nCell) {
				case  3	: fa_atnam="EL_ACD1" ; colId="ZSAREA"; break; // 판매지역
				case  6	: fa_atnam="EL_AUSE" ; colId="ZUSE"  ; break; // 용도
				case  7	: fa_atnam="EL_AMAN" ; colId="TYPE1" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 인승, 폭
				case  8	: fa_atnam="EL_ACAPA"; colId="ZACAPA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 용량
				case  9	: fa_atnam="EL_ASPD" ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 속도
				case 10	: fa_atnam="EL_AFQ"  ; colId="TYPE3" ; break; // 층수
				case 12	: fa_atnam="EL_AOPEN"; colId="ZOPN"  ; break; // Door 개폐, 길이
				default : break;
			}
		} else if (zprdgbn == "ELV_01" || zprdgbn == "ELV_02") {
			switch (nCell) {
				case  3	: fa_atnam="EL_ACD1" ; colId="ZSAREA"; break; // 판매지역
				case  6	: fa_atnam="EL_AUSE" ; colId="ZUSE"  ; break; // 용도
				case  7	: fa_atnam="EL_AMAN" ; colId="TYPE1" ; break; // 인승, 폭
				case  8	: fa_atnam="EL_ACAPA"; colId="ZACAPA"; break; // 용량
				case  9	: fa_atnam="EL_ASPD" ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // 속도
				case 10	: fa_atnam="EL_AFQ"  ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 층수
				case 11 : fa_atnam="EL_ASTQ" ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 정지층수
				case 12	: fa_atnam="EL_AOPEN"; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // Door 개폐, 길이
				default : break;
			}
		} else if (zprdgbn == "ESC_01") {
			switch (nCell) {
				case  3	: fa_atnam="ES_ALOCAT"; colId="ZSAREA"; break; // 판매지역
				case  7	: fa_atnam="ES_AWID"  ; colId="TYPE1" ; break; // 인승, 폭
				case  9	: fa_atnam="ES_ADEG"  ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // 각도
				case 10	: fa_atnam="ES_ARISE" ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 층수
				case 11 : fa_atnam="ES_ASPE"  ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // 속도
				case 12	: fa_atnam="ES_ALENG" ; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "normal"); break; // Door 개폐, 길이
				default : break;
			}
		} else if (zprdgbn == "SHN_02") {
			switch (nCell) {
				case  3	: fa_atnam="ES_ALOCAT"; colId="ZSAREA"; break; // 판매지역
				case  7	: fa_atnam="ES_AWID"  ; colId="TYPE1" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 인승, 폭
				case  9	: fa_atnam="ES_ADEG"  ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 각도
				case 11 : fa_atnam="ES_ASPE"  ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 속도
				case 12	: fa_atnam="ES_ALENG" ; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break;
				default : break;
			}
		} else if (zprdgbn == "MW_01") {
			switch (nCell) {
				case  3	: fa_atnam="MW_ALOCAT"; colId="ZSAREA"; break; // 판매지역
				case  7	: fa_atnam="MW_AWID"  ; colId="TYPE1" ; break; // 인승, 폭
				case  9	: fa_atnam="MW_ADEG"  ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // 각도
				case 10 : fa_atnam="MW_ARIS"  ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 높이
				case 11	: fa_atnam="MW_ASPE"  ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // 속도
				case 12	: fa_atnam="MW_ALENG" ; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break;
				default : break;
			}
		} else if (mclass == "AP_01") { // (2012.12.10)
			switch (nCell) {
				case  3	: fa_atnam=""       ; colId="ZSAREA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")   ; break; // 판매지역      -> (비활성화)
				case  6	: fa_atnam="AP_AEA" ; colId="ZUSE"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")   ; break; // 용도          -> 승입방향
				case  7	: fa_atnam="AP_AMOD"; colId="TYPE1" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")   ; break; // 인승,폭       -> 모델명
				case  8	: fa_atnam="AP_ACS" ; colId="ZACAPA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")   ; break; // 용량          -> 수용차종
				case  9	: fa_atnam="AP_AQL" ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 속도/각도     -> 단수
				case 10 : fa_atnam="AP_AQC" ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 층수/높이     -> 파렛트수
				case 11	: fa_atnam="AP_AQT" ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 정지층수/속도 -> 리프트수
				case 12	: fa_atnam="AP_AETS"; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")   ; break; // DOOR개폐길이  -> 외부턴
				default : break;
			}
		} else if (mclass == "PSD_01") { // (2012.12.10)
			switch (nCell) {
				case  3	: fa_atnam=""         ; colId="ZSAREA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 판매지역	 	- (비활성화)
				case  6	: fa_atnam=""		  ; colId="ZUSE"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 용도 	        - (비활성화)
				case  7	: fa_atnam="PSD_ANAME"; colId="TYPE1" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "normal"); break; // 인승/폭	 	- 역사명
				case  8	: fa_atnam=""         ; colId="ZACAPA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 용량		 	- (비활성화)
				case  9	: fa_atnam=""         ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 속도/각도		- (비활성화)
				case 10 : fa_atnam=""         ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 층수/높이 		- (비활성화)
				case 11	: fa_atnam=""         ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 정지층수/속도- (비활성화)
				case 12	: fa_atnam=""         ; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // DOOR개폐길이 - (비확성화)
				default : break;
			}
		} else if (matnr == "F-1000") { // 물류 (2012.12.11)
			switch (nCell) {
				case  3	: fa_atnam=""         ; colId="ZSAREA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 판매지역	 	- (비활성화)
				case  6	: fa_atnam=""		  ; colId="ZUSE"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 용도 	        - (비활성화)
				case  7	: fa_atnam=""         ; colId="TYPE1" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 인승/폭	 	- (비활성화)
				case  8	: fa_atnam=""         ; colId="ZACAPA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 용량		 	- (비활성화)
				case  9	: fa_atnam=""         ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 속도/각도		- (비활성화)
				case 10 : fa_atnam=""         ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 층수/높이 		- (비활성화)
				case 11	: fa_atnam=""         ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 정지층수/속도- (비활성화)
				case 12	: fa_atnam=""         ; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // DOOR개폐길이 - (비확성화)
				default : break;
			}
		}

		if ((mclass!="SHN_01" && mclass!="SHN_02" && fa_atnam!="EL_AFQ" && fa_atnam!="EL_ASTQ" && mclass!="AP_01" && mclass!="PSD_01" && matnr != "F-1000") ||
			(mclass=="AP_01" && (fa_atnam=="AP_AEA" || fa_atnam=="AP_ACS" || fa_atnam=="AP_AETS") || fa_atnam=="AP_AMOD") ||
			(mclass=="SHN_01" && (fa_atnam=="EL_AUSE" || fa_atnam=="EL_AOPEN" || fa_atnam=="EL_ACD1"))) {

			if ( fa_atnam == "" ) return;

			if (mclass=="SHN_01") fa_atnam = "SH_" + fa_atnam;

			// (2012.12.10) 모델명이 AE* 시작될 경우에만 승입방향 선택 가능
			var sApModelName = h.grd_detail.GetCellText("Body", nRow, 6);
			sApModelName = iif(length(sApModelName) >= 2, left(sApModelName, 2), "");
			if ( fa_atnam == "AP_AEA" && sApModelName != "AE" ) return;

            // 2020 브랜드
			var arg = " fa_mandt="+G_MANDT+" fa_class="+mclass+" fa_brndcd="+quote(brndcd)+" fa_brndseq="+quote(brndseq)+" fa_atkla="+fa_atkla+" fa_atnam="+quote(fa_atnam)+" fa_where="+quote("");
			var arr = gfn_openPopupUrl("COM::Com0150.xml", true, arg);
			if (arr != null && arr != 0) ds_detail.SetColumn(nRow, colId, Trim(arr[6]));
			
			/* 인승에 따른 용량 셋팅 
			if (fa_atnam="EL_AMAN" && colId == "TYPE1") {

				prd       = ds_detail.GetColumn(nRow, "TYPE1"); // 인승
				searchRow = ds_acapa.SearchRow("ATWRT ==" + quote(prd));
				zacapa    = ds_acapa.GetColumn(searchRow, "ZACAPA");
				ds_detail.SetColumn(nRow, "ZACAPA", zacapa);
				
			   //해외영업 용량 자동셋팅 강슬기 20151029
				if ( trim(prd) = "6" ) {
					ds_detail.SetColumn(nRow, "ZACAPA", "450");
				} else if ( trim(prd) = "7" ) {
					ds_detail.SetColumn(nRow, "ZACAPA", "550");
				} else if ( trim(prd) = "8" ) {
					ds_detail.SetColumn(nRow, "ZACAPA", "630");
				} else if ( trim(prd) = "9" ) {
					ds_detail.SetColumn(nRow, "ZACAPA", "700");
				} else if ( trim(prd) = "10" ) {
					ds_detail.SetColumn(nRow, "ZACAPA", "800");
				} else if ( trim(prd) = "12" ) {
					ds_detail.SetColumn(nRow, "ZACAPA", "900");
				} else if ( trim(prd) = "13" ) {
					ds_detail.SetColumn(nRow, "ZACAPA", "1000");
				} else if ( trim(prd) = "15" ) {
					ds_detail.SetColumn(nRow, "ZACAPA", "1150");
				} else if ( trim(prd) = "18" ) {
					ds_detail.SetColumn(nRow, "ZACAPA", "1350");
				} else if ( trim(prd) = "21" ) {
					ds_detail.SetColumn(nRow, "ZACAPA", "1600");
				}	
				
				prd       = ds_detail.GetColumn(nRow, "ZACAPA");
				//searchRow = ds_template1.SearchRow(filterStr + quote("EL_ACAPA"));
				searchRow = ds_template1.SearchRow("PRH ==" + quote("EL_ACAPA"));
				ds_template1.SetColumn(searchRow, "PRD" , prd);
				ds_template1.SetColumn(searchRow, "FLAG", "U");

				prd       = ds_detail.GetColumn(nRow, "GTYPE");
				//searchRow = ds_template1.SearchRow(filterStr + quote("EL_ATYP"));
				searchRow = ds_template1.SearchRow("PRH ==" + quote("EL_ATYP"));
				ds_template1.SetColumn(searchRow, "PRD" , prd);
				ds_template1.SetColumn(searchRow, "FLAG", "U");
			}
			*/
			// (2012.12.11) 주차 - 모델명이 AE* 가 아닌 경우, 승입방향 초기화
			if ( mclass=="AP_01" && fa_atnam=="AP_AMOD" ) {
				var sApModelName = h.grd_detail.GetCellText("Body", nRow, 6);
				sApModelName = iif(length(sApModelName) >= 2, left(sApModelName, 2), "");
				if ( sApModelName != "AE" ) {
					ds_detail.SetColumn(nRow, "ZUSE", ""); // 승입방향
				}
			}
		}
	} else if (nCell == 14) {
		if ( mclass == "AP_01" || mclass == "PSD_01" ) { // 주차 (2012.12.10), PSD (2012.12.10)
			h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); //단가 - 숫자입력
		}
		else if ( matnr == "F-1000" ) { // 물류 (2012.12.12)
			h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); //단가 - 입력불가
			// 저장여부 확인
			if ( qtnum == null || qtnum == "" ) {
				gfn_showAlert("CW10028"); // 저장버튼을 눌러 수정/추가 작업을 먼저 완료해주세요.
				return;
			}
			// 팝업창에서 원가,견적가 정보 받아서 설정
			var arg = "fa_qtnum=" + qtnum + " fa_qtser=" + qtser + " fa_qtseq=" + qtseq + " fa_gbn='50'";
			arg += " fa_zprgflg=" + ds_header.GetColumn(0, "ZPRGFLG"); // 2012.02.18 추가
			var arr = gfn_openPopUpUrlHdel("SES::Ses0360.xml", true, arg);
			if (arr != null && arr != 0) {
				ds_detail.SetColumn(nRow, "ZUAM" , arr[0]); // 단가
				ds_detail.SetColumn(nRow, "ZCOST", arr[1]); // 원가합계
				ds_detail.SetColumn(nRow, "ZEAM" , arr[2]); // 견적가합계
				ds_detail.SetColumn(nRow, "SHANG", arr[3]); // 시행율
			}
			return;
		}
	} else if (nCell == 15 || nCell == 16) {
		if ( matnr == "F-1000" ) { // 물류 (2012.12.12)
			h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); //단가 - 입력불가
			// 저장여부 확인
			if ( qtnum == null || qtnum == "" ) {
				gfn_showAlert("CW10028"); // 저장버튼을 눌러 수정/추가 작업을 먼저 완료해주세요.
				return;
			}
			// 팝업창에서 원가,견적가 정보 받아서 설정
			var arg = "fa_qtnum=" + qtnum + " fa_qtser=" + qtser + " fa_qtseq=" + qtseq + " fa_gbn='50'";
			arg += " fa_zprgflg=" + ds_header.GetColumn(0, "ZPRGFLG"); // 2012.02.18 추가
			var arr = gfn_openPopUpUrlHdel("SES::Ses0360.xml", true, arg);
			if (arr != null && arr != 0) {
				//ds_detail.SetColumn(nRow, "", arr[0]); // 수량합계
				ds_detail.SetColumn(nRow, "ZCOST", arr[1]); // 원가합계
				ds_detail.SetColumn(nRow, "ZEAM" , arr[2]); // 견적가합계
				ds_detail.SetColumn(nRow, "SHANG", arr[3]); // 시행율
			}
			return;
		}
	}
}

function btn_template_OnClick(obj) {
	var mclass = ds_detail.GetColumn(ds_detail.currow, "ZPRDGBN");
	// 2020 브랜드
	var brndcd  = ds_detail.GetColumn(ds_detail.currow, "BRNDCD");
	var brndseq = ds_detail.GetColumn(ds_detail.currow, "BRNDSEQ");
	var arg = "mode='Q' mclass="+quote(mclass)+" nRow="+quote(ds_detail.currow)+ " brndcd="+quote(brndcd)+" brndseq="+quote(brndseq)+" qtnum="+quote("");
    gfn_openPopUpUrlHdel("SES::Ses0582.xml", true, arg);
}

function cb_vkbur_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex) {

	ds_vkgrp.UnFilter();
	ds_vkgrp.Filter("DTEXT1 == '" + strCode + "'");
	cb_vkgrp.SetFocus();
	cb_vkgrp.index = 0;
}

function fn_zprgflg() {

	var h        = tab.main.div_header;
	var zprgflg  = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태
	var falseCnt = 0;

	if (ds_header.GetUpdate() == 1) falseCnt++;
	if (ds_detail.GetUpdate() == 1) falseCnt++;

	if (flag != "I") {
		switch (spart) {
			case "20" : btn_countRequest.Visible = iif(left(G_USER_ID,1)=="9"||isAlpha(right(G_SAP_USER_VGCD,1)), true, false); break; // 주차-대리점/지사만 원가의뢰 버튼 보임(2012.12.11)
			case "40" : btn_countRequest.Visible = iif(left(G_USER_ID,1)=="9"||isAlpha(right(G_SAP_USER_VGCD,1)), true, false); break; // PSD-대리점/지사만 원가의뢰 버튼 보임(2012.12.11)
			case "30" : btn_countRequest.Visible = iif(left(G_USER_ID,1)=="9"||isAlpha(right(G_SAP_USER_VGCD,1)), true, false); break; // 물류-대리점/지사만 원가의뢰 버튼 보임(2012.12.11)
		}
	}
	
	switch (zprgflg) {
		case "20" : h.cb_waerk.Enable = true;
					if (falseCnt == 0) btn_estimate.Visible = true ;
					else               btn_estimate.Visible = false; break;
		default   : if (zprgflg >= "24" && zprgflg != "25") { // 24 견적반려, 25 견적최종승인

						fn_enable_set();
					} break;
	}
	
	//견적가승인 요청 또는 수주이후 상태에서만 출력버튼 활성화 - 2013.04.12 신미정
	if ( zprgflg == '34' || ToNumber(zprgflg) >= 61 ) {
		div_btn.btn_print.Enable = true;
	}
	else {
		div_btn.btn_print.Enable = false;
	}
	
	//견적작성 상태에서반 저장할 수 있도록 보완 - 2013.04.12 신미정 
	if ( zprgflg == '20' ) {
		div_btn.btn_save.Enable = true;
	}
	else {
		div_btn.btn_save.Enable = false;
	}
	
	
	// (2012.12.11) 주차,PSD,물류 - 원가산출버튼 안보임, Duty 비활성화
	if ( spart == "20" || spart == "40" || spart == "30" ) {
		btn_count.Visible = false;
		d.cb_block.Enable = false;
		d.btn_duty.Enable = false;
	}
}

function fn_queryTemplate() {

	if (flag == "I") {
		btn_plus_OnClick();
		flag = "";
	} else {
		nsfRequest("queryTemplate"
				   , "ses0031n/searchTemplate"
				   , "ds_detail=ds_detail ds_template=ds_template ds_t302=ds_t302"
				   , "ds_template=ds_template ds_error=ds_error ds_t302=ds_t302"
				   , "ATNAM2='EN'"
				   , "fn_afterQuery");

	}
}

function fn_template(popupYn, nRow) {
	if (ds_header.GetColumn(0, "SPART") == "30") return; // 물류는 사양 없음 (2012.12.12)

	fn_createWait("",this); // 처리중입니다. 메시지 처리

	var dstmp = object(ds_temp.ID     );
	var dst   = object(ds_template.ID );
	var ds0   = object(ds_template0.ID); ds0.OnColumnChanged = "";
	var ds1   = object(ds_template1.ID); ds1.OnColumnChanged = "";
	var ds2   = object(ds_template2.ID); ds2.OnColumnChanged = "";
	var ds3   = object(ds_template3.ID); ds3.OnColumnChanged = "";
	var ds4   = object(ds_template4.ID); ds4.OnColumnChanged = "";
	var ds5   = object(ds_template5.ID); ds5.OnColumnChanged = "";
	var ds6   = object(ds_template6.ID); ds6.OnColumnChanged = "";

	var ddvrtq  = ds_header.GetColumn(0, "CO_DDVRTQ" );
	var dephtq  = ds_header.GetColumn(0, "CO_DEPHTQ" );
	var dssq    = ds_header.GetColumn(0, "CO_DSSQ"   );
	var bclcdtq = ds_header.GetColumn(0, "CO_BCLCDTQ");
	var chpitq  = ds_header.GetColumn(0, "CO_CHPITQ" );
	var aspc    = ds_header.GetColumn(0, "CO_ASPC"   );
	var dsv1    = ds_header.GetColumn(0, "CO_DSV1"   );
	var dsv1tq  = ds_header.GetColumn(0, "CO_DSV1TQ" );
	var dsv2    = ds_header.GetColumn(0, "CO_DSV2"   );
	var dsv2tq  = ds_header.GetColumn(0, "CO_DSV2TQ" );

	var mandt      = "";
	var qtnum      = "";
	var qtser      = "";
	var qtseq      = "";
	var prseq      = "";
	var atkla      = "";
	var ds_flag    = "";
	var prd        = "";
	var prh        = "";
	var user_prd   = "";
	var user_flag  = "";
	var h          = "head";
	var t          = "Text";
	var w		   = "Width";
	var searchRow  = 0;
	var matnr      = ds_detail.GetColumn(nRow, "MATNR");
	var user_qtseq = ds_detail.GetColumn(nRow, "QTSEQ");
	var maxprseq   = parseInt(ds_template_add.max("ZTPLSEQ"));
	var ztplseq    = 0;
	var addCnt     = 0;
	var prdCnt     = 0;

	var obj0 = tab.template.div_template.grd_template0;
	var obj1 = tab.template.div_template.grd_template1;
	var obj2 = tab.template.div_template.grd_template2;
	var obj3 = tab.template.div_template.grd_template3;
	var obj4 = tab.template.div_template.grd_template4;
	var obj5 = tab.template.div_template.grd_template5;
	var obj6 = tab.template.div_template.grd_template6;
	var obj7 = tab.template.div_template;

	var fa  = "ATKLA==";
	var fa1 = fa+quote("EL_BASIC"  )+" || "+fa+quote("ES_BASIC" )+" || "+fa+quote("MW_BASIC" )+" || "+fa+quote("PSD_BASIC")+" || "+fa+quote("AP_BASIC")+" || Substr(PRH,0,3)=="+quote("SV_")+" || Substr(PRH,0,3)=="+quote("SP_");
	var fa2 = fa+quote("EL_INSIDE" )+" || "+fa+quote("ES_SAFETY")+" || "+fa+quote("MW_OPTION")+" || "+fa+quote("PSD_SASH" );
	var fa3 = fa+quote("EL_OUTSIDE")+" || "+fa+quote("ES_OPTION")+" || "+fa+quote("MW_SAFETY")+" || "+fa+quote("PSD_STEEL");
	var fa4 = fa+quote("EL_OPTION" )+" || "+fa+quote("ES_EXTER" )+" || "+fa+quote("MW_EXTER" )+" || "+fa+quote("PSD_ELEC" );
	var fa5 = fa+quote("EL_LAYOUT" );
	// 브랜드 입력화 신규 그룹 추가
	var fa6 = fa+quote(F_GROUP_FILTER);
	
	var fq  = "QTSEQ==" + quote(user_qtseq);
	var f1  = "Substr(PRH,0,3)==" + quote("CO_");
	var f2  = "Substr(PRH,0,3)!=" + quote("CO_");
	var fq1 = fq+" && "+f1;
	var fq2 = fq+" && "+f2;

	// 2013.02.18 ★★★★★  START  OLD
	// if (popupYn == "Y" || popupYn == "Duty") {

		// ds_template.UnFilter();
		// dstmp.CopyF(ds_template);

		// for (var i= ds_template.GetRowCount()-1; i>=0; i--) {
			// qtseq  = ds_template.GetColumn(i, "QTSEQ");
			// prh    = ds_template.GetColumn(i, "PRH"  );
			// prdCnt = ds_template.GetColumn(i, "CNT"  );

			// if (qtseq == null || qtseq == "") ds_template.SetColumn(i, "QTSEQ", ds_detail.GetColumn(nRow, "QTSEQ"));
			// if (user_qtseq == qtseq) {
				// switch (popupYn) {
					// case "Duty" : if (Substr(prh, 0, 3) != "CO_") {
									// searchRow = ds_template_add.searchRow("PRH ==" + quote(prh) + " && QTSEQ ==" + quote(user_qtseq));
									// ds_template_add.SetColumn(searchRow, "CNT", prdCnt);
									// ds_template.DeleteRow(i);
								  // } break;
					// default     : ds_template.DeleteRow(i); break;
				// }
			// }
		// }

		// for (var i=0; i<ds_template_add.GetRowCount(); i++) {
			// dst.addRow();
			// dst.CopyRow(dst.currow, "ds_template_add", i);

			// mandt     = dst.GetColumn(dst.currow, "MANDT");
			// qtnum     = dst.GetColumn(dst.currow, "QTNUM");
			// qtseq     = dst.GetColumn(dst.currow, "QTSEQ");
			// qtser     = dst.GetColumn(dst.currow, "QTSER");
			// ds_flag   = dst.GetColumn(dst.currow, "FLAG" );
			// prh       = dst.GetColumn(dst.currow, "PRH"  );

			// searchRow = dstmp.searchRow("PRH ==" + quote(prh) + " && QTSEQ ==" + quote(user_qtseq));
			// user_flag = dstmp.GetColumn(searchRow, "FLAG" );
			// prseq     = dstmp.GetColumn(searchRow, "PRSEQ");

			// dst.SetColumn(dst.currow, "FLAG" , user_flag);
			// dst.SetColumn(dst.currow, "PRSEQ", prseq    ); // dst.SetColumn(dst.currow, "PRSEQ", i);

			// if (mandt == null || mandt == "") dst.SetColumn(dst.currow, "MANDT", ds_detail.GetColumn(nRow, "MANDT"));
			// if (qtnum == null || qtnum == "") dst.SetColumn(dst.currow, "QTNUM", ds_detail.GetColumn(nRow, "QTNUM"));
			// if (qtseq == null || qtseq == "") dst.SetColumn(dst.currow, "QTSEQ", ds_detail.GetColumn(nRow, "QTSEQ"));
			// if (qtser == null || qtser == "") dst.SetColumn(dst.currow, "QTSER", ds_detail.GetColumn(nRow, "QTSER"));
		// }
	// }
	// 2013.02.18 ★★★★★  END  OLD

	// 2013.02.18 ★★★★★  START NEW
	// Template 불러오기 & Duty call 처리 시 값이 변경된 경우에만 상태 Flag 변경
	if  (popupYn == "Y" || popupYn == "Duty") 	{
		ds_template.UnFilter();
		// 동일 MO의 최종 PRSEQ
		ds_temp.CopyF(ds_template.Filter("QTSEQ ==" + quote(user_qtseq)));
		var max_preseq = ds_temp.GetRowCount();

		var pre_flag = "";	// 이전상태
		var pre_prd  = "";	// 이전 값

		ds_template.UnFilter();
		for (var i = 0; i < ds_template_add.GetRowCount(); i++) {
			// PRD에 값이 존재하는지 확인
			prh = ds_template_add.GetColumn(i, "PRH");
			prd = trim(ds_template_add.GetColumn(i, "PRD"));

			// 공통 사양은 제외하고 처리 (최종적으로 공통사양 재 처리함)
			if (substr(prh, 0, 3) != "CO_") 	{
				// 기존 존재하는 
				searchRow = ds_template.searchRow("PRH ==" + quote(prh) + " && QTSEQ ==" + quote(user_qtseq));
				
				if (searchRow > -1)	{
					pre_flag = trim(ds_template.GetColumn(searchRow, "FLAG"));
					pre_prd  = trim(ds_template.GetColumn(searchRow, "PRD"));
					//ds_template.SetColumn(searchRow, "PRD", prd);

					// FLAG 상태 변경 기존값과 다른경우 처리되도록
					if (pre_prd != prd)	{
					    if( pre_prd == null && prd == '' ) {
							//trace(prh+":========= duty 처리 start");
							//trace("ds_template pre_flag:"+pre_flag);
							//trace("ds_template pre_prd:"+pre_prd+", ds_template_add prd:"+prd);
                            //trace("스크립트 버그3");
					        //ds_template.SetColumn(searchRow, "FLAG", "");
					    } else if( pre_prd == '' && prd == null ) {
							//trace(prh+":========= duty 처리 start");
							//trace("ds_template pre_flag:"+pre_flag);
							//trace("ds_template pre_prd:"+pre_prd+", ds_template_add prd:"+prd);
                            //trace("스크립트 버그4");
					        //ds_template.SetColumn(searchRow, "FLAG", "");
					    } else {
							//trace(prh+":========= duty 처리 start");
							//trace("ds_template pre_flag:"+pre_flag);
							//trace("ds_template pre_prd:"+pre_prd+", ds_template_add prd:"+prd);
					        // ds_template.SetColumn(searchRow, "FLAG", "U");
							var dsOrgValue = ds_template.GetOrgColumn(searchRow, "PRD");
							var dsFlag = ds_template.GetColumn(searchRow, "FLAG");
							ds_template.SetColumn(searchRow, "PRD", prd);
							if( dsOrgValue != prd ) {
								if(dsFlag == "I") {
									ds_template.SetColumn(searchRow, "FLAG", "I");
								} else {
									ds_template.SetColumn(searchRow, "FLAG", "U");
								}
							} else if( dsOrgValue == prd ) {
								if(flag == "U") {
									ds_template.SetColumn(searchRow, "FLAG", "");
								}
							}
					    }
					}					
				}
			}
		}
	}
	// 2013.02.18 ★★★★★  END NEW

//	dst.Filter(fq);
	if (popupYn != "C") { ds0.copy(dst); ds1.copy(dst); ds2.copy(dst); ds3.copy(dst); ds4.copy(dst); ds5.copy(dst); ds6.copy(dst);}

	zprdgbn = ds_detail.GetColumn(nRow, "ZPRDGBN");
	
    //공통특성 표기 시 : REMARK 및 해외추가경비, 용도 제외 - 2013.11.22 신미정
	atkla   = " "; ds0.Filter(fa+quote(atkla) + " && Substr(PRH, 0, 7) !=" + quote("SP_TEXT") + " && Substr(PRH, 0, 7) !=" + quote("SP_AUSE"));
	
	// 2020 브랜드 입력 필터 조건 추가
	// DISPTP X: 화면 그리드 표시, '': 화면 미표시
	fq  = fq + " && DISPTP==" + quote("X");
	
	dstmp.CopyF(ds0); ds0.Copy(dstmp); 	ds0.Filter(fq); if(IsValidObject(obj0)) obj0.SetCellProp(h,2,t,"COMMON");

	ds1.Filter(fa1); dstmp.CopyF(ds1); ds1.Copy(dstmp); ds1.Filter(fq);
	ds2.Filter(fa2); dstmp.CopyF(ds2); ds2.Copy(dstmp); ds2.Filter(fq);
	ds3.Filter(fa3); dstmp.CopyF(ds3); ds3.Copy(dstmp); ds3.Filter(fq);
	ds4.Filter(fa4); dstmp.CopyF(ds4); ds4.Copy(dstmp); ds4.Filter(fq);
	ds5.Filter(fa5); dstmp.CopyF(ds5); ds5.Copy(dstmp); ds5.Filter(fq);
	// 2020 브랜드
	ds6.Filter(fa6); dstmp.CopyF(ds6); ds6.Copy(dstmp); ds6.Filter(fq);

	if (zprdgbn == "ELV_01" || zprdgbn == "ELV_02" || zprdgbn == "SHN_01") {

		obj1.Visible=true; obj1.SetCellProp(h,2,t,"BASIC"  );
		obj2.Visible=true; obj2.SetCellProp(h,2,t,"INSIDE" );
		obj3.Visible=true; obj3.SetCellProp(h,2,t,"OUTSIDE");
		obj4.Visible=true; obj4.SetCellProp(h,2,t,"OPTION" );
		obj5.Visible=true; obj5.SetCellProp(h,2,t,"LAYOUT" );
        // 브랜드 신규 그룹 추가
		obj6.Visible=true; obj6.SetCellProp(h,2,t,F_GROUP_TITLE);
		obj0.Visible=true;
		obj0.Left = 2711;  obj7.Scroll = true; // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
		
		// 2020 박수근
		optGroupStyle(tab.template.div_template.grd_template0);
		optGroupStyle(tab.template.div_template.grd_template1);
		optGroupStyle(tab.template.div_template.grd_template2);
		optGroupStyle(tab.template.div_template.grd_template3);
		optGroupStyle(tab.template.div_template.grd_template4);
		optGroupStyle(tab.template.div_template.grd_template5);
		optGroupStyle(tab.template.div_template.grd_template6);

	} else if (zprdgbn == "ESC_01" || zprdgbn == "SHN_02") {

		obj1.Visible=true; obj1.SetCellProp(h,2,t,"BASIC"   );
		obj2.Visible=true; obj2.SetCellProp(h,2,t,"SAFETY"  );	// OPTION -> SAFETY
		obj3.Visible=true; obj3.SetCellProp(h,2,t,"OPTION"  );
		obj4.Visible=true; obj4.SetCellProp(h,2,t,"EXTERIOR");
		obj5.Visible=false;
		obj6.Visible=false;
		obj7.Scroll = true; obj0.Left = 1808;

	} else if (zprdgbn == "MW_01") {

		obj1.Visible=true; obj1.SetCellProp(h,2,t,"BASIC"   );
		obj2.Visible=true; obj2.SetCellProp(h,2,t,"OPTION"  );
		obj3.Visible=true; obj3.SetCellProp(h,2,t,"SAFETY"  );
		obj4.Visible=true; obj4.SetCellProp(h,2,t,"EXTERIOR");
		obj5.Visible=false; 
		obj6.Visible=false; 
		obj7.Scroll = true; obj0.Left = 1808; // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정

	}  else if (zprdgbn == "AP_01") {
		obj1.Visible=true; obj1.SetCellProp(h,2,t,"BASIC");
		obj2.Visible=false;
		obj3.Visible=false;
		obj4.Visible=false;
		obj5.Visible=false; 
		obj6.Visible=false; 
		obj7.Scroll = false; obj0.Left = 455; // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
		obj0.Visible=false; 
		obj7.ResizeScroll(); // (주차인 경우 공통사양 제외) (2012.12.10)

		obj7.cb_block.Enable = true; obj7.btn_duty.Enable = true;
	}  else if (zprdgbn == "PSD_01") {

		obj1.Visible=true; obj1.SetCellProp(h,2,t,"BASIC");
		obj2.Visible=true; obj2.SetCellProp(h,2,t,"SASH" );
		obj3.Visible=true; obj3.SetCellProp(h,2,t,"STEEL");
		obj4.Visible=true; obj4.SetCellProp(h,2,t,"ELEC" );
		obj5.Visible=false; 
		obj6.Visible=false; 
		obj7.Scroll = true; obj0.Left = 1357; // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
		obj0.Visible=false; obj7.ResizeScroll(); // PSD인 경우 공통사양 제외 (2012.12.10)

		obj7.cb_block.Enable = true; obj7.btn_duty.Enable = true;

	}  else if (zprdgbn == "SP_01" || zprdgbn == "SV_01") {

		obj1.Visible = true; obj1.SetCellProp(h,2,t,"BASIC");
		
		//S/P인 경우 특성값 Width 조정- 2013.11.22 신미정
		obj1.SetColProp(0,w,0);
		obj1.SetColProp(1,w,52);
		obj1.SetColProp(2,w,93);
		obj1.SetColProp(3,w,303);			
				
		obj2.Visible = false;
		obj3.Visible = false;
		obj4.Visible = false;
		obj5.Visible = false; 
		obj6.Visible = false; 
		obj7.Scroll  = false; 
		obj0.Left = 455; // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
	}
	
	//S/P인 경우 특성값 Width 조정- 2013.11.22 신미정
	if (zprdgbn != "SP_01" && zprdgbn != "SV_01") {
		obj1.SetColProp(0,w,0);
		obj1.SetColProp(1,w,52);
		obj1.SetColProp(2,w,293);
		obj1.SetColProp(3,w,103);				
	}
		
	obj7.resizeScroll(); // 2013.02.05 공통 안보이는 경우 있어서 스크롤 갱신

	// 2013.02.18 ★★★★★  START 데이터 왜곡을 막기 위해서 주석처리하고 테스트
	/* DB상의 정보를 표시하도록 제거 2013.02.14 */
	// for (var i=0; i<ds0.GetRowCount(); i++) {

		// atkla = ds0.GetColumn(i, "ATKLA");
		// prh   = ds0.GetColumn(i, "PRH"  );

		// if (atkla == " ") {
			// switch (prh) {
				// case "CO_DDVRTQ" : ds0.SetColumn(i, "PRD", ddvrtq ); break;
				// case "CO_DEPHTQ" : ds0.SetColumn(i, "PRD", dephtq ); break;
				// case "CO_DSSQ"   : ds0.SetColumn(i, "PRD", dssq   ); break;
				// case "CO_BCLCDTQ": ds0.SetColumn(i, "PRD", bclcdtq); break;
				// case "CO_CHPITQ" : ds0.SetColumn(i, "PRD", chpitq ); break;
				// case "CO_ASPC"   : ds0.SetColumn(i, "PRD", aspc   ); break;
				// case "CO_DSV1"   : ds0.SetColumn(i, "PRD", dsv1   ); break;
				// case "CO_DSV1TQ" : ds0.SetColumn(i, "PRD", dsv1tq ); break;
				// case "CO_DSV2"   : ds0.SetColumn(i, "PRD", dsv2   ); break;
				// case "CO_DSV2TQ" : ds0.SetColumn(i, "PRD", dsv2tq ); break;
				// default          : break;
			// }
		// }
	// }
	// 2013.02.18 ★★★★★  END 데이터 왜곡을 막기 위해서 주석처리하고 테스트
	

	if (popupYn == ""||popupYn == "Y" || popupYn == "Duty") {		// 2013.02.18 ★★★★★ Duty추가 반영
		ds_user0.ClearData(); ds_user0.copy(ds0);
		ds_user1.ClearData(); ds_user1.copy(ds1);
		ds_user2.ClearData(); ds_user2.copy(ds2);
		ds_user3.ClearData(); ds_user3.copy(ds3);
		ds_user4.ClearData(); ds_user4.copy(ds4);
		ds_user5.ClearData(); ds_user5.copy(ds5);
		ds_user6.ClearData(); ds_user6.copy(ds6);
	}

	if (popupYn == "Y" || popupYn == "C" || popupYn == "A" || popupYn == "Duty") {
		var obj_template;
		var obj_user;
		for (var a=0; a<=6; a++) {
			switch (a) {
				case 0	: obj_template = object(ds0.ID); obj_user = object(ds_user0.ID); break;
				case 1	: obj_template = object(ds1.ID); obj_user = object(ds_user1.ID); break;
				case 2	: obj_template = object(ds2.ID); obj_user = object(ds_user2.ID); break;
				case 3	: obj_template = object(ds3.ID); obj_user = object(ds_user3.ID); break;
				case 4	: obj_template = object(ds4.ID); obj_user = object(ds_user4.ID); break;
				case 5	: obj_template = object(ds5.ID); obj_user = object(ds_user5.ID); break;
				case 6	: obj_template = object(ds6.ID); obj_user = object(ds_user6.ID); break;
				default : break;
			}

			for (var i=0; i<obj_template.GetRowCount(); i++) {
				prd       = obj_template.GetColumn(i, "PRD");
				atkla     = obj_template.GetColumn(i, "ATKLA");
				prh       = obj_template.GetColumn(i, "PRH"  );
				
				searchRow = obj_user.searchRow("ATKLA ==" + quote(atkla) + " && PRH ==" + quote(prh) + " && QTSEQ ==" + quote(user_qtseq));
				user_prd  = Trim(obj_user.GetColumn(searchRow, "PRD"));
				user_flag = Trim(obj_user.GetColumn(searchRow, "FLAG"));
				ds_flag   = obj_template.GetColumn(i, "FLAG");

				if (prd != null && prd != "" ) {
					if (prd != user_prd) {
						switch (user_flag) {
							case "U" : setDsTemplateFlag(obj_template, i, "PRD", user_prd); break;
							default  : setDsTemplateFlag(obj_template, i, "PRD", prd); break;
						}
					}
				} else {
					if (user_prd != null && user_prd != "") {
					    setDsTemplateFlag(obj_template, i, "PRD", user_prd);
					}
				}
			}
		}
	}

	ds0.OnColumnChanged = "ds_template_OnColumnChanged";	
	// 2020 박수근 추가
    fn_coElqty(); // E/L 대수 추가

	ds1.OnColumnChanged = "ds_template_OnColumnChanged";

	/* DB상의 정보를 표시하도록 제거 2013.02.14 */
	for (var i=0; i<ds1.GetRowCount(); i++) {

		atkla = ds1.GetColumn(i, "ATKLA");
		prh   = ds1.GetColumn(i, "PRH"  );

		if (atkla == "EL_BASIC") {
			switch (prh) {
				case "EL_ACD1"  : prd = ds_detail.GetColumn(nRow, "ZSAREA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ATYP"  : prd = ds_detail.GetColumn(nRow, "GTYPE" );  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_AUSE"  : prd = ds_detail.GetColumn(nRow, "ZUSE"  );  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ACAPA" : prd = ds_detail.GetColumn(nRow, "ZACAPA");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ASTQ"  : prd = ds_detail.GetColumn(nRow, "ZLEN"  );  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_AOPEN" : prd = ds_detail.GetColumn(nRow, "ZOPN"  );  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_AMAN"  : prd = ds_detail.GetColumn(nRow, "TYPE1");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ASPD"  : prd = ds_detail.GetColumn(nRow, "TYPE2");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_AFQ"   : prd = ds_detail.GetColumn(nRow, "TYPE3");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ALOCT" : prd = ds_header.GetColumn(0, "ZLZONE");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ADTA"  : prd = ds_header.GetColumn(0, "REGION");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ABRAND"  : prd = ds_detail.GetColumn(nRow, "BRNDCD"); setDsTemplateFlag(ds1, i, "PRD", prd); break;

				case "SH_EL_ATT"   : prd = ds_header.GetColumn(0   , "INCO"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_EL_ACD1"  : prd = ds_detail.GetColumn(nRow, "ZSAREA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_EL_ATYP"  : prd = ds_detail.GetColumn(nRow, "GTYPE" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_EL_AUSE"  : prd = ds_detail.GetColumn(nRow, "ZUSE"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_EL_ACAPA" : prd = ds_detail.GetColumn(nRow, "ZACAPA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_EL_ASTQ"  : prd = ds_detail.GetColumn(nRow, "ZLEN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_EL_AOPEN" : prd = ds_detail.GetColumn(nRow, "ZOPN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_EL_AMAN"  : prd = ds_detail.GetColumn(nRow, "TYPE1" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_EL_ASPD"  : prd = ds_detail.GetColumn(nRow, "TYPE2" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_EL_AFQ"   : prd = ds_detail.GetColumn(nRow, "TYPE3" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				default            : break;
			}
		} else if (atkla == "ES_BASIC") {
			switch (prh) {
				case "ES_ATT"      : prd = ds_header.GetColumn(0   , "INCO"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ALOCA"    : prd = ds_detail.GetColumn(nRow, "SHANGH");
									 switch (prd) {
										case "상해" : prd = "SHAN"; break;
										default     : prd = "DOMA"; break;
									 }
									 ds1.SetColumn(i, "PRD", prd); break;
				case "ES_ALOCAT"   : prd = ds_detail.GetColumn(nRow, "ZSAREA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ATYP"     : prd = ds_detail.GetColumn(nRow, "GTYPE" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_AWID"     : prd = ds_detail.GetColumn(nRow, "TYPE1" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ADEG"     : prd = ds_detail.GetColumn(nRow, "TYPE2" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ARISE"    : prd = ds_detail.GetColumn(nRow, "TYPE3" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ASPE"     : prd = ds_detail.GetColumn(nRow, "ZLEN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;

				case "SH_ES_ATT"   : prd = ds_header.GetColumn(0   , "INCO"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_ES_ALOCA" : prd = ds_detail.GetColumn(nRow, "SHANGH");
									 switch (prd) {
										case "상해" : prd = "SHAN"; break;
										default     : prd = "DOMA"; break;
									 }
									 ds1.SetColumn(i, "PRD", prd); break;
				case "SH_ES_ALOCAT": prd = ds_detail.GetColumn(nRow, "ZSAREA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_ES_ATYP"  : prd = ds_detail.GetColumn(nRow, "GTYPE" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_ES_AWID"  : prd = ds_detail.GetColumn(nRow, "TYPE1" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_ES_ADEG"  : prd = ds_detail.GetColumn(nRow, "TYPE2" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_ES_ARISE" : prd = ds_detail.GetColumn(nRow, "TYPE3" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "SH_ES_ASPE"  : prd = ds_detail.GetColumn(nRow, "ZLEN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				default            : break;
			}
		} else if (atkla == "MW_BASIC") {
			switch (prh) {
				case "MW_ATT"   : prd = ds_header.GetColumn(0   , "INCO"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ALOCA" : prd = ds_detail.GetColumn(nRow, "SHANGH");
								  switch (prd) {
									case "상해" : prd = "SHAN"; break;
									default     : prd = "DOMA"; break;
								  }
								  ds1.SetColumn(i, "PRD", prd); break;
				case "MW_ALOCAT": prd = ds_detail.GetColumn(nRow, "ZSAREA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ATYP"  : prd = ds_detail.GetColumn(nRow, "GTYPE" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_AWID"  : prd = ds_detail.GetColumn(nRow, "TYPE1" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ADEG"  : prd = ds_detail.GetColumn(nRow, "TYPE2" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ARIS"  : prd = ds_detail.GetColumn(nRow, "TYPE3" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ASPE"  : prd = ds_detail.GetColumn(nRow, "ZLEN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ALENG" : prd = ds_detail.GetColumn(nRow, "ZOPN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				default         : break;
			}
		} else if (atkla == "AP_BASIC") { // (2012.12.10)
			switch (prh) {
				case "AP_ATYP"  : prd = ds_detail.GetColumn(nRow, "GTYPE" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AEA"   : prd = ds_detail.GetColumn(nRow, "ZUSE"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AMOD"  : prd = ds_detail.GetColumn(nRow, "TYPE1" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_ACS"   : prd = ds_detail.GetColumn(nRow, "ZACAPA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AQL"   : prd = ds_detail.GetColumn(nRow, "TYPE2" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AQC"   : prd = ds_detail.GetColumn(nRow, "TYPE3" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AQT"   : prd = ds_detail.GetColumn(nRow, "ZLEN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AETS"  : prd = ds_detail.GetColumn(nRow, "ZOPN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				default         : break;
			}
		} else if (atkla == "PSD_BASIC") { // (2012.12.10)
			switch (prh) {
				case "PSD_AFORM1": prd = ds_detail.GetColumn(nRow, "GTYPE"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "PSD_ANAME" : prd = ds_detail.GetColumn(nRow, "TYPE1"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				default          : break;
			}
		}
	}
	

	ds2.OnColumnChanged = "ds_template_OnColumnChanged";
	ds3.OnColumnChanged = "ds_template_OnColumnChanged";
	ds4.OnColumnChanged = "ds_template_OnColumnChanged";

	for (var i=0; i<ds4.GetRowCount(); i++) {

		atkla = ds4.GetColumn(i, "ATKLA");
		prh   = ds4.GetColumn(i, "PRH"  );
		prd   = ds4.GetColumn(i, "PRD"  );

		if (atkla == "EL_OPTION" && Substr(prh, 0, 7) == "EL_FDSP") {
			//ds4.SetColumn(i, "PRD",  Replace(prd, ",", "")); // 2013.01.23 개별입력가격 숫자에 , 있었을 때 오류 확인을 위해서는 조회한 값을 그대로 보여줘야 함
		}
	}

	ds5.OnColumnChanged = "ds_template_OnColumnChanged";

	// 2020 브랜드
	ds6.OnColumnChanged = "ds_template_OnColumnChanged";

	// 2013.02.15
	if ( popupYn == "Duty" ) {
		var ds_h = ds_header;
		fn_aspc("", "", "", 0, 0, 0, 0, ds_h);					// 시방서 처리
		fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h);  // LED 총 수량
		fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); 			// LCD 총 수량
		fn_deph("", "", "", 0, 0, 0, 0, ds_h);					// 비상통화장치 DI-PBX 적용대수
		fn_ddvr("", "", "", 0, 0, 0, 0, ds_h);					// DVR 적용대수
		//fn_drvhq("", "", "", 0, 0, 0, 0, ds_h);					// 행선층 예약시스템 적용대수
		fn_dsv1("", "", "", 0, 0, 0, 0, ds_h);					// 감시반1
		fn_dsv2("", "", "", 0, 0, 0, 0, ds_h);					// 감시반2
		fn_aspd();												// 고속현장 2013.04.03
	}
	fn_qtdat();  //견적일 공통사양 추가 김선호 20150821
	fn_dpex();  //교환기1,2,3세팅 2021.03 jss

	//ds1.Sort("PRHNAME",True); ds2.Sort("PRHNAME",True); ds3.Sort("PRHNAME",True); ds4.Sort("PRHNAME",True);	ds5.Sort("PRHNAME",True);

	fn_destroyWait();
}

function fn_save_header() {

	if (ds_header.rowcount == 0) {
		gfn_showAlert("CW10062"); return; // 견적 Header가 없습니다.
	}

	var mandt   = ds_header.GetColumn(0, "MANDT"  ); // 클라이언트
	var qtnum   = ds_header.GetColumn(0, "QTNUM"  ); // 견적번호
	var qtser   = ds_header.GetColumn(0, "QTSER"  ); // 견적차수
	var qtdat   = ds_header.GetColumn(0, "QTDAT"  ); // 견적일자
	var spart   = ds_header.GetColumn(0, "SPART"  ); // 제품군
	var zprgflg = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태
	var vkbur   = ds_header.GetColumn(0, "VKBUR"  ); // 사업장
	var vkgrp   = ds_header.GetColumn(0, "VKGRP"  ); // 영업그룹
	var zkunnr  = ds_header.GetColumn(0, "ZKUNNR" ); // 담당자
	var kunnr   = ds_header.GetColumn(0, "KUNNR"  ); // 고객번호
	var gsnam   = ds_header.GetColumn(0, "GSNAM"  ); // 공사명
	var inco    = ds_header.GetColumn(0, "INCO"   ); // 인도조건
	var zicif_pprt = ds_header.GetColumn(0, "ZICIF_PPRT"); // 선수금율
    var zicif_1strt = ds_header.GetColumn(0, "ZICIF_1STRT"); // 1차중도금율
    var zicif_2strt = ds_header.GetColumn(0, "ZICIF_2STRT"); // 2차중도금율
    var zicif_rmrt = ds_header.GetColumn(0, "ZICIF_RMRT"); // 잔금율

	var h       = tab.main.div_header;
	var zeam    = "";
//	var shang   = "";
	var matnr   = "";
	var znumber = "";
	var zprdgbn = "";
	var gtype   = "";
	var zuse    = "";
	var type1   = ""; // 인승, 폭
	var type2   = ""; // 속도, 각도
	var type3   = ""; // 층수
	var zacapa  = ""; // 용량
	var zlen    = ""; // 정지층수, 속도
	var zopn    = ""; // 도어개폐
	var arr;
	var cnt     = 0;

	if (qtdat   == null || qtdat   == "00000000") {	cnt++; gfn_showAlert("CW10037"); cal_qtdat.SetFocus();             return; } // 견적일자
	if (spart   == null || spart   == ""        ) {	cnt++; gfn_showAlert("CW10038"); h.cb_spart.SetFocus();            return; } // 제품군
	if (zprgflg == null || zprgflg == ""        ) {	cnt++; gfn_showAlert("CW10041"); h.cb_zprgflg.SetFocus();          return; } // 진행상태
	if (vkbur   == null || vkbur   == ""        ) {	cnt++; gfn_showAlert("CW10042"); h.cb_vkbur.SetFocus();            return; } // 사업장
	if (vkgrp   == null || vkgrp   == ""        ) {	cnt++; gfn_showAlert("CW10043"); h.cb_vkgrp.SetFocus();            return; } // 영업그룹
	if (zkunnr  == null || zkunnr  == ""        ) {	cnt++; gfn_showAlert("CW10047"); h.div_sman.ed_sman_cd.SetFocus(); return; } // 담당자
	if (kunnr   == null || kunnr   == ""        ) {	cnt++; gfn_showAlert("CW10048"); h.ed_kunnr.SetFocus();            return; } // 고객번호
	if (gsnam   == null || gsnam   == ""        ) {	cnt++; gfn_showAlert("CW10049"); h.ed_gsnam.SetFocus();            return; } // 공사명
	if (inco    == null || inco    == ""        ) {	cnt++; gfn_showAlert("CW10093"); h.cb_inco1.SetFocus();            return; } // 인도조건
	if (zicif_pprt == "") { cnt++; gfn_showAlert("선수금율을 입력해주세요."); h.zicif_pprt.SetFocus(); return false; } // 선수금비율 
	if (zicif_1strt == "" || zicif_2strt == "") { cnt++; gfn_showAlert("중도금율을 입력해주세요."); h.zicif_1strt.SetFocus(); return false; } // 중도금비율 
	if (zicif_rmrt == "") { cnt++; gfn_showAlert("잔금율을 입력해주세요."); h.zicif_rmrt.SetFocus(); return false; } // 잔금비율 

	for (var i=0; i<ds_detail.GetRowCount(); i++) {

		zprdgbn = Trim(ds_detail.GetColumn(i, "ZPRDGBN")); // 
		gtype   = Trim(ds_detail.GetColumn(i, "GTYPE"  )); // 기종
		zuse    = Trim(ds_detail.GetColumn(i, "ZUSE"   )); // 용도
		type1   = Trim(ds_detail.GetColumn(i, "TYPE1"  )); // 인승, 폭
		type2   = Trim(ds_detail.GetColumn(i, "TYPE2"  )); // 속도, 각도
		type3   = Trim(ds_detail.GetColumn(i, "TYPE3"  )); // 층수
		zacapa  = Trim(ds_detail.GetColumn(i, "ZACAPA" )); // 용량
		zlen    = Trim(ds_detail.GetColumn(i, "ZLEN"   )); // 정지층수, 속도
		zopn    = Trim(ds_detail.GetColumn(i, "ZOPN"   )); // 도어개폐

		znumber = ds_detail.GetColumn(i, "ZNUMBER");
		zeam    = ds_detail.GetColumn(i, "ZEAM"   );
		shang   = ds_detail.GetColumn(i, "SHANG"  );
		matnr   = ds_detail.GetColumn(i, "MATNR"  );

		if (matnr != "T-1000" && matnr != "Y-1000") {

			if (gtype =="" || gtype ==null) { cnt++; arr=[(i+1),"model"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; }  // 기종
			if (zeam < 0) {cnt++; arr=[(i+1), "견적가"]; gfn_showAlert("견적가에는 음수를 입력할 수 없습니다."); h.grd_detail.SetFocus(); return false;}

			if (zprdgbn == "ELV_01" || zprdgbn == "ELV_02" || zprdgbn == "SHN_01") {

				if (zuse  =="" || zuse  ==null) { cnt++; arr=[(i+1), "purpose"  ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 용도
//				if (type1 =="" || type1 ==null) { cnt++; arr=[(i+1), "person"   ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 인승
				if (type2 =="" || type2 ==null) { cnt++; arr=[(i+1), "speed"    ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 속도
				if (type3 =="" || type3 ==null) { cnt++; arr=[(i+1), "floor"    ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 층수
				if (zacapa=="" || zacapa==null) { cnt++; arr=[(i+1), "capacity" ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 용량
				if (zlen  =="" || zlen  ==null) { cnt++; arr=[(i+1), "stop"     ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 정지층수
				if (zopn  =="" || zopn  ==null) { cnt++; arr=[(i+1), "door open"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 도어개폐

			} else if (zprdgbn == "ESC_01" || zprdgbn == "SHN_02") {

				if (type1 =="" || type1 ==null) { cnt++; arr=[(i+1), "width" ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 폭
				if (type2 =="" || type2 ==null) { cnt++; arr=[(i+1), "angle" ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 각도
				if (type3 =="" || type3 ==null) { cnt++; arr=[(i+1), "height"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 높이
				if (zlen  =="" || zlen  ==null) { cnt++; arr=[(i+1), "speed" ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 속도

			} else if (zprdgbn == "MW_01") {

				if (type1 =="" || type1 ==null) { cnt++; arr=[(i+1), "width" ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 폭
				if (type2 =="" || type2 ==null) { cnt++; arr=[(i+1), "angle" ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 각도
				if (type3 =="" || type3 ==null) { cnt++; arr=[(i+1), "height"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 높이
				if (zlen  =="" || zlen  ==null) { cnt++; arr=[(i+1), "speed" ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 속도
				if (zopn  =="" || zopn  ==null) { cnt++; arr=[(i+1), "length"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 길이

			} else if (zprdgbn == "AP_01") {

				if (Substr(type1, 0, 2) == "AE") {
					if (zuse=="" || zuse==null) { cnt++; arr=[(i+1), "승입방향"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 승입방향
				}
				if (zacapa=="" || zacapa==null) { cnt++; arr=[(i+1), "수용차종"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 수용차종
				if (type1 =="" || type1 ==null) { cnt++; arr=[(i+1), "모델명"  ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 모델명
				if (type2 =="" || type2 ==null) { cnt++; arr=[(i+1), "단수"    ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 단수
				if (type3 =="" || type3 ==null) { cnt++; arr=[(i+1), "파렛트수"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 파렛트수
				if (zlen  =="" || zlen  ==null) { cnt++; arr=[(i+1), "리프트수"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 리프트수
				if (zopn  =="" || zopn  ==null) { cnt++; arr=[(i+1), "외부턴"  ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 외부턴

			} else if (zprdgbn == "PSD_01") {
				if (type1 =="" || type1 ==null) { cnt++; arr=[(i+1), "역사명"  ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; } // 역사명
			}

			if (znumber=="" || znumber==null || Round(znumber, 0) ==0) {
				cnt++; arr=[(i+1), "units"   ]; gfn_showAlert("CW10034", arr); h.grd_detail.SetFocus(); return; // 대수
			}
			if (zprgflg >= "31" && (zeam=="" || zeam==null || Round(zeam, 0) ==0)) {
				cnt++; arr=[(i+1), "estimate"]; gfn_showAlert("CW10034", arr); h.grd_detail.SetFocus(); return; // 견적가
			}
		}
	}

	if (cnt==0) return true;
	else        return false;
}

function fn_save_template() {
	var iu_flag      = "";
	var qtnum        = ds_header.GetColumn(0, "QTNUM");
	var qtser        = ds_header.GetColumn(0, "QTSER");
	var qtseq        = "";
	var prd          = "";
	var prh          = "";
	var atkla        = "";
	var mclass       = "";
	var matnr        = "";
	var j            = 0;
	var detail_qtseq = "";
	var detail_flag  = "";
	var obj;

	// 공용사양의 고속현장 추가에 따른 기 Data의 일치화를 위한 재 호출
	// 고속현장 2013.04.03
	fn_aspd();

	ds_template_save.ClearData();
	
	// hsi 생각. temp에 있는 data를 굳이 deleterow를 해야 하는가?? java단 처리 가능하지 않은가?.
	// 이 부분의 로직은 java단에서 처리해도 될것 같다.
	/*  2020 브랜드 입력화 삭제 버튼 수행 시 바로 데이터 삭제 처리하여 주석 처리함
	for (var a=0; a<ds_detail.GetRowCount(); a++) {
		detail_flag  = ds_detail.GetColumn(a, "FLAG"  );
		detail_qtseq = ds_detail.GetColumn(a, "QTSEQ" );
		mclass       = ds_detail.GetColumn(a, "MCLASS");
		matnr        = ds_detail.GetColumn(a, "MATNR" );

		if (detail_flag == "D") {
			for (var b= ds_template.GetRowCount()-1; b>=0; b--) {
				qtseq = ds_template.GetColumn(b, "QTSEQ");
				if (detail_qtseq == qtseq) ds_template.DeleteRow(b);
			}
			// 2013.02.18 ★★★★★
			for ( var b = ds_template0.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template0.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template0.DeleteRow(b);
			}
			for ( var b = ds_template1.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template1.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template1.DeleteRow(b);
			}
			for ( var b = ds_template2.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template2.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template2.DeleteRow(b);
			}
			for ( var b = ds_template3.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template3.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template3.DeleteRow(b);
			}
			for ( var b = ds_template4.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template4.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template4.DeleteRow(b);
			}
			for ( var b = ds_template5.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template5.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template5.DeleteRow(b);
			}
			// 2013.02.18 ★★★★★
		}
	}
	*/

	for (var a=0; a<=6; a++) {
		switch (a) {
			case 0	: obj = object(ds_template0.ID); break;
			case 1	: obj = object(ds_template1.ID); break;
			case 2	: obj = object(ds_template2.ID); break;
			case 3	: obj = object(ds_template3.ID); break;
			case 4	: obj = object(ds_template4.ID); break;
			case 5	: obj = object(ds_template5.ID); break;
			case 6	: obj = object(ds_template6.ID); break;
			default : break;
		}

		//obj.UnFilter();

        // 2020 브랜드 입력 처리 하면서 로직 변경
        // 공통사양 항목 중 화면 이벤트에 의해서 자동 변경되지 않는 항목이 존재하므로
        // 최종 저장 시점에 공통항목의 데이터를 만들어 DB에 반영해 줘야 한다.
		for (var i=0; i<obj.GetRowCountNF(); i++) {
			atkla   = obj.GetColumnNF(i, "ATKLA");
			prh     = obj.GetColumnNF(i, "PRH"  );
			if (prh == "CO_DDVRTQ" || prh == "CO_DEPHTQ" || prh == "CO_DSSQ" || prh == "CO_BCLCDTQ" ||
			    prh == "CO_CHPITQ" || prh == "CO_ASPC"   || prh == "CO_DSV1" || prh == "CO_DSV1TQ"  ||
			    prh == "CO_DSV2"   || prh == "CO_DSV2TQ") {
				if (atkla == " ") {
					switch (prh) {
						case "CO_DDVRTQ" : prd = ds_header.GetColumn(0, "CO_DDVRTQ" ); break;
						case "CO_DEPHTQ" : prd = ds_header.GetColumn(0, "CO_DEPHTQ" ); break;
						case "CO_DSSQ"   : prd = ds_header.GetColumn(0, "CO_DSSQ"   ); break;
						case "CO_BCLCDTQ": prd = ds_header.GetColumn(0, "CO_BCLCDTQ"); break;
						case "CO_CHPITQ" : prd = ds_header.GetColumn(0, "CO_CHPITQ" ); break;
						case "CO_ASPC"   : prd = ds_header.GetColumn(0, "CO_ASPC"   ); break;
						case "CO_DSV1"   : prd = ds_header.GetColumn(0, "CO_DSV1"   ); break;
						case "CO_DSV1TQ" : prd = ds_header.GetColumn(0, "CO_DSV1TQ" ); break;
						case "CO_DSV2"   : prd = ds_header.GetColumn(0, "CO_DSV2"   ); break;
						case "CO_DSV2TQ" : prd = ds_header.GetColumn(0, "CO_DSV2TQ" ); break;
						default          : prd = obj.GetColumnNF(i, "PRD"); break;
					}
					// 값을 변경 처리한다.
					setDsTemplateFlagNF(obj, i, "PRD", prd);
				}
            }

            iu_flag = obj.GetColumnNF(i, "FLAG" );
            prd = obj.GetColumnNF(i, "PRD");
            if(iu_flag == "U" || Length(prd) > 0) {
				var nRow = ds_template_save.AddRow();
				ds_template_save.SetColumn(nRow, "FLAG"  , iu_flag                   );
				ds_template_save.SetColumn(nRow, "MANDT" , obj.GetColumnNF(i, "MANDT" ));
				ds_template_save.SetColumn(nRow, "PRH"   , prh);
				ds_template_save.SetColumn(nRow, "PRD"   , prd);
				ds_template_save.SetColumn(nRow, "QTNUM" , qtnum                     );
				ds_template_save.SetColumn(nRow, "QTSER" , qtser                     );
				ds_template_save.SetColumn(nRow, "QTSEQ" , obj.GetColumnNF(i, "QTSEQ" ));
				ds_template_save.SetColumn(nRow, "PRSEQ" , obj.GetColumnNF(i, "PRSEQ" ));
            }
		}
	}
}

function btn_estimate_OnClick(obj) {

	if (Confirm("If you request this quote, You can't modify it!\nAre you sure?") == true) {

		ds_header.SetColumn(0, "ZPRGFLG", "27"); // 27 견적요청
		nsfRequest("saveHeaderFlag", "ses0031/updateHeaderFlag", "ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterSave");
	}
}

function btn_popup_OnClick(obj) {

	var spart = ds_header.GetColumn(0, "SPART"); // 제품군
	var kunnr = ds_header.GetColumn(0, "KUNNR");

	var arg = "branch="+quote("branch")+" popupYn="+quote("Y")+" spart="+quote(spart)+" kunnr="+quote(kunnr)+" zkunnr="+quote(zkunnr)+" zkunnrNm="+quote(zkunnrNm);
	var arr = gfn_openPopUpUrlHdel("SES::Ses0032E.xml", true, arg);

	if (arr != null && arr != 0) btn_plus_OnClick("", arr);
}

function btn_common_OnClick(obj) {
	var arr = gfn_openPopUpUrlHdel("COM::Coms019.xml", true, '');
	if (arr != null && arr != 0) {
		var matnr = arr[0];
		btn_plus_OnClick(matnr);

		ds_detail.SetColumn(ds_detail.row, "MATNR", arr[0]); // 자재번호
		ds_detail.SetColumn(ds_detail.row, "GTYPE", arr[1]); // 기종
	}
}

function tab_OnChanged(obj,nOldIndex,nNewindex) {

	if (nNewindex == 1 && ds_detail.GetRowCount() == 0) {
		gfn_showAlert("CW10063"); // 견적 Detail이 없습니다.
		tab.TabIndex = 0;
	}
}

// 선택한 row의 CNT값이 0 이상일 경우 수정불가(팝업으로만 선택)
function grd_template_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex) {

	var obj_template;

	switch (obj) {
		case "grd_template0" : obj_template = object(ds_template0.ID); break;
		case "grd_template1" : obj_template = object(ds_template1.ID); break;
		case "grd_template2" : obj_template = object(ds_template2.ID); break;
		case "grd_template3" : obj_template = object(ds_template3.ID); break;
		case "grd_template4" : obj_template = object(ds_template4.ID); break;
		case "grd_template5" : obj_template = object(ds_template5.ID); break;
		case "grd_template6" : obj_template = object(ds_template6.ID); break;
		default : break;
	}

	var fa_atkla = obj_template.getcolumn(nRow, "ATKLA");
	var fa_atnam = obj_template.getcolumn(nRow, "PRH"  );

	if (obj_template.getColumn(nRow, "CNT") > 0 ||
	   (fa_atkla == "EL_BASIC" && (fa_atnam == "EL_AFQ" || fa_atnam == "EL_ASTQ")) ||
	   (fa_atkla == "MW_BASIC" && (fa_atnam=="MW_ATYP"  || fa_atnam=="MW_ALOCAT" || fa_atnam=="MW_ALOCA" || fa_atnam=="MW_AWID" || fa_atnam=="MW_ASPE" || fa_atnam=="MW_ADEG" ||
								   fa_atnam=="MW_ARIS"  || fa_atnam=="MW_ALENG"  || fa_atnam=="MW_ATT" )) ||
	   (fa_atkla == " "        && (fa_atnam=="CO_DDVRTQ" || fa_atnam=="CO_DEPHTQ" || fa_atnam=="CO_DSSQ"   || fa_atnam=="CO_BCLCDTQ" || fa_atnam=="CO_CHPITQ" ||
								   fa_atnam=="CO_ASPC"   || fa_atnam=="CO_DSV1"   || fa_atnam=="CO_DSV1TQ" || fa_atnam=="CO_DSV2"    || fa_atnam=="CO_DSV2TQ" ||
								   fa_atnam=="CO_ASPD"   || fa_atnam=="CO_LAND1"  || fa_atnam=="CO_ELQTY")) ||		// 고속현장 2013.04.03
	   (fa_atkla == "AP_BASIC" && (fa_atnam=="AP_ATYP"   || fa_atnam=="AP_AEA"    || fa_atnam=="AP_AMOD"   || fa_atnam=="AP_ACS"     || 
	                               fa_atnam=="AP_AQL"    || fa_atnam=="AP_AQC"    || fa_atnam=="AP_AQT"    || fa_atnam=="AP_AETS"))   || // (2012.12.10)
	   (fa_atkla == "PSD_BASIC" && (fa_atnam == "PSD_ANAME")) // (2012.12.10)
	   ) {
	    obj.Editable = false;

	} else {
		if (zprgflg=="24") obj.Editable = false;
		else               obj.Editable = true;
	}
}

function grd_template() {

	switch (zprgflg) {
		case "24" : gfn_showAlert("CW10075"); break; // CW10075 진행상태가 견적반려입니다. 입력할 수 없습니다.
		default : break;
	}
	if (zprgflg=="24") return false;
	else return true;
}

function grd_template_OnCellDblClick(obj,nRow,nCell,nX,nY,nPivotIndex) {

	var obj_template;

	switch (obj) {
		case "grd_template0" : obj_template = object(ds_template0.ID); break;
		case "grd_template1" : obj_template = object(ds_template1.ID); break;
		case "grd_template2" : obj_template = object(ds_template2.ID); break;
		case "grd_template3" : obj_template = object(ds_template3.ID); break;
		case "grd_template4" : obj_template = object(ds_template4.ID); break;
		case "grd_template5" : obj_template = object(ds_template5.ID); break;
		case "grd_template6" : obj_template = object(ds_template6.ID); break;
		default : break;
	}

	if (grd_template() == false) return;

	var atkla = obj_template.getcolumn(nRow, "ATKLA");
	var atnam = obj_template.getcolumn(nRow, "PRH"  );

    // 2020 박수근
    if(atnam == 'OPT_GROUP_TITLE' || obj_template.getcolumn(nRow, "MODITP") == '') {
        return;
    }

	switch (atkla) {
		case "EL_BASIC" : if (atnam == "EL_ABRAND" || atnam=="EL_ATYP" || atnam=="EL_AUSE" || atnam=="EL_AMAN"  || atnam=="EL_ACAPA" || atnam=="EL_ASPD" || atnam=="EL_ATT" ||
							  atnam=="EL_AFQ"  || atnam=="EL_ASTQ" || atnam=="EL_AOPEN" || atnam=="EL_ALOCT" || atnam=="EL_ADTA" || atnam=="EL_ACD1") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } else if (atnam=="SH_EL_ATYP" || atnam=="SH_EL_AUSE" || atnam=="SH_EL_AMAN"  || atnam=="SH_EL_ACAPA" || atnam=="SH_EL_ASPD" || atnam=="SH_EL_ATT" ||
									 atnam=="SH_EL_AFQ"  || atnam=="SH_EL_ASTQ" || atnam=="SH_EL_AOPEN" || atnam=="SH_EL_ALOCT" || atnam=="SH_EL_ADTA" || atnam=="SH_EL_ACD1") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case "ES_BASIC" : if (atnam=="ES_ATYP" || atnam=="ES_ALOCAT" || atnam=="ES_ALOCA" || atnam=="ES_AWID" || atnam=="ES_ASPE" || atnam=="ES_ADEG" ||
							  atnam=="ES_ARISE" || atnam=="ES_ATT") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } else if (atnam=="SH_ES_ATYP" || atnam=="SH_ES_ALOCAT" || atnam=="SH_ES_ALOCA" || atnam=="SH_ES_AWID" || atnam=="SH_ES_ASPE" ||
							  atnam=="SH_ES_ARISE" || atnam=="SH_ES_ATT") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case "MW_BASIC" : if (atnam=="MW_ATYP" || atnam=="MW_ALOCAT" || atnam=="MW_ALOCA" || atnam=="MW_AWID" || atnam=="MW_ASPE" || atnam=="MW_ADEG" ||
							  atnam=="MW_ARIS" || atnam=="MW_ALENG" || atnam=="MW_ATT") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case " "        : if (atnam=="CO_DDVRTQ" || atnam=="CO_DEPHTQ" || atnam=="CO_DSSQ"   || atnam=="CO_BCLCDTQ" || atnam=="CO_CHPITQ" ||
							  atnam=="CO_ASPC"   || atnam=="CO_DSV1"   || atnam=="CO_DSV1TQ" || atnam=="CO_DSV2"    || atnam=="CO_DSV2TQ" ||
							  atnam=="CO_ASPD"   || atnam=="CO_LAND1"  || atnam=="CO_ELQTY") {	// 고속현장 2013.04.03
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case "AP_BASIC" : // (2012.12.10)
						  if (atnam=="AP_ATYP" || atnam=="AP_AEA" || atnam=="AP_AMOD" || atnam=="AP_ACS" || atnam=="AP_AQL" || atnam=="AP_AQC" || atnam=="AP_AQT" || atnam=="AP_AETS") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case "PSD_BASIC": // (2012.12.10)
						  if (atnam=="PSD_AFORM1" || atnam=="PSD_ANAME") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		default         : break;
	}

	if (obj_template.getColumn(nRow, "CNT") == 0) {
		obj.Editable = true; return;
	}

	var fa_atkla = atkla;
	var fa_atnam = atnam;
	// 2020 브랜드
	var fa_brndcd  = ds_detail.GetColumn(ds_detail.currow, "BRNDCD");
	var fa_brndseq = ds_detail.GetColumn(ds_detail.currow, "BRNDSEQ");
	
	// 2020 브랜드
	var arg = " fa_mandt = "+quote(G_MANDT)+" fa_class = "+quote(zprdgbn)+" fa_brndcd="+quote(fa_brndcd)+" fa_brndseq="+quote(fa_brndseq)+" fa_atkla = "+quote(fa_atkla)+" fa_atnam = "+quote(fa_atnam)+" fa_where = "+quote("");
	var arr = gfn_openPopupUrl("COM::Com0150.xml", true, arg);
	if (arr != null && arr != 0){ 
		obj_template.SetColumn(nRow, "PRD", arr[6]);
		
		//2021.05 jss : 사양수정시 영업화면진행서순 반영
		var obj_template6 = object(ds_template6.ID); 
		var findRow = obj_template6.FindRow("PRH", "EL_YSTAT");
		if(findRow > -1 ) {
			obj_template6.SetColumn(findRow, "PRD",atnam);
			obj_template6.SetColumn(findRow, "FLAG", "U");
		}
	}
}

function btn_qtser_plus_OnClick(obj) {

	var qtnum = ds_header.GetColumn(0, "QTNUM"); // 견적번호

	if (qtnum == null || qtnum == "") {
		gfn_showAlert("CW10065"); return; // 견적번호가 없습니다.
	} else {
		if (gfn_showConfirm("CW10067") == true)
			fn_qtser("A"); // 차수를 증가하시겠습니까?
	}
}

function btn_qtser_minus_OnClick(obj) {
	
	var qtnum   = ds_header.GetColumn(0, "QTNUM"  ); // 견적번호
	var zprgflg = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태

	if (qtnum == null || qtnum == "") {
		gfn_showAlert("CW10065"); return; // 견적번호가 없습니다.
	} else if (zprgflg >= "50") { // 50 입찰
		gfn_showAlert("CW00072"); return; // 삭제가 불가한 데이터입니다. Data cannot be deleted
	} else {
		if (gfn_showConfirm("CI00015", "sequence") == true) fn_qtser("D"); // 차수를 삭제하시겠습니까?
	}
}

function fn_qtser(detail_flag) {

	var vSvcId = "saveQtserAdd";

	fn_createWait("",this); // 처리중입니다. 메시지 처리

	if(detail_flag == "D")
		vSvcId = "saveQtserDel";

	nsfRequest(  vSvcId
			   , "ses0031/saveQtser"
			   , "ds_header=ds_header ds_detail=ds_detail"
			   , "ds_header=ds_header ds_error=ds_error"
			   , "qtser_flag=" + quote(detail_flag)			// A: 추가, D:삭제
			   , "fn_afterSave"
			   );

	// ds_header.OnColumnChanged = "";
	// ds_header.OnRowPosChanged = "";
	// ds_header.SetColumn(0, "FLAG", detail_flag);
	// ds_header.OnColumnChanged = "ds_header_OnColumnChanged";
	// ds_header.OnRowPosChanged = "ds_header_OnRowPosChanged";
				
	// ds_detail.OnColumnChanged = "";
	// ds_detail.CanRowPosChange = "";
	// ds_detail.OnRowPosChanged = "";

	// for (var i=0; i<ds_detail.GetRowCount(); i++) { ds_detail.SetColumn(i, "FLAG", detail_flag); }

	// ds_detail.OnColumnChanged = "ds_detail_OnColumnChanged";
	// ds_detail.CanRowPosChange = "ds_detail_CanRowPosChange";
	// ds_detail.OnRowPosChanged = "ds_detail_OnRowPosChanged";

	// fn_createWait("",this); // 처리중입니다. 메시지 처리
	// ds_template_save.Copy(ds_detail);
	// nsfRequest("saveHeader", "ses0031/saveHeader", "ds_header=ds_header ds_detail=ds_detail ds_template=ds_template_save"
				// , "ds_header=ds_header ds_error=ds_error", "", "fn_afterSave");
}

function fn_enable_set() {

	var zprgflg  = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태
	var h = tab.main.div_header;


	btn_estimate.Visible = false;
	cal_qtdat.Enable     = false;
	
	h.cb_inco1.Enable   = false;
	if (h.cb_zprgflg.Value == "20")	{
		h.cb_waerk.Enable   = true;
	}else	{
		h.cb_waerk.Enable   = false;
	}

	h.ed_inco2.Enable   = false;
	h.ed_dev.Enable     = false;
	h.div_sprmk.Enable  = false;
	h.btn_popup.Enable  = false;
	h.btn_plus.Enable   = false;
	h.btn_minus.Enable  = false; //	h.btn_common.Enable = false;
	h.cal_deldat.Enable = false;
	
	h.grd_detail.OnCellClick  = "";
	if ( ds_header.GetColumn(0, "SPART") == "30" ) h.grd_detail.OnCellClick = "grd_detail_OnCellClick"; // 2013.02.18
	
	h.grd_detail.OnExpandEdit = "";

	switch (zprgflg) {
		case "62" : btn_qtser_plus.Visible = true;  btn_qtser_minus.Visible = true ; break;
		default   : btn_qtser_plus.Visible = false; btn_qtser_minus.Visible = false; break;
	}

	switch (zprgflg) {
		case "32" : for (var i=0; i<h.grd_detail.GetColCount(); i++) {
						if (i!=13 && i!=14) h.grd_detail.SetCellProp("body", i, "Edit", "none");
					} break;
		default   : for (var i=0; i<h.grd_detail.GetColCount(); i++) {
						h.grd_detail.SetCellProp("body", i, "Edit", "none");
					} break;
	}

	var obj0 = tab.template.div_template.grd_template0; obj0.Editable = false; obj0.OnCellPosChanged = ""; obj0.OnCellDblClick = "";
	var obj1 = tab.template.div_template.grd_template1; obj1.Editable = false; obj1.OnCellPosChanged = ""; obj1.OnCellDblClick = "";
	var obj2 = tab.template.div_template.grd_template2; obj2.Editable = false; obj2.OnCellPosChanged = ""; obj2.OnCellDblClick = "";
	var obj3 = tab.template.div_template.grd_template3; obj3.Editable = false; obj3.OnCellPosChanged = ""; obj3.OnCellDblClick = "";
	var obj4 = tab.template.div_template.grd_template4; obj4.Editable = false; obj4.OnCellPosChanged = ""; obj4.OnCellDblClick = "";
	var obj5 = tab.template.div_template.grd_template5; obj5.Editable = false; obj5.OnCellPosChanged = ""; obj5.OnCellDblClick = "";
	var obj6 = tab.template.div_template;

	obj6.btn_template.Enable = false;
}

function btn_qtser_plus_OnMouseOver(obj,nX,nY) {
	obj.ToolTipText = "차수 증가";
}

function btn_estimate_OnMouseOver(obj,nX,nY) {
	obj.ToolTipText = "견적 요청";
}

function btn_template_OnMouseOver(obj,nX,nY) {
	obj.ToolTipText = "템플릿 불러오기";
}

function btn_popup_OnMouseOver(obj,nX,nY) {
	obj.ToolTipText = "수주계획 추가";
}

// ToolTipText 표시
function grd_detail_OnMouseOver(obj,nPosX,nPosY,nRow,nCell,nPivotIndex) {
/*
	var text = "";

	if ( nRow == -1) {
		switch (nCell) {
			case  1 : text = "변경";          break;
			case  2 : text = "국내/상해";     break;
			case  3 : text = "자재번호";      break;
			case  4 : text = "기종";          break;
			case  5 : text = "용도";          break;
			case  6 : text = "인승/폭";       break;
			case  7 : text = "용량";          break;
			case  8 : text = "속도";          break;
			case  9 : text = "층수/각도";     break;
			case 10 : text = "정지충수/층고"; break;
			case 11 : text = "Door개폐/길이"; break;
			case 12 : text = "대수";          break;
			case 13 : text = "견적가";        break;
			case 14 : text = "수주계획번호";  break;
			case 15 : text = "비고";          break;
			default : break;
		}
	}
	obj.ToolTipText = text;
*/
}

function fn_setFormByPrd(sZprdgbn, svcId, sPart) // 제품군에 따른 화면 설정 (2012.12.10)
{
	var objGrid = tab.main.div_header.grd_detail;
	
	if ( sZprdgbn == "AP_01" ) //주차
	{
		tab.main.div_header.cb_zregn3.Enable = false; // 비활성화 - 운송지역 콤보
		
		// 기본값 설정 - 최초 입력시에만 설정
		if ( svcId == "querySo" )
		{
			// 특기사항 기본값
			tab.main.div_header.div_sprmk.ed_sprmk1.Text = "건축토목 및 1차전원 인입공사 제외";
			tab.main.div_header.div_sprmk.ed_sprmk2.Text = "수용차량 대수 : 승용 ( )대,  RV ( )대";
			tab.main.div_header.div_sprmk.ed_sprmk3.Text = "무상보수 ( ) 개월";
			
			// 수금조건 기본값
			ds_header.SetColumn(0, "ZICIF_PPRT", 30); 		// 선수금-율(%)
			ds_header.SetColumn(0, "ZICIF_PPCD", "10"); 	// 선수금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_PPCT", "계약시"); // 선수금-내용
			
			ds_header.SetColumn(0, "ZICIF_1STRT", 50); 				// 1차중도금-율(%)
			ds_header.SetColumn(0, "ZICIF_1STCD", "10"); 			// 1차중도금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_1STCT", "주자재 반입시"); // 1차중도금-내용
			
			ds_header.SetColumn(0, "ZICIF_RMRT", 20); 					// 잔금-율(%)
			ds_header.SetColumn(0, "ZICIF_RMCD", "10"); 				// 잔금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_RMCT", "사용검사필증교부시"); // 잔금-내용
		}
		
		// 디테일 그리드 헤더 텍스트 변경
		objGrid.SetCellProp("head",  5, "text", "승입방향"); // 용도          -> 승입방향
		objGrid.SetCellProp("head",  6, "text", "모델명");   // 인승,폭       -> 모델명
		objGrid.SetCellProp("head",  7, "text", "수용차종"); // 용량          -> 수용차종
		objGrid.SetCellProp("head",  8, "text", "단수");     // 속도/각도     -> 단수
		objGrid.SetCellProp("head",  9, "text", "파렛트수"); // 층수/높이     -> 파렛트수
		objGrid.SetCellProp("head", 10, "text", "리프트수"); // 정지층수/속도 -> 리프트수
		objGrid.SetCellProp("head", 11, "text", "외부턴");   // DOOR개폐길이  -> 외부턴
	}
	else if ( sZprdgbn == "PSD_01" ) // PSD
	{
		tab.main.div_header.ed_zagnt.Enable  = false; // 비활성화-대리점명
		tab.main.div_header.cb_zregn3.Enable = false; // 비활성화-운송지역
		
		// 기본값 설정 - 최초 입력시에만 설정
		if ( svcId == "querySo" )
		{
			//특기사항 기본값
			tab.main.div_header.div_sprmk.ed_sprmk1.Text = "Prototype Test 별도";
			tab.main.div_header.div_sprmk.ed_sprmk2.Text = "Spare Parts는 견적가 0.5% 이내";
			tab.main.div_header.div_sprmk.ed_sprmk3.Text = "임시동력 및 용수 등 Utility는 발주처 제공 조건(자재보관장소 포함)";
			tab.main.div_header.div_sprmk.ed_sprmk4.Text = "Operator Training은 현장교육에 중함";
			tab.main.div_header.div_sprmk.ed_sprmk5.Text = "1차측 전원공사 제외";
			
			// 수금조건 기본값
			ds_header.SetColumn(0, "ZICIF_PPRT", 30); 		// 선수금-율(%)
			ds_header.SetColumn(0, "ZICIF_PPCD", "10"); 	// 선수금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_PPCT", "계약시"); // 선수금-내용
			ds_header.SetColumn(0, "ZICIF_1STRT", 50); 				// 1차중도금-율(%)
			ds_header.SetColumn(0, "ZICIF_1STCD", "10"); 			// 1차중도금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_1STCT", "주자재 반입시"); // 1차중도금-내용
			ds_header.SetColumn(0, "ZICIF_RMRT", 20); 					// 잔금-율(%)
			ds_header.SetColumn(0, "ZICIF_RMCD", "10"); 				// 잔금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_RMCT", "사용검사필증교부시"); // 잔금-내용
		}
		
		// 디테일 그리드 헤더 텍스트 변경
		objGrid.SetCellProp("head",  6, "text", "역사명");   // 인승,폭       -> 역사명
		
		// Type2, Type3 미사용
		ds_detail.SetColumn(0, "TYPE2", "");
		ds_detail.SetColumn(0, "TYPE3", "");
	}
	else if ( sZprdgbn == "" || sZprdgbn == null )
	{
		if ( sPart == "30" ) // 물류
		{
			tab.main.div_header.cb_zregn3.Enable = false; // 비활성화-운송지역
			tab.main.div_header.cb_fa_byrgbn.Enable = true; // 활성화-업종구분
			
			// Type1, Type2, Type3 미사용
			ds_detail.SetColumn(0, "TYPE1", "");
			ds_detail.SetColumn(0, "TYPE2", "");
			ds_detail.SetColumn(0, "TYPE3", "");
		}
	}
}

// Detail의 원가,견적가가 변경되면 헤더의 합계에 반영
function fn_applayHeaderCost()
{
	tab.main.div_header.ed_sum_zeam.mask  = "##0"; // 견적가
	
	var nZnumber = round(ds_detail.sum("ZNUMBER"),0); // 대수
	var nZcost   = round(ds_detail.sum("ZCOST")  ,0); // 원가
	var nZeam    = round(ds_detail.sum("ZEAM")   ,0); // 견적가
	//해상운임비 20190305 BY LYK
	var nConqty20  = round(ds_detail.caseSum("FLAG!='D'", "CONQTY20"   ),0); // 20Fit
	var nConqty40  = round(ds_detail.caseSum("FLAG!='D'", "CONQTY40"   ),0); // 40Fit
	
	var nShang  = 0;
	if ( parseInt(nZeam) == 0 ) {
		nShang = 0;
	} else {
		nShang = parseFloat(nZcost) * 100 / parseFloat(nZeam);
		if (nShang >= 999) nShang = 999;
		else               nShang = round(nShang, 1);
	}
	
	ds_header.SetColumn(0, "ZSUM_ZNUMBER", nZnumber); // 대수
	ds_header.SetColumn(0, "ZSUM_ZCOST"  , nZcost  ); // 원가
	ds_header.SetColumn(0, "ZSUM_ZEAM"   , nZeam   ); // 견적가
	ds_header.SetColumn(0, "ZSUM_SHANG"  , nShang  ); // 시행율	
	//해상운임비 20190305 BY LYK	
	ds_header.SetColumn(0, "CONQTY20"  , nConqty20  ); // 20Fit
	ds_header.SetColumn(0, "CONQTY40"  , nConqty40  ); // 40Fit	

	var qtseq = ds_detail.GetColumn(ds_detail.currow,"QTSEQ");
	if(qtseq = "") qtseq = 0;	
	var nEL1000Znumber = round(ds_detail.caseSum("FLAG!='D'&&MATNR='L-1000'", "ZNUMBER"),0); // EL-1000 인 대수
	var nTmplRow = ds_template0.SearchRow("QTSEQ=="+quote(qtseq)+"&&PRH=="+quote("CO_ELQTY"));		

	ds_template0.SetColumn(nTmplRow,"PRD",nEL1000Znumber);	

}

function fn_duty() {
	
	var j = 0;
	var obj_template;

	ds_template_add.ClearData();

	var qtseq = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
	var nRow = 0;
	for (var a=0; a<=6; a++) {

		switch (a) {
			case 0	: obj_template = object(ds_template0.ID); break;
			case 1	: obj_template = object(ds_template1.ID); break;
			case 2	: obj_template = object(ds_template2.ID); break;
			case 3	: obj_template = object(ds_template3.ID); break;
			case 4	: obj_template = object(ds_template4.ID); break;
			case 5	: obj_template = object(ds_template5.ID); break;
			case 6	: obj_template = object(ds_template6.ID); break;
			default : break;
		}

        // 2020 브랜드 입력화 처리 PRH", "OPT_GROUP_TITLE
		for (var i=0; i< obj_template.GetRowCountNF(); i++) {
		    if( obj_template.GetColumnNF(i, "QTSEQ") == qtseq && obj_template.GetColumnNF(i, "PRH") != "OPT_GROUP_TITLE") {
				nRow = ds_template_add.AddRow();
				ds_template_add.SetColumn(nRow, "FLAG"   , Trim(obj_template.GetColumnNF(i, "FLAG"   )));
				ds_template_add.SetColumn(nRow, "MANDT"  , Trim(obj_template.GetColumnNF(i, "MANDT"  )));
				ds_template_add.SetColumn(nRow, "ATKLA"  , Trim(obj_template.GetColumnNF(i, "ATKLA"  )));
				ds_template_add.SetColumn(nRow, "PRH"    , Trim(obj_template.GetColumnNF(i, "PRH"    )));
				ds_template_add.SetColumn(nRow, "PRHNAME", Trim(obj_template.GetColumnNF(i, "PRHNAME")));
				ds_template_add.SetColumn(nRow, "PRD"    , Trim(obj_template.GetColumnNF(i, "PRD"    )));
				ds_template_add.SetColumn(nRow, "ZRMK"   , Trim(obj_template.GetColumnNF(i, "ZRMK"   )));
				ds_template_add.SetColumn(nRow, "QTNUM"  , Trim(obj_template.GetColumnNF(i, "QTNUM"  )));
				ds_template_add.SetColumn(nRow, "QTSER"  , Trim(obj_template.GetColumnNF(i, "QTSER"  )));
				ds_template_add.SetColumn(nRow, "QTSEQ"  , Trim(obj_template.GetColumnNF(i, "QTSEQ"  )));
				ds_template_add.SetColumn(nRow, "PRSEQ"  , Trim(obj_template.GetColumnNF(i, "PRSEQ"  )));
				ds_template_add.SetColumn(nRow, "ATFOR"  , Trim(obj_template.GetColumnNF(i, "ATFOR"  )));	// 2013.01.09 사양 입력 구분
				ds_template_add.SetColumn(nRow, "DISPTP"  , Trim(obj_template.GetColumnNF(i, "DISPTP"  )));
				ds_template_add.SetColumn(nRow, "MODITP"  , Trim(obj_template.GetColumnNF(i, "MODITP"  )));
		    }
		}
	}
}

// 2013.01.08 설계부의 표준템플릿 사용시 종속성 Duty call
// 사양템플릿 화면에서 호출됨
function fn_stdGenDuty(vZTPLGBN, vGtype)
{
	fn_createWait("",this);     // 처리중입니다. 메시지 처리

	ds_error.ClearData();

	var cond = "strGtype=" + quote(vGtype);

	fn_duty();
	// 종속성 Duty 처리 후 기존 Duty적용 fn호출됨
	nsfRequest(   "queryDuty"
				, "duty/stdGenDuty"
				, "ds_template1=ds_template_add"
				, "ds_template_add=ds_template1 ds_error=ds_error"
				, cond
				, "fn_afterQuery"
			   );
}

// 2013.01.10 사양 그리드에 마우스 오버시 사양값, 내역 Tooltip 으로 표시
function grd_template_OnMouseOver(obj,nPosX,nPosY,nRow,nCell,nPivotIndex)
{
	if ( nCell == 2 || nCell == 3 ) {
		obj.ToolTipText = obj.GetCellText("body", nRow, nCell, "text");
	} else {
		obj.ToolTipText = "";
	}
}

// 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
function fn_resize() {
	this.onsize = "";

	//this.window.showwindow("Maximize");
	window.top    = GetPlatformInfo("WorkArea","top");
	window.left   = GetPlatformInfo("WorkArea","left");
	window.width  = GetPlatformInfo("WorkArea","width");
	window.height = GetPlatformInfo("WorkArea","height");

	tab.width  = window.width-10;
	tab.height = window.height-80;
	
	tab.main.div_header.Width       = tab.width-4;
	tab.template.div_template.Width = tab.width-2;

	tab.main.div_header.height      = tab.height-25;
	tab.template.div_template.height= tab.height-30;
	
	tab.main.div_header.grd_detail.height = tab.height-305;
	tab.main.div_header.grd_detail.width  = tab.width-10;
	
	tab.template.div_template.grd_template0.height = tab.template.div_template.height-60;
	tab.template.div_template.grd_template1.height = tab.template.div_template.height-60;
	tab.template.div_template.grd_template2.height = tab.template.div_template.height-60;
	tab.template.div_template.grd_template3.height = tab.template.div_template.height-60;
	tab.template.div_template.grd_template4.height = tab.template.div_template.height-60;
	tab.template.div_template.grd_template5.height = tab.template.div_template.height-60;
	tab.template.div_template.grd_template6.height = tab.template.div_template.height-60;		
}

//-----< 2016.11.09 Grid내 Cell이동 Enter인 경우 grd_detail_OnCellClick 호출 by mj.Shin 	Start 	
function tab_main_div_header_grd_detail_OnEnterEdit(obj,nRow,nCell,nPivotIndex)
{
	grd_detail_OnCellClick(obj, nRow, nCell);
}


function tab_main_div_header_grd_detail_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex)
{
	if (nOldRow != nRow)	{
		grd_detail_OnCellClick(obj, nRow, nCell);
	}	
}

//----->2016.11.09 Grid내 Cell이동 Enter인 경우 grd_detail_OnCellClick 호출 by mj.Shin 	End 

function fn_setEnableYN(openYN,egisFlag) 
{

	//EGIS견적번호/차수 HIDDEN/VISIBLE 여부 20190313 by lyk
	if(openYN == "Y") {       
		tab.main.div_header.st_est_no.Visible = true;
		tab.main.div_header.st_est_seq.Visible = true;
		tab.main.div_header.st_destport.Visible = true;
		tab.main.div_header.ed_est_no.Visible = true;
		tab.main.div_header.ed_est_seq.Visible = true;
		tab.main.div_header.ed_destport.Visible = true;

			div_btn.btn_save.Enable = false;
			btn_qtser_plus.Enable =false;
			btn_qtser_minus.Enable = false;
			tab.main.div_header.btn_plus.Enable = false;
			tab.main.div_header.btn_minus.Enable = false;
			tab.main.div_header.btn_specsheet.Enable = false;
			tab.main.div_header.btn_copy.Enable = false;
			tab.main.div_header.btn_common.Enable = false;
			tab.main.div_header.btn_popup.Enable = false;
			tab.main.div_header.btn_count.Enable = false;
			tab.main.div_header.btn_countRequest.Enable = false;
			tab.main.div_header.btn_cancel.Enable = false;
			tab.main.div_header.btn_template.Enable = false;
			tab.main.div_header.btn_depend.Enable = false;
			tab.main.div_header.btn_depend2.Enable = false;
			tab.template.div_template.btn_template.Enable = false;
			tab.template.div_template.btn_depend.Enable = false;
			tab.template.div_template.btn_depend2.Enable = false;			
			tab.template.div_template.btn_cost.Enable = false;			
			tab.template.div_template.btn_duty.Enable = false;
	}
	 else 
	 {
		tab.main.div_header.st_est_no.Visible = false;
		tab.main.div_header.st_est_seq.Visible = false;
		tab.main.div_header.st_destport.Visible = false;
		tab.main.div_header.ed_est_no.Visible = false;
		tab.main.div_header.ed_est_seq.Visible = false;
		tab.main.div_header.ed_destport.Visible = false;
	}
	
	if(egisFlag == "X") {  //오픈이후 해당 견적번호는 E-GIS를 통해 수정/삭제가능함
		div_btn.btn_save.Enable = false;
		btn_qtser_plus.Enable =false;
		btn_qtser_minus.Enable = false;
		tab.main.div_header.btn_plus.Enable = false;
		tab.main.div_header.btn_minus.Enable = false;
		tab.main.div_header.btn_specsheet.Enable = false;
		tab.main.div_header.btn_copy.Enable = false;
		tab.main.div_header.btn_common.Enable = false;
		tab.main.div_header.btn_popup.Enable = false;
		tab.main.div_header.btn_count.Enable = false;
		tab.main.div_header.btn_countRequest.Enable = false;
		tab.main.div_header.btn_cancel.Enable = false;
		tab.main.div_header.btn_template.Enable = false;
		tab.main.div_header.btn_depend.Enable = false;
		tab.main.div_header.btn_depend2.Enable = false;
		tab.template.div_template.btn_template.Enable = false;
		tab.template.div_template.btn_depend.Enable = false;
		tab.template.div_template.btn_depend2.Enable = false;			
		tab.template.div_template.btn_cost.Enable = false;			
		tab.template.div_template.btn_duty.Enable = false;
	}

}

/****************************************************************
* 브랜드 변경 시 from template
* input Data set ds0 ~ ds5
* 데이터셑 ID:ds_template_org
* nRow: ds_detail 선택 로우
* ds_detail.SetColumn(ds_detail.row, "BRNDSEQ", arr[0]);  // 브랜드차수
* ds_detail.SetColumn(ds_detail.row, "BRNDCD", arr[1]);   // 브랜드코드
* ds_detail.SetColumn(ds_detail.row, "BRNDNM", arr[2]);   // 브랜드명
* ds_detail.SetColumn(ds_detail.row, "GTYPE", arr[3]);    // 기종
***************************************************************/
function fn_chanageBrand(nRow, arr, orgBrndcd, chgBrndcd) {
    var flag  = ds_detail.GetColumn(nRow, "FLAG");
    var qtnum = ds_detail.GetColumn(nRow, "QTNUM");
    var qtser = ds_detail.GetColumn(nRow, "QTSER");
    var qtseq = ds_detail.GetColumn(nRow, "QTSEQ");
    var zprdgbn = ds_detail.GetColumn(nRow, "ZPRDGBN");
	var newRow = 0;
	var ds_List     = [ds_template0, ds_template1, ds_template2, ds_template3, ds_template4, ds_template5, ds_template6];
	var ds_UserList = [ds_user0, ds_user1, ds_user2, ds_user3, ds_user4, ds_user5, ds_user6];

    // 변경처리를 위한 데이터 삭제
    ds_template.UnFilter();
	for (var i = ds_template.GetRowCountNF()-1; i >=0; i--) {
		if (qtseq == ds_template.GetColumnNF(i, "QTSEQ") )	{
			// 추가 후 삭제 시 삭제
			ds_template.DeleteRow(i);
		}
	}

    // 입력 데이터 그리드 삭제 처리
	ds_template_org.ClearData();
	for ( var iObj = 0; iObj < Length(ds_List); iObj++) {
		for ( var b = ds_List[iObj].GetRowCountNF()-1 ; b >= 0 ; b-- ) {
		    //trace(b+" : QTSEQ:"+ds_List[iObj].GetColumnNF(i, "QTSEQ"));
			if (qtseq == ds_List[iObj].GetColumnNF(b, "QTSEQ"))	{
				newRow = ds_template_org.AddRow();
				ds_template_org.SetColumn(newRow, "QTSEQ", ds_List[iObj].GetColumnNF(b, "QTSEQ"));
				ds_template_org.SetColumn(newRow, "PRH", ds_List[iObj].GetColumnNF(b, "PRH"));
				ds_template_org.SetColumn(newRow, "PRD", ds_List[iObj].GetColumnNF(b, "PRD"));
				ds_template_org.SetColumn(newRow, "DISPTP", ds_List[iObj].GetColumnNF(b, "DISPTP"));
				ds_template_org.SetColumn(newRow, "MODITP", ds_List[iObj].GetColumnNF(b, "MODITP"));
				ds_List[iObj].DeleteRow(b);
			}
		}
	}

    // user data set도 삭제 처리해 줘야 한다.
    for ( var iObj = 0; iObj < Length(ds_UserList); iObj++) {
		for ( var b = ds_UserList[iObj].GetRowCountNF()-1 ; b >= 0 ; b-- ) {
			if (qtseq == ds_UserList[iObj].GetColumnNF(b, "QTSEQ"))	{
				ds_UserList[iObj].DeleteRow(b);
			}
		}
	}

	ds_cond.ClearData();
	ds_cond.AddRow();
	ds_cond.SetColumn(0, "MANDT" , G_MANDT);
	ds_cond.SetColumn(0, "QTNUM" , qtnum);
	ds_cond.SetColumn(0, "QTSER" , qtser);
	ds_cond.SetColumn(0, "QTSEQ" , qtseq);
	ds_cond.SetColumn(0, "MCLASS", zprdgbn);
	ds_cond.SetColumn(0, "BRNDSEQ" , arr[0]);
	ds_cond.SetColumn(0, "BRNDCD" , arr[1]);

	http.sync = true;
	ds_error.ClearData();
	ds_template_des.ClearData();
	nsfRequest("brandTemplateAdd"
				   , "ses0031n/searchAddTemplate"
				   , "ds_detail=ds_cond ds_template=ds_template_des"
				   , "ds_template_des=ds_template ds_error=ds_error"
				   , ""
				   , "fn_chanageBrandQuery");
	http.sync = false;

	if(ds_error.rowcount() > 0) {
		gfn_showMsg("CE00001");
	} else {
	    // 백업 받은 자료로 기존 자료 값을 입력한다.
	    // 공통 적용 내용 화면 클릭 스 알아서 변경 되게 한다.
	    var prh = "";
	    var prd = "";
	    var searchRow = 0;
	    var orgPrd = "";
	    var disptp;
	    var orgDisptp;
	    var orgMditp;
	    var moditp;
	    var iRow = 0;
	    var findRow = 0;
        var orgCnt;
        var isCopy = false;
	    // 저장시 브랜드변경전 해당 호기에 대한 브랜드 삭제 데이터셑을 생성한다.
	    
	    findRow = ds_brnd_del.FindRow("QTSEQ", qtseq);
	    if(findRow < 0) {
			iRow = ds_brnd_del.AddRow();
			ds_brnd_del.SetColumn(iRow, "MANDT" , G_MANDT);
			ds_brnd_del.SetColumn(iRow, "QTNUM" , qtnum);
			ds_brnd_del.SetColumn(iRow, "QTSER" , qtser);
			ds_brnd_del.SetColumn(iRow, "QTSEQ" , qtseq);
	    }

        // 해당 브랜드에 대한 영업특성값을 조회한다.
        fn_sayangPrdList(arr[0], arr[1]);

		// 사양값을 복사한다.
		for (var i = 0; i < ds_template_des.GetRowCount(); i++) {
			prh = ds_template_des.GetColumn(i, "PRH");
			prd = ds_template_des.GetColumn(i, "PRD");
			disptp = ds_template_des.GetColumn(i, "DISPTP");
			moditp = ds_template_des.GetColumn(i, "MODITP");

			newRow = ds_template.AddRow();
			ds_template.CopyRow(newRow, ds_template_des, i);

			// 백업된 데이터에 입력값이 있으면 넣어 준다.
			// 복사 시 DISPTP(출력여붜 X값이 아니면 복사 대상에서 제외
			// 복사 대상: 복사대상이 수정가능, 공통사양이 아니고, 복사본/복사대상 모두 화면 출력 대상인 경우에 대해서만 복사를 한다.
			// 복사 시 ㅣ공통 대상 항목은 제외하고 복사를 수행한다.
			if( prh != 'EL_ABRAND' && prh !=  'EL_ATYP' &&  prh != 'EL_AUSE' && prh != 'EL_AMAN' && prh != 'EL_ACAPA' && prh != 'EL_AOPEN' &&
				prh != 'EL_ASPD' && prh != 'EL_AFQ' && prh != 'EL_ASTQ' && substr(prh,0,3) != 'CO_') {
				searchRow = ds_template_org.SearchRow("PRH =="+quote(prh));
				if(searchRow > -1) {
					orgPrd = ds_template_org.GetColumn(searchRow, "PRD");
					orgDisptp = ds_template_org.GetColumn(searchRow, "DISPTP");
					orgMditp  = ds_template_org.GetColumn(searchRow, "MODITP");
					orgCnt  = ds_template_org.GetColumn(searchRow, "CNT");
					if(orgCnt == "0") {
					    isCopy = true;
					} else {
					    isCopy = fn_isBrndPrd(arr[0], arr[1], prh, orgPrd);
					}
					if(moditp == "X" && disptp == "X" && orgDisptp == "X" && orgMditp == "X" && isCopy ) {
						// 입력된 영업사양값을 변경된 브랜드 사양값에 입력 처리
						ds_template.SetColumn(newRow, "PRD", orgPrd);
					}
				}
			}
		}

	    // 입력된 값을 선 반영한다.
        // 해당값을 반영하면 ds_template1, ds_template 영업사양 특성값이 같이 변경된다.
        ds_detail.SetColumn(nRow, "BRNDSEQ", arr[0]);  // 브랜드차수
        ds_detail.SetColumn(nRow, "BRNDCD", arr[1]);   // 브랜드코드
        ds_detail.SetColumn(nRow, "BRNDNM", arr[2]);   // 브랜드명
        ds_detail.SetColumn(nRow, "GTYPE", arr[3]);    // 기종
        ds_detail.SetColumn(nRow, "SNDSYS", arr[4]);   // 시스템전송구분
        
        // 단가, 원가, 견적가를 초기화 한다.
        ds_detail.SetColumn(nRow, "ZUAM", 0);    // 단가
        ds_detail.SetColumn(nRow, "ZCOST", 0);   // 원가
        ds_detail.SetColumn(nRow, "ZEAM", 0);   // 견적가        

	    // 값을 셑팅한다.
        // 2020 박수근 추가
        initCreateOptGroup(ds_template);
		
        // 복사가 완료 되고 나서 공통 변경사항을 적용하기 위해서 해당 메소드를 강제로 호출한다.
		fn_template("A", ds_detail.currow);
	}
}

/****************************************************************
* 브랜드 변경 시 from template 조회 결과
***************************************************************/
function fn_chanageBrandQuery(svcId, errCode, errMsg) {
}

/****************************************************************
* PLM  단일 호기 Duty 실행
* opt1: DUTY CALL : "DUTY", 종속성 : "DEPENDENCY", 제한조건 : "CONSTRAINT"
***************************************************************/
function fn_singlePlmDuty(opt1) {
    var sysId = G_SYSID;
    var callSys = 'S';
    var zflag = "Q";
    var qtnum = ds_detail.GetColumn(ds_detail.currow, "QTNUM");
    var qtser = ds_detail.GetColumn(ds_detail.currow, "QTSER");
    var qtseq = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
    var auart= ds_header.GetColumn(0, "AUART");
   	var ds_List = [ds_template1, ds_template2, ds_template3, ds_template4, ds_template5, ds_template6, ds_template0];
    var startIdx = 0;
    var endIdx   = 0;
    var ds;

    plm_ds_header.ClearData();
    plm_ds_template.ClearData();
    for (var i=0; i < Length(ds_List); i++) {
        ds = ds_List[i];
        for(var j=0; j < ds.GetRowCountNF(); j++) {
            if(qtseq == ds.GetColumnNF(j, "QTSEQ")) {
                endIdx = plm_ds_template.AddRow();
                plm_ds_template.SetColumn(endIdx, "IDX", ds.ID+":"+j);
                plm_ds_template.SetColumn(endIdx, "PRH", ds.GetColumnNF(j, "PRH"));
                plm_ds_template.SetColumn(endIdx, "PRD", ds.GetColumnNF(j, "PRD"));
            }
        }
    }

    // 헤더 정보를 생성한다.
    plm_ds_header.AddRow();
    plm_ds_header.SetColumn(0, "SYSID", sysId);
    plm_ds_header.SetColumn(0, "CALLSYS", callSys);
    plm_ds_header.SetColumn(0, "ZFLAG", zflag);
    plm_ds_header.SetColumn(0, "QTNUM", qtnum);
    plm_ds_header.SetColumn(0, "QTSER", qtser);
    plm_ds_header.SetColumn(0, "QTSEQ", qtseq);
    plm_ds_header.SetColumn(0, "HOGI", "");
    plm_ds_header.SetColumn(0, "AUART", auart);
    plm_ds_header.SetColumn(0, "START_IDX", startIdx);
    plm_ds_header.SetColumn(0, "END_IDX", endIdx);
    plm_ds_header.SetColumn(0, "USER_ID", G_USER_ID);
    plm_ds_header.SetColumn(0, "LAND", "KR");

    // PLM 연동 처리를 수행한다.
    F_OPT1 = opt1;
    if(opt1 == 'FLOOR') {
        callPlmWebService("Q", opt1, "MF", plm_ds_header, plm_ds_template, "fn_plmFloorAfter");
		if(G_STATUS == "") {
			gfn_openMsgWin("PLM 시스템과 연결이 안됩니다. 시스템 관리자에게 문의하십시요, ", "A", "PLM 연동");
		}
    } else {
        callPlmWebService("Q", opt1, "MF", plm_ds_header, plm_ds_template, "fn_plmDutyAfter");
		if(G_STATUS == "") {
			gfn_openMsgWin("PLM 시스템과 연결이 안됩니다. 시스템 관리자에게 문의하십시요, ", "A", "PLM 연동");
		}
    }
}

/****************************************************************
* PLM  멀티 호기 Duty 실행
* opt1: DUTY CALL : "DUTY", 종속성 : "DEPENDENCY", 제한조건 : "CONSTRAINT"
***************************************************************/
function fn_MultiPlmDuty(opt1) {
    var sysId = G_SYSID;
    var callSys = 'S';
    var zflag = "Q";
    var qtnum;
    var qtser;
    var qtseq;
    var auart= ds_header.GetColumn(0, "AUART");
   	var ds_List = [ds_template1, ds_template2, ds_template3, ds_template4, ds_template5, ds_template6, ds_template0];
    var startIdx = 0;
    var endIdx   = 0;
    var ds;
    var newRow = 0;
    var sndSys = "PDM";

    plm_ds_header.ClearData();
    plm_ds_template.ClearData();
    for(var r=0; r < ds_detail.GetRowCount(); r++) {
		if(ds_detail.GetColumn(r, "ZPRDGBN") == "AP_01" || ds_detail.GetColumn(r, "ZPRDGBN") == "PSD_01" || 
		   ds_detail.GetColumn(r, "ZPRDGBN") == "F-1000" || ( ds_detail.GetColumn(r, "ZPRDGBN") == "SP_01" && ds_detail.GetColumn(r, "MATNR") != "Y-400" )||
		   ds_detail.GetColumn(r, "ZPRDGBN") == "DW_01") {
			continue;
		}

        sndSys = ds_detail.GetColumn(r, "SNDSYS");
        if(ds_detail.GetColumn(r, "ZPRGFLG") != "32" && sndSys == "PLM") {
			qtnum = ds_detail.GetColumn(r, "QTNUM");
			qtser = ds_detail.GetColumn(r, "QTSER");
			qtseq = ds_detail.GetColumn(r, "QTSEQ");
			for (var i=0; i < Length(ds_List); i++) {
				ds = ds_List[i];
				for(var j=0; j < ds.GetRowCountNF(); j++) {
					if(qtseq == ds.GetColumnNF(j, "QTSEQ")) {
						endIdx = plm_ds_template.AddRow();
						// IDX: dsid + 구분자 + 로우 인덱스
						plm_ds_template.SetColumn(endIdx, "IDX", ds.ID+":"+j);
						plm_ds_template.SetColumn(endIdx, "PRH", ds.GetColumnNF(j, "PRH"));
						plm_ds_template.SetColumn(endIdx, "PRD", ds.GetColumnNF(j, "PRD"));
					}
				}
			}

			// 헤더 정보를 생성한다.
			newRow = plm_ds_header.AddRow();
			plm_ds_header.SetColumn(newRow, "SYSID", sysId);
			plm_ds_header.SetColumn(newRow, "CALLSYS", callSys);
			plm_ds_header.SetColumn(newRow, "ZFLAG", zflag);
			plm_ds_header.SetColumn(newRow, "QTNUM", qtnum);
			plm_ds_header.SetColumn(newRow, "QTSER", qtser);
			plm_ds_header.SetColumn(newRow, "QTSEQ", qtseq);
			plm_ds_header.SetColumn(newRow, "HOGI", "");
			plm_ds_header.SetColumn(newRow, "AUART", auart);
			plm_ds_header.SetColumn(newRow, "START_IDX", startIdx);
			plm_ds_header.SetColumn(newRow, "END_IDX", endIdx);
			plm_ds_header.SetColumn(newRow, "USER_ID", G_USER_ID);
			plm_ds_header.SetColumn(newRow, "LAND", "KR");
			startIdx = endIdx+1;
        }
    }

    // PLM 연동 처리를 수행한다.
    if(plm_ds_header.GetRowCount() > 0) {
        F_OPT1 = opt1;
        callPlmWebService("Q", opt1, "MF", plm_ds_header, plm_ds_template, "fn_plmDutyAfter");
		if(G_STATUS == "") {
			gfn_openMsgWin("PLM 시스템과 연결이 안됩니다. 시스템 관리자에게 문의하십시요, ", "A", "PLM 연동");
		}
    }
}

/****************************************************************
* PLM  전송 데이터 생성 Call Back 함수
***************************************************************/
function fn_plmDutyAfter() {
    var qtseq;
    var prh;
    var prd;
    var prhName;
    var atkla;
    var logMsg;
    var idName;
    var findRow;
    var idx;
    var idxList;
    var newRow = 0;

    getPlmOutDs(ds_error);
    if(ds_error.GetRowCount() > 0) {
        // PLM 오류 메시지 출력
        if(ds_error.GetColumn(0, "ERRCODE") != "OK") {
            gfn_showAlert(ds_error.GetColumn(0, "ERRMSG"));
            ds_error.ClearData();
            return;
        }
    }

    // 결과 처리
    getPlmOutDs(plm_out_ds_template);
    var errMsg = "";
    var disptp = "";
    var nTmplRow = 0;
    //trace("plm_out_ds_template:"+plm_out_ds_template.SaveXML());
    for(var i=0; i < plm_out_ds_template.GetRowCount(); i++) {
        idx = plm_out_ds_template.GetColumn(i, "IDX");
        if(Length(idx) > 0) {
			idxList = Split(idx, ":");
			idName = idxList[0];
			findRow = ToNumber(idxList[1]);
			// 수신받은 데이터에서 에러 메시지와 화면에 적용할 메시지로 분리하여 처리한다.
			if(IndexOf(plm_out_ds_template.GetColumn(i, "PRH"), "ERRMSG_") > -1) {
				// 에러 데이터 셑을 생성한다.
				prhName = object(idName).GetColumnNF(findRow, "PRHNAME");
				qtseq = object(idName).GetColumnNF(findRow, "QTSEQ");
				atkla = object(idName).GetColumnNF(findRow, "ATKLA");
	
				logMsg = plm_out_ds_template.GetColumn(i, "PRD");
				newRow = plm_ds_log.AddRow();
				plm_ds_log.SetColumn(newRow, "IDX", newRow);
				//결과 처리 시스템명을 입력한다.
				plm_ds_log.SetColumn(newRow, "PRCSYS", "PLM");
				plm_ds_log.SetColumn(newRow, "HOGI", qtseq);
				plm_ds_log.SetColumn(newRow, "ATKLA", atkla);
				plm_ds_log.SetColumn(newRow, "PRHNAME", prhName);
				plm_ds_log.SetColumn(newRow, "LOGMSG", logMsg);
			} else {
				// 제한조건인 경우에는 시스템에서 데이터 처리 없음
				if( F_OPT1 != "CONSTRAINT") {
					prd = plm_out_ds_template.GetColumn(i, "PRD");
					disptp = object(idName).SetColumnNF(findRow, "DISPTP");
					if(disptp == "X") {
					    object(idName).SetColumnNF(findRow, "PRD", prd);
					} else {
					    setDsTemplateFlagNF(object(idName), findRow, "PRD", prd);
						if(object(idName).GetColumnNF(findRow, "FLAG") == "U") {
							qtseq = object(idName).GetColumnNF(findRow, "QTSEQ");
							atkla = object(idName).GetColumnNF(findRow, "ATKLA");
							prh = object(idName).GetColumnNF(findRow, "PRH");
							nTmplRow = ds_template.SearchRowNF(" QTSEQ == " + quote(qtseq) + " && ATKLA == " + quote(atkla) + " && PRH == " + quote(prh));
							if(nTmplRow > -1) {
								ds_template.SetColumnNF(nTmplRow, "PRD", prd);
								ds_template.SetColumnNF(nTmplRow, "FLAG", "U");
								//setDsTemplateFlagNF(ds_template, nTmplRow, "PRD", prd);
							}
						}
					}
				}
			}
        } else {
			if(IndexOf(plm_out_ds_template.GetColumn(i, "PRH"), "ERRMSG") > -1) {
				errMsg = plm_out_ds_template.GetColumn(i, "PRD");
            }
        }
    }


    //2021.03 jss
    el_dpexq_prc=""; el_dpexq_prd=""; el_dpexq1=""; el_dpexq2=""; el_dpexq3="";
	for(var i=0; i < ds_template4.GetRowCount(); i++) {
		if(ds_template4.GetColumn(i, "PRH") == "EL_DPEXQ" && ds_template4.GetColumn(i, "FLAG") == "U" ){
			el_dpexq_prd = ds_template4.GetColumn(i, "PRD");
			el_dpexq_prc = "Y";
		}
	}

	for(var i=0; i < ds_template0.GetRowCount(); i++) {
		if(ds_template0.GetColumn(i, "PRH") == "CO_DPEXQ1" && ds_template0.GetColumn(i, "FLAG") == "U"){
			el_dpexq1 = ds_template0.GetColumn(i, "PRD");
		}
		if(ds_template0.GetColumn(i, "PRH") == "CO_DPEXQ2" && ds_template0.GetColumn(i, "FLAG") == "U"){
			el_dpexq2 = ds_template0.GetColumn(i, "PRD");
		}
		if(ds_template0.GetColumn(i, "PRH") == "CO_DPEXQ3" && ds_template0.GetColumn(i, "FLAG") == "U"){
			el_dpexq3 = ds_template0.GetColumn(i, "PRD");
		}
	}



	// 단일 메시지 처리
	if(F_OPT1 != "CONSTRAINT" && Length(errMsg) > 0) {
		if(F_OPT1 == "DUTY") {
			gfn_openMsgWin(errMsg, "", "A", "Duty Call 알림");
		} else if(F_OPT1 == "DEPENDENCY") {
			gfn_openMsgWin(errMsg, "", "A", "종속성 알림");
		}
	}
   
}

/******************************************************
*  WebService 처리시 발생한 에러 정보 표시
* @param  grdObj 처리 그리드 객체
* @param  dsObj 데이터셋 객체
* @param  errDsObj 에러 정보 데이터셋 객체
* @param  flagColNm 플래그 컬럼명
* @return
******************************************************/
function fn_openPlmLogWin(grdObj, dsObj, logDsObj, flagColNm) {
	var grdNm = "";
	
	if ( type( grdObj ) == "STRING") {
		grdNm = grdObj;
	} else {
		grdNm = grdObj.id;
	}
	
	var dsNm = dsObj.id;
	var logDsNm = logDsObj.id;

    // 정렬
    logDsObj.Sort("HOGI:A,PRHNAME:A,IDX:A");

	var arg = "fa_flagNm=" + quote( flagColNm);
		arg += " fa_grdName=" + quote(grdNm);
		arg += " fa_dsName=" + quote( dsNm);
		arg += " fa_logDsName=" + quote( logDsNm );
	//alert("gtn 넘어가는 값 : " + arg );
	gfn_openPopupUrl("COM::Com0271.xml", true, arg);
	
}

/******************************************************
*  PLM 웹서비스 연동을 통한 층별사양 정보 
* @return
******************************************************/
function btn_floor_OnClick(obj)
{
    var sndSys = "PDM"; 
    sndSys = ds_detail.GetColumn(ds_detail.currow, "SNDSYS");
    if(sndSys == "PLM") {
		// PLM 연동 처리
		fn_createWait("",this);
		plm_ds_log.ClearData();
		fn_singlePlmDuty("FLOOR");
    } else {
        gfn_openMsgWin("해당 브랜드에서 제공되지 않습니다.", "", "A", "층별사양");
    }
}

/****************************************************************
* PLM  층별사양 정보 전송 데이터 생성 Call Back 함수
***************************************************************/
function fn_plmFloorAfter() {
    var qtseq = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
    var logMsg;
    var newRow = 0;

    getPlmOutDs(ds_error);
    if(ds_error.GetRowCount() > 0) {
        // PLM 오류 메시지 출력
        if(ds_error.GetColumn(0, "ERRCODE") != "OK") {
            gfn_showAlert(ds_error.GetColumn(0, "ERRMSG"));
            ds_error.ClearData();
            return;
        }
    }

    // 결과 처리
    getPlmOutDs(plm_out_ds_template);
    //trace("plm_out_ds_template:"+plm_out_ds_template.SaveXML());
    var errMsg = "";
    for(var i=0; i < plm_out_ds_template.GetRowCount(); i++) {
        // 수신받은 데이터에서 에러 메시지와 화면에 적용할 메시지로 분리하여 처리한다.
        if(IndexOf(plm_out_ds_template.GetColumn(i, "PRH"), "ERRMSG_") > -1) {
            logMsg = plm_out_ds_template.GetColumn(i, "PRD");
            newRow = plm_ds_log.AddRow();
            plm_ds_log.SetColumn(newRow, "IDX", newRow);

            //결과 처리 시스템명을 입력한다.
            plm_ds_log.SetColumn(newRow, "PRCSYS", "PLM");
            plm_ds_log.SetColumn(newRow, "HOGI", qtseq);
            plm_ds_log.SetColumn(newRow, "LOGMSG", logMsg);
        } else if(plm_out_ds_template.GetColumn(i, "PRH") == "ERRMSG") {
            logMsg = plm_out_ds_template.GetColumn(i, "PRD");
            errMsg = logMsg;
        }
    }

    // 네비게이션 삭제
    fn_destroyWait();
    if(plm_ds_log.GetRowCount() >0 && errMsg == "") {
        // 층별사양 체크 메시지를 출력한다.
		fn_openPlmLogWin("grd_logList", ds_template, plm_ds_log, "FLAG");
    } else if(errMsg != "") {
        gfn_openMsgWin(errMsg, "", "A", "층별사양");
    } else {
        getPlmOutDs(plm_out_ds_header);
        //trace("plm_out_ds_header:"+plm_out_ds_header.SaveXML());
        // 층별사양전개 팝업을 호출한다.
        if(plm_out_ds_header.GetRowCount() > 0 && plm_out_ds_template.GetRowCount() > 0) {
			var arg;
			var brndArr = gfn_openPopUpUrlHdel("COM::Com0272.xml", true, arg);
	    }
    }
}]]></Script>
</Window>