<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="Ses0051" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="견적상세(국내대리점)" Top="8" Ver="1.0" Width="976" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_header" OnColumnChanged="ds_header_OnColumnChanged" OnRowPosChanged="ds_header_OnRowPosChanged">
				<Contents>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="SPART" size="256" summ="default" type="STRING"/>
					<colinfo id="QTGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZBDTYP" size="256" summ="default" type="STRING"/>
					<colinfo id="ZPRGFLG" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBUR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<colinfo id="ZKUNNR" size="256" summ="default" type="STRING"/>
					<colinfo id="ZAGNT" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNNR" size="256" summ="default" type="STRING"/>
					<colinfo id="ZCST" size="256" summ="default" type="STRING"/>
					<colinfo id="ZGNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZDEV" size="256" summ="default" type="STRING"/>
					<colinfo id="GSNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZREGN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZPID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTEL" size="256" summ="default" type="STRING"/>
					<colinfo id="ZADDR_ZPOST" size="256" summ="default" type="STRING"/>
					<colinfo id="ZADDR_ADR1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZADDR_ADR2" size="256" summ="default" type="STRING"/>
					<colinfo id="SOABLE" size="256" summ="default" type="STRING"/>
					<colinfo id="ZESTDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="DELDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZDVMTS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSUM_ZNUMBER" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSUM_ZCOST" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSUM_ZEAM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSUM_SHANG" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_PPRT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_PPCT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_PPCD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_1STRT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_1STCT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_1STCD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_2STRT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_2STCT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_2STCD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_RMRT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_RMCT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZICIF_RMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="SPRMK1" size="256" summ="default" type="STRING"/>
					<colinfo id="SPRMK2" size="256" summ="default" type="STRING"/>
					<colinfo id="SPRMK3" size="256" summ="default" type="STRING"/>
					<colinfo id="SPRMK4" size="256" summ="default" type="STRING"/>
					<colinfo id="SPRMK5" size="256" summ="default" type="STRING"/>
					<colinfo id="SPRMK6" size="256" summ="default" type="STRING"/>
					<colinfo id="SPRMK7" size="256" summ="default" type="STRING"/>
					<colinfo id="SPRMK8" size="256" summ="default" type="STRING"/>
					<colinfo id="SPRMK9" size="256" summ="default" type="STRING"/>
					<colinfo id="SPRMK10" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSOFLG" size="256" summ="default" type="STRING"/>
					<colinfo id="SONNR" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="AUART" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="CO_DDVRTQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CO_DEPHTQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CO_DSSQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CO_BCLCDTQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CO_CHPITQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CO_ASPC" size="256" summ="default" type="STRING"/>
					<colinfo id="CO_DSV1" size="256" summ="default" type="STRING"/>
					<colinfo id="CO_DSV1TQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CO_DSV2" size="256" summ="default" type="STRING"/>
					<colinfo id="CO_DSV2TQ" size="256" summ="default" type="STRING"/>
					<colinfo id="INCO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLZONE" size="256" summ="default" type="STRING"/>
					<colinfo id="REGION" size="256" summ="default" type="STRING"/>
					<colinfo id="BUYR_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZEAM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZKUNNR_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNNR_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZAGNT_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZAGNTFLG" size="1" summ="default" type="STRING"/>
					<colinfo id="INCO2" size="84" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="GTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="RTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3" size="256" summ="default" type="STRING"/>
					<colinfo id="ZNUMBER" size="256" summ="default" type="STRING"/>
					<colinfo id="SHANGH" size="256" summ="default" type="STRING"/>
					<colinfo id="ZDELI" size="1" summ="default" type="STRING"/>
					<colinfo id="TEL" size="20" summ="default" type="STRING"/>
					<colinfo id="FAX" size="20" summ="default" type="STRING"/>
					<colinfo id="CEL" size="20" summ="default" type="STRING"/>
					<colinfo id="MAIL" size="256" summ="default" type="STRING"/>
					<colinfo id="JGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="FA_BYRGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="AUTOLP" size="256" summ="default" type="STRING"/>
					<colinfo id="UCH_DUTY" size="256" summ="default" type="STRING"/>
					<colinfo id="FRCMFCDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNRCHK" size="256" summ="default" type="STRING"/>
					<colinfo id="SID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZACAPA" size="256" summ="default" type="STRING"/>
					<colinfo id="ZUSE" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN" size="256" summ="default" type="STRING"/>
					<colinfo id="MFLIFNRT" size="256" summ="default" type="STRING"/>
					<colinfo id="ACHDT" size="256" summ="default" type="STRING"/>
					<colinfo id="FA_CHK1" size="256" summ="default" type="STRING"/>
					<colinfo id="FA_CHK2" size="256" summ="default" type="STRING"/>
					<colinfo id="CSLIFNRT" size="256" summ="default" type="STRING"/>
					<colinfo id="QTVADT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_header_all">
				<Contents>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset CanRowPosChange="ds_detail_CanRowPosChange" DataSetType="Dataset" Id="ds_detail" OnColumnChanged="ds_detail_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="NEW_YN" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="SHANGH" size="256" type="STRING"/>
					<colinfo id="ZSAREA" size="256" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="ZPRDGBN" size="256" type="STRING"/>
					<colinfo id="SPEC" size="256" type="STRING"/>
					<colinfo id="GTYPE" size="256" type="STRING"/>
					<colinfo id="TYPE1" size="256" type="STRING"/>
					<colinfo id="TYPE2" size="256" type="STRING"/>
					<colinfo id="TYPE3" size="256" type="STRING"/>
					<colinfo id="ZNUMBER" size="256" type="STRING"/>
					<colinfo id="ZACAPA" size="256" type="STRING"/>
					<colinfo id="ZUSE" size="256" type="STRING"/>
					<colinfo id="ZUSE_NM" size="256" type="STRING"/>
					<colinfo id="ZOPN" size="256" type="STRING"/>
					<colinfo id="ZLEN" size="256" type="STRING"/>
					<colinfo id="ZOUTC" size="256" type="STRING"/>
					<colinfo id="ZUAM" size="256" type="STRING"/>
					<colinfo id="ZCOST" size="256" type="STRING"/>
					<colinfo id="ZCOSTM" size="256" type="STRING"/>
					<colinfo id="ZEAM" size="256" type="STRING"/>
					<colinfo id="SHANG" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="SONNR" size="256" type="STRING"/>
					<colinfo id="INCRTF_TP" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDCD" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDNM" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SNDSYS" size="256" summ="default" type="STRING"/>
					<colinfo id="SID" size="256" summ="default" type="STRING"/>
					<colinfo id="MFLIFNRT" size="256" summ="default" type="STRING"/>
					<colinfo id="DMSTAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CSLIFNRT" size="256" summ="default" type="STRING"/>
					<colinfo id="MARGIN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZUAMP" size="256" summ="default" type="STRING"/>
					<colinfo id="ZCOSTP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error">
				<Contents>
					<colinfo id="IDX" size="256" type="STRING"/>
					<colinfo id="ERRMSG" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_waerk">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_merge">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="SHANGH" size="256" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="SPEC" size="256" type="STRING"/>
					<colinfo id="GTYPE" size="256" type="STRING"/>
					<colinfo id="TYPE1" size="256" type="STRING"/>
					<colinfo id="TYPE2" size="256" type="STRING"/>
					<colinfo id="TYPE3" size="256" type="STRING"/>
					<colinfo id="ZNUMBER" size="256" type="STRING"/>
					<colinfo id="ZUSE" size="256" type="STRING"/>
					<colinfo id="ZOPN" size="256" type="STRING"/>
					<colinfo id="ZLEN" size="256" type="STRING"/>
					<colinfo id="ZUAM" size="256" type="STRING"/>
					<colinfo id="ZCOST" size="256" type="STRING"/>
					<colinfo id="ZEAM" size="256" type="STRING"/>
					<colinfo id="SHANG" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_spart_cd">
				<Contents>
					<colinfo id="CODE" size="1" type="STRING"/>
					<colinfo id="CODE_NAME" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zprgflg">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_vkbur">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<colinfo id="DTEXT2" size="90" type="STRING"/>
					<colinfo id="DTEXT3" size="120" type="STRING"/>
					<colinfo id="DTEXT4" size="9" type="STRING"/>
					<colinfo id="CODE2" size="2" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_head">
				<Contents>
					<colinfo id="BS101_AD1" size="300" type="STRING"/>
					<colinfo id="BS101_AD2" size="300" type="STRING"/>
					<colinfo id="BS101_CDT" size="24" type="STRING"/>
					<colinfo id="BS101_CID" size="30" type="STRING"/>
					<colinfo id="BS101_EAM" size="22" type="DECIMAL"/>
					<colinfo id="BS101_FCD" size="6" type="STRING"/>
					<colinfo id="BS101_FRT" size="22" type="DECIMAL"/>
					<colinfo id="BS101_GNM" size="300" type="STRING"/>
					<colinfo id="BS101_LCD" size="6" type="STRING"/>
					<colinfo id="BS101_LDT" size="24" type="STRING"/>
					<colinfo id="BS101_LRT" size="22" type="DECIMAL"/>
					<colinfo id="BS101_MCD" size="6" type="STRING"/>
					<colinfo id="BS101_MRT" size="22" type="DECIMAL"/>
					<colinfo id="BS101_PST" size="6" type="STRING"/>
					<colinfo id="BS101_RDT" size="18" type="STRING"/>
					<colinfo id="BS101_RMK" size="600" type="STRING"/>
					<colinfo id="BS101_SEQ" size="15" type="STRING"/>
					<colinfo id="BS101_SPT" size="300" type="STRING"/>
					<colinfo id="BS101_TEL" size="90" type="STRING"/>
					<colinfo id="BS101_ZIP" size="18" type="STRING"/>
					<colinfo id="NAME1" size="105" type="STRING"/>
					<colinfo id="BS101_QTY" size="256" type="STRING"/>
					<colinfo id="BS101_OAM" size="256" type="STRING"/>
					<colinfo id="BS101_RAT" size="256" type="STRING"/>
					<colinfo id="BS101_PID" size="256" type="STRING"/>
					<colinfo id="BS101_GBN" size="256" type="STRING"/>
					<record>
						<BS101_AD1></BS101_AD1>
						<BS101_AD2></BS101_AD2>
						<BS101_CDT></BS101_CDT>
						<BS101_CID></BS101_CID>
						<BS101_EAM/>
						<BS101_FCD></BS101_FCD>
						<BS101_FRT/>
						<BS101_GBN></BS101_GBN>
						<BS101_GNM></BS101_GNM>
						<BS101_LCD></BS101_LCD>
						<BS101_LDT></BS101_LDT>
						<BS101_LRT/>
						<BS101_MCD></BS101_MCD>
						<BS101_MRT/>
						<BS101_OAM></BS101_OAM>
						<BS101_PID></BS101_PID>
						<BS101_PST></BS101_PST>
						<BS101_QTY></BS101_QTY>
						<BS101_RAT></BS101_RAT>
						<BS101_RDT></BS101_RDT>
						<BS101_RMK></BS101_RMK>
						<BS101_SEQ></BS101_SEQ>
						<BS101_SPT></BS101_SPT>
						<BS101_TEL></BS101_TEL>
						<BS101_ZIP></BS101_ZIP>
						<NAME1></NAME1>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_sukum">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="INT"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="STRING"/>
					<colinfo id="AGENT" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="ATNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="FR_QTDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="TO_QTDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="FR_ZESTDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="TO_ZESTDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBUR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<colinfo id="ZPRGFLG" size="256" summ="default" type="STRING"/>
					<colinfo id="SMAN" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCKGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZFLG" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDCD" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDSEQ" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond1">
				<Contents>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<record>
						<QTNUM></QTNUM>
						<QTSER></QTSER>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zregn1">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_vkgrp">
				<Contents>
					<colinfo id="CODE" size="9" type="STRING"/>
					<colinfo id="CODE_NAME" size="60" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_shangh">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<record>
						<CODE>국내</CODE>
						<CODE_NAME>국내</CODE_NAME>
					</record>
					<record>
						<CODE>상해</CODE>
						<CODE_NAME>상해</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template0" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template1" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="INT"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template2" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template3" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template4" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template5" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template6" OnColumnChanged="ds_template_OnColumnChanged" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template_save">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list1">
				<Contents>
					<colinfo id="GNM" size="256" summ="default" type="STRING"/>
					<colinfo id="SPT" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY" size="256" summ="default" type="STRING"/>
					<colinfo id="EAM" size="256" summ="default" type="STRING"/>
					<colinfo id="OAM" size="256" summ="default" type="STRING"/>
					<colinfo id="RAT" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM" size="256" summ="default" type="STRING"/>
					<colinfo id="CDT" size="256" summ="default" type="STRING"/>
					<colinfo id="COM" size="256" summ="default" type="STRING"/>
					<colinfo id="RDT" size="256" summ="default" type="STRING"/>
					<colinfo id="MON" size="256" summ="default" type="STRING"/>
					<colinfo id="AD1" size="256" summ="default" type="STRING"/>
					<colinfo id="AD2" size="256" summ="default" type="STRING"/>
					<colinfo id="TEL" size="256" summ="default" type="STRING"/>
					<colinfo id="FAX" size="256" summ="default" type="STRING"/>
					<colinfo id="CEL" size="256" summ="default" type="STRING"/>
					<colinfo id="NAM" size="256" summ="default" type="STRING"/>
					<colinfo id="T01" size="256" summ="default" type="STRING"/>
					<colinfo id="T02" size="256" summ="default" type="STRING"/>
					<colinfo id="T03" size="256" summ="default" type="STRING"/>
					<colinfo id="T04" size="256" summ="default" type="STRING"/>
					<colinfo id="T05" size="256" summ="default" type="STRING"/>
					<colinfo id="T06" size="256" summ="default" type="STRING"/>
					<colinfo id="T07" size="256" summ="default" type="STRING"/>
					<colinfo id="T08" size="256" summ="default" type="STRING"/>
					<colinfo id="T09" size="256" summ="default" type="STRING"/>
					<colinfo id="T10" size="256" summ="default" type="STRING"/>
					<colinfo id="PID" size="256" summ="default" type="STRING"/>
					<colinfo id="P01" size="256" summ="default" type="STRING"/>
					<colinfo id="P02" size="256" summ="default" type="STRING"/>
					<colinfo id="P03" size="256" summ="default" type="STRING"/>
					<colinfo id="P04" size="256" summ="default" type="STRING"/>
					<colinfo id="C01" size="256" summ="default" type="STRING"/>
					<colinfo id="C02" size="256" summ="default" type="STRING"/>
					<colinfo id="C03" size="256" summ="default" type="STRING"/>
					<colinfo id="C04" size="256" summ="default" type="STRING"/>
					<colinfo id="PST" size="256" summ="default" type="STRING"/>
					<colinfo id="PST_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="MNO" size="256" summ="default" type="STRING"/>
					<colinfo id="SPART" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT" size="256" summ="default" type="STRING"/>
					<colinfo id="MAIL" size="256" summ="default" type="STRING"/>
					<colinfo id="D01" size="256" summ="default" type="STRING"/>
					<colinfo id="D02" size="256" summ="default" type="STRING"/>
					<colinfo id="D03" size="256" summ="default" type="STRING"/>
					<colinfo id="D04" size="256" summ="default" type="STRING"/>
					<colinfo id="AGNTP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list2">
				<Contents>
					<colinfo id="RNO_01" size="256" summ="default" type="STRING"/>
					<colinfo id="USE_01" size="256" summ="default" type="STRING"/>
					<colinfo id="SPC_01" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY_01" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT_01" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM_01" size="256" summ="default" type="STRING"/>
					<colinfo id="UNM_01" size="256" summ="default" type="STRING"/>
					<colinfo id="RNO_02" size="256" summ="default" type="STRING"/>
					<colinfo id="USE_02" size="256" summ="default" type="STRING"/>
					<colinfo id="SPC_02" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY_02" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT_02" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM_02" size="256" summ="default" type="STRING"/>
					<colinfo id="UNM_02" size="256" summ="default" type="STRING"/>
					<colinfo id="RNO_03" size="256" summ="default" type="STRING"/>
					<colinfo id="USE_03" size="256" summ="default" type="STRING"/>
					<colinfo id="SPC_03" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY_03" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT_03" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM_03" size="256" summ="default" type="STRING"/>
					<colinfo id="UNM_03" size="256" summ="default" type="STRING"/>
					<colinfo id="RNO_04" size="256" summ="default" type="STRING"/>
					<colinfo id="USE_04" size="256" summ="default" type="STRING"/>
					<colinfo id="SPC_04" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY_04" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT_04" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM_04" size="256" summ="default" type="STRING"/>
					<colinfo id="UNM_04" size="256" summ="default" type="STRING"/>
					<colinfo id="RNO_05" size="256" summ="default" type="STRING"/>
					<colinfo id="USE_05" size="256" summ="default" type="STRING"/>
					<colinfo id="SPC_05" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY_05" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT_05" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM_05" size="256" summ="default" type="STRING"/>
					<colinfo id="UNM_05" size="256" summ="default" type="STRING"/>
					<colinfo id="RNO_06" size="256" summ="default" type="STRING"/>
					<colinfo id="USE_06" size="256" summ="default" type="STRING"/>
					<colinfo id="SPC_06" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY_06" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT_06" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM_06" size="256" summ="default" type="STRING"/>
					<colinfo id="UNM_06" size="256" summ="default" type="STRING"/>
					<colinfo id="RNO_07" size="256" summ="default" type="STRING"/>
					<colinfo id="USE_07" size="256" summ="default" type="STRING"/>
					<colinfo id="SPC_07" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY_07" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT_07" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM_07" size="256" summ="default" type="STRING"/>
					<colinfo id="UNM_07" size="256" summ="default" type="STRING"/>
					<colinfo id="RNO_08" size="256" summ="default" type="STRING"/>
					<colinfo id="USE_08" size="256" summ="default" type="STRING"/>
					<colinfo id="SPC_08" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY_08" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT_08" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM_08" size="256" summ="default" type="STRING"/>
					<colinfo id="UNM_08" size="256" summ="default" type="STRING"/>
					<colinfo id="RNO_09" size="256" summ="default" type="STRING"/>
					<colinfo id="USE_09" size="256" summ="default" type="STRING"/>
					<colinfo id="SPC_09" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY_09" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT_09" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM_09" size="256" summ="default" type="STRING"/>
					<colinfo id="UNM_09" size="256" summ="default" type="STRING"/>
					<colinfo id="RNO_10" size="256" summ="default" type="STRING"/>
					<colinfo id="USE_10" size="256" summ="default" type="STRING"/>
					<colinfo id="SPC_10" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY_10" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT_10" size="256" summ="default" type="STRING"/>
					<colinfo id="GAM_10" size="256" summ="default" type="STRING"/>
					<colinfo id="UNM_10" size="256" summ="default" type="STRING"/>
					<colinfo id="QTY" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1_01" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2_01" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3_01" size="256" summ="default" type="STRING"/>
					<colinfo id="ZOPN_01" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN_01" size="256" summ="default" type="STRING"/>
					<colinfo id="EA_01" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1_02" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2_02" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3_02" size="256" summ="default" type="STRING"/>
					<colinfo id="ZOPN_02" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN_02" size="256" summ="default" type="STRING"/>
					<colinfo id="EA_02" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1_03" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2_03" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3_03" size="256" summ="default" type="STRING"/>
					<colinfo id="ZOPN_03" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN_03" size="256" summ="default" type="STRING"/>
					<colinfo id="EA_03" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1_04" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2_04" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3_04" size="256" summ="default" type="STRING"/>
					<colinfo id="ZOPN_04" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN_04" size="256" summ="default" type="STRING"/>
					<colinfo id="EA_04" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1_05" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2_05" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3_05" size="256" summ="default" type="STRING"/>
					<colinfo id="ZOPN_05" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN_05" size="256" summ="default" type="STRING"/>
					<colinfo id="EA_05" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1_06" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2_06" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3_06" size="256" summ="default" type="STRING"/>
					<colinfo id="ZOPN_06" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN_06" size="256" summ="default" type="STRING"/>
					<colinfo id="EA_06" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1_07" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2_07" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3_07" size="256" summ="default" type="STRING"/>
					<colinfo id="ZOPN_07" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN_07" size="256" summ="default" type="STRING"/>
					<colinfo id="EA_07" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1_08" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2_08" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3_08" size="256" summ="default" type="STRING"/>
					<colinfo id="ZOPN_08" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN_08" size="256" summ="default" type="STRING"/>
					<colinfo id="EA_08" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1_09" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2_09" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3_09" size="256" summ="default" type="STRING"/>
					<colinfo id="ZOPN_09" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN_09" size="256" summ="default" type="STRING"/>
					<colinfo id="EA_09" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE1_10" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE2_10" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE3_10" size="256" summ="default" type="STRING"/>
					<colinfo id="ZOPN_10" size="256" summ="default" type="STRING"/>
					<colinfo id="ZLEN_10" size="256" summ="default" type="STRING"/>
					<colinfo id="EA_10" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user0">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user1">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user2">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user3">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user4">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user5">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_user6">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template_add">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="INT"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_check">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="3" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PSPID" size="24" type="STRING"/>
					<colinfo id="POSID" size="24" type="STRING"/>
					<colinfo id="ATYPE" size="30" type="STRING"/>
					<colinfo id="GUBUN" size="1" type="STRING"/>
					<colinfo id="BLSEQ" size="6" type="STRING"/>
					<colinfo id="BLNUM" size="10" type="STRING"/>
					<colinfo id="BLNAM" size="50" type="STRING"/>
					<colinfo id="MESSG" size="50" type="STRING"/>
					<colinfo id="STATE" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zgtype">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="GTYPE" size="256" type="STRING"/>
					<colinfo id="GTYPEO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_inco1">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_class">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="CLASS_CD" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_temp" OnRowPosChanged="ds_detail_OnRowPosChanged">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
					<colinfo id="DISPTP" size="256" type="STRING"/>
					<colinfo id="MODITP" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_atnam">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="KLART" size="256" type="STRING"/>
					<colinfo id="CLASS1" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="ATNAM" size="256" type="STRING"/>
					<colinfo id="WHERE" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zregn2">
				<Contents>
					<colinfo id="CLASS1" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="ATNAM" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="ATINN" size="256" type="STRING"/>
					<colinfo id="ATZHL" size="256" type="STRING"/>
					<colinfo id="ATWRT" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zregn3">
				<Contents>
					<colinfo id="CLASS1" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="ATNAM" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="ATINN" size="256" type="STRING"/>
					<colinfo id="ATZHL" size="256" type="STRING"/>
					<colinfo id="ATWRT" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_duty_block">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME>ALL</CODE_NAME>
					</record>
					<record>
						<CODE>00</CODE>
						<CODE_NAME>0)&#32;기본&#32;LAYOUT</CODE_NAME>
					</record>
					<record>
						<CODE>01</CODE>
						<CODE_NAME>1)&#32;카&#32;자중</CODE_NAME>
					</record>
					<record>
						<CODE>02</CODE>
						<CODE_NAME>2)&#32;TM&#32;&amp;&#32;3)&#32;로핑</CODE_NAME>
					</record>
					<record>
						<CODE>04</CODE>
						<CODE_NAME>4)&#32;TM&#32;모터&#32;&amp;&#32;5)&#32;TM&#32;인버터</CODE_NAME>
					</record>
					<record>
						<CODE>06</CODE>
						<CODE_NAME>6)&#32;TM&#32;MAIN&#32;SHEAVE&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>08</CODE>
						<CODE_NAME>8)&#32;TM&#32;RPM</CODE_NAME>
					</record>
					<record>
						<CODE>09</CODE>
						<CODE_NAME>9)&#32;DEF&#32;SHEAVE&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>10</CODE>
						<CODE_NAME>10)&#32;TM&#32;WRAP</CODE_NAME>
					</record>
					<record>
						<CODE>11</CODE>
						<CODE_NAME>11)&#32;ROPE&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>12</CODE>
						<CODE_NAME>12)&#32;ROPE&#32;본수</CODE_NAME>
					</record>
					<record>
						<CODE>13</CODE>
						<CODE_NAME>13)&#32;COMPEN&#32;CHAIN&#32;수량</CODE_NAME>
					</record>
					<record>
						<CODE>14</CODE>
						<CODE_NAME>14)&#32;COMPEN&#32;CHAIN&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>15</CODE>
						<CODE_NAME>15)&#32;SAFETY</CODE_NAME>
					</record>
					<record>
						<CODE>16</CODE>
						<CODE_NAME>16)&#32;CAR&#32;RAIL</CODE_NAME>
					</record>
					<record>
						<CODE>17</CODE>
						<CODE_NAME>17)&#32;CWT&#32;RAIL</CODE_NAME>
					</record>
					<record>
						<CODE>18</CODE>
						<CODE_NAME>18)&#32;GOVERNOR</CODE_NAME>
					</record>
					<record>
						<CODE>19</CODE>
						<CODE_NAME>19)&#32;CAR&#32;GUIDE&#32;SHOE</CODE_NAME>
					</record>
					<record>
						<CODE>20</CODE>
						<CODE_NAME>20)&#32;CWT&#32;GUIDE&#32;SHOE</CODE_NAME>
					</record>
					<record>
						<CODE>21</CODE>
						<CODE_NAME>21)&#32;CAR&#32;BUFFER</CODE_NAME>
					</record>
					<record>
						<CODE>22</CODE>
						<CODE_NAME>22)&#32;CWT.&#32;BUFFER</CODE_NAME>
					</record>
					<record>
						<CODE>23</CODE>
						<CODE_NAME>23)&#32;SUSPEN&#32;SHEAVE&#32;DIA</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_acapa">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ATINN" size="256" type="STRING"/>
					<colinfo id="ATZHL" size="256" type="STRING"/>
					<colinfo id="ATWRT" size="256" type="STRING"/>
					<colinfo id="ZACAPA" size="256" type="STRING"/>
					<colinfo id="SPRAS" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_exchange">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZYEAR" size="256" type="STRING"/>
					<colinfo id="ZMONTH" size="256" type="STRING"/>
					<colinfo id="KRWUSD" size="256" type="STRING"/>
					<colinfo id="KRWJPY" size="256" type="STRING"/>
					<colinfo id="KRWEUR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_email">
				<Contents>
					<colinfo id="FROM" size="256" type="STRING"/>
					<colinfo id="TO" size="256" type="STRING"/>
					<colinfo id="TITLE" size="256" type="STRING"/>
					<colinfo id="CONTENT" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_qtgbn">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<record>
						<CODE>A</CODE>
						<CODE_NAME>실행가</CODE_NAME>
					</record>
					<record>
						<CODE>B</CODE>
						<CODE_NAME>예산가</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_print_detail">
				<Contents>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="NEW_YN" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="SHANGH" size="256" type="STRING"/>
					<colinfo id="ZSAREA" size="256" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="ZPRDGBN" size="256" type="STRING"/>
					<colinfo id="SPEC" size="256" type="STRING"/>
					<colinfo id="GTYPE" size="256" type="STRING"/>
					<colinfo id="TYPE1" size="256" type="STRING"/>
					<colinfo id="TYPE2" size="256" type="STRING"/>
					<colinfo id="TYPE3" size="256" type="STRING"/>
					<colinfo id="ZNUMBER" size="256" type="STRING"/>
					<colinfo id="ZACAPA" size="256" type="STRING"/>
					<colinfo id="ZUSE" size="256" type="STRING"/>
					<colinfo id="ZUSE_NM" size="256" type="STRING"/>
					<colinfo id="ZOPN" size="256" type="STRING"/>
					<colinfo id="ZLEN" size="256" type="STRING"/>
					<colinfo id="ZOUTC" size="256" type="STRING"/>
					<colinfo id="ZUAM" size="256" type="STRING"/>
					<colinfo id="ZCOST" size="256" type="STRING"/>
					<colinfo id="ZCOSTM" size="256" type="STRING"/>
					<colinfo id="ZEAM" size="256" type="STRING"/>
					<colinfo id="SHANG" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="SONNR" size="256" type="STRING"/>
					<colinfo id="ZEAM_ORG" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_print_header">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTDAT" size="256" type="STRING"/>
					<colinfo id="SPART" size="256" type="STRING"/>
					<colinfo id="QTGBN" size="256" type="STRING"/>
					<colinfo id="ZBDTYP" size="256" type="STRING"/>
					<colinfo id="ZPRGFLG" size="256" type="STRING"/>
					<colinfo id="VKBUR" size="256" type="STRING"/>
					<colinfo id="VKGRP" size="256" type="STRING"/>
					<colinfo id="ZKUNNR" size="256" type="STRING"/>
					<colinfo id="ZAGNT" size="256" type="STRING"/>
					<colinfo id="KUNNR" size="256" type="STRING"/>
					<colinfo id="ZCST" size="256" type="STRING"/>
					<colinfo id="ZGNM" size="256" type="STRING"/>
					<colinfo id="ZDEV" size="256" type="STRING"/>
					<colinfo id="GSNAM" size="256" type="STRING"/>
					<colinfo id="ZREGN" size="256" type="STRING"/>
					<colinfo id="ZPID" size="256" type="STRING"/>
					<colinfo id="ZTEL" size="256" type="STRING"/>
					<colinfo id="ZADDR_ZPOST" size="256" type="STRING"/>
					<colinfo id="ZADDR_ADR1" size="256" type="STRING"/>
					<colinfo id="ZADDR_ADR2" size="256" type="STRING"/>
					<colinfo id="SOABLE" size="256" type="STRING"/>
					<colinfo id="ZESTDAT" size="256" type="STRING"/>
					<colinfo id="DELDAT" size="256" type="STRING"/>
					<colinfo id="ZDVMTS" size="256" type="STRING"/>
					<colinfo id="ZSUM_ZNUMBER" size="256" type="STRING"/>
					<colinfo id="ZSUM_ZCOST" size="256" type="STRING"/>
					<colinfo id="ZSUM_ZEAM" size="256" type="STRING"/>
					<colinfo id="ZSUM_SHANG" size="256" type="STRING"/>
					<colinfo id="ZICIF_PPRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_PPCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_PPCD" size="256" type="STRING"/>
					<colinfo id="ZICIF_1STRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_1STCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_1STCD" size="256" type="STRING"/>
					<colinfo id="ZICIF_2STRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_2STCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_2STCD" size="256" type="STRING"/>
					<colinfo id="ZICIF_RMRT" size="256" type="STRING"/>
					<colinfo id="ZICIF_RMCT" size="256" type="STRING"/>
					<colinfo id="ZICIF_RMCD" size="256" type="STRING"/>
					<colinfo id="SPRMK1" size="256" type="STRING"/>
					<colinfo id="SPRMK2" size="256" type="STRING"/>
					<colinfo id="SPRMK3" size="256" type="STRING"/>
					<colinfo id="SPRMK4" size="256" type="STRING"/>
					<colinfo id="SPRMK5" size="256" type="STRING"/>
					<colinfo id="SPRMK6" size="256" type="STRING"/>
					<colinfo id="SPRMK7" size="256" type="STRING"/>
					<colinfo id="SPRMK8" size="256" type="STRING"/>
					<colinfo id="SPRMK9" size="256" type="STRING"/>
					<colinfo id="SPRMK10" size="256" type="STRING"/>
					<colinfo id="ZSOFLG" size="256" type="STRING"/>
					<colinfo id="SONNR" size="256" type="STRING"/>
					<colinfo id="VBELN" size="256" type="STRING"/>
					<colinfo id="AUART" size="256" type="STRING"/>
					<colinfo id="WAERK" size="256" type="STRING"/>
					<colinfo id="CO_DDVRTQ" size="256" type="STRING"/>
					<colinfo id="CO_DEPHTQ" size="256" type="STRING"/>
					<colinfo id="CO_DSSQ" size="256" type="STRING"/>
					<colinfo id="CO_BCLCDTQ" size="256" type="STRING"/>
					<colinfo id="CO_CHPITQ" size="256" type="STRING"/>
					<colinfo id="CO_ASPC" size="256" type="STRING"/>
					<colinfo id="CO_DSV1" size="256" type="STRING"/>
					<colinfo id="CO_DSV1TQ" size="256" type="STRING"/>
					<colinfo id="CO_DSV2" size="256" type="STRING"/>
					<colinfo id="CO_DSV2TQ" size="256" type="STRING"/>
					<colinfo id="INCO" size="256" type="STRING"/>
					<colinfo id="ZLZONE" size="256" type="STRING"/>
					<colinfo id="REGION" size="256" type="STRING"/>
					<colinfo id="BUYR_NM" size="256" type="STRING"/>
					<colinfo id="ZEAM" size="256" type="STRING"/>
					<colinfo id="ZKUNNR_NM" size="256" type="STRING"/>
					<colinfo id="KUNNR_NM" size="256" type="STRING"/>
					<colinfo id="ZAGNT_NM" size="256" type="STRING"/>
					<colinfo id="ZAGNTFLG" size="1" type="STRING"/>
					<colinfo id="INCO2" size="84" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="GTYPE" size="256" type="STRING"/>
					<colinfo id="RTYPE" size="256" type="STRING"/>
					<colinfo id="TYPE1" size="256" type="STRING"/>
					<colinfo id="TYPE2" size="256" type="STRING"/>
					<colinfo id="TYPE3" size="256" type="STRING"/>
					<colinfo id="ZNUMBER" size="256" type="STRING"/>
					<colinfo id="PART_CNT" size="256" type="STRING"/>
					<colinfo id="SHANGH" size="256" type="STRING"/>
					<colinfo id="FA_BYRGBN" size="256" type="STRING"/>
					<colinfo id="ZDELI" size="1" type="STRING"/>
					<colinfo id="TEL" size="20" type="STRING"/>
					<colinfo id="FAX" size="20" type="STRING"/>
					<colinfo id="CEL" size="20" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_jtype">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE>2PZ</CODE>
						<CODE_NAME>2단식</CODE_NAME>
					</record>
					<record>
						<CODE>MPZ</CODE>
						<CODE_NAME>다단식</CODE_NAME>
					</record>
					<record>
						<CODE>MFC</CODE>
						<CODE_NAME>다층순환식</CODE_NAME>
					</record>
					<record>
						<CODE>VRC</CODE>
						<CODE_NAME>수직순환식</CODE_NAME>
					</record>
					<record>
						<CODE>HRC</CODE>
						<CODE_NAME>수평순환식</CODE_NAME>
					</record>
					<record>
						<CODE>ELV</CODE>
						<CODE_NAME>승강기식</CODE_NAME>
					</record>
					<record>
						<CODE>STC</CODE>
						<CODE_NAME>승강슬라이드식</CODE_NAME>
					</record>
					<record>
						<CODE>CRT</CODE>
						<CODE_NAME>평면왕복식</CODE_NAME>
					</record>
					<record>
						<CODE>BPS</CODE>
						<CODE_NAME>자전거&#32;주차장</CODE_NAME>
					</record>
					<record>
						<CODE>LFC</CODE>
						<CODE_NAME>수직반송기</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_headerJ">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="JTYPE1" size="256" summ="default" type="STRING"/>
					<colinfo id="JTYPE2" size="256" summ="default" type="STRING"/>
					<colinfo id="JTYPE3" size="256" summ="default" type="STRING"/>
					<colinfo id="JTYPE4" size="256" summ="default" type="STRING"/>
					<colinfo id="TEXT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_fa_byrgbn">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_t302">
				<Contents>
					<colinfo id="MANDT" size="3" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="10" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="3" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="3" summ="default" type="STRING"/>
					<colinfo id="TWAER" size="5" summ="default" type="STRING"/>
					<colinfo id="MEINH_MH" size="3" summ="default" type="STRING"/>
					<colinfo id="PRDM01" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDM02" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDM03" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDM04" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDM05" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDA01" size="13" summ="default" type="STRING"/>
					<colinfo id="PRDL01" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDL02" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDL03" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDL04" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDL05" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE01" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE02" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE03" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE04" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE05" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE06" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE07" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE08" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE09" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE10" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE11" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE12" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE13" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE14" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE15" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDI01" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDI02" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDI03" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDI04" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMM01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMM02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMM03" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMM04" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMM05" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMA01" size="13" summ="default" type="STRING"/>
					<colinfo id="EQMA02" size="13" summ="default" type="STRING"/>
					<colinfo id="EQML01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQML02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQML03" size="15" summ="default" type="STRING"/>
					<colinfo id="EQML04" size="15" summ="default" type="STRING"/>
					<colinfo id="EQML05" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME03" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME04" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME05" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME06" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME07" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME08" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME09" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME10" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME11" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME12" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME13" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME14" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME15" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME51" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME52" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME53" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME54" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME55" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME56" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME57" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME58" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME59" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME60" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME61" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME62" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME63" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME64" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME65" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME66" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME67" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME68" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME69" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME70" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME71" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME72" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME73" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME74" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME75" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME76" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME77" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME78" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME79" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME80" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME81" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME82" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME83" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME84" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME85" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME86" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME87" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME88" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME89" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMI01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMI02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMI03" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO03" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO04" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO05" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO06" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO07" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO08" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO09" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO10" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO11" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO12" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO13" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO14" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO15" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO16" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO17" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO18" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO19" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO20" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO21" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO22" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO23" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO24" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO25" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO26" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO27" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO28" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO29" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO30" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO31" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO32" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO33" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO34" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO35" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO36" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO37" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO38" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO39" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO40" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM01" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM02" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM03" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM04" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM05" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM07" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM08" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM09" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM10" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM11" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM12" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM13" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM14" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSA01" size="13" summ="default" type="STRING"/>
					<colinfo id="CTSL01" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSL02" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSL03" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSL04" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSL05" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSE01" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSE02" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSE03" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSE04" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSE05" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSI01" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSI02" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSI03" size="15" summ="default" type="STRING"/>
					<colinfo id="ADDT01" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP01" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP02" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP03" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP04" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP05" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP06" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP07" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP08" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP09" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP10" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP11" size="15" summ="default" type="STRING"/>
					<colinfo id="FDS01" size="30" summ="default" type="STRING"/>
					<colinfo id="FDS02" size="30" summ="default" type="STRING"/>
					<colinfo id="FDS03" size="30" summ="default" type="STRING"/>
					<colinfo id="FDS04" size="30" summ="default" type="STRING"/>
					<colinfo id="FDS05" size="30" summ="default" type="STRING"/>
					<colinfo id="FDS06" size="30" summ="default" type="STRING"/>
					<colinfo id="FDS07" size="30" summ="default" type="STRING"/>
					<colinfo id="FDS08" size="30" summ="default" type="STRING"/>
					<colinfo id="FDS09" size="30" summ="default" type="STRING"/>
					<colinfo id="FDS10" size="30" summ="default" type="STRING"/>
					<colinfo id="MODEL" size="6" summ="default" type="STRING"/>
					<colinfo id="CRDAT" size="8" summ="default" type="STRING"/>
					<colinfo id="CRNAM" size="12" summ="default" type="STRING"/>
					<colinfo id="TRDAT" size="8" summ="default" type="STRING"/>
					<colinfo id="TRNAM" size="12" summ="default" type="STRING"/>
					<colinfo id="EDITER" size="12" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="EQME90" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME91" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME92" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME93" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME94" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME95" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME96" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME97" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME98" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME99" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_char">
				<Contents>
					<colinfo id="QTNUM" size="10" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="3" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="3" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="24" summ="default" type="STRING"/>
					<colinfo id="POSID" size="24" summ="default" type="STRING"/>
					<colinfo id="GJAHR" size="4" summ="default" type="STRING"/>
					<colinfo id="POPER" size="3" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="18" summ="default" type="STRING"/>
					<colinfo id="VKBUR" size="4" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="3" summ="default" type="STRING"/>
					<colinfo id="AUART" size="4" summ="default" type="STRING"/>
					<colinfo id="KTGRM" size="2" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="15" summ="default" type="STRING"/>
					<colinfo id="REGIO" size="3" summ="default" type="STRING"/>
					<colinfo id="LZONE" size="10" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="10" summ="default" type="STRING"/>
					<colinfo id="ATNAM" size="30" summ="default" type="STRING"/>
					<colinfo id="ATBEZ" size="30" summ="default" type="STRING"/>
					<colinfo id="VALUE" size="30" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="30" summ="default" type="STRING"/>
					<colinfo id="MESSG" size="20" summ="default" type="STRING"/>
					<colinfo id="UCH_DUTY" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_log">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="LOGMSG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_lifnr">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_brnd_flag">
				<Contents>
					<colinfo id="F_BRND_FLAG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template_org">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="INT"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template_des">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="CHK" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZRMK" size="256" summ="default" type="STRING"/>
					<colinfo id="MCLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PRSEQ" size="256" summ="default" type="INT"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ATFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_ds_header">
				<Contents>
					<colinfo id="SYSID" size="256" summ="default" type="STRING"/>
					<colinfo id="CALLSYS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZFLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="AUART" size="256" summ="default" type="STRING"/>
					<colinfo id="START_IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="END_IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="zprdgbn" size="256" summ="default" type="STRING"/>
					<colinfo id="USER_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="LAND" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_ds_template">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_out_ds_template">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_ds_log">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="PRCSYS" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="LOGMSG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_out_ds_header">
				<Contents>
					<colinfo id="HEAD" size="256" summ="default" type="STRING"/>
					<colinfo id="TIT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_brnd_del">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_rad_sts">
				<Contents>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="FLOORYSNO" size="256" summ="default" type="STRING"/>
					<colinfo id="LAYOUTYSNO" size="256" summ="default" type="STRING"/>
					<colinfo id="APPLYYSNO" size="256" summ="default" type="STRING"/>
					<colinfo id="SAVEYSNO" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_build">
				<Contents>
					<colinfo id="BUILDUSE" size="6" type="STRING"/>
					<colinfo id="STEXT" size="120" type="STRING"/>
					<colinfo id="WHERE" size="256" type="STRING"/>
					<record>
						<BUILDUSE></BUILDUSE>
						<STEXT></STEXT>
						<WHERE></WHERE>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_build">
				<Contents>
					<colinfo id="BUILDUSE" size="256" type="STRING"/>
					<colinfo id="STEXT" size="256" type="STRING"/>
					<colinfo id="BUILDUSE_L" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_build_l">
				<Contents>
					<colinfo id="BUILDUSE_L" size="256" type="STRING"/>
					<colinfo id="STEXT" size="256" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<AxMSIE Bottom="73" Height="1" Id="msie_Test" Left="64" Right="65" Top="72" Width="1"></AxMSIE>
		<Shape BKColor="user0" Bottom="60" Height="26" Id="Shape1" Left="8" LineColor="user1" Right="970" TabOrder="1" Top="34" Type="Rectangle" Width="962"></Shape>
		<Static Align="Right" Height="24" Id="st_qtnum" Left="9" Style="sty_lb_search" TabOrder="2" Text="견적번호&#32;" Top="35" VAlign="Middle" Width="72"></Static>
		<Static Align="Right" Height="24" Id="st_qtdat" Left="480" Style="sty_lb_search" TabOrder="3" Text="견적작성일&#32;" Top="35" VAlign="Middle" Width="72"></Static>
		<Calendar BindDataset="ds_header" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="QTDAT" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cal_qtdat" Left="556" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_form" SundayTextColor="user35" TabOrder="4" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="37" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="105"></Calendar>
		<Static Align="Right" Height="24" Id="st_name" Left="-116" Style="sty_lb_search" TabOrder="5" Text="현장명&#32;" Top="-6" VAlign="Middle" Width="61"></Static>
		<Static Align="Right" Height="24" Id="st_ser" Left="208" Style="sty_lb_search" TabOrder="6" Text="견적차수&#32;" Top="35" VAlign="Middle" Width="72"></Static>
		<Edit BindDataset="ds_header" Border="Flat" Column="QTNUM" Enable="FALSE" Height="20" Id="ed_qtnum" Left="85" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="7" Top="37" Width="105"></Edit>
		<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="QTSER" Enable="FALSE" Height="20" Id="ed_ser" ImeMode="native" Left="284" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="8" Top="37" Width="60"></Edit>
		<Div Height="30" Id="div_btn" TabOrder="9" Text="Div0" Url="WB01::CommBtnForm.xml" Width="976">
			<Contents></Contents>
		</Div>
		<Tab Border="Flat" FixedImage="FALSE" Font="굴림,9" Height="499" Id="tab" MouseOverColor="user16" OnChanged="tab_OnChanged" SelColor="user15" SelectFont="굴림,9" Style="sty_tab" TabIndex="1" TabOrder="10" Top="64" Width="974">
			<Contents>
				<TabPage BorderColor="black" Height="474" Id="main" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="19" Text="견적내용" Top="23" Width="970">
					<Div Height="468" Id="div_header" Left="2" TabOrder="1" Text="Div0" Width="964">
						<Contents>
							<Shape BKColor="user0" Bottom="151" Height="26" Id="Shape6" Left="1" LineColor="user1" Right="963" TabOrder="2" Top="125" Type="Rectangle" Width="962"></Shape>
							<Shape BKColor="user0" Bottom="26" Height="26" Id="Shape1" Left="1" LineColor="user1" Right="963" TabOrder="40" Top="0" Type="Rectangle" Width="962"></Shape>
							<Shape BKColor="user0" Bottom="126" Height="26" Id="Shape5" Left="1" LineColor="user1" Right="963" TabOrder="39" Top="100" Type="Rectangle" Width="962"></Shape>
							<Shape BKColor="user0" Bottom="101" Height="26" Id="Shape4" Left="1" LineColor="user1" Right="963" TabOrder="38" Top="75" Type="Rectangle" Width="962"></Shape>
							<Shape BKColor="user0" Bottom="76" Height="26" Id="Shape3" Left="1" LineColor="user1" Right="963" TabOrder="37" Top="50" Type="Rectangle" Width="962"></Shape>
							<Shape BKColor="user0" Bottom="51" Height="26" Id="Shape2" Left="1" LineColor="user1" Right="963" TabOrder="36" Top="25" Type="Rectangle" Width="962"></Shape>
							<Calendar BindDataset="ds_header" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="ZESTDAT" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cal_zestdat" Left="76" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_form" SundayTextColor="user35" TabOrder="5" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="53" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="105"></Calendar>
							<Static Align="Right" Height="24" Id="st_zestdat" Left="2" Style="sty_lb_search" TabOrder="4" Text="입찰예정일&#32;" Top="51" VAlign="Middle" Width="72"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="VKGRP" DataColumn="CODE_NAME" Enable="FALSE" Height="20" Id="cb_vkgrp" InnerDataset="ds_vkgrp" Left="358" Style="sty_ipt_form" TabOrder="3" Top="2" Width="107"></Combo>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="VKBUR" DataColumn="CODE_NAME" Enable="FALSE" Height="20" Id="cb_vkbur" InnerDataset="ds_vkbur" Left="252" OnChanged="cb_vkbur_OnChanged" Style="sty_ipt_form" TabOrder="2" Top="2" Width="107"></Combo>
							<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="ZADDR_ADR2" Height="20" Id="ed_addr2" Left="434" MaxLength="100" Style="sty_ipt_form" TabOrder="18" Top="128" Width="99"></Edit>
							<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="ZADDR_ADR1" Height="20" Id="ed_addr1" Left="157" MaxLength="100" Style="sty_ipt_form" TabOrder="17" Top="128" Width="275"></Edit>
							<Button Height="18" Id="btn_zipcode" ImageID="btn_icon_search" Left="138" OnClick="ufn_openZipcode1" TabOrder="16" Text="Button0" Top="129" Transparent="TRUE" Width="18"></Button>
							<MaskEdit BindDataset="ds_header" Border="Flat" Column="ZADDR_ZPOST" Height="20" Id="med_zipcode" Left="76" LeftMargin="10" Mask="######" MaxLength="7" Style="sty_ipt_form" TabOrder="15" Top="128" Type="STRING" Width="60"></MaskEdit>
							<Static Align="Right" Height="24" Id="st_addr" Left="2" Style="sty_lb_search" TabOrder="11" Text="현장주소&#32;" Top="126" VAlign="Middle" Width="72"></Static>
							<Edit BindDataset="ds_header" Border="Flat" Column="ZTEL" Height="20" Id="ed_tel" ImeMode="none" Left="253" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="13" Top="103" Width="106"></Edit>
							<Static Align="Right" Height="24" Id="st_tel" Left="183" Style="sty_lb_search" TabOrder="13" Text="현장연락처&#32;" Top="101" VAlign="Middle" Width="69"></Static>
							<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="ZPID" Height="20" Id="ed_pid" ImeMode="native" Left="76" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="12" Top="103" Width="105"></Edit>
							<Static Align="Right" Height="24" Id="st_pid" Left="2" Style="sty_lb_search" TabOrder="15" Text="현장담당자&#32;" Top="101" VAlign="Middle" Width="72"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="ATWRT" Column="ZLZONE" DataColumn="ATWTB" Height="20" Id="cb_zregn2" InnerDataset="ds_zregn2" Left="468" OnChanged="cb_zregn2_OnChanged" Style="sty_ipt_search" TabOrder="10" Top="78" Width="106"></Combo>
							<Static Align="Right" Height="24" Id="st_zregn1" Left="294" Style="sty_lb_search" TabOrder="17" Text="지역/광역&#32;" Top="76" VAlign="Middle" Width="69"></Static>
							<Static Align="Right" Border="None" Height="24" Id="st_dev" Left="578" Style="sty_lb_search" TabOrder="18" Text="시행사&#32;" Top="26" VAlign="Middle" Width="57"></Static>
							<Checkbox BindDataset="ds_header" Column="ZCST" Height="22" Id="chk_cst" Left="858" Style="sty_ipt_form_ind" TabOrder="20" Top="51" Value="FALSE" Width="16"></Checkbox>
							<Static Align="Right" Height="24" Id="st_kunnr" Left="183" Style="sty_lb_search" TabOrder="20" Text="고객번호&#32;" Top="26" VAlign="Middle" Width="69"></Static>
							<Edit BindDataset="ds_header" Border="Flat" Column="ZAGNT_NM" Height="20" Id="ed_zagnt" ImeMode="native" Left="855" Style="sty_ipt_search" TabOrder="4" Top="28" Width="105"></Edit>
							<Static Align="Right" Height="24" Id="st_zagnt" Left="779" Style="sty_lb_search" TabOrder="22" Text="대리점명&#32;" Top="26" VAlign="Middle" Width="72"></Static>
							<Static Align="Right" Height="24" Id="st_sman" Left="514" Style="sty_lb_search" TabOrder="23" Text="담당자&#32;" Top="1" VAlign="Middle" Width="57"></Static>
							<Div BKColor="user0" Height="22" Id="div_sman" Left="572" OnLoadCompleted="fn_OnLoadCompleted" TabOrder="4" Text="Div0" Top="2" Url="COM::Coms002.xml" Width="180">
								<Contents></Contents>
							</Div>
							<Static Align="Right" Height="24" Id="st_vkbur" Left="183" Style="sty_lb_search" TabOrder="25" Text="부서/팀" Top="1" VAlign="Middle" Width="69"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="ZPRGFLG" DataColumn="CODE_NAME" Enable="FALSE" Height="20" Id="cb_zprgflg" InnerDataset="ds_zprgflg" Left="854" Style="sty_ipt_search" TabOrder="21" Top="2" Width="107"></Combo>
							<Static Align="Right" Height="24" Id="st_zprgflg" Left="779" Style="sty_lb_search" TabOrder="27" Text="진행상태&#32;" Top="1" VAlign="Middle" Width="72"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="BUILDUSE" Column="ZBDTYP" DataColumn="STEXT" Height="20" Id="cb_zbdtyp" InnerDataset="ds_list_build" Left="183" Style="sty_ipt_form" TabOrder="8" Top="78" Width="110"></Combo>
							<Static Align="Right" Height="24" Id="st_zbdtyp" Left="2" Style="sty_lb_search" TabOrder="29" Text="건물용도&#32;" Top="76" VAlign="Middle" Width="72"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="SPART" DataColumn="CODE_NAME" Enable="FALSE" Height="20" Id="cb_spart" InnerDataset="ds_spart_cd" Left="75" Style="sty_ipt_form" TabOrder="22" Top="2" Width="107"></Combo>
							<Static Align="Right" Height="24" Id="st_spart" Left="2" Style="sty_lb_search" TabOrder="31" Text="제품군&#32;" Top="1" VAlign="Middle" Width="72"></Static>
							<Calendar BindDataset="ds_header" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="DELDAT" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cal_deldat" Left="253" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_form" SundayTextColor="user35" TabOrder="6" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="53" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="106"></Calendar>
							<Static Align="Right" Height="24" Id="st_deldat" Left="183" Style="sty_lb_search" TabOrder="33" Text="납기예정일&#32;" Top="51" VAlign="Middle" Width="69"></Static>
							<Edit BindDataset="ds_header" Border="Flat" Column="GSNAM" Enable="FALSE" Height="20" Id="ed_gsnam" ImeMode="english" Left="76" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="23" Top="28" UpperOnly="TRUE" Width="105"></Edit>
							<Static Align="Right" Height="24" Id="st_gsnam" Left="2" Style="sty_lb_search" TabOrder="35" Text="공사명&#32;" Top="26" VAlign="Middle" Width="72"></Static>
							<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_header" BkColor2="default" BoldHead="true" Border="Flat" Bottom="241" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="61" Id="grd_zicif" InputPanel="FALSE" Left="2" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnExpandEdit="grd_head_OnExpandEdit" Right="964" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="180" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="962">
								<contents>
									<format id="Default">
										<columns>
											<col width="40"/>
											<col width="50"/>
											<col width="125"/>
											<col width="40"/>
											<col width="50"/>
											<col width="125"/>
											<col width="40"/>
											<col width="50"/>
											<col width="125"/>
											<col width="40"/>
											<col width="50"/>
											<col width="125"/>
											<col width="70"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" colspan="3" display="text" font="굴림,9" text="선&#32;수&#32;금"/>
											<cell align="center" col="3" color="user21" colspan="3" display="text" font="굴림,9" text="1&#32;차&#32;중&#32;도&#32;금"/>
											<cell align="center" col="6" color="user21" colspan="3" display="text" font="굴림,9" text="2&#32;차&#32;중&#32;도&#32;금"/>
											<cell align="center" col="9" color="user21" colspan="3" display="text" font="굴림,9" text="잔&#32;금"/>
											<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="기&#32;타"/>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" row="1" text="율(%)"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" row="1" text="조&#32;건"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" row="1" text="내&#32;용"/>
											<cell align="center" col="3" color="user21" display="text" font="굴림,9" row="1" text="율(%)"/>
											<cell align="center" col="4" color="user21" display="text" font="굴림,9" row="1" text="조&#32;건"/>
											<cell align="center" col="5" color="user21" display="text" font="굴림,9" row="1" text="내&#32;용"/>
											<cell align="center" col="6" color="user21" display="text" font="굴림,9" row="1" text="율(%)"/>
											<cell align="center" col="7" color="user21" display="text" font="굴림,9" row="1" text="조&#32;건"/>
											<cell align="center" col="8" color="user21" display="text" font="굴림,9" row="1" text="내&#32;용"/>
											<cell align="center" col="9" color="user21" display="text" font="굴림,9" row="1" text="율(%)"/>
											<cell align="center" col="10" color="user21" display="text" font="굴림,9" row="1" text="조&#32;건"/>
											<cell align="center" col="11" color="user21" display="text" font="굴림,9" row="1" text="내&#32;용"/>
											<cell align="center" col="12" color="user21" display="text" font="굴림,9" row="1" text="납기개월수"/>
										</head>
										<body>
											<cell align="right" bkcolor2="user22" col="0" colid="ZICIF_PPRT" display="number" edit="number"/>
											<cell align="right" bkcolor2="user22" col="1" colid="ZICIF_PPCD" combocol="CODE" combodataset="ds_sukum" combotext="CODE_NAME" display="combo" edit="combo"/>
											<cell align="left" bkcolor2="user22" col="2" colid="ZICIF_PPCT" display="text" edit="normal"/>
											<cell align="right" bkcolor2="user22" col="3" colid="ZICIF_1STRT" display="number" edit="number"/>
											<cell align="right" bkcolor2="user22" col="4" colid="ZICIF_1STCD" combocol="CODE" combodataset="ds_sukum" combotext="CODE_NAME" display="combo" edit="combo"/>
											<cell align="left" bkcolor2="user22" col="5" colid="ZICIF_1STCT" display="text" edit="normal"/>
											<cell align="right" bkcolor2="user22" col="6" colid="ZICIF_2STRT" display="number" edit="number"/>
											<cell align="right" bkcolor2="user22" col="7" colid="ZICIF_2STCD" combocol="CODE" combodataset="ds_sukum" combotext="CODE_NAME" display="combo" edit="combo"/>
											<cell align="left" bkcolor2="user22" col="8" colid="ZICIF_2STCT" display="text" edit="normal"/>
											<cell align="right" bkcolor2="user22" col="9" colid="ZICIF_RMRT" display="number" edit="number"/>
											<cell align="right" bkcolor2="user22" col="10" colid="ZICIF_RMCD" combocol="CODE" combodataset="ds_sukum" combotext="CODE_NAME" display="combo" edit="combo"/>
											<cell align="left" bkcolor2="user22" col="11" colid="ZICIF_RMCT" display="text" edit="normal"/>
											<cell align="center" bkcolor2="user22" col="12" colid="ZDVMTS" display="number" edit="number"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_detail" BkColor2="default" BoldHead="true" Border="Flat" Bottom="387" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="35" Height="119" Id="grd_detail" InputPanel="FALSE" Left="3" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellClick="grd_detail_OnCellClick" OnCellPosChanged="tab_main_div_header_grd_detail_OnCellPosChanged" OnEnterEdit="tab_main_div_header_grd_detail_OnEnterEdit" OnExpandEdit="grd_detail_OnExpandEdit" OnKeyDown="grd_detail_OnKeyDown" Right="965" RowHeight="20" Style="sty_grid" TabOrder="33" TabStop="true" Top="268" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="962">
								<contents>
									<format id="Default">
										<columns>
											<col width="54"/>
											<col width="30"/>
											<col width="42"/>
											<col width="36"/>
											<col width="54"/>
											<col width="70"/>
											<col width="65"/>
											<col width="35"/>
											<col width="35"/>
											<col width="41"/>
											<col width="46"/>
											<col width="50"/>
											<col width="64"/>
											<col width="35"/>
											<col width="70"/>
											<col width="70"/>
											<col width="70"/>
											<col width="40"/>
											<col width="40"/>
											<col width="80"/>
											<col width="70"/>
											<col width="34"/>
											<col width="29"/>
											<col width="29"/>
										</columns>
										<head>
											<cell align="center" col="0" colid="QTSEQ" color="user21" display="text" font="굴림,9" text="MONO"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="변경"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="국내산&#10;상해산"/>
											<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="판매&#10;지역"/>
											<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="브랜드"/>
											<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="기종"/>
											<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="용도&#10;(설치형태)"/>
											<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="인승&#10;(폭)"/>
											<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="용량"/>
											<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="속도&#10;(각도)"/>
											<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="층수&#10;(높이)"/>
											<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="정지층수&#10;(속도)"/>
											<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="DOOR개폐&#10;(길이)"/>
											<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="대수"/>
											<cell align="center" col="14" color="user21" display="text" font="굴림,9" text="단가"/>
											<cell align="center" col="15" color="user21" display="text" font="굴림,9" text="원가"/>
											<cell align="center" col="16" color="user21" display="text" font="굴림,9" text="견적가"/>
											<cell align="center" col="17" color="user21" display="text" font="굴림,9" text="시행율"/>
											<cell align="center" col="18" color="user21" display="text" font="굴림,9" text="마진율"/>
											<cell align="center" col="19" color="user21" display="text" font="굴림,9" text="수주계획번호"/>
											<cell align="center" col="20" color="user21" display="text" font="굴림,9" text="승강기번호&#10;(수주계획)"/>
											<cell align="center" col="21" color="user21" display="text" font="굴림,9" text="사양"/>
											<cell align="center" col="22" color="user21" display="text" font="굴림,9" text="일식&#10;외주"/>
											<cell align="center" col="23" color="user21" display="text" font="굴림,9" text="개별인증비용"/>
											<cell col="24" display="text"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" colid="QTSEQ" display="text" text="MONO"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="center" bkcolor2="user22" col="2" colid="SHANGH" combocol="CODE" combodataset="ds_shangh" combotext="CODE_NAME" display="combo"/>
											<cell align="center" bkcolor2="user22" col="3" colid="ZSAREA" display="text"/>
											<cell align="center" bkcolor2="user22" col="4" colid="BRNDNM" display="text"/>
											<cell align="center" bkcolor2="user22" col="5" colid="GTYPE" display="text" expandchar="..." expandshow='expr:iif(MATNR==&quot;T-1000&quot;&#32;||&#32;MATNR==&quot;Y-1000&quot;,false,true)'/>
											<cell align="center" bkcolor2="user22" col="6" colid="ZUSE" display="text"/>
											<cell align="center" bkcolor2="user22" col="7" colid="TYPE1" display="text"/>
											<cell align="center" bkcolor2="user22" col="8" colid="ZACAPA" display="text"/>
											<cell align="center" bkcolor2="user22" col="9" colid="TYPE2" display="text"/>
											<cell align="center" bkcolor2="user22" col="10" colid="TYPE3" display="text" edit="integer"/>
											<cell align="right" bkcolor2="user22" col="11" colid="ZLEN" display="text" edit="integer"/>
											<cell align="right" bkcolor2="user22" col="12" colid="ZOPN" display="text"/>
											<cell align="right" bkcolor2="user22" col="13" colid="ZNUMBER" display="text" edit="integer"/>
											<cell align="right" bkcolor2="user22" col="14" colid="ZUAM" display="number" Mask="###,###,###,##0"/>
											<cell align="right" bkcolor2="user22" col="15" colid="ZCOST" display="number" Mask="###,###,###,##0"/>
											<cell align="right" bkcolor2="user22" col="16" colid="ZEAM" display="number" edit="masknumber" Mask="###,###,###,##0"/>
											<cell align="right" bkcolor2="user22" col="17" colid="SHANG" display="number" Mask="##0.0"/>
											<cell align="right" bkcolor2="user22" col="18" colid="MARGIN" display="number" Mask="##0.0"/>
											<cell align="center" bkcolor2="user22" col="19" colid="SONNR" display="text"/>
											<cell align="center" bkcolor2="user22" col="20" colid="SID" display="text"/>
											<cell align="center" bkcolor2="user22" col="21" display="text" expandchar="출력" expandshow='expr:iif(MATNR==&quot;T-1000&quot;&#32;||&#32;MATNR==&quot;Y-1000&quot;,false,true)' expandsize="40"/>
											<cell align="center" bkcolor2="user22" col="22" colid="ZOUTC" display="text" edit="normal"/>
											<cell align="center" bkcolor2="user22" col="23" colid="INCRTF_TP" display="text"/>
											<cell col="24" display="text"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_plus" ImageID="btn_icon_plus" Left="918" LeftMargin="12" OnClick="btn_plus_OnClick" Style="sty_btn" TabOrder="24" Top="247" Transparent="TRUE" Width="22"></Button>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_minus" ImageID="btn_icon_minus" Left="941" LeftMargin="12" OnClick="btn_minus_OnClick" Style="sty_btn" TabOrder="25" Top="247" Transparent="TRUE" Width="22"></Button>
							<Static Align="Right" Height="24" Id="st_cst" Left="779" Style="sty_lb_search" TabOrder="44" Text="기거래선&#32;" Top="51" VAlign="Middle" Width="72"></Static>
							<Div BKColor="user0" Height="22" Id="div_kunnr" Left="254" OnLoadCompleted="fn_OnLoadCompleted" TabOrder="26" Text="Div0" Top="27" Url="COM::Coms003.xml" Width="169">
								<Contents></Contents>
							</Div>
							<Edit BindDataset="ds_header" Border="Flat" Column="ZDEV" Height="20" Id="ed_dev" Left="638" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="7" Top="28" Width="137"></Edit>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_popup" ImageID="btn_sub_06" Left="822" LeftMargin="12" OnClick="btn_popup_OnClick" Style="sty_btn" TabOrder="27" Text="수주계획&#32;추가" Top="247" Transparent="TRUE" Width="96"></Button>
							<Static Align="Right" Height="24" Id="st_inco1" Left="779" Style="sty_lb_search" TabOrder="49" Text="업종구분&#32;" Top="101" VAlign="Middle" Width="72"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="FA_BYRGBN" DataColumn="CODE_NAME" Height="20" Id="cb_fa_byrgbn" InnerDataset="ds_fa_byrgbn" Left="854" Style="sty_ipt_form" TabOrder="14" Top="103" Width="109"></Combo>
							<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_header" BkColor2="default" BoldHead="true" Border="Flat" Bottom="465" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="64" Id="grd_header" InputPanel="FALSE" Left="1" LineColor="user20" LineType="ExHORZ" Right="964" RowHeight="20" Style="sty_grid" TabOrder="28" TabStop="true" Top="401" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="963">
								<contents>
									<format id="Default">
										<columns>
											<col width="30"/>
											<col width="30"/>
											<col width="40"/>
											<col width="0"/>
											<col width="50"/>
											<col width="80"/>
											<col width="40"/>
											<col width="40"/>
											<col width="60"/>
											<col width="40"/>
											<col width="40"/>
											<col width="40"/>
											<col width="40"/>
											<col width="50"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" rowspan="2" text="No"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" rowspan="2" text="변경"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" rowspan="2" text="DVR&#10;수량"/>
											<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="자재번호"/>
											<cell align="center" col="4" color="user21" display="text" font="굴림,9" rowspan="2" text="DI_PBX&#10;수량"/>
											<cell align="center" col="5" color="user21" display="text" font="굴림,9" rowspan="2" text="행선층예약&#10;시스템&#32;수량"/>
											<cell align="center" col="6" color="user21" display="text" font="굴림,9" rowspan="2" text="LCD&#10;수량"/>
											<cell align="center" col="7" color="user21" display="text" font="굴림,9" rowspan="2" text="LED&#10;수량"/>
											<cell align="center" col="8" color="user21" display="text" font="굴림,9" rowspan="2" text="시방서"/>
											<cell align="center" col="9" color="user21" colspan="2" display="text" font="굴림,9" text="감시반1"/>
											<cell align="center" col="11" color="user21" colspan="2" display="text" font="굴림,9" text="감시반2"/>
											<cell align="center" col="13" color="user21" display="text" font="굴림,9" rowspan="2" text="비고"/>
											<cell col="3" row="1"/>
											<cell align="center" col="9" color="user21" display="text" font="굴림,9" row="1" text="특성"/>
											<cell align="center" col="10" color="user21" display="text" font="굴림,9" row="1" text="수량"/>
											<cell align="center" col="11" color="user21" display="text" font="굴림,9" row="1" text="특성"/>
											<cell align="center" col="12" color="user21" display="text" font="굴림,9" row="1" text="수량"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="right" bkcolor2="user22" col="2" colid="CO_DDVRTQ" display="number"/>
											<cell align="center" bkcolor2="user22" col="3" colid="MATNR" display="text" edit="normal"/>
											<cell align="right" bkcolor2="user22" col="4" colid="CO_DEPHTQ" display="number"/>
											<cell align="right" bkcolor2="user22" col="5" colid="CO_DSSQ" display="number"/>
											<cell align="right" bkcolor2="user22" col="6" colid="CO_BCLCDTQ" display="number"/>
											<cell align="right" bkcolor2="user22" col="7" colid="CO_CHPITQ" display="number"/>
											<cell align="right" bkcolor2="user22" col="8" colid="CO_ASPC" display="text"/>
											<cell align="center" bkcolor2="user22" col="9" colid="CO_DSV1" display="text"/>
											<cell align="right" bkcolor2="user22" col="10" colid="CO_DSV1TQ" display="number"/>
											<cell align="center" bkcolor2="user22" col="11" colid="CO_DSV2" display="text"/>
											<cell align="right" bkcolor2="user22" col="12" colid="CO_DSV2TQ" display="number"/>
											<cell align="center" bkcolor2="user22" col="13" display="text"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Div Height="27" Id="div_sprmk" scroll="true" TabOrder="19" Text="Div0" Top="151" Width="963">
								<Contents>
									<Shape BKColor="user0" Bottom="27" Height="26" Id="Shape7" Left="1" LineColor="user1" Right="946" TabOrder="1" Top="1" Type="Rectangle" Width="945"></Shape>
									<Shape BKColor="user0" Bottom="52" Height="26" Id="Shape8" Left="1" LineColor="user1" Right="946" TabOrder="2" Top="26" Type="Rectangle" Width="945"></Shape>
									<Static Align="Right" Height="24" Id="st_sprmk1" Left="2" Style="sty_lb_search" TabOrder="3" Text="특기사항&#32;&#32;1&#32;" Top="2" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk2" Left="474" Style="sty_lb_search" TabOrder="4" Text="특기사항&#32;&#32;2&#32;" Top="2" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk3" Left="2" Style="sty_lb_search" TabOrder="5" Text="특기사항&#32;&#32;3&#32;" Top="27" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk4" Left="474" Style="sty_lb_search" TabOrder="6" Text="특기사항&#32;&#32;4&#32;" Top="27" VAlign="Middle" Width="72"></Static>
									<Shape BKColor="user0" Bottom="77" Height="26" Id="Shape9" Left="1" LineColor="user1" Right="946" TabOrder="7" Top="51" Type="Rectangle" Width="945"></Shape>
									<Shape BKColor="user0" Bottom="102" Height="26" Id="Shape10" Left="1" LineColor="user1" Right="946" TabOrder="8" Top="76" Type="Rectangle" Width="945"></Shape>
									<Static Align="Right" Height="24" Id="st_sprmk5" Left="2" Style="sty_lb_search" TabOrder="9" Text="특기사항&#32;&#32;5&#32;" Top="52" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk6" Left="474" Style="sty_lb_search" TabOrder="10" Text="특기사항&#32;&#32;6&#32;" Top="52" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk7" Left="2" Style="sty_lb_search" TabOrder="11" Text="특기사항&#32;&#32;7&#32;" Top="77" VAlign="Middle" Width="72"></Static>
									<Static Align="Right" Height="24" Id="st_sprmk8" Left="474" Style="sty_lb_search" TabOrder="12" Text="특기사항&#32;&#32;8&#32;" Top="77" VAlign="Middle" Width="72"></Static>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK1" Height="20" Id="ed_sprmk1" ImeMode="native" Left="76" LeftMargin="4" MaxLength="100" RightMargin="4" Style="sty_ipt_form" TabOrder="13" Top="5" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK2" Height="20" Id="ed_sprmk2" ImeMode="native" Left="550" LeftMargin="4" MaxLength="100" RightMargin="4" Style="sty_ipt_form" TabOrder="14" Top="4" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK3" Height="20" Id="ed_sprmk3" ImeMode="native" Left="78" LeftMargin="4" MaxLength="100" RightMargin="4" Style="sty_ipt_form" TabOrder="15" Top="29" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK4" Height="20" Id="ed_sprmk4" ImeMode="native" Left="550" LeftMargin="4" MaxLength="100" RightMargin="4" Style="sty_ipt_form" TabOrder="16" Top="29" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK5" Height="20" Id="ed_sprmk5" ImeMode="native" Left="78" LeftMargin="4" MaxLength="100" RightMargin="4" Style="sty_ipt_form" TabOrder="17" Top="54" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK6" Height="20" Id="ed_sprmk6" ImeMode="native" Left="550" LeftMargin="4" MaxLength="100" RightMargin="4" Style="sty_ipt_form" TabOrder="18" Top="54" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK7" Height="20" Id="ed_sprmk7" ImeMode="native" Left="78" LeftMargin="4" MaxLength="100" RightMargin="4" Style="sty_ipt_form" TabOrder="19" Top="79" Width="392"></Edit>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK8" Height="20" Id="ed_sprmk8" ImeMode="native" Left="550" LeftMargin="4" MaxLength="100" RightMargin="4" Style="sty_ipt_form" TabOrder="20" Top="79" Width="392"></Edit>
									<Shape BKColor="user0" Bottom="127" Height="26" Id="Shape0" Left="1" LineColor="user1" Right="946" TabOrder="25" Top="101" Type="Rectangle" Width="945"></Shape>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK10" Height="20" Id="ed_sprmk10" ImeMode="native" Left="550" LeftMargin="4" MaxLength="100" RightMargin="4" Style="sty_ipt_form" TabOrder="24" Top="104" Width="392"></Edit>
									<Static Align="Right" Height="24" Id="st_sprmk10" Left="474" Style="sty_lb_search" TabOrder="22" Text="특기사항&#32;10&#32;" Top="102" VAlign="Middle" Width="72"></Static>
									<Edit BindDataset="ds_header" Border="Flat" CheckLength="Byte" Column="SPRMK9" Height="20" Id="ed_sprmk9" ImeMode="native" Left="78" LeftMargin="4" MaxLength="100" RightMargin="4" Style="sty_ipt_form" TabOrder="23" Top="104" Width="392"></Edit>
									<Static Align="Right" Height="24" Id="st_sprmk9" Left="2" Style="sty_lb_search" TabOrder="21" Text="특기사항&#32;&#32;9&#32;" Top="102" VAlign="Middle" Width="72"></Static>
								</Contents>
							</Div>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_common" ImageID="btn_sub_04" Left="747" LeftMargin="12" OnClick="btn_common_OnClick" Style="sty_btn" TabOrder="29" Text="공통&#32;추가" Top="247" Transparent="TRUE" Width="71"></Button>
							<Static Align="Right" Height="24" Id="st_zregn2" Left="578" Style="sty_lb_search" TabOrder="54" Text="운송지역&#32;" Top="76" VAlign="Middle" Width="57"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="ATWRT" Column="REGION" DataColumn="ATWTB" Height="20" Id="cb_zregn3" InnerDataset="ds_zregn3" Left="637" OnChanged="cb_zregn3_OnChanged" Style="sty_ipt_search" TabOrder="11" Top="78" Width="107"></Combo>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="ZREGN" DataColumn="CODE_NAME" Height="20" Id="cb_zregn1" InnerDataset="ds_zregn1" Left="363" Style="sty_ipt_search" TabOrder="9" Top="78" Width="103"></Combo>
							<Static Align="Right" Height="24" Id="st_waerk" Left="779" Style="sty_lb_search" TabOrder="56" Text="통화&#32;" Top="76" VAlign="Middle" Width="72"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="WAERK" DataColumn="CODE_NAME" Enable="FALSE" Height="20" Id="cb_waerk" InnerDataset="ds_waerk" Left="853" Style="sty_ipt_form" TabOrder="30" Top="78" Width="107"></Combo>
							<Edit BindDataset="ds_header" Border="Flat" Column="ZDEV" Height="20" Id="ed_mailaddress" Left="530" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="31" Text="MJ.SHIN@hdel.co.kr" Top="246" Visible="FALSE" Width="128"></Edit>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_mail" ImageID="btn_sub_04" Left="597" LeftMargin="12" OnClick="btn_mail_OnClick" Style="sty_btn" TabOrder="33" Text="send&#32;mail" Top="246" Transparent="TRUE" Visible="FALSE" Width="73"></Button>
							<Static Align="Right" Height="24" Id="st_zdeli" Left="362" Style="sty_lb_search" TabOrder="60" Text="단납기구분&#32;" Top="101" VAlign="Middle" Width="103"></Static>
							<Edit Border="Flat" Enable="FALSE" Height="20" Id="ed_zdeli" ImeMode="native" Left="467" Style="sty_ipt_search" TabOrder="61" Top="103" Width="106"></Edit>
							<Static Align="Right" Border="None" Height="24" Id="st_zgnm" Left="578" Style="sty_lb_search" TabOrder="63" Text="발주처&#32;" Top="51" VAlign="Middle" Width="57"></Static>
							<Edit BindDataset="ds_header" Border="Flat" Column="ZGNM" Height="20" Id="ed_zgnm" Left="638" LeftMargin="4" MaxLength="25" RightMargin="4" Style="sty_ipt_form" TabOrder="62" Top="53" Width="137"></Edit>
							<Static Align="Right" Height="24" Id="st_sum_zcost" Left="107" Style="sty_lb_search" TabOrder="64" Text="원가합계&#32;" Top="244" VAlign="Middle" Width="56"></Static>
							<MaskEdit BindDataset="ds_header" BKColor="user5" Border="Flat" BorderColor="user13" Column="ZSUM_ZCOST" Enable="FALSE" Height="20" Id="ed_sum_zcost" Left="166" TabOrder="67" Top="246" Value="MaskEdit0" Width="78"></MaskEdit>
							<Static Align="Right" Height="24" Id="st_sum_zeam" Left="251" Style="sty_lb_search" TabOrder="65" Text="견적가합계&#32;" Top="244" VAlign="Middle" Width="72"></Static>
							<MaskEdit BindDataset="ds_header" BKColor="user5" Border="Flat" BorderColor="user13" Column="ZSUM_ZEAM" Enable="FALSE" Height="20" Id="ed_sum_zeam" Left="326" TabOrder="68" Top="246" Value="MaskEdit0" Width="78"></MaskEdit>
							<Static Align="Right" Height="24" Id="st_sum_shang" Left="411" Style="sty_lb_search" TabOrder="66" Text="시행율&#32;" Top="244" VAlign="Middle" Width="72"></Static>
							<MaskEdit BindDataset="ds_header" BKColor="user5" Border="Flat" BorderColor="user13" Column="ZSUM_SHANG" Enable="FALSE" Height="20" Id="ed_sum_shang" Left="486" Mask="##0.#" TabOrder="69" Top="246" Width="38"></MaskEdit>
							<Static Align="Right" Height="24" Id="st_sum_znumber" Left="2" Style="sty_lb_search" TabOrder="70" Text="대수합계&#32;" Top="244" VAlign="Middle" Width="56"></Static>
							<MaskEdit BindDataset="ds_header" BKColor="user5" Border="Flat" BorderColor="user13" Column="ZSUM_ZNUMBER" Enable="FALSE" Height="20" Id="ed_sum_znumber" Left="62" TabOrder="71" Top="246" Value="MaskEdit0" Width="38"></MaskEdit>
							<Static Align="Right" Border="None" Height="24" Id="Static0" Left="779" Style="sty_lb_search" TabOrder="72" Text="견적구분" Top="126" VAlign="Middle" Width="72"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="QTGBN" DataColumn="CODE_NAME" Height="20" Id="cb_qtgbn" INDEX="0" InnerDataset="ds_qtgbn" Left="854" Style="sty_ipt_search" TabOrder="73" Top="128" Width="107"></Combo>
							<Static Align="Right" Height="24" Id="Static1" Left="578" Style="sty_lb_search" TabOrder="74" Text="주차설비&#32;" Top="101" VAlign="Middle" Width="57"></Static>
							<Radio BindDataset="ds_header" Border="None" Color="user7" Column="JGBN" Height="20" Id="rd_jgbn" INDEX="1" Left="642" OnClick="tab_main_div_header_rd_jgbn_OnClick" TabOrder="75" Top="103" Width="98">
								<Contents>
									<Layout code="A" height="20" left="1" text="유" top="0" width="55"/>
									<Layout code="B" default="true" height="20" left="60" text="무" top="0" width="70"/>
								</Contents>
							</Radio>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_copy" ImageID="btn_sub_04" Left="672" LeftMargin="12" OnClick="tab_main_div_header_btn_copy_OnClick" Style="sty_btn" TabOrder="76" Text="사양&#32;복사" Top="247" Transparent="TRUE" Width="71"></Button>
							<Static Align="Right" Height="24" Id="Static2" Left="363" Style="sty_lb_search" TabOrder="78" Text="골조완료예상일&#32;" Top="51" VAlign="Middle" Width="103"></Static>
							<Calendar BindDataset="ds_header" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="FRCMFCDAT" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cal_frcmfcdat" Left="468" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_form" SundayTextColor="user35" TabOrder="77" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="53" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="106"></Calendar>
							<Static Align="Right" Height="24" Id="st_lifnrchk" Left="426" Style="sty_lb_search" TabOrder="79" Text="계약형태" Top="26" VAlign="Middle" Width="51"></Static>
							<Combo BindDataset="ds_header" Border="Flat" CodeColumn="CODE" Column="LIFNRCHK" DataColumn="CODE_NAME" Height="20" Id="cb_lifnrchk" InnerDataset="ds_lifnr" Left="478" Style="sty_ipt_form" TabOrder="80" Top="27" Width="98"></Combo>
							<Combo Border="Flat" CodeColumn="BUILDUSE_L" DataColumn="STEXT" Height="20" Id="cb_zbdtyp_l" InnerDataset="ds_list_build_l" Left="76" OnChanged="cb_zbdtyp_l_OnChanged" Style="sty_ipt_form" TabOrder="81" Top="78" Width="105"></Combo>
							<Static Align="Right" Height="24" Id="Static5" Left="545" Style="sty_lb_search" TabOrder="81" Text="건축허가일&#32;" Top="126" VAlign="Middle" Width="90"></Static>
							<Calendar BindDataset="ds_header" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="ACHDT" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cal_achdt" Left="637" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_form" SundayTextColor="user35" TabOrder="81" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="128" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="106"></Calendar>
							<Static Align="Center" BKColor="user12" Color="black" Height="19" Id="Static6" Left="639" Style="sty_lb_search" TabOrder="82" Text="방문협의록" Top="129" VAlign="Middle" Visible="FALSE" Width="60"></Static>
						</Contents>
					</Div>
				</TabPage>
				<TabPage BorderColor="black" Height="474" Id="template" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="26" Text="사양내용" Top="23" Width="970">
					<Div Border="SunkenEdge" Height="467" Id="div_template" scroll="true" TabOrder="1" Text="Div0" Top="1" Width="2756">
						<Contents>
							<Shape BKColor="user0" Bottom="51" Height="26" Id="Shape0" Left="0" LineColor="user1" Right="2706" TabOrder="21" Top="25" Type="Rectangle" Width="2706"></Shape>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template1" BkColor2="default" BoldHead="true" Border="Flat" Bottom="439" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="385" Id="grd_template1" InputPanel="FALSE" Left="4" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="tab_template_div_template_grd_template_OnMouseOver" Right="454" RowHeight="20" Style="sty_grid" TabOrder="7" TabStop="true" Top="54" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="변경"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="BASIC" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="값" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:iif(MODITP&#32;==&#32;&apos;X&apos;,&#32;decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;),&#32;&apos;none&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template2" BkColor2="default" BoldHead="true" Border="Flat" Bottom="439" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="385" Id="grd_template2" InputPanel="FALSE" Left="455" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="tab_template_div_template_grd_template_OnMouseOver" Right="905" RowHeight="20" Style="sty_grid" TabOrder="6" TabStop="true" Top="54" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="70"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="변경"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="INSIDE" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="값" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template3" BkColor2="default" BoldHead="true" Border="Flat" Bottom="439" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="385" Id="grd_template3" InputPanel="FALSE" Left="906" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="tab_template_div_template_grd_template_OnMouseOver" Right="1356" RowHeight="20" Style="sty_grid" TabOrder="5" TabStop="true" Top="54" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="70"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="변경"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="OUTSIDE" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="값" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template4" BkColor2="default" BoldHead="true" Border="Flat" Bottom="438" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="384" Id="grd_template4" InputPanel="FALSE" Left="1357" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="tab_template_div_template_grd_template_OnMouseOver" Right="1807" RowHeight="20" Style="sty_grid" TabOrder="4" TabStop="true" Top="54" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="변경"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="OPTION" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="값" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template5" BkColor2="default" BoldHead="true" Border="Flat" Bottom="438" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="384" Id="grd_template5" InputPanel="FALSE" Left="1808" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="tab_template_div_template_grd_template_OnMouseOver" Right="2258" RowHeight="20" Style="sty_grid" TabOrder="3" TabStop="true" Top="54" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="변경"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="LAYOUT" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="값" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template6" BkColor2="default" BoldHead="true" Border="Flat" Bottom="438" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="384" Id="grd_template6" InputPanel="FALSE" Left="2260" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="tab_template_div_template_grd_template_OnMouseOver" Right="2710" RowHeight="20" Style="sty_grid" TabOrder="3" TabStop="true" Top="54" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="170"/>
											<col width="60"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="변경"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="OTHER" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="값" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_template0" BkColor2="default" BoldHead="true" Border="Flat" Bottom="439" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="385" Id="grd_template0" InputPanel="FALSE" Left="2711" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="grd_template_OnCellDblClick" OnCellPosChanged="grd_template_OnCellPosChanged" OnKeyDown="grd_detail_OnKeyDown" OnMouseOver="tab_template_div_template_grd_template_OnMouseOver" Right="3161" RowHeight="20" Style="sty_grid" TabOrder="14" TabStop="true" Top="54" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
								<contents>
									<format id="Default">
										<columns>
											<col width="0"/>
											<col width="30"/>
											<col width="158"/>
											<col width="40"/>
										</columns>
										<head>
											<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="No"/>
											<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="변경"/>
											<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="COMMON" wordwrap="word"/>
											<cell col="3" color="user21" display="text" font="굴림,9" text="값" wordwrap="word"/>
										</head>
										<body>
											<cell align="center" bkcolor2="user22" col="0" display="text" expr="currow+1"/>
											<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" colid="FLAG" display="image"/>
											<cell align="left" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" col="2" colid="PRHNAME" display="text" suppress="1"/>
											<cell align="center" bkcolor="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;default&apos;))" bkcolor2="expr:iif(trim(PCNCD)=&apos;C&apos;,&apos;peachpuff&apos;,iif(trim(PCNCD)&#32;=&#32;&apos;P&apos;,&#32;&apos;lightpink&apos;,&#32;&apos;User&#32;Color22&apos;))" checklength="Byte" col="3" colid="PRD" display="text" edit="expr:iif(MODITP&#32;==&#32;&apos;X&apos;,&#32;decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;),&#32;&apos;none&apos;)" limit="30"/>
										</body>
									</format>
								</contents>
							</Grid>
							<Shape BKColor="user0" Bottom="26" Height="26" Id="Shape1" Left="0" LineColor="user1" Right="2706" TabOrder="6" Top="0" Type="Rectangle" Width="2706"></Shape>
							<Static Align="Right" Height="24" Id="st_gtype" Left="306" Style="sty_lb_search" TabOrder="11" Text="기종/인승/속도/층수&#32;" Top="1" VAlign="Middle" Width="136"></Static>
							<Edit Align="CENTER" BindDataset="ds_detail" Border="Flat" Column="GTYPE" Enable="FALSE" Height="20" Id="ed_gtype" ImeMode="native" Left="446" Readonly="TRUE" Style="sty_ipt_search" TabOrder="10" Top="3" Width="60"></Edit>
							<Edit Align="CENTER" BindDataset="ds_detail" Border="Flat" Column="TYPE1" Enable="FALSE" Height="20" Id="ed_type1" Left="514" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="9" Top="3" Width="60"></Edit>
							<Edit Align="CENTER" BindDataset="ds_detail" Border="Flat" Column="TYPE2" Enable="FALSE" Height="20" Id="ed_type2" Left="582" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="8" Top="3" Width="60"></Edit>
							<Edit Align="CENTER" BindDataset="ds_detail" Border="Flat" Column="TYPE3" Enable="FALSE" Height="20" Id="ed_type3" Left="650" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="7" Top="3" Width="60"></Edit>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_template" ImageID="btn_sub_07" Left="746" LeftMargin="12" OnClick="btn_template_OnClick" Style="sty_btn" TabOrder="12" Text="템플릿&#32;불러오기" Top="2" Transparent="TRUE" Width="111"></Button>
							<Combo CodeColumn="CODE" Color="BACKGROUND" DataColumn="CODE_NAME" Height="20" Id="cb_block" InnerDataset="ds_duty_block" Left="2" TabOrder="15" Top="2" Width="224"></Combo>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="21" Id="btn_duty" ImageID="btn_sub_04" Left="226" LeftMargin="12" OnClick="btn_duty_OnClick" Style="sty_btn" TabOrder="14" Text="Duty&#32;Call" Top="2" Transparent="TRUE" Width="72"></Button>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_stdLayout" ImageID="btn_sub_06" Left="298" LeftMargin="12" OnClick="fn_dependDuty2" Style="sty_btn" TabOrder="16" Text="표준LAYOUT" Top="27" Transparent="TRUE" Width="105"></Button>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_depend2" ImageID="btn_sub_07" Left="397" LeftMargin="12" OnClick="fn_dependDuty2" Style="sty_btn" TabOrder="17" Text="AUTO&#32;LAYOUT" Top="27" Transparent="TRUE" Width="113"></Button>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_dwg" ImageID="btn_sub_06" Left="508" LeftMargin="12" OnClick="btn_dwg_OnClick" Style="sty_btn" TabOrder="18" Text="표준도면생성" Top="27" Transparent="TRUE" Visible="FALSE" Width="96"></Button>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_moveDwg" ImageID="btn_sub_06" Left="607" LeftMargin="12" OnClick="btn_moveDwg_OnClick" Style="sty_btn" TabOrder="19" Text="표준도면조회" Top="27" Transparent="TRUE" Visible="FALSE" Width="96"></Button>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_depend" ImageID="btn_sub_03" Left="856" LeftMargin="12" OnClick="fn_dependDuty" Style="sty_btn" TabOrder="20" Text="종속성" Top="2" Transparent="TRUE" Width="62"></Button>
							<Static Align="Right" Height="24" Id="Static0" Style="sty_lb_search" TabOrder="23" Text="사양&#32;찾기" Top="26" VAlign="Middle" Width="64"></Static>
							<Edit Border="Flat" CheckLength="Byte" Height="20" Id="ed_temp" ImeMode="native" Left="67" LeftMargin="4" MaxLength="10" OnKeyDown="tab_template_div_template_ed_temp_OnKeyDown" RightMargin="4" Style="sty_ipt_form" TabOrder="22" Top="28" Width="225"></Edit>
							<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_floor" ImageID="btn_sub_08" Left="705" LeftMargin="12" OnClick="btn_floor_OnClick" Style="sty_btn" TabOrder="25" Text="층별사양확인" Top="27" Transparent="TRUE" Width="94"></Button>
							<Button ButtonStyle="TRUE" Cursor="HAND" Enable="FALSE" Height="20" Id="btn_rad_auto" ImageID="btn_sub_08" Left="802" LeftMargin="12" OnClick="tab_template_div_template_btn_rad_auto_OnClick" Style="sty_btn" TabOrder="26" Text="리모델링실측적용" Top="27" Transparent="TRUE" Width="112"></Button>
						</Contents>
					</Div>
				</TabPage>
			</Contents>
		</Tab>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_estimate" ImageID="btn_sub_04" Left="769" LeftMargin="12" OnClick="btn_estimate_OnClick" Style="sty_btn" TabOrder="12" Text="승인요청" Top="37" Transparent="TRUE" Width="72"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_costRequest" ImageID="btn_sub_04" Left="843" LeftMargin="12" OnClick="btn_costRequest_OnClick" Style="sty_btn" TabOrder="11" Text="원가의뢰" Top="37" Transparent="TRUE" Width="72"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_qtser_plus" ImageID="btn_sub_02" Left="669" LeftMargin="12" OnClick="btn_qtser_plus_OnClick" Style="sty_btn" TabOrder="13" Text="차수+" Top="37" Transparent="TRUE" Width="47"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_qtser_minus" ImageID="btn_sub_02" Left="719" LeftMargin="12" OnClick="btn_qtser_minus_OnClick" Style="sty_btn" TabOrder="14" Text="차수-" Top="37" Transparent="TRUE" Width="47"></Button>
		<Edit BindDataset="ds_detail" Border="Flat" CheckLength="Byte" Column="QTSEQ" Enable="FALSE" Height="20" Id="ed_seq" ImeMode="native" Left="424" LeftMargin="4" MaxLength="10" RightMargin="4" Style="sty_ipt_form" TabOrder="16" Top="37" Width="45"></Edit>
		<Static Align="Right" Height="24" Id="Static0" Left="356" Style="sty_lb_search" TabOrder="17" Text="M/O" Top="35" VAlign="Middle" Width="56"></Static>
		<AxMSIE Bottom="595" Height="3" Id="AxMSIE0" Left="1000" Right="1000" TitleChange="AxMSIE0_TitleChange" Top="592" Width="0"></AxMSIE>
		<Static Align="Right" Height="24" Id="Static1" Left="408" Style="sty_lb_search" TabOrder="20" Text="견적유효일자" Top="62" VAlign="Middle" Width="72"></Static>
		<Calendar BindDataset="ds_header" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="QTVADT" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Enable="FALSE" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="Calendar0" Left="482" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_form" SundayTextColor="user35" TabOrder="19" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="63" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="90"></Calendar>
		<Static Height="19" Id="st_projectGb" Left="574" TabOrder="21" Text="유효기간:90일" Top="67" Width="80"></Static>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_atvadt" ImageID="btn_sub_02" Left="649" LeftMargin="12" OnClick="fn_qtvadt" Style="sty_btn" TabOrder="22" Text="갱신" Top="64" Transparent="TRUE" Width="47"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="Button0" ImageID="btn_sub_04" Left="745" LeftMargin="12" OnClick="fn_callPopup" Style="sty_btn" TabOrder="27" Text="파일첨부" Top="64" Transparent="TRUE" Width="71"></Button>
		<Checkbox BindDataset="ds_header" Column="FA_CHK1" Enable="FALSE" Height="19" Id="fa_chk1" Left="819" Style="sty_ipt_form_ind" TabOrder="23" Top="64" Value="FALSE" Width="18"></Checkbox>
		<Static Align="Center" BKColor="user12" Color="black" Height="19" Id="Static6" Left="832" Style="sty_lb_search" TabOrder="24" Text="방문협의록" Top="65" VAlign="Middle" Width="60"></Static>
		<Checkbox BindDataset="ds_header" Column="FA_CHK2" Enable="FALSE" Height="19" Id="fa_chk2" Left="898" Style="sty_ipt_form_ind" TabOrder="25" Top="64" Value="FALSE" Width="18"></Checkbox>
		<Static Align="Right" BKColor="user12" Color="black" Height="19" Id="Static7" Left="902" Style="sty_lb_search" TabOrder="26" Text="현장사진" Top="65" VAlign="Middle" Width="55"></Static>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 견적상세
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    : 2016.02.15 개선 hsi
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
#include "LIB::nsfRequest.js";	// 공통 스크립트 
#include "LIB::common_hdel.js";	// 공통 스크립트  /* GNY 추가 */
#include "LIB::common_sd.js";
#include "LIB::brand_template.js"; // 2020 박수근
#include "LIB::plm_webservice.js"; // 2020 박수근
#include "LIB::sayang_copy.js";    // 2020 박수근

//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

var F_FRM_ID 	= "Ses0051";
var F_FRM_TITLE = "견적상세(국내대리점)";	// 공통코드 화면명
var F_MAX_SERNO = 0;  // 조회된 목록의 MAX(순번)
var F_CHG_DETAIL_ROWNUM = ""; // 최종 변경된 Detail 헹번호
var F_CHG_DETAIL_COLNUM = ""; // 최종 변경된 Detail 컬럼번호
var F_CLICKED_ROW = -1; 	  // ds_detail 그리드의 클릭한 행 2013.02.01
var F_CHK_QTSEQ;
var F_BRND_FLAG = "N";        // 견적서 작성일 또는 시스템일자로 해당 견적서 브랜드 적용여부를 판단하는 변수 Y:적용, N:미적용
var F_OPT1 = "";

// 그룹명칭 정의되면 적용
var F_GROUP_TITLE  = "OTHER";
var F_GROUP_FILTER = "EL_OTHERS";

var flag;
var zprdgbn;
var zprgflg;

var zkunnr;
var zkunnrNm;

var vdate;

var el_dpexq_prc = "";
var el_dpexq_prd = "";
var el_dpexq1 = "";
var el_dpexq2 = "";
var el_dpexq3 = "";

// 리모델링 추가
var FLOORYSNO  = "N";  // 리모델링층별사양 실행여부 ds_rad_sts
var LAYOUTYSNO = "N";  // 리모델링LAYOUT 실행여부
var APPLYYSNO  = "N";  // 실측값 견적사양 적용여부
var SAVEYSNO   = "N";  // 실측값 적용 후 저장여부 체크

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {

	gfn_initForm(true);	// Form 로드 이벤트 맨 첫줄에 기술

	tab.TabIndex = 0;

	// 2012.12.29 DVR수량~ 등 M/O별 공통사양 정보표기 부분은 화면에서 표기되지 않도록 요청 처리
	// 화면상에서만 보이지 않도록 조치함
	tab.main.div_header.grd_header.Visible = false;
	tab.main.div_header.grd_detail.Height  = tab.main.div_header.grd_detail.Height + 70;

	gfn_queryDD07T('ZSDD_CCTYPE', ds_fa_byrgbn, 'N');
	gfn_queryDD07T('ZSDDLIFNRCHK', ds_lifnr, 'N');

	var codeArr = ["SD107", "BS102", "VKBUR", "VKGRP", "CS115", "SPART", "WAERK"]; 	//코드콤보 설정
	var dsObjArr = [ds_zprgflg, ds_sukum, ds_vkbur, ds_vkgrp, ds_zregn1, ds_spart_cd, ds_waerk ];
	var addTypeArr = [G_CODE_NONE,G_CODE_NONE,G_CODE_SELECT,G_CODE_NONE,G_CODE_NONE,G_CODE_NONE,G_CODE_NONE,G_CODE_NONE]; //[G_CODE_NONE,G_CODE_NONE,G_CODE_NONE]; [G_CODE_ALL];
	var oderTypeArr = ["DTEXT1"];
	gfn_searchCommCode(codeArr, dsObjArr, addTypeArr);

	div_btn.fn_loadUseBtn("30,40,45", F_FRM_TITLE, "", "");
	div_btn.btn_excel.domainID = "";
	div_btn.btn_excel.imageID  = "btn_comm_print_k";
	div_btn.btn_excel.Text     = "내역";


    //if ( G_USER_ID == "TEST02" OR G_USER_ID == "2018144" OR G_USER_ID == "2020254" ){
        tab.template.div_template.btn_moveDwg.Visible = "true";
        tab.template.div_template.btn_dwg.Visible = "true";
    //}
    
	// 2020 브랜드 그룹데이터를 조회한다.
	fn_findZsdt1143List();
	    
	fn_resize(); // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
	
    // 건물용도(대분류), 건물용도 코드목록 조회
    fn_query_bdtyp();
    
	//nsfRequest("queryInco", "combo/comboInco", "ds_list_inco1=ds_inco1", "ds_inco1=ds_list_inco1 ds_error=ds_error", "", "fn_afterQuery");
}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}

function fn_afterQueryDD07T_ZSDD_CCTYPE(errCode, errMsg) {
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() {
	
	nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_cond ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
	
}

/********************************************************************************
* 기      능   : 저장
********************************************************************************/
function fn_save() {

	var vT1000Cnt = 0;
	var lv_Y200Cnt = 0;
	var lv_Y300Cnt = 0;
	var lv_Y400Cnt = 0;
	var lv_Y500Cnt = 0;

	var lv_Message = "";
	var lv_Gtype = "";
	
	//trace("주차설비구분" + ds_header.GetColumn(0,"JGBN"));
	// 단납기의 경우 고객정보 수정 가능토록 변경 2013.01.07
	if(ds_header.GetColumn(0, "ZDELI") != "X")	{
		if (zprgflg != "25" && zprgflg >= "24" && zprgflg != "32" && zprgflg != "33" && zprgflg != "42") { // 24견적반려, 25견적최종승인, 32원가산출 33원가산출승인 42원가팀완료
			gfn_showAlert("CW10086");
			return; // CW10086 현재 진행 상태에서는 저장할 수 없습니다.
		}
	}
	
	if (!fn_save_header())	{
	 
		return;
	}

	// 21.08.12 리모델링 승강기번호 체크
	if(!fn_isReEelvno("S")) {
	    return;
	}

//-----< 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	Start 
	// 감시반은 1개만 등록 가능
	// var vT1000Cnt = 0;
	// for (var i = 0; i < ds_detail.GetRowCount(); i++)	{
		// if (ds_detail.GetColumn(i, "MATNR") == "T-1000" && 
			// ds_detail.GetColumn(i, "FLAG") != "D" )	{
			// vT1000Cnt++;
		// }
	// }
	
	// if(vT1000Cnt > 1)	{
		// gfn_showAlert("CW10025", "MO에 감시반은 1개만 존재해야 합니다.");
		// return;
	// }

	// 감시반 및 공통(S/P 제외)은 1개만 등록 가능 
	for (var i = 0; i < ds_detail.GetRowCount(); i++)	{ 
		if (ds_detail.GetColumn(i, "FLAG") != "D") {
		  switch ( ds_detail.GetColumn(i, "MATNR") ) {
		   case "T-1000" : vT1000Cnt++; lv_Gtype = ds_detail.GetColumn(i, "GTYPE"); break;
		   case "Y-200" : lv_Y200Cnt++; lv_Gtype = ds_detail.GetColumn(i, "GTYPE"); break;
		   case "Y-300" : lv_Y300Cnt++; lv_Gtype = ds_detail.GetColumn(i, "GTYPE");	break;
		   case "Y-400" : lv_Y400Cnt++; lv_Gtype = ds_detail.GetColumn(i, "GTYPE"); break;
		   case "Y-500" : lv_Y500Cnt++; lv_Gtype = ds_detail.GetColumn(i, "GTYPE"); break;
		   default : break;
		  }			
		}
	}
	
	lv_Message = "MO에 [" + lv_Gtype + "]은(는) 1개만 존재해야 합니다.  관리팀에 문의 하세요.";
	if(vT1000Cnt > 1 or lv_Y200Cnt > 1 or lv_Y300Cnt > 1 or lv_Y400Cnt > 1 or lv_Y500Cnt > 1) {	
		gfn_showAlert("CW10025", lv_Message);
		return;
	}
	
//-----> 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	End 

	if (gfn_showConfirm("CI10003") == true) { // CI10003 저장하시겠습니까?

		var obj = tab.main.div_header;

		ds_header.SetColumn(0, "FLAG"  , "I");
		ds_header.Setcolumn(0, "ZKUNNR", obj.div_sman.ed_sman_cd.Text);

		if (obj.ed_zdeli.Text == "단납기")
			ds_header.SetColumn(0, "ZDELI", "X");

		fn_createWait("",this); // 처리중입니다. 메시지 처리

		fn_save_template();
		
		// 2012.01.10 운송지역 오류 데이터 저장 확인용
		var strHeaderRegion = trim(ds_header.GetColumn(0, "REGION"));
		if ( strHeaderRegion != null && strHeaderRegion != "" ) {
			if ( length(strHeaderRegion) != 9 ) {
				fn_destroyWait();
				var err[2];
				err[0] = "헤더";
				err[1] = "운송지역";
				gfn_showAlert("CW00184", err); // [${}:${}]은(는) 오류 데이터가 포함되어있습니다. \n 담당자 문의 바랍니다.
				return;
			}
		}

		var outDatasets = "";
		if ( ed_qtnum.Text == "" ) { // 견적번호가 없으면, 신규 등록이므로 헤더정보를 받는다.
			outDatasets = "ds_header=ds_header ds_error=ds_error";
		} else {
			outDatasets = "ds_error=ds_error";
		}
		
        // 2020 브랜드 입력화 ds_brnd_del  추가		
		nsfRequest("saveHeader", "ses0031n/saveHeader", "ds_header=ds_header ds_detail=ds_detail ds_template=ds_template_save ds_brnd_del=ds_brnd_del"
					, outDatasets, "", "fn_afterSave");
	} else {
		return;
	}
}

/********************************************************************************
* 기      능   : 폼 초기화
********************************************************************************/
function fn_init_form() {

	var atinn = "";
	F_CHK_QTSEQ = "";
	
	ds_header.ClearData();
	ds_header.AddRow();
	ds_header.SetColumn(0, "MANDT", G_MANDT);
	ds_header.SetColumn(0, "SONNR", fa_sonnr);
	ds_header.SetColumn(0, "QTNUM", fa_qtnum);
	ds_header.SetColumn(0, "QTSER", fa_qtser);
	
	if(G_MANDT == "183") atinn = "0000000006"; 
	else atinn = "0000000005"; 
	
	ds_acapa.ClearData();
	ds_acapa.AddRow();
	ds_acapa.SetColumn(0, "MANDT", G_MANDT);
	ds_acapa.SetColumn(0, "ATINN", atinn  );
	ds_acapa.SetColumn(0, "SPRAS", "3"    );
	
	//=========================================================================================
	//  기능ID   : UF001  
	//  수정내역 : init 조회 하나로 합침.
	//=========================================================================================
	
	//광역 운송지역 sync 처리 2013.01.10
	http.sync = true;
	
	ds_cond_atnam.ClearData();
	ds_cond_atnam.AddRow();
	ds_cond_atnam.SetColumn(0, "MANDT" , G_MANDT   );
	ds_cond_atnam.SetColumn(0, "KLART" , "300"     );
	ds_cond_atnam.SetColumn(0, "CLASS1", "ELV_01"  );
	ds_cond_atnam.SetColumn(0, "ATKLA" , "EL_BASIC");
	ds_cond_atnam.SetColumn(0, "ATNAM" , "EL_ALOCT");
	ds_cond_atnam.SetColumn(0, "WHERE" , ""        );
	nsfRequest("queryZregn1", "com0150/find", "ds_cond_atnam=ds_cond_atnam ds_list_atnam=ds_zregn2", "ds_zregn2=ds_list_atnam", "", "fn_afterQuery");

	ds_cond_atnam.SetColumn(0, "ATNAM" , "EL_ADTA");
	nsfRequest("queryZregn2", "com0150/find", "ds_cond_atnam=ds_cond_atnam ds_list_atnam=ds_zregn3", "ds_zregn3=ds_list_atnam", "", "fn_afterQuery");

	ds_cond_atnam.SetColumn(0, "ATNAM" , "EL_ALOCT");
	ds_zregn3.sort("ATWTB");  // 운송지역 가나다 순 SORT 20130430 김선호
	http.sync = false;
	
	http.sync = true;
	nsfRequest("queryInit"
	           , "ses0031n/init"  
	           , "ds_list_inco1=ds_inco1 ds_class=ds_class ds_cond=ds_header ds_header=ds_header ds_acapa=ds_acapa" 
	           , "ds_inco1=ds_list_inco1 ds_class=ds_class ds_header=ds_list ds_header=ds_header ds_acapa=ds_acapa"
	           , ""
	           , "fn_afterQuery");
	http.sync = false;
	
	// 입찰결과 미등록 현황 리스트 추가 
	auart 	 = ds_header.GetColumn(0, "AUART" 	 );
	if (left(auart,2) == "ZS") {
		var rtn = gfn_openPopUpUrlHdel("Ses::Ses0181.xml", true, "");
		if ( rtn != null && rtn != 0 ) {
			this.Close();
		}
	}
}

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}

/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {

	var t = tab.main.div_header;

	// 2013.04.19 출력
	if (length(trim(ds_header.GetColumn(0, "QTNUM"))) == 0)		{
		gfn_showAlert("CW10062");
		return;
	}

	fn_createWait("",this);     // 처리중입니다. 메시지 처리

	ds_print_header.ClearData();
	ds_print_detail.ClearData();
	
	ds_print_header.Copy("ds_header");
	ds_print_detail.Copy("ds_detail");

	// 명칭 표시Data 치환처리
	ds_print_header.SetColumn(0, "QTGBN", t.cb_qtgbn.Text);		// 견적구분
	ds_print_header.SetColumn(0, "ZPRGFLG", t.cb_zprgflg.Text);	// 견적진행상태
	
	ds_print_header.AddColumn("SPART_NM", "STRING", 255);
	ds_print_header.SetColumn(0, "SPART_NM", t.cb_spart.Text);	// 제품군

	ds_print_header.SetColumn(0, "VKBUR",  t.cb_vkbur.Text);		// 부서명칭
	ds_print_header.SetColumn(0, "VKGRP",  t.cb_vkgrp.Text);		// 팀명칭
	ds_print_header.SetColumn(0, "KUNNR_NM", t.div_kunnr.ed_buyr_nm.Text);		// 고객명
	ds_print_header.SetColumn(0, "ZBDTYP", t.cb_zbdtyp.Text);		// 건물용도
	ds_print_header.SetColumn(0, "ZDELI",  t.ed_zdeli.Text);		// 단납기구분
	ds_print_header.SetColumn(0, "ZREGN",  t.cb_zregn1.Text);		// 지역
	ds_print_header.SetColumn(0, "ZLZONE", t.cb_zregn2.Text);		// 광역
	ds_print_header.SetColumn(0, "REGION", t.cb_zregn3.Text);		// 운송지역
	ds_print_header.SetColumn(0, "FA_BYRGBN", t.cb_fa_byrgbn.Text);	// 업종구분

	fn_destroyWait();

	Dialog("SES::Ses0371.xml", "", -1, -1, "Resize=true");	// UbiReport Call
}

/********************************************************************************
* 기      능   : 출력
********************************************************************************/
function fn_print() {

    if (fa_disp=="Y" || F_TQUOT == true){   // 기술검토 접수화면에서 조회시 
		alert("출력권한이 없습니다.");
		return ;
    }
    
	var zprgflg = ds_header.GetColumn(0, "ZPRGFLG");
	var vkbur   = ds_header.GetColumn(0, "VKBUR"  ); // 사업장
	var zeam;
	var h          = tab.main.div_header;
	var matnr      = "";
	var detailFlag = "";
	var nullCnt    = 0;

	for (var i=0; i<ds_detail.GetRowCount(); i++) {

		zeam       = ds_detail.GetColumn(i, "ZEAM" );
		matnr      = ds_detail.GetColumn(i, "MATNR");
		detailFlag = ds_detail.GetColumn(i, "FLAG" );

		if (matnr != "T-1000" && matnr != "Y-1000") {

			if ( zeam=="" || zeam==null || Round(zeam, 0) ==0) {
				nullCnt++;
			}
		}

		if (detailFlag!="" && detailFlag!=null) {
			gfn_showAlert("CW10084", ToString(i+1)); h.grd_detail.SetFocus(); return false; // CW10084 {}행의 자료가 저장되지 않았습니다.
		}
	}

	if (nullCnt > 0)	{
		gfn_showAlert("CW10085"); // CW10085 견적가를 확인하세요.
		return;
	}
	
	var spart = ds_header.GetColumn(0, "SPART");

	//if ( spart == "20" || spart == "30" || spart == "40" ) // 비승강기
	if ( spart == "30" || spart == "40" ) // 비승강기 : 주차 제외
	{
		if ( zprgflg == "20" || zprgflg == "21" ) { // 견적작성
			if (gfn_showConfirm("CI10007") == true) { // CI10005 진행상태를 입찰로 변경하시겠습니까?
				ds_header.SetColumn(0, "ZPRGFLG", "50"); // 50 입찰
				nsfRequest("saveHeaderFlag", "ses0031n/updateHeaderFlag", "ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterSave");
				fn_zprgflg();
			}
		}
	} else {
		if (zprgflg == "32" || zprgflg == "33" || zprgflg == "42") { // 32원가산출 33원가산출승인 42 원가팀완료
			//변경 저장 이후에 원가산출 없이 진행불가 20160418 			
			http.sync = true;
			var stat;
			/*for ( var i = 0; i < ds_detail.rowcount(); i++ ) {	
				if (ds_detail.GetColumn(i, "ZPRGFLG") != "32" && 
				    substr(ds_detail.GetColumn(i, "MATNR"),0,1) != "T" && substr(ds_detail.GetColumn(i, "MATNR"),0,1) != "Y" ){ //기타제외				    
				    stat = "X";
				}
			}
			if (stat = "X") {
					gfn_showAlert("CW10025", "변경 저장된 내용이 존재 합니다. 원가산출 진행 후 출력하세요.");
					continue;
			}*/	

			//부분원가 존재시 진행 불가  20160419
			//create("dataset", "ds_cond1");
			//ds_cond1.ClearData();
			//ds_cond1.AddRow();
			// ds_cont1 자동 생성 로직으로 처리 시 파라미터 변수가 정상적으로 전달되지 않아
			// ds_cont1 선언하여 변수 전달 처리 2020.08.18
			ds_check.ClearData();
			ds_cond1.SetColumn(0, "QTNUM"   , ds_header.GetColumn(0, "QTNUM"));
			ds_cond1.SetColumn(0, "QTSER"   , ds_header.GetColumn(0, "QTSER"));
			nsfRequest(   "queryZ309"
						, "ses0031/searchZ309"
						, "ds_cond=ds_cond1 ds_t309=ds_check"
						, "ds_check=ds_t309 ds_error=ds_error"
						, ""
						, "fn_afterQuery"
					   );
			// 부분원가 일치화 확인
			destroy("ds_check_temp");
			create("dataset", "ds_check_temp");
			ds_check_temp.copy(ds_check);
			ds_check_temp.Filter(" STATE != 'W' ");
					   
			if (ds_check_temp.GetRowCount() > 0)	{
					gfn_showAlert("CW10025", "부분원가가 존재하니 확인 후 진행 바랍니다.");
					destroy("ds_check_temp");
					continue;
			}
			http.sync = false;
			if (gfn_showConfirm("CI10007") == true) { // CI10005 진행상태를 입찰로 변경하시겠습니까?
	
				ds_header.SetColumn(0, "ZPRGFLG", "50"); // 50 입찰
				nsfRequest("saveHeaderFlag", "ses0031n/updateHeaderFlag", "ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterSave");
				fn_zprgflg();
			}
		}
	}
	
	fn_createWait("",this);     // 처리중입니다. 메시지 처리

	var gnm      = tab.main.div_header.div_kunnr.ed_buyr_nm.Text;
	var qtdat    = ds_header.GetColumn(0, "QTDAT");
		qtdat    = Substr(qtdat,0,4)+"년 "+Substr(qtdat,4,2)+"월 "+Substr(qtdat,6,2)+"일";
	var gam      = ds_header.GetColumn(0, "ZEAM") + " 원정";
	var mno      = ds_header.GetColumn(0, "QTNUM") + "-" + ds_header.GetColumn(0, "QTSER");
	var spart    = ds_header.GetColumn(0, "SPART"); // 제품군
	var gtype    = "";	
	var znumber  = 0; // 대수
	var zuam     = 0; // 단가
	var zeam     = 0; // 견적가
	var zeam_sp  = 0; // sp 견적가
	var zeam_sum = 0; // 견적가 합계
	var rate     = 0; // 비율

	ds_list1.ClearData();
	ds_list1.AddRow();
	ds_list1.SetColumn(0, "GNM", gnm                                  ); // 고객번호의 거래처명
	ds_list1.SetColumn(0, "SPT", ds_header.GetColumn(0, "GSNAM"      )); // 공사명

	ds_list1.SetColumn(0, "GAM", gam                                  ); // 금액
	ds_list1.SetColumn(0, "CDT", qtdat                                ); // 견적일자
	ds_list1.SetColumn(0, "COM", "서울사무소"                         ); // 회사
	ds_list1.SetColumn(0, "AD1", "서울시 종로구 연지동 1-7번지"       ); // 주소1
	ds_list1.SetColumn(0, "AD2", "현대그룹빌딩 동관 8~9층"            ); // 주소2
	ds_list1.SetColumn(0, "TEL", ds_header.GetColumn(0, "TEL"	     )); // 전화번호
	ds_list1.SetColumn(0, "FAX", ds_header.GetColumn(0, "FAX"	     )); // FAX
	ds_list1.SetColumn(0, "CEL", ds_header.GetColumn(0, "CEL"	     )); // CEL
	ds_list1.SetColumn(0, "NAM", ds_header.GetColumn(0, "ZKUNNR_NM"	 )); // 영업담당자
	ds_list1.SetColumn(0, "T01", ds_header.GetColumn(0, "SPRMK1"     )); // 특기사항1
	ds_list1.SetColumn(0, "T02", ds_header.GetColumn(0, "SPRMK2"     )); // 특기사항2
	ds_list1.SetColumn(0, "T03", ds_header.GetColumn(0, "SPRMK3"     )); // 특기사항3
	ds_list1.SetColumn(0, "T04", ds_header.GetColumn(0, "SPRMK4"     )); // 특기사항4
	ds_list1.SetColumn(0, "T05", ds_header.GetColumn(0, "SPRMK5"     )); // 특기사항5
	ds_list1.SetColumn(0, "T06", ds_header.GetColumn(0, "SPRMK6"     )); // 특기사항6
	ds_list1.SetColumn(0, "T07", ds_header.GetColumn(0, "SPRMK7"     )); // 특기사항7
	ds_list1.SetColumn(0, "T08", ds_header.GetColumn(0, "SPRMK8"     )); // 특기사항8
	ds_list1.SetColumn(0, "T09", ds_header.GetColumn(0, "SPRMK9"     )); // 특기사항9
	ds_list1.SetColumn(0, "T10", ds_header.GetColumn(0, "SPRMK10"    )); // 특기사항10
	ds_list1.SetColumn(0, "PID", ds_header.GetColumn(0, "ZPID"       )); // 현장담당자
	ds_list1.SetColumn(0, "P01", ds_header.GetColumn(0, "ZICIF_PPRT" )); // 계약보증금율
	ds_list1.SetColumn(0, "P02", ds_header.GetColumn(0, "ZICIF_1STRT")); // 1차중도금율
	ds_list1.SetColumn(0, "P03", ds_header.GetColumn(0, "ZICIF_2STRT")); // 2차중도금율
	ds_list1.SetColumn(0, "P04", ds_header.GetColumn(0, "ZICIF_RMRT" )); // 잔금율
	ds_list1.SetColumn(0, "C01", ds_header.GetColumn(0, "ZICIF_PPCT" )); // 계약보증금내용
	ds_list1.SetColumn(0, "C02", ds_header.GetColumn(0, "ZICIF_1STCT")); // 1차중도금내용
	ds_list1.SetColumn(0, "C03", ds_header.GetColumn(0, "ZICIF_2STCT")); // 2차중도금내용
	ds_list1.SetColumn(0, "C04", ds_header.GetColumn(0, "ZICIF_RMCT" )); // 잔금내용
	ds_list1.SetColumn(0, "MNO", mno                                  ); // 견적번호+차수
	ds_list1.SetColumn(0, "MON", ds_header.GetColumn(0, "ZDVMTS"     )); // 납기개월수
	ds_list1.SetColumn(0, "SPART", spart); // 제품군 (2012.12.10)
	ds_list1.SetColumn(0, "WAERK", "\\"); // 제품군 (2012.12.20)
	ds_list1.SetColumn(0, "MAIL", ds_header.GetColumn(0, "MAIL"	     )); // EMAIL
	ds_list1.SetColumn(0, "D01", ds_header.GetColumn(0, "ZICIF_PPCD" )); // 계약보증금조건
	ds_list1.SetColumn(0, "D02", ds_header.GetColumn(0, "ZICIF_1STCD")); // 1차중도금조건
	ds_list1.SetColumn(0, "D03", ds_header.GetColumn(0, "ZICIF_2STCD")); // 2차중도금조건
	ds_list1.SetColumn(0, "D04", ds_header.GetColumn(0, "ZICIF_RMCD" )); // 잔금조건

	//2017.09.07 견적서 출력 문구 변경(대리점) 추가 by mj.Shin 
	var lv_vkbur = ds_header.GetColumn(0, "VKBUR");
	var lv_agntp = "";
	if ( lv_vkbur == "B400" || lv_vkbur == "BC00" || lv_vkbur == "BI00" || lv_vkbur == "BE00" || lv_vkbur == "BJ00") {  //BE00 리모델링1팀 추가, 20200114
		lv_agntp = "Y";
	} else {
		lv_agntp = "N";
	}
	ds_list1.SetColumn(0, "AGNTP", lv_agntp);
	
	ds_detail.UnFilter();
	ds_detail.Filter("GTYPE ==" + quote("SP"));
	zeam_sp = ds_detail.Sum("ZEAM");

	ds_detail.UnFilter();
	ds_detail.Filter("GTYPE !=" + quote("SP"));
	zeam_sum = ds_detail.Sum("ZEAM");

	var rowCnt = ds_detail.GetRowCount();

	ds_list2.ClearData();
	ds_list2.AddRow();
	//ds_list2.SetColumn(0, "QTY", ds_detail.Sum("ZNUMBER"));
	
	//감시반,SP 제외 (2012.12.17)
	var tot_znumber = toNumber(ds_detail.TotalCaseSum("MATNR!='T-1000'&&MATNR!='Y-1000'","ZNUMBER"));
	ds_list2.SetColumn(0, "QTY", tot_znumber);
	ds_list2.SetColumn(0, "WAERK", "\\");
 
	var spec_nm;
	var zprdgbn;
	var matnr;

	// 사양정보 처리 2012.12.31
	var vkbur = ds_header.GetColumn(0, "VKBUR");
	var type1;
	var type2;
	var type3;
	var zcapa;
	var zuse;
	var zopen;
	var zlen;

    //  2020 브랜드
    var brndcd;
    var brndnm;

	if (rowCnt >= 1) {
	    zprdgbn = substr(ds_detail.GetColumn(0, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(0, "GTYPE"  );  
		//spec_nm = ds_detail.GetColumn(0, "ZUSE") + ds_detail.GetColumn(0, "TYPE1") + "-" 
		//         +ds_detail.GetColumn(0, "ZLEN") + "-" + decode(zprdgbn, "MW", ds_detail.GetColumn(0, "ZOPN"), ds_detail.GetColumn(0, "TYPE3"));
		matnr = ds_detail.GetColumn(0, "MATNR");
		//if (spart=="20") spec_nm = ds_detail.GetColumn(0, "TYPE1") + ds_detail.GetColumn(0, "ZUSE") + "-" + ds_detail.GetColumn(0, "TYPE2") + "-" + ds_detail.GetColumn(0, "TYPE3") + "("+ ds_detail.GetColumn(0, "ZACAPA") + ")"; //"모델명""승입방향"-"단수"-"파렛트수"("수용차종") - (2012.12.10)
		//if (spart=="40") spec_nm = ds_detail.GetColumn(0, "TYPE1"); // PSD - 역명만 표시 (2012.12.12)
		//if (spart=="30") spec_nm = ds_header.GetColumn(0, "GSNAM"); // 물류 - 공사명만 표시 => 1행만 표시 (2012.12.12)

		// 사양정보 처리 2012.12.31
		type1 = ds_detail.GetColumn(0, "TYPE1");
		type2 = ds_detail.GetColumn(0, "TYPE2");
		type3 = ds_detail.GetColumn(0, "TYPE3");
		zcapa = ds_detail.GetColumn(0, "ZACAPA");
		zuse  = ds_detail.GetColumn(0, "ZUSE");
		zopen = ds_detail.GetColumn(0, "ZOPN");
		zlen  = ds_detail.GetColumn(0, "ZLEN");

		// 2020 브랜드
		brndcd = ds_detail.GetColumn(0, "BRNDCD");
		brndnm = ds_detail.GetColumn(0, "BRNDNM");
		
		//NEW 견적양식 2013.06.24
		if ( substr ( ds_detail.GetColumn(0,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(0,"MATNR"),0,1 ) == "W" ) {
				ds_list2.SetColumn(0, "TYPE2_01", ds_detail.GetColumn(0, "ZLEN"));
				ds_list2.SetColumn(0, "ZOPN_01", ds_detail.GetColumn(0, "TYPE2"));
				ds_list2.SetColumn(0, "ZLEN_01", ds_detail.GetColumn(0, ""));	     			
		} else {
			ds_list2.SetColumn(0, "TYPE2_01", ds_detail.GetColumn(0, "TYPE2"));			
			ds_list2.SetColumn(0, "ZOPN_01", ds_detail.GetColumn(0, "ZOPN"));
			ds_list2.SetColumn(0, "ZLEN_01", ds_detail.GetColumn(0, "ZLEN"));
		}
		ds_list2.SetColumn(0, "TYPE1_01", ds_detail.GetColumn(0, "TYPE1"));
		ds_list2.SetColumn(0, "TYPE3_01", ds_detail.GetColumn(0, "TYPE3"));
		if ( substr ( ds_detail.GetColumn(0,"MATNR"),0,1 ) == "L" ||
		     substr ( ds_detail.GetColumn(0,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(0,"MATNR"),0,1 ) == "W" ) {
			    ds_list2.SetColumn(0, "EA_01", "대");			     			
		} else {	
			    ds_list2.SetColumn(0, "EA_01", "식");
		}
		
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
		if(brndcd !=null && brndcd != '') {
		    spec_nm = brndcd + "-"+ Trim(spec_nm);
		}
		
        ds_list2.SetColumn(0, "SPC_01", spec_nm);
		znumber = decode(matnr, "T-1000", "0", ds_detail.GetColumn(0, "ZNUMBER"));  ds_list2.SetColumn(0, "QTY_01", znumber);
		zuam    = ds_detail.GetColumn(0, "ZUAM"   );  ds_list2.SetColumn(0, "RNO_01", "1"    );
		zeam    = ds_detail.GetColumn(0, "ZEAM"   );  ds_list2.SetColumn(0, "USE_01", gtype  );
				
		// 2020 브랜드
		ds_list2.SetColumn(0, "BRNDNM_01", brndnm);
				
		//rate    = ParseInt(zeam) / ParseInt(zeam_sum);
		//zeam    = ParseInt(zeam) + Round(ParseInt(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_01", zeam); // 견적가
		//zuam    = ParseInt(zeam) / ParseInt(znumber); ds_list2.SetColumn(0, "AMT_01", decode(spart, "30", 0, zuam)); // 단가
		
		rate    = toNumber(zeam) / toNumber(zeam_sum);
		zeam    = toNumber(zeam) + Round(toNumber(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_01", zeam); // 견적가
		zuam    = toNumber(zeam) / toNumber(znumber); ds_list2.SetColumn(0, "AMT_01", decode(spart, "30", 0, zuam)); // 단가
		
		//주차 용도명 
		var cidx ;
		if ( ZPRDGBN == "AP" ) {
		  switch ( ds_detail.GetColumn(0, "GTYPE") ) {
		   case "2PZ" : cidx = 0; break;
		   case "MPZ" : cidx = 1; break; 
		   case "MFC" : cidx = 2; break;
		   case "VRC" : cidx = 3; break;
		   case "HRC" : cidx = 4; break;
		   case "ELV" : cidx = 5; break;
		   case "STC" : cidx = 6; break;
		   case "CRT" : cidx = 7; break;
		   case "BPS" : cidx = 8; break;
		   case "LFC" : cidx = 9; break;
		   default : break;
		  }

		  zuse_nm = ds_jtype.GetColumn(cidx, "CODE_NAME"); ds_list2.SetColumn(0, "UNM_01", zuse_nm); // 용도명
		} 
		else { 
		  zuse_nm = ds_detail.GetColumn(0, "ZUSE_NM");
		  if ( ds_detail.GetColumn(0, "MATNR") == "T-1000" ) {  
			ds_list2.SetColumn(0, "UNM_01", gtype); // 감시반 일때 용도명 = 기종  
		  } else if  ( ds_detail.GetColumn(0, "MATNR") == "S-1000" ) {
			ds_list2.SetColumn(0, "UNM_01", "에스컬레이터"); //
		  } else if  ( ds_detail.GetColumn(0, "MATNR") == "W-1000" ) {
			ds_list2.SetColumn(0, "UNM_01", "무빙워크"); //
		  } else {
			ds_list2.SetColumn(0, "UNM_01", zuse_nm); //용도명  
		  }
		}
	}
	if (rowCnt >= 2) {
		zprdgbn = substr(ds_detail.GetColumn(1, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(1, "GTYPE"  );  
		//spec_nm = ds_detail.GetColumn(1, "ZUSE") + ds_detail.GetColumn(1, "TYPE1") + "-" 
		//        +ds_detail.GetColumn(1, "ZLEN") + "-" + decode(zprdgbn, "MW", ds_detail.GetColumn(1, "ZOPN"), ds_detail.GetColumn(1, "TYPE3"));
		matnr = ds_detail.GetColumn(1, "MATNR");
		//if (spart=="20") spec_nm = ds_detail.GetColumn(1, "TYPE1") + ds_detail.GetColumn(1, "ZUSE") + "-" + ds_detail.GetColumn(1, "TYPE2") + "-" + ds_detail.GetColumn(1, "TYPE3") + "("+ ds_detail.GetColumn(1, "ZACAPA") + ")"; //"모델명""승입방향"-"단수"-"파렛트수"("수용차종") - (2012.12.10)
		//if (spart=="40") spec_nm = ds_detail.GetColumn(1, "TYPE1"); // PSD - 역명만 표시 (2012.12.12)

		// 사양정보 처리 2012.12.31
		type1 = ds_detail.GetColumn(1, "TYPE1");
		type2 = ds_detail.GetColumn(1, "TYPE2");
		type3 = ds_detail.GetColumn(1, "TYPE3");
		zcapa = ds_detail.GetColumn(1, "ZACAPA");
		zuse  = ds_detail.GetColumn(1, "ZUSE");
		zopen = ds_detail.GetColumn(1, "ZOPN");
		zlen  = ds_detail.GetColumn(1, "ZLEN");

		// 2020 브랜드
		brndcd = ds_detail.GetColumn(1, "BRNDCD");
		brndnm = ds_detail.GetColumn(1, "BRNDNM");

		//NEW 견적양식 
		if ( substr ( ds_detail.GetColumn(1,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(1,"MATNR"),0,1 ) == "W" ) {
				ds_list2.SetColumn(0, "TYPE2_02", ds_detail.GetColumn(1, "ZLEN"));
				ds_list2.SetColumn(0, "ZOPN_02", ds_detail.GetColumn(1, "TYPE2"));
				ds_list2.SetColumn(0, "ZLEN_02", ds_detail.GetColumn(1, ""));	     			
		} else {
			ds_list2.SetColumn(0, "TYPE2_02", ds_detail.GetColumn(1, "TYPE2"));			
			ds_list2.SetColumn(0, "ZOPN_02", ds_detail.GetColumn(1, "ZOPN"));
			ds_list2.SetColumn(0, "ZLEN_02", ds_detail.GetColumn(1, "ZLEN"));
		}
		ds_list2.SetColumn(0, "TYPE1_02", ds_detail.GetColumn(1, "TYPE1"));
		ds_list2.SetColumn(0, "TYPE3_02", ds_detail.GetColumn(1, "TYPE3"));
		if ( substr ( ds_detail.GetColumn(1,"MATNR"),0,1 ) == "L" ||
		     substr ( ds_detail.GetColumn(1,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(1,"MATNR"),0,1 ) == "W" ) {
			    ds_list2.SetColumn(0, "EA_02", "대"); 			
		} else {	
			    ds_list2.SetColumn(0, "EA_02", "식");
		}
		
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
		if(brndcd !=null && brndcd != '') {
		    spec_nm = brndcd + "-"+ Trim(spec_nm);
		}
		
		ds_list2.SetColumn(0, "SPC_02", spec_nm);
		
		znumber = decode(matnr, "T-1000", "0", ds_detail.GetColumn(1, "ZNUMBER"));  ds_list2.SetColumn(0, "QTY_02", znumber);
		zuam    = ds_detail.GetColumn(1, "ZUAM"   );  ds_list2.SetColumn(1, "RNO_02", "2"    );
		zeam    = ds_detail.GetColumn(1, "ZEAM"   );  ds_list2.SetColumn(1, "USE_02", gtype  );

		// 2020 브랜드
		ds_list2.SetColumn(1, "BRNDNM_02", brndnm);

		//rate    = ParseInt(zeam) / ParseInt(zeam_sum);
		//zeam    = ParseInt(zeam) + Round(ParseInt(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_02", zeam); // 견적가
		//zuam    = ParseInt(zeam) / ParseInt(znumber); ds_list2.SetColumn(0, "AMT_02", zuam   ); // 단가
		rate    = toNumber(zeam) / toNumber(zeam_sum);
		zeam    = toNumber(zeam) + Round(toNumber(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_02", zeam); // 견적가
		zuam    = toNumber(zeam) / toNumber(znumber); ds_list2.SetColumn(0, "AMT_02", zuam   ); // 단가
		//zuse_nm = ds_detail.GetColumn(1, "ZUSE_NM");  ds_list2.SetColumn(0, "UNM_02", zuse_nm); // 용도명
	    //주차 용도명 
		var cidx ;
		if ( ZPRDGBN == "AP" ) {
		  switch ( ds_detail.GetColumn(1, "GTYPE") ) {
		   case "2PZ" : cidx = 0; break;
		   case "MPZ" : cidx = 1; break; 
		   case "MFC" : cidx = 2; break;
		   case "VRC" : cidx = 3; break;
		   case "HRC" : cidx = 4; break;
		   case "ELV" : cidx = 5; break;
		   case "STC" : cidx = 6; break;
		   case "CRT" : cidx = 7; break;
		   case "BPS" : cidx = 8; break;
		   case "LFC" : cidx = 9; break;
		   default : break;
		  }
		  zuse_nm = ds_jtype.GetColumn(cidx, "CODE_NAME"); ds_list2.SetColumn(0, "UNM_02", zuse_nm); // 용도명
		} 
		else { 
		  zuse_nm = ds_detail.GetColumn(1, "ZUSE_NM");  
		  if ( ds_detail.GetColumn(1, "MATNR") == "T-1000" ) {  
			ds_list2.SetColumn(0, "UNM_02", gtype); // 감시반 일때 용도명 = 기종  
		  } else if  ( ds_detail.GetColumn(1, "MATNR") == "S-1000" ) {
			ds_list2.SetColumn(0, "UNM_02", "에스컬레이터"); //
		  } else if  ( ds_detail.GetColumn(1, "MATNR") == "W-1000" ) {
			ds_list2.SetColumn(0, "UNM_02", "무빙워크"); //
		  } else {
			ds_list2.SetColumn(0, "UNM_02", zuse_nm); //용도명  
		  }
		}
	}
	if (rowCnt >= 3) {
		zprdgbn = substr(ds_detail.GetColumn(2, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(2, "GTYPE"  );  
		//spec_nm = ds_detail.GetColumn(2, "ZUSE") + ds_detail.GetColumn(2, "TYPE1") + "-" 
		//         +ds_detail.GetColumn(2, "ZLEN") + "-" + decode(zprdgbn, "MW", ds_detail.GetColumn(2, "ZOPN"), ds_detail.GetColumn(2, "TYPE3"));
		matnr = ds_detail.GetColumn(2, "MATNR");
		//if (spart=="20") spec_nm = ds_detail.GetColumn(2, "TYPE1") + ds_detail.GetColumn(2, "ZUSE") + "-" + ds_detail.GetColumn(2, "TYPE2") + "-" + ds_detail.GetColumn(2, "TYPE3") + "("+ ds_detail.GetColumn(2, "ZACAPA") + ")"; //"모델명""승입방향"-"단수"-"파렛트수"("수용차종") - (2012.12.10)
		//if (spart=="40") spec_nm = ds_detail.GetColumn(2, "TYPE1"); // PSD - 역명만 표시 (2012.12.12)

		// 사양정보 처리 2012.12.31
		type1 = ds_detail.GetColumn(2, "TYPE1");
		type2 = ds_detail.GetColumn(2, "TYPE2");
		type3 = ds_detail.GetColumn(2, "TYPE3");
		zcapa = ds_detail.GetColumn(2, "ZACAPA");
		zuse  = ds_detail.GetColumn(2, "ZUSE");
		zopen = ds_detail.GetColumn(2, "ZOPN");
		zlen  = ds_detail.GetColumn(2, "ZLEN");
		
		// 2020 브랜드
		brndcd = ds_detail.GetColumn(2, "BRNDCD");
		brndnm = ds_detail.GetColumn(2, "BRNDNM");

		//NEW 견적양식 
		if ( substr ( ds_detail.GetColumn(2,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(2,"MATNR"),0,1 ) == "W" ) {
				ds_list2.SetColumn(0, "TYPE2_03", ds_detail.GetColumn(2, "ZLEN"));
				ds_list2.SetColumn(0, "ZOPN_03", ds_detail.GetColumn(2, "TYPE2"));
				ds_list2.SetColumn(0, "ZLEN_03", ds_detail.GetColumn(2, ""));	     			
		} else {
			ds_list2.SetColumn(0, "TYPE2_03", ds_detail.GetColumn(2, "TYPE2"));			
			ds_list2.SetColumn(0, "ZOPN_03", ds_detail.GetColumn(2, "ZOPN"));
			ds_list2.SetColumn(0, "ZLEN_03", ds_detail.GetColumn(2, "ZLEN"));
		}
		ds_list2.SetColumn(0, "TYPE1_03", ds_detail.GetColumn(2, "TYPE1"));
		ds_list2.SetColumn(0, "TYPE3_03", ds_detail.GetColumn(2, "TYPE3"));
		if ( substr ( ds_detail.GetColumn(2,"MATNR"),0,1 ) == "L" ||
		     substr ( ds_detail.GetColumn(2,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(2,"MATNR"),0,1 ) == "W" ) {
			    ds_list2.SetColumn(0, "EA_03", "대"); 			
		} else {	
			    ds_list2.SetColumn(0, "EA_03", "식");
		}
		
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
		if(brndcd !=null && brndcd != '') {
		    spec_nm = brndcd + "-"+ Trim(spec_nm);
		}

		ds_list2.SetColumn(0, "SPC_03", spec_nm);
		znumber = decode(matnr, "T-1000", "0", ds_detail.GetColumn(2, "ZNUMBER"));  ds_list2.SetColumn(0, "QTY_03", znumber);
		zuam    = ds_detail.GetColumn(2, "ZUAM"   );  ds_list2.SetColumn(2, "RNO_03", "3"    );
		zeam    = ds_detail.GetColumn(2, "ZEAM"   );  ds_list2.SetColumn(2, "USE_03", gtype  );
		
		// 2020 브랜드
		ds_list2.SetColumn(2, "BRNDNM_03", brndnm);
		
		//rate    = ParseInt(zeam) / ParseInt(zeam_sum);
		//zeam    = ParseInt(zeam) + Round(ParseInt(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_03", zeam); // 견적가
		//zuam    = ParseInt(zeam) / ParseInt(znumber); ds_list2.SetColumn(0, "AMT_03", zuam   ); // 단가
		rate    = toNumber(zeam) / toNumber(zeam_sum);
		zeam    = toNumber(zeam) + Round(toNumber(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_03", zeam); // 견적가
		zuam    = toNumber(zeam) / toNumber(znumber); ds_list2.SetColumn(0, "AMT_03", zuam   ); // 단가
		//zuse_nm = ds_detail.GetColumn(2, "ZUSE_NM");  ds_list2.SetColumn(0, "UNM_03", zuse_nm); // 용도명
		//주차 용도명 
		var cidx ;
		if ( ZPRDGBN == "AP" ) {
		  switch ( ds_detail.GetColumn(2, "GTYPE") ) {
		   case "2PZ" : cidx = 0; break;
		   case "MPZ" : cidx = 1; break; 
		   case "MFC" : cidx = 2; break;
		   case "VRC" : cidx = 3; break;
		   case "HRC" : cidx = 4; break;
		   case "ELV" : cidx = 5; break;
		   case "STC" : cidx = 6; break;
		   case "CRT" : cidx = 7; break;
		   case "BPS" : cidx = 8; break;
		   case "LFC" : cidx = 9; break;
		   default : break;
		  }
		  zuse_nm = ds_jtype.GetColumn(cidx, "CODE_NAME"); ds_list2.SetColumn(0, "UNM_03", zuse_nm); // 용도명
		} 
		else { 
		  zuse_nm = ds_detail.GetColumn(2, "ZUSE_NM");  
		  if ( ds_detail.GetColumn(2, "MATNR") == "T-1000" ) {  
			ds_list2.SetColumn(0, "UNM_03", gtype); // 감시반 일때 용도명 = 기종  
		  } else if  ( ds_detail.GetColumn(2, "MATNR") == "S-1000" ) {
			ds_list2.SetColumn(0, "UNM_03", "에스컬레이터"); //
		  } else if  ( ds_detail.GetColumn(2, "MATNR") == "W-1000" ) {
			ds_list2.SetColumn(0, "UNM_03", "무빙워크"); //
		  } else {
			ds_list2.SetColumn(0, "UNM_03", zuse_nm); //용도명  
		  }
		}
	}
	if (rowCnt >= 4) {
		zprdgbn = substr(ds_detail.GetColumn(3, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(3, "GTYPE"  );  
		//spec_nm = ds_detail.GetColumn(3, "ZUSE") + ds_detail.GetColumn(3, "TYPE1") + "-" 
		//         +ds_detail.GetColumn(3, "ZLEN") + "-" + decode(zprdgbn, "MW", ds_detail.GetColumn(3, "ZOPN"), ds_detail.GetColumn(3, "TYPE3"));
		matnr = ds_detail.GetColumn(3, "MATNR");
		//if (spart=="20") spec_nm = ds_detail.GetColumn(3, "TYPE1") + ds_detail.GetColumn(3, "ZUSE") + "-" + ds_detail.GetColumn(3, "TYPE2") + "-" + ds_detail.GetColumn(3, "TYPE3") + "("+ ds_detail.GetColumn(3, "ZACAPA") + ")"; //"모델명""승입방향"-"단수"-"파렛트수"("수용차종") - (2012.12.10)
		//if (spart=="40") spec_nm = ds_detail.GetColumn(3, "TYPE1"); // PSD - 역명만 표시 (2012.12.12)

		// 사양정보 처리 2012.12.31
		type1 = ds_detail.GetColumn(3, "TYPE1");
		type2 = ds_detail.GetColumn(3, "TYPE2");
		type3 = ds_detail.GetColumn(3, "TYPE3");
		zcapa = ds_detail.GetColumn(3, "ZACAPA");
		zuse  = ds_detail.GetColumn(3, "ZUSE");
		zopen = ds_detail.GetColumn(3, "ZOPN");
		zlen  = ds_detail.GetColumn(3, "ZLEN");

		// 2020 브랜드
        brndcd = ds_detail.GetColumn(3, "BRNDCD");
		brndnm = ds_detail.GetColumn(3, "BRNDNM");
		
		//NEW 견적양식 
		if ( substr ( ds_detail.GetColumn(3,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(3,"MATNR"),0,1 ) == "W" ) {
				ds_list2.SetColumn(0, "TYPE2_04", ds_detail.GetColumn(3, "ZLEN"));
				ds_list2.SetColumn(0, "ZOPN_04", ds_detail.GetColumn(3, "TYPE2"));
				ds_list2.SetColumn(0, "ZLEN_04", ds_detail.GetColumn(3, ""));	     			
		} else {
			ds_list2.SetColumn(0, "TYPE2_04", ds_detail.GetColumn(3, "TYPE2"));			
			ds_list2.SetColumn(0, "ZOPN_04", ds_detail.GetColumn(3, "ZOPN"));
			ds_list2.SetColumn(0, "ZLEN_04", ds_detail.GetColumn(3, "ZLEN"));
		}
		ds_list2.SetColumn(0, "TYPE1_04", ds_detail.GetColumn(3, "TYPE1"));
		ds_list2.SetColumn(0, "TYPE3_04", ds_detail.GetColumn(3, "TYPE3"));
		if ( substr ( ds_detail.GetColumn(3,"MATNR"),0,1 ) == "L" ||
		     substr ( ds_detail.GetColumn(3,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(3,"MATNR"),0,1 ) == "W" ) {
			    ds_list2.SetColumn(0, "EA_04", "대"); 			
		} else {	
			    ds_list2.SetColumn(0, "EA_04", "식");
		}
		
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
		if(brndcd !=null && brndcd != '') {
		    spec_nm = brndcd + "-"+ Trim(spec_nm);
		}

		ds_list2.SetColumn(0, "SPC_04", spec_nm);
		znumber = decode(matnr, "T-1000", "0", ds_detail.GetColumn(3, "ZNUMBER"));  ds_list2.SetColumn(0, "QTY_04", znumber);
		zuam    = ds_detail.GetColumn(3, "ZUAM"   );  ds_list2.SetColumn(4, "RNO_04", "4"    );
		zeam    = ds_detail.GetColumn(3, "ZEAM"   );  ds_list2.SetColumn(4, "USE_04", gtype  );
		
		// 2020 브랜드
		ds_list2.SetColumn(4, "BRNDNM_04", brndnm);
		
		//rate    = ParseInt(zeam) / ParseInt(zeam_sum);
		//zeam    = ParseInt(zeam) + Round(ParseInt(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_04", zeam); // 견적가
		//zuam    = ParseInt(zeam) / ParseInt(znumber); ds_list2.SetColumn(0, "AMT_04", zuam   ); // 단가
		rate    = toNumber(zeam) / toNumber(zeam_sum);
		zeam    = toNumber(zeam) + Round(toNumber(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_04", zeam); // 견적가
		zuam    = toNumber(zeam) / toNumber(znumber); ds_list2.SetColumn(0, "AMT_04", zuam   ); // 단가
		//zuse_nm = ds_detail.GetColumn(3, "ZUSE_NM");  ds_list2.SetColumn(0, "UNM_04", zuse_nm); // 용도명
		//주차 용도명 
		var cidx ;
		if ( ZPRDGBN == "AP" ) {
		  switch ( ds_detail.GetColumn(3, "GTYPE") ) {
		   case "2PZ" : cidx = 0; break;
		   case "MPZ" : cidx = 1; break; 
		   case "MFC" : cidx = 2; break;
		   case "VRC" : cidx = 3; break;
		   case "HRC" : cidx = 4; break;
		   case "ELV" : cidx = 5; break;
		   case "STC" : cidx = 6; break;
		   case "CRT" : cidx = 7; break;
		   case "BPS" : cidx = 8; break;
		   case "LFC" : cidx = 9; break;
		   default : break;
		  }
		  zuse_nm = ds_jtype.GetColumn(cidx, "CODE_NAME"); ds_list2.SetColumn(0, "UNM_04", zuse_nm); // 용도명
		} 
		else { 
		  zuse_nm = ds_detail.GetColumn(3, "ZUSE_NM");  
		  if ( ds_detail.GetColumn(3, "MATNR") == "T-1000" ) {  
			ds_list2.SetColumn(0, "UNM_04", gtype); // 감시반 일때 용도명 = 기종  
		  } else if  ( ds_detail.GetColumn(3, "MATNR") == "S-1000" ) {
			ds_list2.SetColumn(0, "UNM_04", "에스컬레이터"); //
		  } else if  ( ds_detail.GetColumn(3, "MATNR") == "W-1000" ) {
			ds_list2.SetColumn(0, "UNM_04", "무빙워크"); //
		  } else {
			ds_list2.SetColumn(0, "UNM_04", zuse_nm); //용도명  
		  }
		}
	}
	if (rowCnt >= 5) {
		zprdgbn = substr(ds_detail.GetColumn(4, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(4, "GTYPE"  );  
		//spec_nm = ds_detail.GetColumn(4, "ZUSE") + ds_detail.GetColumn(4, "TYPE1") + "-" 
		//         +ds_detail.GetColumn(4, "ZLEN") + "-" + decode(zprdgbn, "MW", ds_detail.GetColumn(4, "ZOPN"), ds_detail.GetColumn(4, "TYPE3"));
		matnr = ds_detail.GetColumn(4, "MATNR");
		//if (spart=="20") spec_nm = ds_detail.GetColumn(4, "TYPE1") + ds_detail.GetColumn(4, "ZUSE") + "-" + ds_detail.GetColumn(4, "TYPE2") + "-" + ds_detail.GetColumn(4, "TYPE3") + "("+ ds_detail.GetColumn(4, "ZACAPA") + ")"; //"모델명""승입방향"-"단수"-"파렛트수"("수용차종") - (2012.12.10)
		//if (spart=="40") spec_nm = ds_detail.GetColumn(4, "TYPE1"); // PSD - 역명만 표시 (2012.12.12)

		// 사양정보 처리 2012.12.31
		type1 = ds_detail.GetColumn(4, "TYPE1");
		type2 = ds_detail.GetColumn(4, "TYPE2");
		type3 = ds_detail.GetColumn(4, "TYPE3");
		zcapa = ds_detail.GetColumn(4, "ZACAPA");
		zuse  = ds_detail.GetColumn(4, "ZUSE");
		zopen = ds_detail.GetColumn(4, "ZOPN");
		zlen  = ds_detail.GetColumn(4, "ZLEN");

		// 2020 브랜드
        brndcd = ds_detail.GetColumn(4, "BRNDCD");
		brndnm = ds_detail.GetColumn(4, "BRNDNM");
		
		//NEW 견적양식 
		if ( substr ( ds_detail.GetColumn(4,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(4,"MATNR"),0,1 ) == "W" ) {
				ds_list2.SetColumn(0, "TYPE2_05", ds_detail.GetColumn(4, "ZLEN"));
				ds_list2.SetColumn(0, "ZOPN_05", ds_detail.GetColumn(4, "TYPE2"));
				ds_list2.SetColumn(0, "ZLEN_05", ds_detail.GetColumn(4, ""));	     			
		} else {
			ds_list2.SetColumn(0, "TYPE2_05", ds_detail.GetColumn(4, "TYPE2"));			
			ds_list2.SetColumn(0, "ZOPN_05", ds_detail.GetColumn(4, "ZOPN"));
			ds_list2.SetColumn(0, "ZLEN_05", ds_detail.GetColumn(4, "ZLEN"));
		}
		ds_list2.SetColumn(0, "TYPE1_05", ds_detail.GetColumn(4, "TYPE1"));
		ds_list2.SetColumn(0, "TYPE3_05", ds_detail.GetColumn(4, "TYPE3"));
		if ( substr ( ds_detail.GetColumn(4,"MATNR"),0,1 ) == "L" ||
		     substr ( ds_detail.GetColumn(4,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(4,"MATNR"),0,1 ) == "W" ) {
			    ds_list2.SetColumn(0, "EA_05", "대"); 			
		} else {	
			    ds_list2.SetColumn(0, "EA_05", "식");
		}
		
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
		if(brndcd !=null && brndcd != '') {
		    spec_nm = brndcd + "-"+ Trim(spec_nm);
		}

		ds_list2.SetColumn(0, "SPC_05", spec_nm);
		znumber = decode(matnr, "T-1000", "0", ds_detail.GetColumn(4, "ZNUMBER"));  ds_list2.SetColumn(0, "QTY_05", znumber);
		zuam    = ds_detail.GetColumn(4, "ZUAM"   );  ds_list2.SetColumn(5, "RNO_05", "5"    );
		zeam    = ds_detail.GetColumn(4, "ZEAM"   );  ds_list2.SetColumn(5, "USE_05", gtype  );
		
		// 2020 브랜드
		ds_list2.SetColumn(5, "BRNDNM_05", brndnm);
		
		//rate    = ParseInt(zeam) / ParseInt(zeam_sum);
		//zeam    = ParseInt(zeam) + Round(ParseInt(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_05", zeam); // 견적가
		//zuam    = ParseInt(zeam) / ParseInt(znumber); ds_list2.SetColumn(0, "AMT_05", zuam   ); // 단가
		rate    = toNumber(zeam) / toNumber(zeam_sum);
		zeam    = toNumber(zeam) + Round(toNumber(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_05", zeam); // 견적가
		zuam    = toNumber(zeam) / toNumber(znumber); ds_list2.SetColumn(0, "AMT_05", zuam   ); // 단가
		//zuse_nm = ds_detail.GetColumn(4, "ZUSE_NM");  ds_list2.SetColumn(0, "UNM_05", zuse_nm); // 용도명
		//주차 용도명 
		var cidx ;
		if ( ZPRDGBN == "AP" ) {
		  switch ( ds_detail.GetColumn(4, "GTYPE") ) {
		   case "2PZ" : cidx = 0; break;
		   case "MPZ" : cidx = 1; break; 
		   case "MFC" : cidx = 2; break;
		   case "VRC" : cidx = 3; break;
		   case "HRC" : cidx = 4; break;
		   case "ELV" : cidx = 5; break;
		   case "STC" : cidx = 6; break;
		   case "CRT" : cidx = 7; break;
		   case "BPS" : cidx = 8; break;
		   case "LFC" : cidx = 9; break;
		   default : break;
		  }
		  zuse_nm = ds_jtype.GetColumn(cidx, "CODE_NAME"); ds_list2.SetColumn(0, "UNM_05", zuse_nm); // 용도명
		} 
		else { 
		  zuse_nm = ds_detail.GetColumn(4, "ZUSE_NM");  
		  if ( ds_detail.GetColumn(4, "MATNR") == "T-1000" ) {  
			ds_list2.SetColumn(0, "UNM_05", gtype); // 감시반 일때 용도명 = 기종  
		  } else if  ( ds_detail.GetColumn(4, "MATNR") == "S-1000" ) {
			ds_list2.SetColumn(0, "UNM_05", "에스컬레이터"); //
		  } else if  ( ds_detail.GetColumn(4, "MATNR") == "W-1000" ) {
			ds_list2.SetColumn(0, "UNM_05", "무빙워크"); //
		  } else {
			ds_list2.SetColumn(0, "UNM_05", zuse_nm); //용도명  
		  }
		}
	}
	if (rowCnt >= 6) {
		zprdgbn = substr(ds_detail.GetColumn(5, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(5, "GTYPE"  );  
		//spec_nm = ds_detail.GetColumn(5, "ZUSE") + ds_detail.GetColumn(5, "TYPE1") + "-" 
		//         +ds_detail.GetColumn(5, "ZLEN") + "-" + decode(zprdgbn, "MW", ds_detail.GetColumn(5, "ZOPN"), ds_detail.GetColumn(5, "TYPE3"));
		matnr = ds_detail.GetColumn(5, "MATNR");
		//if (spart=="20") spec_nm = ds_detail.GetColumn(5, "TYPE1") + ds_detail.GetColumn(5, "ZUSE") + "-" + ds_detail.GetColumn(5, "TYPE2") + "-" + ds_detail.GetColumn(5, "TYPE3") + "("+ ds_detail.GetColumn(5, "ZACAPA") + ")"; //"모델명""승입방향"-"단수"-"파렛트수"("수용차종") - (2012.12.10)
		//if (spart=="40") spec_nm = ds_detail.GetColumn(5, "TYPE1"); // PSD - 역명만 표시 (2012.12.12)

		// 사양정보 처리 2012.12.31
		type1 = ds_detail.GetColumn(5, "TYPE1");
		type2 = ds_detail.GetColumn(5, "TYPE2");
		type3 = ds_detail.GetColumn(5, "TYPE3");
		zcapa = ds_detail.GetColumn(5, "ZACAPA");
		zuse  = ds_detail.GetColumn(5, "ZUSE");
		zopen = ds_detail.GetColumn(5, "ZOPN");
		zlen  = ds_detail.GetColumn(5, "ZLEN");

		// 2020 브랜드
        brndcd = ds_detail.GetColumn(5, "BRNDCD");
		brndnm = ds_detail.GetColumn(5, "BRNDNM");
		
		//NEW 견적양식 
		if ( substr ( ds_detail.GetColumn(5,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(5,"MATNR"),0,1 ) == "W" ) {
				ds_list2.SetColumn(0, "TYPE2_06", ds_detail.GetColumn(5, "ZLEN"));
				ds_list2.SetColumn(0, "ZOPN_06", ds_detail.GetColumn(5, "TYPE2"));
				ds_list2.SetColumn(0, "ZLEN_06", ds_detail.GetColumn(5, ""));	     			
		} else {
			ds_list2.SetColumn(0, "TYPE2_06", ds_detail.GetColumn(5, "TYPE2"));			
			ds_list2.SetColumn(0, "ZOPN_06", ds_detail.GetColumn(5, "ZOPN"));
			ds_list2.SetColumn(0, "ZLEN_06", ds_detail.GetColumn(5, "ZLEN"));
		}
		ds_list2.SetColumn(0, "TYPE1_06", ds_detail.GetColumn(5, "TYPE1"));
		ds_list2.SetColumn(0, "TYPE3_06", ds_detail.GetColumn(5, "TYPE3"));
		if ( substr ( ds_detail.GetColumn(5,"MATNR"),0,1 ) == "L" ||
		     substr ( ds_detail.GetColumn(5,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(5,"MATNR"),0,1 ) == "W" ) {
			    ds_list2.SetColumn(0, "EA_06", "대"); 			
		} else {	
			    ds_list2.SetColumn(0, "EA_06", "식");
		}
		
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
		if(brndcd !=null && brndcd != '') {
		    spec_nm = brndcd + "-"+ Trim(spec_nm);
		}

		ds_list2.SetColumn(0, "SPC_06", spec_nm);
		znumber = decode(matnr, "T-1000", "0", ds_detail.GetColumn(5, "ZNUMBER"));  ds_list2.SetColumn(0, "QTY_06", znumber);
		zuam    = ds_detail.GetColumn(5, "ZUAM"   );  ds_list2.SetColumn(6, "RNO_06", "6"    );
		zeam    = ds_detail.GetColumn(5, "ZEAM"   );  ds_list2.SetColumn(6, "USE_06", gtype  );

		// 2020 브랜드
		ds_list2.SetColumn(6, "BRNDNM_06", brndnm);
		if(brndcd == null && brndcd == '') {
		    brndcd = "";
		} else {
		    brndcd = brndcd+"-";
		}

		//rate    = ParseInt(zeam) / ParseInt(zeam_sum);
		//zeam    = ParseInt(zeam) + Round(ParseInt(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_06", zeam); // 견적가
		//zuam    = ParseInt(zeam) / ParseInt(znumber); ds_list2.SetColumn(0, "AMT_06", zuam   );
		rate    = toNumber(zeam) / toNumber(zeam_sum);
		zeam    = toNumber(zeam) + Round(toNumber(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_06", zeam); // 견적가
		zuam    = toNumber(zeam) / toNumber(znumber); ds_list2.SetColumn(0, "AMT_06", zuam   );
		//zuse_nm = ds_detail.GetColumn(5, "ZUSE_NM");  ds_list2.SetColumn(0, "UNM_06", zuse_nm); // 용도명
		//주차 용도명 
		var cidx ;
		if ( ZPRDGBN == "AP" ) {
		  switch ( ds_detail.GetColumn(5, "GTYPE") ) {
		   case "2PZ" : cidx = 0; break;
		   case "MPZ" : cidx = 1; break; 
		   case "MFC" : cidx = 2; break;
		   case "VRC" : cidx = 3; break;
		   case "HRC" : cidx = 4; break;
		   case "ELV" : cidx = 5; break;
		   case "STC" : cidx = 6; break;
		   case "CRT" : cidx = 7; break;
		   case "BPS" : cidx = 8; break;
		   case "LFC" : cidx = 9; break;
		   default : break;
		  }
		  zuse_nm = ds_jtype.GetColumn(cidx, "CODE_NAME"); ds_list2.SetColumn(0, "UNM_06", zuse_nm); // 용도명
		} 
		else { 
		  zuse_nm = ds_detail.GetColumn(5, "ZUSE_NM");  
		  if ( ds_detail.GetColumn(5, "MATNR") == "T-1000" ) {  
			ds_list2.SetColumn(0, "UNM_06", gtype); // 감시반 일때 용도명 = 기종  
		  } else if  ( ds_detail.GetColumn(5, "MATNR") == "S-1000" ) {
			ds_list2.SetColumn(0, "UNM_06", "에스컬레이터"); //
		  } else if  ( ds_detail.GetColumn(5, "MATNR") == "W-1000" ) {
			ds_list2.SetColumn(0, "UNM_06", "무빙워크"); //
		  } else {
			ds_list2.SetColumn(0, "UNM_06", zuse_nm); //용도명  
		  }
		}
	}
	if (rowCnt >= 7) {
		zprdgbn = substr(ds_detail.GetColumn(6, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(6, "GTYPE"  ); 
		//spec_nm = ds_detail.GetColumn(6, "ZUSE") + ds_detail.GetColumn(6, "TYPE1") + "-" 
		//         +ds_detail.GetColumn(6, "ZLEN") + "-" + decode(zprdgbn, "MW", ds_detail.GetColumn(6, "ZOPN"), ds_detail.GetColumn(6, "TYPE3"));
		matnr = ds_detail.GetColumn(6, "MATNR");
		//if (spart=="20") spec_nm = ds_detail.GetColumn(6, "TYPE1") + ds_detail.GetColumn(6, "ZUSE") + "-" + ds_detail.GetColumn(6, "TYPE2") + "-" + ds_detail.GetColumn(6, "TYPE3") + "("+ ds_detail.GetColumn(6, "ZACAPA") + ")"; //"모델명""승입방향"-"단수"-"파렛트수"("수용차종") - (2012.12.10)
		//if (spart=="40") spec_nm = ds_detail.GetColumn(6, "TYPE1"); // PSD - 역명만 표시 (2012.12.12)

		// 사양정보 처리 2012.12.31
		type1 = ds_detail.GetColumn(6, "TYPE1");
		type2 = ds_detail.GetColumn(6, "TYPE2");
		type3 = ds_detail.GetColumn(6, "TYPE3");
		zcapa = ds_detail.GetColumn(6, "ZACAPA");
		zuse  = ds_detail.GetColumn(6, "ZUSE");
		zopen = ds_detail.GetColumn(6, "ZOPN");
		zlen  = ds_detail.GetColumn(6, "ZLEN");
		
		// 2020 브랜드
        brndcd = ds_detail.GetColumn(6, "BRNDCD");
		brndnm = ds_detail.GetColumn(6, "BRNDNM");
		
		//NEW 견적양식 
		if ( substr ( ds_detail.GetColumn(6,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(6,"MATNR"),0,1 ) == "W" ) {
				ds_list2.SetColumn(0, "TYPE2_07", ds_detail.GetColumn(6, "ZLEN"));
				ds_list2.SetColumn(0, "ZOPN_07", ds_detail.GetColumn(6, "TYPE2"));
				ds_list2.SetColumn(0, "ZLEN_07", ds_detail.GetColumn(6, ""));	     			
		} else {
			ds_list2.SetColumn(0, "TYPE2_07", ds_detail.GetColumn(6, "TYPE2"));			
			ds_list2.SetColumn(0, "ZOPN_07", ds_detail.GetColumn(6, "ZOPN"));
			ds_list2.SetColumn(0, "ZLEN_07", ds_detail.GetColumn(6, "ZLEN"));
		}
		ds_list2.SetColumn(0, "TYPE1_07", ds_detail.GetColumn(6, "TYPE1"));
		ds_list2.SetColumn(0, "TYPE3_07", ds_detail.GetColumn(6, "TYPE3"));
		if ( substr ( ds_detail.GetColumn(6,"MATNR"),0,1 ) == "L" ||
		     substr ( ds_detail.GetColumn(6,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(6,"MATNR"),0,1 ) == "W" ) {
			    ds_list2.SetColumn(0, "EA_07", "대"); 			
		} else {	
			    ds_list2.SetColumn(0, "EA_07", "식");
		}
		
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
		if(brndcd !=null && brndcd != '') {
		    spec_nm = brndcd + "-"+ Trim(spec_nm);
		}

		ds_list2.SetColumn(0, "SPC_07", spec_nm);
		znumber = decode(matnr, "T-1000", "0", ds_detail.GetColumn(6, "ZNUMBER"));  ds_list2.SetColumn(0, "QTY_07", znumber);
		zuam    = ds_detail.GetColumn(6, "ZUAM"   );  ds_list2.SetColumn(7, "RNO_07", "7"    );
		zeam    = ds_detail.GetColumn(6, "ZEAM"   );  ds_list2.SetColumn(7, "USE_07", gtype  );
		
		// 2020 브랜드
		ds_list2.SetColumn(7, "BRNDNM_07", brndnm);
		
		//rate    = ParseInt(zeam) / ParseInt(zeam_sum);
		//zeam    = ParseInt(zeam) + Round(ParseInt(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_07", zeam); // 견적가
		//zuam    = ParseInt(zeam) / ParseInt(znumber); ds_list2.SetColumn(0, "AMT_07", zuam   ); // 단가
		rate    = toNumber(zeam) / toNumber(zeam_sum);
		zeam    = toNumber(zeam) + Round(toNumber(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_07", zeam); // 견적가
		zuam    = toNumber(zeam) / toNumber(znumber); ds_list2.SetColumn(0, "AMT_07", zuam   ); // 단가
		//zuse_nm = ds_detail.GetColumn(6, "ZUSE_NM");  ds_list2.SetColumn(0, "UNM_07", zuse_nm); // 용도명
		//주차 용도명 
		var cidx ;
		if ( ZPRDGBN == "AP" ) {
		  switch ( ds_detail.GetColumn(6, "GTYPE") ) {
		   case "2PZ" : cidx = 0; break;
		   case "MPZ" : cidx = 1; break; 
		   case "MFC" : cidx = 2; break;
		   case "VRC" : cidx = 3; break;
		   case "HRC" : cidx = 4; break;
		   case "ELV" : cidx = 5; break;
		   case "STC" : cidx = 6; break;
		   case "CRT" : cidx = 7; break;
		   case "BPS" : cidx = 8; break;
		   case "LFC" : cidx = 9; break;
		   default : break;
		  }
		  zuse_nm = ds_jtype.GetColumn(cidx, "CODE_NAME"); ds_list2.SetColumn(0, "UNM_07", zuse_nm); // 용도명
		} 
		else { 
		  zuse_nm = ds_detail.GetColumn(6, "ZUSE_NM");  
		  if ( ds_detail.GetColumn(6, "MATNR") == "T-1000" ) {  
			ds_list2.SetColumn(0, "UNM_07", gtype); // 감시반 일때 용도명 = 기종  
		  } else if  ( ds_detail.GetColumn(6, "MATNR") == "S-1000" ) {
			ds_list2.SetColumn(0, "UNM_07", "에스컬레이터"); //
		  } else if  ( ds_detail.GetColumn(6, "MATNR") == "W-1000" ) {
			ds_list2.SetColumn(0, "UNM_07", "무빙워크"); //
		  } else {
			ds_list2.SetColumn(0, "UNM_07", zuse_nm); //용도명  
		  }
		}
	}
	if (rowCnt >= 8) {
		zprdgbn = substr(ds_detail.GetColumn(7, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(7, "GTYPE"  );  
		//spec_nm = ds_detail.GetColumn(7, "ZUSE") + ds_detail.GetColumn(7, "TYPE1") + "-" 
		//         +ds_detail.GetColumn(7, "ZLEN") + "-" + decode(zprdgbn, "MW", ds_detail.GetColumn(7, "ZOPN"), ds_detail.GetColumn(7, "TYPE3"));
		matnr = ds_detail.GetColumn(7, "MATNR");
		//if (spart=="20") spec_nm = ds_detail.GetColumn(7, "TYPE1") + ds_detail.GetColumn(7, "ZUSE") + "-" + ds_detail.GetColumn(7, "TYPE2") + "-" + ds_detail.GetColumn(7, "TYPE3") + "("+ ds_detail.GetColumn(7, "ZACAPA") + ")"; //"모델명""승입방향"-"단수"-"파렛트수"("수용차종") - (2012.12.10)
		//if (spart=="40") spec_nm = ds_detail.GetColumn(7, "TYPE1"); // PSD - 역명만 표시 (2012.12.12)

		// 사양정보 처리 2012.12.31
		type1 = ds_detail.GetColumn(7, "TYPE1");
		type2 = ds_detail.GetColumn(7, "TYPE2");
		type3 = ds_detail.GetColumn(7, "TYPE3");
		zcapa = ds_detail.GetColumn(7, "ZACAPA");
		zuse  = ds_detail.GetColumn(7, "ZUSE");
		zopen = ds_detail.GetColumn(7, "ZOPN");
		zlen  = ds_detail.GetColumn(7, "ZLEN");
		// 2020 브랜드
		brndcd = ds_detail.GetColumn(7, "BRNDCD");
		brndnm = ds_detail.GetColumn(7, "BRNDNM");
		
		//NEW 견적양식 
		if ( substr ( ds_detail.GetColumn(7,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(7,"MATNR"),0,1 ) == "W" ) {
				ds_list2.SetColumn(0, "TYPE2_08", ds_detail.GetColumn(7, "ZLEN"));
				ds_list2.SetColumn(0, "ZOPN_08", ds_detail.GetColumn(7, "TYPE2"));
				ds_list2.SetColumn(0, "ZLEN_08", ds_detail.GetColumn(7, ""));	     			
		} else {
			ds_list2.SetColumn(0, "TYPE2_08", ds_detail.GetColumn(7, "TYPE2"));			
			ds_list2.SetColumn(0, "ZOPN_08", ds_detail.GetColumn(7, "ZOPN"));
			ds_list2.SetColumn(0, "ZLEN_08", ds_detail.GetColumn(7, "ZLEN"));
		}
		ds_list2.SetColumn(0, "TYPE1_08", ds_detail.GetColumn(7, "TYPE1"));
		ds_list2.SetColumn(0, "TYPE3_08", ds_detail.GetColumn(7, "TYPE3"));
		if ( substr ( ds_detail.GetColumn(7,"MATNR"),0,1 ) == "L" ||
		     substr ( ds_detail.GetColumn(7,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(7,"MATNR"),0,1 ) == "W" ) {
			    ds_list2.SetColumn(0, "EA_08", "대"); 			
		} else {	
			    ds_list2.SetColumn(0, "EA_08", "식");
		}
		
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
		if(brndcd !=null && brndcd != '') {
		    spec_nm = brndcd + "-"+ Trim(spec_nm);
		}

		ds_list2.SetColumn(0, "SPC_08", spec_nm);
		znumber = decode(matnr, "T-1000", "0", ds_detail.GetColumn(7, "ZNUMBER"));  ds_list2.SetColumn(0, "QTY_08", znumber);
		zuam    = ds_detail.GetColumn(7, "ZUAM"   );  ds_list2.SetColumn(8, "RNO_08", "8"    );
		zeam    = ds_detail.GetColumn(7, "ZEAM"   );  ds_list2.SetColumn(8, "USE_08", gtype  );

		// 2020 브랜드
		ds_list2.SetColumn(8, "BRNDNM_08", brndnm);
		
		//rate    = ParseInt(zeam) / ParseInt(zeam_sum);
		//zeam    = ParseInt(zeam) + Round(ParseInt(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_08", zeam); // 견적가
		//zuam    = ParseInt(zeam) / ParseInt(znumber); ds_list2.SetColumn(0, "AMT_08", zuam   ); // 단가
		rate    = toNumber(zeam) / toNumber(zeam_sum);
		zeam    = toNumber(zeam) + Round(toNumber(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_08", zeam); // 견적가
		zuam    = toNumber(zeam) / toNumber(znumber); ds_list2.SetColumn(0, "AMT_08", zuam   ); // 단가
		//zuse_nm = ds_detail.GetColumn(7, "ZUSE_NM");  ds_list2.SetColumn(0, "UNM_08", zuse_nm); // 용도명
		//주차 용도명 
		var cidx ;
		if ( ZPRDGBN == "AP" ) {
		  switch ( ds_detail.GetColumn(7, "GTYPE") ) {
		   case "2PZ" : cidx = 0; break;
		   case "MPZ" : cidx = 1; break; 
		   case "MFC" : cidx = 2; break;
		   case "VRC" : cidx = 3; break;
		   case "HRC" : cidx = 4; break;
		   case "ELV" : cidx = 5; break;
		   case "STC" : cidx = 6; break;
		   case "CRT" : cidx = 7; break;
		   case "BPS" : cidx = 8; break;
		   case "LFC" : cidx = 9; break;
		   default : break;
		  }
		  zuse_nm = ds_jtype.GetColumn(cidx, "CODE_NAME"); ds_list2.SetColumn(0, "UNM_08", zuse_nm); // 용도명
		} 
		else { 
		  zuse_nm = ds_detail.GetColumn(7, "ZUSE_NM");  
		  if ( ds_detail.GetColumn(7, "MATNR") == "T-1000" ) {  
			ds_list2.SetColumn(0, "UNM_08", gtype); // 감시반 일때 용도명 = 기종  
		  } else if  ( ds_detail.GetColumn(7, "MATNR") == "S-1000" ) {
			ds_list2.SetColumn(0, "UNM_08", "에스컬레이터"); //
		  } else if  ( ds_detail.GetColumn(7, "MATNR") == "W-1000" ) {
			ds_list2.SetColumn(0, "UNM_08", "무빙워크"); //
		  } else {
			ds_list2.SetColumn(0, "UNM_08", zuse_nm); //용도명  
		  }
		}
	}
	if (rowCnt >= 9) {
		zprdgbn = substr(ds_detail.GetColumn(8, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(8, "GTYPE"  );  
		//spec_nm = ds_detail.GetColumn(8, "ZUSE") + ds_detail.GetColumn(8, "TYPE1") + "-" 
		//         +ds_detail.GetColumn(8, "ZLEN") + "-" + decode(zprdgbn, "MW", ds_detail.GetColumn(8, "ZOPN"), ds_detail.GetColumn(8, "TYPE3"));
		matnr = ds_detail.GetColumn(8, "MATNR");
		//if (spart=="20") spec_nm = ds_detail.GetColumn(8, "TYPE1") + ds_detail.GetColumn(8, "ZUSE") + "-" + ds_detail.GetColumn(8, "TYPE2") + "-" + ds_detail.GetColumn(8, "TYPE3") + "("+ ds_detail.GetColumn(8, "ZACAPA") + ")"; //"모델명""승입방향"-"단수"-"파렛트수"("수용차종") - (2012.12.10)
		//if (spart=="40") spec_nm = ds_detail.GetColumn(8, "TYPE1"); // PSD - 역명만 표시 (2012.12.12)

		// 사양정보 처리 2012.12.31
		type1 = ds_detail.GetColumn(8, "TYPE1");
		type2 = ds_detail.GetColumn(8, "TYPE2");
		type3 = ds_detail.GetColumn(8, "TYPE3");
		zcapa = ds_detail.GetColumn(8, "ZACAPA");
		zuse  = ds_detail.GetColumn(8, "ZUSE");
		zopen = ds_detail.GetColumn(8, "ZOPN");
		zlen  = ds_detail.GetColumn(8, "ZLEN");
		// 2020 브랜드
        brndcd = ds_detail.GetColumn(8, "BRNDCD");
		brndnm = ds_detail.GetColumn(8, "BRNDNM");
		
		//NEW 견적양식 
		if ( substr ( ds_detail.GetColumn(8,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(8,"MATNR"),0,1 ) == "W" ) {
				ds_list2.SetColumn(0, "TYPE2_09", ds_detail.GetColumn(8, "ZLEN"));
				ds_list2.SetColumn(0, "ZOPN_09", ds_detail.GetColumn(8, "TYPE2"));
				ds_list2.SetColumn(0, "ZLEN_09", ds_detail.GetColumn(8, ""));	     			
		} else {
			ds_list2.SetColumn(0, "TYPE2_09", ds_detail.GetColumn(8, "TYPE2"));			
			ds_list2.SetColumn(0, "ZOPN_09", ds_detail.GetColumn(8, "ZOPN"));
			ds_list2.SetColumn(0, "ZLEN_09", ds_detail.GetColumn(8, "ZLEN"));
		}
		ds_list2.SetColumn(0, "TYPE1_09", ds_detail.GetColumn(8, "TYPE1"));
		ds_list2.SetColumn(0, "TYPE3_09", ds_detail.GetColumn(8, "TYPE3"));
		if ( substr ( ds_detail.GetColumn(8,"MATNR"),0,1 ) == "L" ||
		     substr ( ds_detail.GetColumn(8,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(8,"MATNR"),0,1 ) == "W" ) {
			    ds_list2.SetColumn(0, "EA_09", "대"); 			
		} else {	
			    ds_list2.SetColumn(0, "EA_09", "식");
		}
		
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
		if(brndcd !=null && brndcd != '') {
		    spec_nm = brndcd + "-"+ Trim(spec_nm);
		}

		ds_list2.SetColumn(0, "SPC_09", spec_nm);
		znumber = decode(matnr, "T-1000", "0", ds_detail.GetColumn(8, "ZNUMBER"));  ds_list2.SetColumn(0, "QTY_09", znumber);
		zuam    = ds_detail.GetColumn(8, "ZUAM"   );  ds_list2.SetColumn(8, "RNO_09", "9"    );
		zeam    = ds_detail.GetColumn(8, "ZEAM"   );  ds_list2.SetColumn(8, "USE_09", gtype  );

		// 2020 브랜드
		ds_list2.SetColumn(8, "BRNDNM_09", brndnm);
		
		//rate    = ParseInt(zeam) / ParseInt(zeam_sum);
		//zeam    = ParseInt(zeam) + Round(ParseInt(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_09", zeam); // 견적가
		//zuam    = ParseInt(zeam) / ParseInt(znumber); ds_list2.SetColumn(0, "AMT_09", zuam   ); // 단가
		rate    = toNumber(zeam) / toNumber(zeam_sum);
		zeam    = toNumber(zeam) + Round(toNumber(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_09", zeam); // 견적가
		zuam    = toNumber(zeam) / toNumber(znumber); ds_list2.SetColumn(0, "AMT_09", zuam   ); // 단가
		//zuse_nm = ds_detail.GetColumn(8, "ZUSE_NM");  ds_list2.SetColumn(0, "UNM_09", zuse_nm); // 용도명
		//주차 용도명 
		var cidx ;
		if ( ZPRDGBN == "AP" ) {
		  switch ( ds_detail.GetColumn(8, "GTYPE") ) {
		   case "2PZ" : cidx = 0; break;
		   case "MPZ" : cidx = 1; break; 
		   case "MFC" : cidx = 2; break;
		   case "VRC" : cidx = 3; break;
		   case "HRC" : cidx = 4; break;
		   case "ELV" : cidx = 5; break;
		   case "STC" : cidx = 6; break;
		   case "CRT" : cidx = 7; break;
		   case "BPS" : cidx = 8; break;
		   case "LFC" : cidx = 9; break;
		   default : break;
		  }
		  zuse_nm = ds_jtype.GetColumn(cidx, "CODE_NAME"); ds_list2.SetColumn(0, "UNM_09", zuse_nm); // 용도명
		} 
		else { 
		  zuse_nm = ds_detail.GetColumn(8, "ZUSE_NM");  
		  if ( ds_detail.GetColumn(8, "MATNR") == "T-1000" ) {  
			ds_list2.SetColumn(0, "UNM_09", gtype); // 감시반 일때 용도명 = 기종  
		  } else if  ( ds_detail.GetColumn(8, "MATNR") == "S-1000" ) {
			ds_list2.SetColumn(0, "UNM_09", "에스컬레이터"); //
		  } else if  ( ds_detail.GetColumn(8, "MATNR") == "W-1000" ) {
			ds_list2.SetColumn(0, "UNM_09", "무빙워크"); //
		  } else {
			ds_list2.SetColumn(0, "UNM_09", zuse_nm); //용도명  
		  }
		}
	}
	if (rowCnt >= 10) {
		zprdgbn = substr(ds_detail.GetColumn(9, "ZPRDGBN"), 0, 2);
		gtype   = ds_detail.GetColumn(9, "GTYPE"  );  
		//spec_nm = ds_detail.GetColumn(9, "ZUSE") + ds_detail.GetColumn(9, "TYPE1") + "-" 
		//         +ds_detail.GetColumn(9, "ZLEN") + "-" +decode(zprdgbn, "MW", ds_detail.GetColumn(9, "ZOPN"), ds_detail.GetColumn(9, "TYPE3"));
		matnr = ds_detail.GetColumn(9, "MATNR");
		//if (spart=="20") spec_nm = ds_detail.GetColumn(9, "TYPE1") + ds_detail.GetColumn(9, "ZUSE") + "-" + ds_detail.GetColumn(9, "TYPE2") + "-" + ds_detail.GetColumn(9, "TYPE3") + "("+ ds_detail.GetColumn(9, "ZACAPA") + ")"; //"모델명""승입방향"-"단수"-"파렛트수"("수용차종") - (2012.12.10)
		//if (spart=="40") spec_nm = ds_detail.GetColumn(9, "TYPE1"); // PSD - 역명만 표시 (2012.12.12)

		// 사양정보 처리 2012.12.31
		type1 = ds_detail.GetColumn(9, "TYPE1");
		type2 = ds_detail.GetColumn(9, "TYPE2");
		type3 = ds_detail.GetColumn(9, "TYPE3");
		zcapa = ds_detail.GetColumn(9, "ZACAPA");
		zuse  = ds_detail.GetColumn(9, "ZUSE");
		zopen = ds_detail.GetColumn(9, "ZOPN");
		zlen  = ds_detail.GetColumn(9, "ZLEN");
		// 2020 브랜드
		brndcd = ds_detail.GetColumn(9, "BRNDCD");
		brndnm = ds_detail.GetColumn(9, "BRNDNM");
		
		//NEW 견적양식 
		if ( substr ( ds_detail.GetColumn(9,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(9,"MATNR"),0,1 ) == "W" ) {
				ds_list2.SetColumn(0, "TYPE2_10", ds_detail.GetColumn(9, "ZLEN"));
				ds_list2.SetColumn(0, "ZOPN_10", ds_detail.GetColumn(9, "TYPE2"));
				ds_list2.SetColumn(0, "ZLEN_10", ds_detail.GetColumn(9, ""));	     			
		} else {
			ds_list2.SetColumn(0, "TYPE2_10", ds_detail.GetColumn(9, "TYPE2"));			
			ds_list2.SetColumn(0, "ZOPN_10", ds_detail.GetColumn(9, "ZOPN"));
			ds_list2.SetColumn(0, "ZLEN_10", ds_detail.GetColumn(9, "ZLEN"));
		}
		ds_list2.SetColumn(0, "TYPE1_10", ds_detail.GetColumn(9, "TYPE1"));
		ds_list2.SetColumn(0, "TYPE3_10", ds_detail.GetColumn(9, "TYPE3"));
		if ( substr ( ds_detail.GetColumn(9,"MATNR"),0,1 ) == "L" ||
		     substr ( ds_detail.GetColumn(9,"MATNR"),0,1 ) == "S" ||
		     substr ( ds_detail.GetColumn(9,"MATNR"),0,1 ) == "W" ) {
			    ds_list2.SetColumn(0, "EA_10", "대"); 			
		} else {
		        ds_list2.SetColumn(0, "EA_10", "식"); 	
		}
	
		spec_nm = gfn_specInfo(vkbur, matnr, "", type1, type2, type3, zcapa, zuse, zopen, zlen);
		if(brndcd !=null && brndcd != '') {
		    spec_nm = brndcd + "-"+ Trim(spec_nm);
		}

		ds_list2.SetColumn(0, "SPC_10", spec_nm);
		znumber = decode(matnr, "T-1000", "0", ds_detail.GetColumn(9, "ZNUMBER"));  ds_list2.SetColumn(0, "QTY_10", znumber);
		zuam    = ds_detail.GetColumn(9, "ZUAM"   );  ds_list2.SetColumn(9, "RNO_10", "10"   );
		zeam    = ds_detail.GetColumn(9, "ZEAM"   );  ds_list2.SetColumn(9, "USE_10", gtype  );

		// 2020 브랜드
		ds_list2.SetColumn(9, "BRNDNM_10", brndnm);
		
		//rate    = ParseInt(zeam) / ParseInt(zeam_sum);
		//zeam    = ParseInt(zeam) + Round(ParseInt(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_10", zeam); // 견적가
		//zuam    = ParseInt(zeam) / ParseInt(znumber); ds_list2.SetColumn(0, "AMT_10", zuam   ); // 단가
		rate    = toNumber(zeam) / toNumber(zeam_sum);
		zeam    = toNumber(zeam) + Round(toNumber(zeam_sp) * rate, 0); ds_list2.SetColumn(0, "GAM_10", zeam); // 견적가
		zuam    = toNumber(zeam) / toNumber(znumber); ds_list2.SetColumn(0, "AMT_10", zuam   ); // 단가
		//zuse_nm = ds_detail.GetColumn(9, "ZUSE_NM");  ds_list2.SetColumn(0, "UNM_10", zuse_nm); // 용도명
		//주차 용도명 
		var cidx ;
		if ( ZPRDGBN == "AP" ) {
		  switch ( ds_detail.GetColumn(9, "GTYPE") ) {
		   case "2PZ" : cidx = 0; break;
		   case "MPZ" : cidx = 1; break; 
		   case "MFC" : cidx = 2; break;
		   case "VRC" : cidx = 3; break;
		   case "HRC" : cidx = 4; break;
		   case "ELV" : cidx = 5; break;
		   case "STC" : cidx = 6; break;
		   case "CRT" : cidx = 7; break;
		   case "BPS" : cidx = 8; break;
		   case "LFC" : cidx = 9; break;
		   default : break;
		  }
		  zuse_nm = ds_jtype.GetColumn(cidx, "CODE_NAME"); ds_list2.SetColumn(0, "UNM_10", zuse_nm); // 용도명
		} 
		else { 
		  zuse_nm = ds_detail.GetColumn(9, "ZUSE_NM");  
		  if ( ds_detail.GetColumn(9, "MATNR") == "T-1000" ) {  
			ds_list2.SetColumn(0, "UNM_10", gtype); // 감시반 일때 용도명 = 기종  
		  } else if  ( ds_detail.GetColumn(9, "MATNR") == "S-1000" ) {
			ds_list2.SetColumn(0, "UNM_10", "에스컬레이터"); //
		  } else if  ( ds_detail.GetColumn(9, "MATNR") == "W-1000" ) {
			ds_list2.SetColumn(0, "UNM_10", "무빙워크"); //
		  } else {
			ds_list2.SetColumn(0, "UNM_10", zuse_nm); //용도명  
		  }
		}
	}
	
	if ( rowCnt > 0 && rowCnt < 10 ) {
		ds_list2.SetColumn(0, "SPC_"+lpad((rowCnt+1), "0", 2), "     (이하여백)");
	}

	ds_detail.UnFilter();
	ds_list2.SetColumn(0, "AMT", ds_header.GetColumn(0, "ZSUM_ZEAM")); //ds_list2.SetColumn(0, "AMT", ds_detail.Sum("ZEAM"));
    ds_list1.SetColumn(0, "AMT", ds_header.GetColumn(0, "ZSUM_ZEAM"));
    fn_destroyWait();

    //  F_BRND_FLAG
    // 2020 브랜드
	var arg = "fa_spart="+quote(spart)+" fa_brndFlag="+quote(F_BRND_FLAG);
	Dialog("SES::Ses0370.xml", arg, -1, -1, "Resize=true");	// UbiReport Call
}

/********************************************************************************
* 기      능   : 전송
********************************************************************************/
function fn_trans() {

	var qtnum = ds_header.GetColumn(0, "QTNUM");
	var qtser = ds_header.GetColumn(0, "QTSER");

	var subject = "Estimate has requested by "+G_USER_NAME+"["+G_USER_ID+"]. Its number is "+qtnum+", sequence is "+qtser+".";
	var content = subject;

	ds_email.ClearData();
	ds_email.AddRow();
	ds_email.SetColumn(0, "FROM"   , G_EMAIL);
	ds_email.SetColumn(0, "TO"	   , tab.main.div_header.ed_mailaddress.Text);
	ds_email.SetColumn(0, "TITLE"  , subject);
	ds_email.SetColumn(0, "CONTENT", content);

	tit_clearActionInfo();
	ds_error.ClearData(); 	// 서비스 호출 
	
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	nsfRequest("sendMail", "ses0031n/sendmail", "ds_email=ds_email", "ds_error=ds_error", "", "fn_afterQuery");
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(svcId, errCode, errMsg) {

	F_CLICKED_ROW = -1; // 2013.02.01 클릭한행 초기화

	if(svcId == "queryInit") {
		var obj = tab.main.div_header;

        // 2020 박수근 추가 브랜드 입력화 적용여부 조회 쿼리 실행 - F_BRND_FLAG
        // 파라미터 견적번호
        fn_brndFlag(ds_header.GetColumn(0, "QTNUM"));

		zkunnr   = ds_header.Getcolumn(0, "ZKUNNR"   );
		zkunnrNm = ds_header.Getcolumn(0, "ZKUNNR_NM");
	
		obj.div_kunnr.ed_buyr_cd.Text = ds_header.GetColumn(0, "KUNNR");
		obj.div_kunnr.ed_buyr_cd.bindDataset = "ds_header";
		obj.div_kunnr.ed_buyr_cd.Column      = "KUNNR";
	
		var buyr_nm = ds_header.GetColumn(0, "BUYR_NM");
	
		if (buyr_nm == null) {
			buyr_nm = ds_header.GetColumn(0, "KUNNR_NM");
			ds_header.AddColumn("BUYR_NM", "STRING", 256);
			ds_header.SetColumn(0, "BUYR_NM", buyr_nm);
		}
	
		var qtdat  = ds_header.GetColumn(0, "QTDAT");
		var zyear  = Substr(qtdat,0,4);
		var zmonth = Substr(qtdat,4,2);
	
		obj.div_kunnr.ed_buyr_nm.Text = ds_header.GetColumn(0, "BUYR_NM");
		obj.div_kunnr.ed_buyr_nm.bindDataset = "ds_header";
		obj.div_kunnr.ed_buyr_nm.Column      = "BUYR_NM";
		idle();
		obj.div_sman.ed_sman_cd.Text    = ds_header.Getcolumn(0, "ZKUNNR"   );
		obj.div_sman.ed_sman_nm.Text    = ds_header.Getcolumn(0, "ZKUNNR_NM");
		obj.div_sman.ed_sman_cd.Enable  = false;
		obj.div_sman.btn_popSman.Enable = false;
	
		if (flag != null) {
			cal_qtdat.Text = gfn_getCurrDate();
			obj.cb_zprgflg.Index = 0;
		}
	
		// 최종 변경된 셀정보 초기화
		F_CHG_DETAIL_COLNUM = ""; // 변경된 Detail 컬럼번호
		F_CHG_DETAIL_ROWNUM = ""; // 변경된 Detail 행번호
		
		F_MAX_SERNO = 0;	            // 최종순번
		F_MAX_SERNO = fn_getMaxSerno(); // 기 저장된 최종순번
	
		obj.div_kunnr.ed_buyr_cd.Width = 70;
		obj.div_kunnr.btn_popBuyr.Left = 71;
		obj.div_kunnr.ed_buyr_nm.Left  = 90;
		obj.div_kunnr.ed_buyr_nm.Width = 79;
	
		obj.div_kunnr.ed_buyr_cd.Enable  = false;
		obj.div_kunnr.ed_buyr_nm.Enable  = false;
	
		var zdeli = ds_header.GetColumn(0, "ZDELI");
	
		switch (zdeli) {
			case "X" : obj.div_kunnr.btn_popBuyr.Enable = true ; obj.ed_zdeli.Text = "단납기"; obj.div_header.ed_gsnam.Enable = true; break;
			default  : obj.div_kunnr.btn_popBuyr.Enable = false; break;
		}
	
		tab.template.div_template.cb_block.Index = 0;
		
		if(length(fa_sonnr) > 0) fn_afterQuery("querySo", "", "");
		else fn_afterQuery("queryHeader", "", "");
		
		//2021.10 jss:리모델링 수주계획추가 제한		
		if(left(ds_header.GetColumn(0, "AUART"),2) == "ZN") tab.main.div_header.btn_popup.Enable=false;
		
		// 2013.01.07 견적승인판정에서 호출되는 변수 추가
		if (IsExistVar("fa_view", true))	{
			if (fa_view == "view")	{
				fn_callSes0081();
				return;
			}
		}
	} else if (svcId == "queryInco") {
	} else if (svcId == "sendMail") {
		fn_destroyWait();
	} else if (svcId == "queryDuty"    ) {

		fn_destroyWait();

		if(ds_error.rowcount() > 0) {
			gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG"));   
			alert(ds_error.GetColumn(0,"ERRMSG"));
		} else {
			fn_template("Duty", ds_detail.currow); // trace(ds_template_add.SaveXML());
		}
	} else if (svcId == "queryZregn2") { //	trace(ds_zregn3.SaveXML());
		var idx     = tab.main.div_header.cb_zregn2.Index;
		var strCode = ds_zregn2.getColumn(idx, "ATWRT");
		var region  = ds_header.GetColumn(0, "REGION");

		cb_zregn2_OnChanged(strCode, strCode, "", "", "");

		var searchRow = ds_zregn3.searchRow("ATWRT =="+quote(region));
		tab.main.div_header.cb_zregn3.Index = searchRow;

		fn_destroyWait();

	} else if (svcId == "queryZGtype") { //	trace(ds_zgtype.SaveXML());
	} else if (svcId == "queryClass" ) { // trace(ds_class.SaveXML());
	} else if (svcId == "querySo"    ) {

		var zprgflg = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태
		if (zprgflg == "" || zprgflg == null) ds_header.SetColumn(0, "ZPRGFLG", "20");

		var matnr = ds_header.GetColumn(0, "MATNR");
		if (matnr == null) matnr = ds_detail.GetColumn(0, "MATNR");

		var	searchRow = ds_class.FindRow("MATNR", matnr);
			zprdgbn   = ds_class.GetColumn(searchRow, "CLASS_CD");

		if (zprdgbn != null) fn_queryTemplate();
		else 			     tab.DeleteTab(1);
		
		fn_setFormByPrd(ds_detail.GetColumn(ds_detail.row, "ZPRDGBN"), svcId); // 그리드 헤더 텍스트 변경 (2012.12.10)
	    
	    // 주차 : 수주계획  모델명(type1) -> 견적화면 모델명(용도)로 매칭 되도록 변경 2013.04.28 강슬기
	    if ( zprdgbn == "AP_01" ) {
			ds_detail.SetColumn(0, "ZUSE", ds_detail.GetColumn(0, "TYPE1"));
			ds_detail.SetColumn(0, "TYPE1", "");
		}	 
		
	} else if (svcId == "queryTemplate") {
		//=========================================================================================
		//  기능ID   : UF001  
		//  수정내역 : 기존 로직 최초 조회시 가져오도록 변경.
		//=========================================================================================
		tab.template.div_template.ed_temp.Text = "";
		
		fn_afterQuery("queryZregn2", "", "");
		ds_zregn3.sort("ATWTB");  // 운송지역 가나다 순 SORT 20130430 김선호
		
		ds_detail.OnColumnChanged = "ds_detail_OnColumnChanged";
		
        // 2020 박수근 추가
        initCreateOptGroup(ds_template);
		
		fn_template("", 0);
		fn_destroyWait();
	} else if (svcId == "queryTemplateAdd") {

		for (var i=0; i<ds_template_add.GetRowCount(); i++) {
			ds_template.addRow();
			ds_template.CopyRow(ds_template.row, "ds_template_add", i);
		}
		F_CLICKED_ROW = ds_detail.currow;
		
        // 2020 박수근 추가
        initCreateOptGroup(ds_template);
		
		fn_template("A", ds_detail.currow);
		
		//2021.09 jss
		for (var i = 0; i < ds_detail.GetRowCount(); i++){
			fn_template("C", i);
		}

	} else if (svcId == "queryHeader") {
		//trace(ds_header.savexml());
		if (ds_header.GetColumn(0, "ZDElI") == "X")		{
			tab.main.div_header.ed_zdeli.Text = "단납기";
		}
		if (ds_header.GetColumn(0, "JGBN") != "A")		{  //디폴트 값 : B
			tab.main.div_header.rd_jgbn.value = "B";
		}
		// 대리점에서 원가 산출 단계에서는 단가와 원가 금액을 보이지 않게 세팅  201303
		/*var zprgflg = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태
		
	    TRACE("진행상태 "+ zprgflg);
		//if (zprgflg == "32" );
		if (zprgflg != "33" && zprgflg != "50" && zprgflg != "61" && zprgflg != "90")
		{
			for (var i=0; i<ds_detail.GetRowCount(); i++) {
				ds_detail.SetColumn(i, "ZUAM", "0");
				ds_detail.SetColumn(i, "ZCOST", "0");
				TRACE("원가"+i+" => "+ds_detail.GetColumn(i, "ZUAM"));
			}
		}*/
		//trace(ds_header.savexml());
		zprgflg = ds_header.GetColumn(0,"ZPRGFLG");
		if (zprgflg > "31") vdate = ds_header.GetColumn(0,"DELDAT"); 
        
		//ZS01, ZS02인 경우 골조공사 완료일자 입력
		if ( left(ds_header.GetColumn(0, "AUART"), 2) != "ZS" ) tab.main.div_header.cal_frcmfcdat.Enable = false;

		if( length(trim(ds_header.GetColumnNF(0, "ZBDTYP"))) > 0 ) {
			var zbdtyp = trim(ds_header.GetColumnNF(0, "ZBDTYP"));
			var rowIdx = ds_list_build.FindRowNF("BUILDUSE", zbdtyp);
			if(length(trim(ds_list_build.GetColumnNF(rowIdx, "BUILDUSE_L"))) > 0 ){
			  	var rowIdxL = ds_list_build_l.FindRowNF("BUILDUSE_L", trim(ds_list_build.GetColumnNF(rowIdx, "BUILDUSE_L")));
				tab.main.div_header.cb_zbdtyp_l.index = rowIdxL;
			}
		 }
		 
		 nsfRequest("queryDetail", "ses0030/detail", "ds_cond=ds_header ds_detail=ds_detail", "ds_detail=ds_detail ds_error=ds_error", "", "fn_afterQuery");
		//trace("**" + tab.main.div_header.rd_jgbn.value);
		//trace(ds_header.savexml());
	} else if (svcId == "queryDetail") {
		fn_createWait("",this);
		//=========================================================================================
		//  기능ID   : UF001  
		//  수정내역 : 헤더 조회 후 바로 호출하는 부분을 펑션호출로 변경.
		//=========================================================================================				
		fn_queryTemplate();
		
		F_CHG_DETAIL_COLNUM = ""; // 변경된 Detail 컬럼번호
		F_CHG_DETAIL_ROWNUM = ""; // 변경된 Detail 행번호
		fn_zprgflg();

		if ( G_USER_ID == "9000593" ) {  //광장서비스 박동근  원가및 단가 조회 X  - 20140801 기술영업 유태용 CJ 요청 
			for(var i=0; i < ds_detail.GetRowCount(); i++) {
				ds_detail.SetColumn(i,"ZUAM", "0.00");
				ds_detail.SetColumn(i,"ZCOST", "0.00");
				ds_detail.SetColumn(i,"ZEAM", "0.00");
			}
		}
		
		fn_setFormByPrd(ds_detail.GetColumn(ds_detail.row, "ZPRDGBN"), svcId, ds_header.GetColumn(0, "SPART")); // 그리드 헤더 텍스트 변경 (2012.12.10)
	} else if (svcId == "queryZ309") {
	} else if (svcId == "updateDwgFlag") {
		fn_query();
	} else if (svcId == "checkRestriction") { 
		if(ds_error.GetRowCount() > 0 )	{
			gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
			fn_destroyWait();
			return false;
		}
				
		if(ds_log.getRowCount() > 0) {
			fn_openLogWin("grd_logList", ds_template, ds_log, "FLAG"); // error 정보 표시
			return;
		}		
	}
	
	if(ds_error.rowcount() > 0) {
		gfn_showMsg("CE00001");
//		gfn_openWSErrorWin(tab.template.div_template.grd_template1, ds_template, ds_error, "FLAG"); // error 정보 표시
		gfn_openWSErrorWin(grd_template1, ds_template, ds_error, "FLAG"); // error 정보 표시
	} else {
		if(errCode != 0) gfn_showMsg("CE00001");
		else 			 gfn_showMsg("CI00002", ds_header.RowCount() + "");
	}
}

/********************************************************************************
* 기      능   : 저장 Callback
********************************************************************************/
function fn_afterSave(svcId, errCode, errMsg) {

	F_CLICKED_ROW = -1; // 2013.02.01 클릭한행 초기화
	fn_destroyWait();
	
	if(ds_error.rowcount > 0)	{
		gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
		return;
	}

	var qtdat   = ds_header.GetColumn(0, "QTDAT"  ); // 견적일자
	var zestdat = ds_header.GetColumn(0, "ZESTDAT"); // 입찰예정일
	var vkbur   = ds_header.GetColumn(0, "VKBUR"  ); // 사업장
	var vkgrp   = ds_header.GetColumn(0, "VKGRP"  ); // 영업그룹
	var zprgflg = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태
	var zkunnr  = ds_header.GetColumn(0, "ZKUNNR" ); // 담당자

	ds_cond.SetColumn(0, "FR_QTDAT"  , qtdat  );
	ds_cond.SetColumn(0, "TO_QTDAT"  , qtdat  );
	ds_cond.SetColumn(0, "FR_ZESTDAT", zestdat);
	ds_cond.SetColumn(0, "TO_ZESTDAT", zestdat);
	ds_cond.SetColumn(0, "VKBUR"     , vkbur  );
	ds_cond.SetColumn(0, "VKGRP"     , vkgrp  );
	ds_cond.SetColumn(0, "ZPRGFLG"   , zprgflg);
	ds_cond.SetColumn(0, "SMAN"      , zkunnr );

	switch (svcId) {
		case "saveHeader"     : gfn_showAlert("CI00003");		// 저장을 완료했습니다.
								nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_header ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
								// 리모델링 추가
								SAVEYSNO = "Y";
								break;
		case "saveDetail"     : break;
		case "deleteDetail"   : break;
		case "saveHeaderFlag" : nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_header ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
								break;
		case "saveQtserAdd"   : gfn_showAlert("CI00005");
								parent.fn_query();
								// 재 조회를 위하여 견적번호 및 차수만 정보제공 2013.01.07
								/*
								ds_cond.ClearData();
								ds_cond.AddRow();
								ds_cond.SetColumn(0, "MANDT", ds_header.GetColumn(0, "MANDT"));
								ds_cond.SetColumn(0, "QTNUM", ds_header.GetColumn(0, "QTNUM"));
								ds_cond.SetColumn(0, "QTSER", ds_header.GetColumn(0, "QTSER"));
								nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_cond ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
								*/
								close();
								break;
		case "saveQtserDel"   : gfn_showAlert("CI00005");
								parent.fn_query();
								close(); //fn_close();
								break;
		case "updateDwgFlag"  : fn_query();
								break;
		case "saveQtVadt"  	  : nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_header ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
								break;
		default               : break;
	}
	
	if ( tab.TabIndex > 0 ) { // 2012.01.08 저장 후 견적내용 탭으로 이동
		tab.TabIndex = 0;
	}
}

/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {

	for ( i = 0 ; i <= ds_fa_byrgbn.GetRowCount() ; i++)
	{
		switch (ds_fa_byrgbn.GetColumn(i,"CODE")) {
		case "A" : 
			ds_fa_byrgbn.SetColumn(i,"CODE_NAME","삼성물산, 삼성에버랜드 설치비 30%증가"); break;
		case "B" : 
			ds_fa_byrgbn.SetColumn(i,"CODE_NAME","지하철 설치비 30%증가"); break;
		case "C" : 
			ds_fa_byrgbn.SetColumn(i,"CODE_NAME","1군건설사/10대이상현장 10%증가"); break;
		case "D" : 
			ds_fa_byrgbn.SetColumn(i,"CODE_NAME","일반공사"); break;
		case "E" : 
			ds_fa_byrgbn.SetColumn(i,"CODE_NAME","관급공사 설치비 10%증가"); break;
		case "F" : 
			ds_fa_byrgbn.SetColumn(i,"CODE_NAME","교체공사 10대이상 설치비 4%증가"); break;
		case "G" : 
			ds_fa_byrgbn.SetColumn(i,"CODE_NAME","발전소 설치비 20%증가"); break;
		default  : break;
		}
	}
	
	fn_init_form(); 	// 폼 초기화
	gfn_insertEmptyRow(ds_sukum, "");
}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 정렬 처리 
********************************************************************************/
function grd_detail_OnHeadClick(obj,nCell,nX,nY,nPivotIndex) {
	if( nCell == 0 ) {
		gfn_selectAllGrid(obj,nCell,nCell,true);
	} else {
		gfn_sortGrid(obj, nCell);
	}	
}

/********************************************************************************
* 기      능   : 조회
********************************************************************************/
function fn_OnClick_btn(obj) {
	var fncName = "fn_" + substr(obj.id, 4); 
	eval( fncName + "()");
}

/********************************************************************************
* 기      능   : 그리드 row 추가
********************************************************************************/
function btn_plus_OnClick(matnr, arr) {

	ds_detail.OnColumnChanged = "";
	ds_detail.CanRowPosChange = "";

	var oldRow = ds_detail.currow;
	var newRow = gfn_addGridRow(tab.main.div_header.grd_detail, -1, "FLAG");// 추가된 행번호 수신(FLAG:I) 

	var qtser  = ds_header.getColumn(0, "QTSER");
	// var qtseq  = ParseInt(ds_detail.Max("QTSEQ")) + 1;
	var qtseq = toNumber(gfn_getColMax(ds_detail, "QTSEQ")) + 1;	// 2013.01.14 수정

	var shangh;
	var gtype;
	var rtype;
	var type1;
	var type2;
	var type3;
	var znumber;
	var sonnr;
	var searchRow;
	var zsarea;
 	var zprdgbn;

    // 2020 박수근 월수주계획을 통해서 견적서 최초 등록 시 그리고 EL 건인 경우
    // ds_header.GetColumn(0, "MATNR"  ) -> L-1000
    // var zprdgbn = ds_detail.GetColumn(nRow, "ZPRDGBN");
    var g_brndcd = "";
    var g_brndnm = "";
    var g_brndseq = "";
    var g_gtype = "";
    var g_sndSys = "PDM";

	if (qtser == null) qtser = "0";

	F_MAX_SERNO++;
	ds_detail.SetColumn(newRow, "CHK" 	, 1	 );	// 선택여부
	ds_detail.SetColumn(newRow, "NEW_YN", "Y");	// 신규여부
	ds_detail.SetColumn(newRow, "SERNO" , F_MAX_SERNO);	// 순번
	ds_detail.SetColumn(newRow, "MANDT" , ds_header.getColumn(0, "MANDT"));
	ds_detail.SetColumn(newRow, "QTNUM" , ds_header.getColumn(0, "QTNUM"));
	ds_detail.SetColumn(newRow, "QTSER" , ds_header.getColumn(0, "QTSER"));
	ds_detail.SetColumn(newRow, "QTSEQ" , qtseq);

	ds_cond.ClearData();
	ds_cond.AddRow();

	if (matnr == "T-1000" || matnr == "Y-1000" || matnr == "Y-200" || matnr == "Y-300" || matnr == "Y-400" || matnr == "Y-500") {

		znumber = 1;
 
	} else if (arr != null) {
		shangh  = arr[0];
		matnr   = arr[1];
		gtype   = arr[2];
		type1   = arr[3];
		type2   = arr[4];
		type3   = arr[5];
		znumber = arr[6];
		sonnr   = arr[7];

	} else {
		gtype   = ds_header.GetColumn(0, "GTYPE"  );
		shangh  = ds_header.GetColumn(0, "SHANGH" ); // 국내상해구분
		matnr   = ds_header.GetColumn(0, "MATNR"  ); // 자재번호
		type1   = ds_header.GetColumn(0, "TYPE1"  );
		type2   = ds_header.GetColumn(0, "TYPE2"  );
		type3   = ds_header.GetColumn(0, "TYPE3"  );
		znumber = ds_header.GetColumn(0, "ZNUMBER");
		sonnr   = ds_header.GetColumn(0, "SONNR"  ); // 수주계획번호
		rtype   = ds_header.GetColumn(0, "RTYPE"  );

		if (oldRow < 0) oldRow = 0;

		if (gtype  == null || oldRow>0) gtype  = ds_detail.GetColumn(oldRow, "GTYPE"  );
		if (shangh == null || oldRow>0) shangh = ds_detail.GetColumn(oldRow, "SHANGH" );
		if (matnr  == null || oldRow>0) matnr  = ds_detail.GetColumn(oldRow, "MATNR"  );
		if (type1  == null || oldRow>0) type1  = ds_detail.GetColumn(oldRow, "TYPE1"  );
		if (type2  == null || oldRow>0) type2  = ds_detail.GetColumn(oldRow, "TYPE2"  );
		if (type3  == null || oldRow>0) type3  = ds_detail.GetColumn(oldRow, "TYPE3"  );
		if (znumber== null || oldRow>0) znumber= ds_detail.GetColumn(oldRow, "ZNUMBER");
		if (sonnr  == null || oldRow>0) sonnr  = ds_detail.GetColumn(oldRow, "SONNR"  );
		
		//2021.10 jss 
		if ((sonnr  == null || trim(sonnr) == "") &&  oldRow == 0) sonnr  = ds_detail.GetColumn(0, "SONNR"  );

		if (fa_sonnr != null && oldRow == 0) gtype = rtype;
	}

	searchRow = ds_class.FindRow("MATNR"    , matnr);
	zprdgbn   = ds_class.GetColumn(searchRow, "CLASS_CD");

	if (zprdgbn=="ELV_01" || zprdgbn=="ELV_02" || zprdgbn=="SHN_01") {

		zsarea = "D";

	} else if (zprdgbn=="ESC_01" || zprdgbn=="SHN_02" || zprdgbn=="MW_01") {

		zsarea = "KOREA";

	}  else if (zprdgbn=="AP_01" || zprdgbn=="PSD_01") {
	}

    // 해당 로직은 월수주계획으로 부터 견적서 작성 시 E/L건과 최초 호기 내역을 작성할 때 실행된다.
    // 2020.07.06 시점 zprdgbn = SHN_01: 상해 엘리베이터는 브랜드 적용 대상이 아님
    if(Length(arr) >= 8 && F_BRND_FLAG == "Y") {
        var arg = "fa_mandt="+quote(arr[1])+" fa_qtnum="+quote(ds_header.GetColumn(0, "QTNUM"))+" fa_gtype="+quote(arr[2])+" fa_zprdgbn="+quote(zprdgbn)+" fa_brndcd="+quote("");
        var brndArr = gfn_openPopUpUrlHdel("COM::Coms01A.xml", true, arg);
        if(brndArr == null) {
            return;
        } else {
			if(Length(brndArr) == 5) {
				g_brndseq = brndArr[0];   // 브랜드 차수
				g_brndcd = brndArr[1];    // 브랜드코드
				g_brndnm = brndArr[2];    // 브랜드명
				g_gtype = brndArr[3];     // 기종
				g_sndSys = brndArr[4];    // 시스템전송 구분
			} else {
                return;
			}
        }
//    } else if(F_BRND_FLAG == "Y" && Length(fa_sonnr) > 0 && matnr == 'L-1000' && ds_detail.GetRowCount() == 1) {
    } else if(F_BRND_FLAG == "Y" && Length(fa_sonnr) > 0 && zprdgbn == 'ELV_01' && ds_detail.GetRowCount() == 1) {
        var arg = "fa_mandt="+quote(ds_header.GetColumn(0, "MANDT"))+" fa_qtnum="+quote(ds_header.GetColumn(0, "QTNUM"))+" fa_gtype="+quote(ds_header.GetColumn(0, "RTYPE"))+" fa_zprdgbn="+quote(zprdgbn)+" fa_brndcd="+quote("");
        var brndArr = gfn_openPopUpUrlHdel("COM::Coms01A.xml", true, arg);
        if(brndArr == null) {
            close();
        } else {
			if(Length(brndArr) == 5) {
				g_brndseq = brndArr[0];   // 브랜드 차수
				g_brndcd = brndArr[1];    // 브랜드코드
				g_brndnm = brndArr[2];    // 브랜드명
				g_gtype = brndArr[3];     // 기종
				g_sndSys = brndArr[4];    // 시스템전송 구분
			} else {
			    close();
			}
        }
    //} else if(F_BRND_FLAG == "Y" && matnr == 'L-1000' ) {
    } else if(F_BRND_FLAG == "Y" && zprdgbn == 'ELV_01' ) {
        // 호기 선택되 로우 값 삽입
        var brndcd  = ds_detail.GetColumn(oldRow, "BRNDCD");
        var brndnm  = ds_detail.GetColumn(oldRow, "BRNDNM");
        var brndseq = ds_detail.GetColumn(oldRow, "BRNDSEQ");
        var gtype   = ds_detail.GetColumn(oldRow, "GTYPE");
        g_sndSys = ds_detail.GetColumn(oldRow, "SNDSYS");
	    g_brndseq = brndseq;
		g_brndcd =  brndcd;
		g_brndnm =  brndnm;
		g_gtype  =  gtype;
    } else {
	    g_brndseq = "000";
		g_brndcd =  "";
		g_brndnm =  "";
		g_gtype  =  gtype;
    }

	ds_detail.SetColumn(newRow, "ZSAREA" , zsarea );
	ds_detail.SetColumn(newRow, "SHANGH" , shangh ); // 국내상해구분
	ds_detail.SetColumn(newRow, "MATNR"  , matnr  ); // 자재번호
	ds_detail.SetColumn(newRow, "GTYPE"  , gtype  );
	ds_detail.SetColumn(newRow, "TYPE1"  , type1  );
	ds_detail.SetColumn(newRow, "TYPE2"  , type2  );
	ds_detail.SetColumn(newRow, "TYPE3"  , type3  );
	ds_detail.SetColumn(newRow, "ZNUMBER", znumber);
	ds_detail.SetColumn(newRow, "SONNR"  , sonnr  ); // 수주계획번호
	ds_detail.SetColumn(newRow, "ZPRDGBN", zprdgbn);
	ds_detail.SetColumn(newRow, "MCLASS" , zprdgbn);

	// 2020 박수근
	ds_detail.SetColumn(newRow, "ZLEN" , ""); // 정지층수 추가
    ds_detail.SetColumn(newRow, "BRNDSEQ" , g_brndseq);
	ds_detail.SetColumn(newRow, "BRNDCD" , g_brndcd);
	ds_detail.SetColumn(newRow, "BRNDNM" , g_brndnm);
	ds_detail.SetColumn(newRow, "GTYPE"  , g_gtype  );
	ds_detail.SetColumn(newRow, "SNDSYS" , g_sndSys);
	
	//2020.12 jss
	var auart   = ds_header.GetColumn(0, "AUART"  ); 
	if(auart == "ZN01" || auart =="ZN02"){
		ds_detail.SetColumn(newRow, "SID" , ds_header.getColumn(0, "SID"));
		ds_detail.SetColumn(newRow, "ZUSE" , ds_header.getColumn(0, "ZUSE"));
		ds_detail.SetColumn(newRow, "ZACAPA" , ds_header.getColumn(0, "ZACAPA"));
		ds_detail.SetColumn(newRow, "ZLEN" , ds_header.getColumn(0, "ZLEN"));
		ds_detail.SetColumn(newRow, "MFLIFNRT" , ds_header.getColumn(0, "MFLIFNRT"));
		ds_detail.SetColumn(newRow, "CSLIFNRT" , ds_header.getColumn(0, "CSLIFNRT"));
		//2021.09 jss
		if(Length(arr) > 8) {
			if(arr[8] != null && arr[8] != "") ds_detail.SetColumn(newRow, "SID" , arr[8]);
		}
	}

	ds_template.UnFilter();
	ds_template.Filter("QTSEQ !=" + quote(qtseq)); ds_temp.CopyF(ds_template); ds_template.Copy(ds_temp);

	ds_cond.SetColumn(0, "MANDT" , ds_header.GetColumn(0, "MANDT"));
	ds_cond.SetColumn(0, "QTNUM" , ds_header.GetColumn(0, "QTNUM"));
	ds_cond.SetColumn(0, "QTSER" , qtser);
	ds_cond.SetColumn(0, "QTSEQ" , qtseq);
	ds_cond.SetColumn(0, "MCLASS", zprdgbn);

	// 2020 박수근
	ds_cond.SetColumn(0, "BRNDSEQ" , g_brndseq);
	ds_cond.SetColumn(0, "BRNDCD" , g_brndcd);

	nsfRequest("queryTemplateAdd"
				   , "ses0031n/searchAddTemplate"
				   , "ds_detail=ds_cond ds_template=ds_template"
				   , "ds_template=ds_template ds_error=ds_error"
				   , ""
				   , "fn_afterQuery");

	fn_applayHeaderCost(); //Detail의 원가,견적가,대수가 변경되면 헤더의 합계에 반영

	ds_detail.OnColumnChanged = "ds_detail_OnColumnChanged";
	ds_detail.CanRowPosChange = "ds_detail_CanRowPosChange";
}
/********************************************************************************
* 기      능   : 그리드 row 삭제
********************************************************************************/
function btn_minus_OnClick(obj) {
	// 2013.01.14 삭제되는 detail row정보
	var dRowIndex = ds_detail.row;
	var flag = ds_detail.GetColumn(dRowIndex, "FLAG");
	
	// 2013.02.01 화면상에서 MO를 추가 후 삭제 시 최종 추가된 MO부터 삭제 가능
	if(flag == "I") {
	    gfn_deleteGridRow( tab.main.div_header.grd_detail, ds_detail.row, "FLAG" );
	} else if(flag != "D") {
		// 삭제 처리한다.
		gfn_deleteGridRow( tab.main.div_header.grd_detail, ds_detail.row, "FLAG" );

		for (var i = ds_template.GetRowCount()-1; i >=0; i--) {
			if ( ds_detail.GetColumn(dRowIndex, "QTNUM") == ds_template.GetColumn(i, "QTNUM") &&
				 ds_detail.GetColumn(dRowIndex, "QTSER") == ds_template.GetColumn(i, "QTSER") &&
				 ds_detail.GetColumn(dRowIndex, "QTSEQ") == ds_template.GetColumn(i, "QTSEQ") )	{
				// 추가 후 삭제 시 삭제
				ds_template.DeleteRow(i);
			}
		}

		if (ds_detail.currow >= 0 )	{
			fn_template("A", ds_detail.currow);
		}
	
		// 2020 박수근 추가
		fn_coElqty(); // E/L 대수 추가

		//fn_aspc("", "", "", 0, 0, 0, 0, ds_h);					 // 2013.02.18 ★★★★★ 시방서는 삭제시 적용 안함
		fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_header);  // LED 총 수량
		fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_header); 			// LCD 총 수량
		fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_header); // LED 총 수량
		fn_deph("", "", "", 0, 0, 0, 0, ds_header);					// 비상통화장치 DI-PBX 적용대수
		fn_ddvr("", "", "", 0, 0, 0, 0, ds_header);					// DVR 적용대수
		//fn_drvhq("", "", "", 0, 0, 0, 0, ds_header);				// 행선층 예약시스템 적용대수
		fn_dsv1("", "", "", 0, 0, 0, 0, ds_header);					// 감시반1
		fn_dsv2("", "", "", 0, 0, 0, 0, ds_header);					// 감시반2
		fn_aspd();												    // 고속현장 2013.04.03
	
		fn_applayHeaderCost(); //Detail의 원가,견적가,대수가 변경되면 헤더의 합계에 반영		
		
		// 2020 브랜드 입력 로우 삭제 처리한다.
		// 현재 필터링 된 dataset도 삭제한다.
		// 2020 브랜드 입력 처리 - 값을 복사처리하고 삭제한다.
		// ds_template_org ds_user0.Copy(ds0);
		var nRow = 0;
		var ds_List = [ds_template0, ds_template1, ds_template2, ds_template3, ds_template4, ds_template5, ds_template6];
		for ( var iObj = 0; iObj < Length(ds_List); iObj++) {
			for ( var b = ds_List[iObj].GetRowCount()-1 ; b >= 0 ; b-- ) {
				ds_List[iObj].DeleteRow(b);
			}
		}
	}
}

/********************************************************************************
* 기      능   : 우편번호 검색 
********************************************************************************/
function ufn_openZipcode(Obj) {	
	var arg = "strObj="+quote(Obj.id);
    gfn_openPopUpUrlHdel("SES::Ses0034A.xml", true, arg);
}

var strZipcodeObj;
function ufn_openZipcode1(Obj) {	
	var arg = "strObj="+quote(Obj.id);
    //gfn_openPopUpUrlHdel("SES::Ses0034A.xml", true, arg);
	strZipcodeObj=Obj.id;
	AxMSIE0.Navigate2(G_SERVER_URL + "addressSearchLink.jsp");
}

var chk=0;

function AxMSIE0_TitleChange(obj,Text)
{
	chk++;

	if(Text!="address link"){
		if(chk==2){	
		
			ufn_setAddr();
			chk=1;
			
		}
	}else{
		chk=1;
	}
}

function ufn_setAddr() {

	var objDocument = AxMSIE0.Document;
	
	var roadAddrPart1 = objDocument.getElementById('roadAddrPart1').value;
	var roadAddrPart2 = objDocument.getElementById('roadAddrPart2').value;
	
	var roadAddr = roadAddrPart1 + ' ' + roadAddrPart2;	
	var jibunAddr = objDocument.getElementById('jibunAddr').value;
	
	var addrDetail = objDocument.getElementById('addrDetail').value;
	// 우편번호 6자리 >> 5자리 변경 201508
	var zipNo = objDocument.getElementById('zipNo').value; 
	//trace(objDocument);
	//trace("roadAddrPart1"+roadAddrPart1);
	//trace("roadAddrPart2"+roadAddrPart2);
	//trace("roadAddr"+roadAddr);
	//trace("jibunAddr"+jibunAddr);
	//trace("addrDetail"+addrDetail);
	// trace("zipNo"+zipNo);
	
			tab.main.div_header.med_zipcode.value = zipNo;					
			//tab.main.div_header.ed_addr1.value = roadAddr;
			tab.main.div_header.ed_addr1.value = jibunAddr;
			tab.main.div_header.ed_addr2.value = addrDetail;	
		/*
		//도로명주소
		if(IsValid(Object("med_zipcode"))!=false){
//			med_zipcode1_road.value = zipNo;			
			//ed_nziB.value = zipNo;				
			med_zipcode.value = zipNo;		
		}	
		if(IsValid(Object("ed_road1"))!=false){			
			ed_road1.value = roadAddr;	
		}
		if(IsValid(Object("ed_road2"))!=false){			
			ed_road2.value = addrDetail;	
		}												
	//}	*/
}
function ds_header_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex) {
	if (varNewValue != varOldValue) { 	// 값이 변경되었을 경우 변경구분 컬럼 자동 SET 
		obj.SetColumn(nRow, "CHK" , "1");
		gfn_changeFlag( obj, strColumnID, nRow, "FLAG"); // FLAG 변경 : U

		var ds0    = object(ds_template0.ID);
		var ds1    = object(ds_template1.ID);
		var atkla  = "";
		var prh    = "";
		var prd    = "";
		var oldPrd = "";

		if (strColumnId=="CO_DDVRTQ" || strColumnId=="CO_DEPHTQ" || strColumnId=="CO_DSSQ"   || strColumnId=="CO_BCLCDTQ" || strColumnId=="CO_CHPITQ" ||
			strColumnId=="CO_ASPC"   || strColumnId=="CO_DSV1"   || strColumnId=="CO_DSV1TQ" || strColumnId=="CO_DSV2"    || strColumnId=="CO_DSV2TQ" ||
			strColumnId=="ZBDTYP") {

			// 2013.01.16 시방서의 경우 값이 변경되면 전체 MO에 반영되도록 처리
			if (strColumnId == "CO_ASPC")	{
				for (var i = 0; i < ds1.GetRowCountNF(); i++) {
					atkla = ds1.GetColumnNF(i, "ATKLA");
					prh   = ds1.GetColumnNF(i, "PRH"  );

					if ((atkla == "EL_BASIC" && prh == "EL_ASPC") ||
						(atkla == "ES_BASIC" && prh == "ES_ASPC") ||
						(atkla == "MW_BASIC" && prh == "MW_ASPC") )	{
						prd = obj.GetColumn(0, "CO_ASPC");
					
						//oldPrd = ds1.GetColumnNF(i, "PRD");
						//ds1.SetColumnNF(i, "PRD", prd);
						//ds1.SetColumnNF(i, "FLAG", "U");
						setDsTemplateFlagNF(ds1, i, "PRD", prd);
					}
				}	
			}

			// 2015.08.21 견적일 공통 사양 추가 - 김선호 
			if (strColumnId == "CO_QTDAT")	{
				for (var i = 0; i < ds1.GetRowCountNF(); i++) {
					atkla = ds1.GetColumnNF(i, "ATKLA");
					prh   = ds1.GetColumnNF(i, "PRH"  );
					prd = obj.GetColumn(0, "CO_ASPC");
					
					//oldPrd = ds1.GetColumnNF(i, "PRD");
					//ds1.SetColumnNF(i, "PRD", qtdat);
					//ds1.SetColumnNF(i, "FLAG", "U");
					setDsTemplateFlagNF(ds1, i, "PRD", qtdat);
				}	
			}

			if (strColumnId == "ZBDTYP")	{
				/**
				for (var i = 0; i < ds1.GetRowCountNF(); i++) {
					if(ds1.GetColumnNF(i, "PRH") == 'CO_FBDUSE') {
						ds1.SetColumnNF(i, "PRD", varNewValue);
						ds1.SetColumnNF(i, "FLAG", "U");
					}
				}	
				*/
				//2021.09 jss:오류정정
				for (var i = 0; i < ds0.GetRowCountNF(); i++) {
					if(ds0.GetColumnNF(i, "PRH") == 'CO_FBDUSE') {
						ds0.SetColumnNF(i, "PRD", varNewValue);
						ds0.SetColumnNF(i, "FLAG", "U");
					}
				}
			}

			for (var i=0; i<ds0.GetRowCountNF(); i++) {

				atkla = ds0.GetColumnNF(i, "ATKLA");
				prh   = ds0.GetColumnNF(i, "PRH"  );

				if (atkla == " ") {
					switch (prh) {
						case "CO_DDVRTQ" : prd = obj.GetColumn(0, "CO_DDVRTQ" ); break;
						case "CO_DEPHTQ" : prd = obj.GetColumn(0, "CO_DEPHTQ" ); break;
						case "CO_DSSQ"   : prd = obj.GetColumn(0, "CO_DSSQ"   ); break;
						case "CO_BCLCDTQ": prd = obj.GetColumn(0, "CO_BCLCDTQ"); break;
						case "CO_CHPITQ" : prd = obj.GetColumn(0, "CO_CHPITQ" ); break;
						case "CO_ASPC"   : prd = obj.GetColumn(0, "CO_ASPC"   ); break;
						case "CO_DSV1"   : prd = obj.GetColumn(0, "CO_DSV1"   ); break;
						case "CO_DSV1TQ" : prd = obj.GetColumn(0, "CO_DSV1TQ" ); break;
						case "CO_DSV2"   : prd = obj.GetColumn(0, "CO_DSV2"   ); break;
						case "CO_DSV2TQ" : prd = obj.GetColumn(0, "CO_DSV2TQ" ); break;
						default          : continue; break;		// 2013.02.18 ★★★★★
					}
				}
				prd = trim(prd);		// 2013.02.18 ★★★★★

				oldPrd = trim(ds0.GetColumnNF(i, "PRD"));	// 2013.02.18 ★★★★★

				if (prd != oldPrd) {
					//ds0.SetColumnNF(i, "PRD", prd);
					//ds0.SetColumnNF(i, "FLAG", "U");
					setDsTemplateFlagNF(ds0, i, "PRD", prd);
				}
			}
			// 2012.01.25 공통사양 수정 후 ds_user0 정보 수정되도록 조치
			ds_user0.Copy(ds0);
		} else if (strColumnId=="ZLZONE" || strColumnId=="REGION") {

			for (var i=0; i<ds1.GetRowCount(); i++) {

				prh = ds1.GetColumn(i, "PRH");

				switch (prh) {
					case "EL_ALOCT" : prd = obj.GetColumn(0, "ZLZONE"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
					case "EL_ADTA"  : prd = obj.GetColumn(0, "REGION"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
					default         : break;
				}
			}
		//납기일 변경시 	
		} else if (strColumnId=="DELDAT") {		
		    if ( zprgflg=="33" || zprgflg == "50") {//원가산출승인, 입찰
				if ( substr(vdate,0,4) <> substr(ds_header.getcolumn(0, "DELDAT"),0, 4) ){
					//trace("vdate =>" + vdate);;
					//trace("header_deldat =>" + ds_header.getcolumn(0, "DELDAT"));
					gfn_showAlert("CW10025", "납기예정일은 동일년도에 한해서 변경가능합니다.");
					ds_header.setcolumn(0, "DELDAT", vdate);	
				}
			}
		}
	}
}

function btn_mail_OnClick(obj) {
	fn_trans();
}

function ds_header_OnRowPosChanged(obj,nOldRow,nRow) {

	if (obj.GetColumn(nOldRow, "FLAG") <> "U") return;  // 변경된 행만 체크	
	if (ChgYn == "N") gfn_SetDatasetChgFlag(obj, nOldRow); // 변경된 자료가 없으면 선택여부,변경구분 초기화
}

function ds_detail_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex) {

	obj.OnColumnChanged = "";
	obj.CanRowPosChange = "";

	var nCol   = tab.main.div_header.grd_detail.GetCellPos();  // 현재 컬럼번호
	var cId    = strColumnId;
	var atkla  = "";
	var prh    = "";
	var prd    = "";
	var matnr  = "";
	var zeam      = ds_detail.GetColumn(nRow, "ZEAM"   );
	var zuam      = ds_detail.GetColumn(nRow, "ZUAM"   );
	var zcost     = ds_detail.GetColumn(nRow, "ZCOST"  );
	var znumber   = ds_detail.GetColumn(nRow, "ZNUMBER");
	var qtseq     = ds_detail.GetColumn(nRow, "QTSEQ"  );
	var filterStr = "";
	var shang     = 0;
	var searchRow = 0;

	if (varNewValue != varOldValue) { 	// 값이 변경되었을 경우 변경구분 컬럼 자동 SET 
		obj.SetColumn(nRow, "CHK" , "1");
		gfn_changeFlag( obj, strColumnID, nRow, "FLAG"); // FLAG 변경 : U
		F_CHG_DETAIL_COLNUM = nCol; // 현재 컬럼번호
		F_CHG_DETAIL_ROWNUM = nRow;	// 현재 행번호

		btn_qtser_plus.Visible  = false; btn_qtser_minus.Visible = false; // 차수+-
		btn_estimate.Visible    = false; // 견적요청
		btn_costRequest.Visible = false; // 견적원가의뢰

		if (cId=="ZSAREA" || cId=="GTYPE" || cId=="ZUSE" || cId=="ZACAPA" || cId=="ZLEN" || cId=="ZOPN" || cId=="TYPE1" || cId=="TYPE2" || cId=="TYPE3") {

			if (zprdgbn == "ELV_01" || zprdgbn == "ELV_02" || zprdgbn == "SHN_01") {

				filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("EL_BASIC") + " && PRH == ";

				switch (cId) {
					case "GTYPE"  : prh = "EL_ATYP" ; break;
					case "ZUSE"   : prh = "EL_AUSE" ; break;
					case "ZACAPA" : prh = "EL_ACAPA"; break;
					case "ZLEN"   : prh = "EL_ASTQ" ; break;
					case "ZOPN"   : prh = "EL_AOPEN"; break;
					case "TYPE1"  : prh = "EL_AMAN" ; break;
					case "TYPE2"  : prh = "EL_ASPD" ; break;
					case "TYPE3"  : prh = "EL_AFQ"  ; break;
					case "BRNDCD" : prh = "EL_ABRAND" ; break;
					default       : break;
				}

			} else if (zprdgbn == "ESC_01" || zprdgbn == "SHN_02") {

				filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("ES_BASIC") + " && PRH == ";

				switch (cId) {
					case "SHANGH" : prh = "ES_ALOCA" ; break;
					case "ZSAREA" : prh = "ES_ALOCAT"; break;
					case "GTYPE"  : prh = "ES_ATYP"  ; break;
					case "ZUSE"   : prh = "ES_ALOC"  ; break;
					case "TYPE1"  : prh = "ES_AWID"  ; break;
					case "TYPE2"  : prh = "ES_ADEG"  ; break;
					case "TYPE3"  : prh = "ES_ARISE" ; break;
					case "ZLEN"   : prh = "ES_ASPE"  ; break;
				}

			} else if (zprdgbn == "MW_01") {

				filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("MW_BASIC") + " && PRH == ";

				switch (cId) {
					case "SHANGH" : prh = "MW_ALOCA" ; break;
					case "ZSAREA" : prh = "MW_ALOCAT"; break;
					case "GTYPE"  : prh = "MW_ATYP"  ; break;
					case "ZUSE"   : prh = "MW_ALOC"  ; break;
					case "TYPE1"  : prh = "MW_AWID"  ; break;
					case "TYPE2"  : prh = "MW_ADEG"  ; break;
					case "TYPE3"  : prh = "MW_ARIS"  ; break;
					case "ZLEN"   : prh = "MW_ASPE"  ; break;
					case "ZOPN"   : prh = "MW_ALENG" ; break;
					default       : break;
				}
			}
			else if (zprdgbn == "AP_01") // (2012.12.10)
			{
				filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("AP_BASIC") + " && PRH == ";
				
				switch (cId) {
					case "GTYPE"  : prh = "AP_ATYP"; break;
					case "ZUSE"   : prh = "AP_AMOD"; break;
					case "TYPE1"  : prh = "AP_AEA "; break;
					case "ZACAPA" : prh = "AP_ACS" ; break;
					case "TYPE2"  : prh = "AP_AQL" ; break;
					case "TYPE3"  : prh = "AP_AQC" ; break;
					case "ZLEN"   : prh = "AP_AQT" ; break;
					case "ZOPN"   : prh = "AP_AETS"; break;
					default       : break;
				}
			
			}
			else if (zprdgbn == "PSD_01") // (2012.12.10)
			{
				filterStr = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("PSD_BASIC") + " && PRH == ";
				
				switch (cId) {
					case "GTYPE"  : prh = "PSD_AFORM1"; break;
					case "TYPE1"  : prh = "PSD_ANAME" ; break;
					default       : break;
				}
			}

			prd = ds_detail.GetColumn(nRow, cId);
			searchRow = ds_template1.SearchRow(filterStr + quote(prh));
			//ds_template1.SetColumn(searchRow, "PRD" , prd);
			//ds_template1.SetColumn(searchRow, "FLAG", "U");
			setDsTemplateFlagNF(ds_template1, searchRow, "PRD", prd);

			// 2013.05.29 추가 (설계부 요청사항)START
			// 기종, 용도, 인승, 용량, Door open type, 속도, 층수, 정지층수가 변경되면 EL_ECCH를 0으로 변경
			if (cId != "ZSAREA")	{
				// 승강기의 경우에만 적용
				if (zprdgbn == "ELV_01" || zprdgbn == "ELV_02" || zprdgbn == "SHN_01") {

					var vFilter5Str = "QTSEQ ==" + quote(qtseq) + " && ATKLA ==" + quote("EL_LAYOUT") + " && PRH == " + quote("EL_ECCH");

					// Layout의 CAR : CH의 값을 0으로 변경 처리
					var vSearch5Row = ds_template5.SearchRow(vFilter5Str);
					if (vSearch5Row == -1)	{
						// 필터된 정보에서 처리
						vSearch5Row = ds_template5.SearchRowNF(vFilter5Str);
						//ds_template5.SetColumnNF(vSearch5Row, "PRD" , "0");
						//ds_template5.SetColumnNF(vSearch5Row, "FLAG", "U");
						setDsTemplateFlag(ds_template5, vSearch5Row, "PRD", "0");
					}else	{
						//ds_template5.SetColumn(vSearch5Row, "PRD" , "0");
						//ds_template5.SetColumn(vSearch5Row, "FLAG", "U");
						setDsTemplateFlag(ds_template5, vSearch5Row, "PRD", "0");
					}

					if (vSearch5Row == -1 && (cId == "TYPE3" || cId == "ZLEN"))	{
						// 필터된 정보에서 처리 시 전체 정보에서도 변경
						vSearch5Row = ds_template.SearchRow(vFilter5Str);
						//ds_template.SetColumn(vSearch5Row, "PRD" , "0");
						//ds_template.SetColumn(vSearch5Row, "FLAG", "U");
						setDsTemplateFlag(ds_template, vSearch5Row, "PRD", "0");
					}
				}
			}
			// 2013.05.29 추가 (설계부 요청사항) END

		} else if (strColumnId == "ZNUMBER") {

			var ds_h = object(ds_header.ID);

			// 2020 박수근 추가
			fn_coElqty(); // E/L 대수 추가

			fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); // LCD 총 수량
			fn_bcpi ("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h); // LED 총 수량
			fn_deph ("", "", "", 0, 0, 0, 0, ds_h); // 비상통화장치 DI-PBX 적용대수
			fn_ddvr ("", "", "", 0, 0, 0, 0, ds_h); // DVR 적용대수
			//fn_drvhq("", "", "", 0, 0, 0, 0, ds_h); // 행선층 예약시스템 적용대수 - 2012.01.15 삭제
			fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); // 감시반1
			fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); // 감시반2

			// 2013.02.20 주차 - 대수 변경시 원가 재계산
			if ( zprdgbn == "AP_01" ) {
				ds_detail.SetColumn(nRow, "ZCOST", toNumber(ds_detail.GetColumn(nRow, "ZNUMBER")) * toNumber(ds_detail.GetColumn(nRow, "ZUAM")));
				zcost = ds_detail.GetColumn(nRow, "ZCOST");		//계산된 원가 
			} // 2013.03.19 대수 변경 시 재 처리
			else	{
				ds_detail.SetColumn(nRow, "ZCOST", toNumber(ds_detail.GetColumn(nRow, "ZNUMBER")) * toNumber(ds_detail.GetColumn(nRow, "ZUAM")));
				zcost = ds_detail.GetColumn(nRow, "ZCOST");		//계산된 원가 
			}

			fn_shang(nRow, zeam, zuam, znumber, shang, zcost); // 시행율
			fn_applayHeaderCost(); // detail 합계를 header에 반영
			
			// 프로젝트 원가 반영
			// 견적가 변경 시 마진율 추가 마진율 = (( 견적가 - 프로젝트 원가) / 견적가) * 100 , ROUND 2
			var zuamp = ToNumber(ds_detail.GetColumn(nRow, "ZUAMP"));
			var zcostp = zuamp * ToNumber(varNewValue);
		    ds_detail.SetColumn(nRow, "ZCOSTP", Round(zcostp, 2));
			
		} else if (strColumnId == "FLAG") {

			if ( varOldValue == "D" ) { // 2012.01.15 삭제했던 MO 다시 살릴 때
				var ds_h = object(ds_header.ID);

				fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); // LCD 총 수량
				fn_bcpi ("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h); // LED 총 수량
				fn_deph ("", "", "", 0, 0, 0, 0, ds_h); // 비상통화장치 DI-PBX 적용대수
				fn_ddvr ("", "", "", 0, 0, 0, 0, ds_h); // DVR 적용대수
				//fn_drvhq("", "", "", 0, 0, 0, 0, ds_h); // 행선층 예약시스템 적용대수 - 2012.01.15 삭제
				fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); // 감시반1
				fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); // 감시반2
				fn_aspd();								// 고속현장 2013.04.03
			}

		} else if ( strColumnId == "ZUAM" ) { // 단가

			// 2013.02.20 주차 - 단가 변경시 원가/시행율 재계산
			if ( zprdgbn == "AP_01" ) {
				ds_detail.SetColumn(nRow, "ZCOST", toNumber(ds_detail.GetColumn(nRow, "ZNUMBER")) * toNumber(ds_detail.GetColumn(nRow, "ZUAM")));
				zcost = ds_detail.GetColumn(nRow, "ZCOST");			// 계산된 원가 
				fn_shang(nRow, zeam, zuam, znumber, shang, zcost);	// 시행율
			}

			fn_applayHeaderCost(); // detail 합계를 header에 반영
			
		} else if ( strColumnId == "ZCOST" ) { // 원가
			fn_shang(nRow, zeam, zuam, znumber, shang, zcost);
			fn_applayHeaderCost(); // detail 합계를 header에 반영
			
		} else if ( strColumnId == "ZEAM" ) { // 견적가
		
			fn_shang(nRow, zeam, zuam, znumber, shang, zcost); // 시행율
			fn_applayHeaderCost(); // detail 합계를 header에 반영
			
			// 2021.07.01 마진율 추가
			// 견적가 변경 시 마진율 추가 마진율 = (( 견적가 - 프로젝트 원가) / 견적가) * 100 , ROUND 2
			var zcostp = ToNumber(ds_detail.GetColumn(nRow, "ZCOSTP"));
			var margin = ((ToNumber(zeam) - ToNumber(zcostp))/ToNumber(zeam)) * 100;
		    ds_detail.SetColumn(nRow, "MARGIN", Round(margin, 2));
		} else if (strColumnId == "SHANGH" && G_LANG == "en") {

			ds_template.UnFilter();
			ds_template.Filter("QTSEQ !=" + quote(qtseq)); ds_temp.CopyF(ds_template); ds_template.Copy(ds_temp);

			zprdgbn = ds_detail.GetColumn(nRow, "ZPRDGBN");
			matnr   = ds_detail.GetColumn(nRow, "MATNR"  );

			if (varNewValue == "상해") {
				if      (zprdgbn == "ELV_01" || "ELV_02") zprdgbn = "SHN_01";
				else if (zprdgbn == "ESC_01")             zprdgbn = "SHN_02";
			} else {
				searchRow = ds_class.FindRow("MATNR"    , matnr);
				zprdgbn   = ds_class.GetColumn(searchRow, "CLASS_CD");
			}

			ds_detail.SetColumn(nRow, "ZPRDGBN", zprdgbn);

			ds_cond.ClearData();
			ds_cond.AddRow();
			ds_cond.SetColumn(0, "MANDT" , ds_header.GetColumn(0, "MANDT"));
			ds_cond.SetColumn(0, "QTNUM" , ds_header.GetColumn(0, "QTNUM"));
			ds_cond.SetColumn(0, "QTSER" , ds_header.GetColumn(0, "QTSER"));
			ds_cond.SetColumn(0, "QTSEQ" , qtseq);
			ds_cond.SetColumn(0, "MCLASS", zprdgbn);

			//nsfRequest("queryTemplateAdd", "ses0031/searchTemplate", "ds_detail=ds_cond ds_template=ds_template_add", "ds_template_add=ds_template ds_error=ds_error", "", "fn_afterQuery");
			nsfRequest("queryTemplateAdd"
				   , "ses0031n/searchTemplate"
				   , "ds_detail=ds_detail ds_template=ds_template ds_cond_atnam=ds_cond_atnam ds_zregn2=ds_zregn2 ds_zregn3=ds_zregn3 ds_t302=ds_t302"
				   , "ds_template=ds_template ds_error=ds_error ds_zregn2=ds_zregn2 ds_zregn3=ds_zregn3 ds_t302=ds_t302"
				   , "ATNAM2='EL_ADTA'"
				   , "fn_afterQuery");
		}
	}

	obj.OnColumnChanged = "ds_detail_OnColumnChanged";
	obj.CanRowPosChange = "ds_detail_CanRowPosChange";
}

function ds_detail_OnRowPosChanged(obj,nOldRow,nRow) {

	if (obj.GetColumn(nOldRow, "FLAG") <> "U") return;  // 변경된 행만 체크	
	if (ChgYn == "N") gfn_SetDatasetChgFlag(obj, nOldRow); // 변경된 자료가 없으면 선택여부,변경구분 초기화
}

function ds_detail_CanRowPosChange(obj,nOldRow,nRow) {

	//fn_template("C", nRow); // 2013.02.01 fn_template 호출 위치를 그리드 클릭이벤트로 변경
}

function ds_template_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex) {

	if (varNewValue != varOldValue) { 	// 값이 변경되었을 경우 변경구분 컬럼 자동 SET 
		//trace("값은 변경 되었지만 F_CHK_QTSEQ 를 사용하지 않아서 F_CHK_QTSEQ) > 0 은 처리할 일이 없다.");
		if(length(F_CHK_QTSEQ) > 0) {
			var chkCol = F_CHK_QTSEQ.Split(","), chkCnt = 0;
			for(var i = 0; i < chkCol.length; i++) {
				if(chkCol[i] == obj.GetColumn(nRow, "QTSEQ")) chkCnt = 1;
			}
			
			if(chkCnt == 0) F_CHK_QTSEQ += obj.GetColumn(nRow, "QTSEQ") + ",";
		}
		
		var obj_flag = obj.GetColumn(nRow, "FLAG");
		var atkla    = obj.GetColumn(nRow, "ATKLA");
		var prd      = obj.GetColumn(nRow, "PRD"  );
		var prh      = obj.GetColumn(nRow, "PRH"  );
		
		//var userRow  = ds_detail.currow;
		//var qtseq    = ds_detail.GetColumn(userRow, "QTSEQ");
		var qtseq    = obj.GetColumn(nRow, "QTSEQ"); // 2013.02.01 수정
		var chk_flag = "";
		var ds_h     = object(ds_header.ID);
		var obj_user;

		switch (obj.GetID()) {
//			case "ds_template0"	: obj_user = object(ds_user0.ID); break;
			case "ds_template1"	: obj_user = object(ds_user1.ID); break;
			case "ds_template2"	: obj_user = object(ds_user2.ID); break;
			case "ds_template3"	: obj_user = object(ds_user3.ID); break;
			case "ds_template4"	: obj_user = object(ds_user4.ID); break;
			case "ds_template5"	: obj_user = object(ds_user5.ID); break;
			case "ds_template6"	: obj_user = object(ds_user6.ID); break;
			default : break;
		}

		if (obj.GetID() != "ds_template0") {

			obj.OnColumnChanged = "";

			var searchRow = obj_user.searchRow("ATKLA ==" + quote(atkla) + " && PRH ==" + quote(prh) + " && QTSEQ ==" + quote(qtseq));

			if (searchRow == -1) {
				obj_user.addRow();
				obj_user.CopyRow(obj_user.currow, obj, nRow);
				searchRow = obj_user.currow;
			}
			var user_prd  = obj_user.GetColumn(searchRow, "PRD");

			if (prd != null && prd != "" ) {
				if (prd != user_prd) {
					obj_user.SetColumn(searchRow, "FLAG", "U");
					obj_user.SetColumn(searchRow, "PRD", prd);
					obj.SetColumn(nRow, "PRD", prd);
					if (obj_flag == "I") obj.SetColumn(nRow, "FLAG", "I");
					else                 chk_flag = "Y";
				}
			} else {
				if (obj_flag == "I") {
					obj.SetColumn(nRow, "FLAG", "I");
					obj_user.SetColumn(searchRow, "PRD", prd);
				} else {
					chk_flag = "Y";
					if (prd == null || prd == "") user_prd = prd;
					obj_user.SetColumn(searchRow, "FLAG", "U");
					obj_user.SetColumn(searchRow, "PRD", prd);
					obj.SetColumn(nRow, "PRD", user_prd);
				}
			}

			if (chk_flag == "Y") {
				obj.SetColumn(nRow, "CHK" , "1");
				gfn_changeFlag( obj, strColumnID, nRow, "FLAG"); // FLAG 변경 : U
			}

			switch (obj.GetID()) {
				case "ds_template1"	:
					if (atkla == "EL_BASIC" && prh == "EL_ASPC") fn_aspc("", "", "", 0, 0, 0, 0, ds_h); // 시방서
					if (atkla == "ES_BASIC" && prh == "ES_ASPC") fn_aspc("", "", "", 0, 0, 0, 0, ds_h); // 시방서 2012.01.15 추가
					if (atkla == "MW_BASIC" && prh == "MW_ASPC") fn_aspc("", "", "", 0, 0, 0, 0, ds_h); // 시방서 2012.01.15 추가
					if (atkla == "EL_BASIC" && prh == "EL_ASPD") fn_aspd();								// 고속현장 2013.04.03
					if (atkla == "EL_BASIC" && prh == "EL_ASPLY") {
						var nRow = ds_detail.SearchRow(" QTSEQ == " + quote(qtseq));
						ds_detail.SetColumn(nRow,"ZOUTC",prd);
					}
					if (prh == "SP_AUSE") {  //SP 용도 품목데이터 표현 BY 김선호 20131112
						var nRow = ds_detail.SearchRow(" QTSEQ == " + quote(qtseq));
						ds_detail.SetColumn(nRow,"ZUSE",prd);
					}
					if ( (prh == "ES_ASTD" && prd == "Y") || (prh == "MW_ASTD" && prd == "Y") ) 
						fn_astd(""); // ES/MW 사양 자동입력건 20131021

					if ( (prh == "ES_ASTD2" && prd == "Y") || (prh == "MW_ASTD2" && prd == "Y") ) 
						fn_astd2(""); // ES/MW 사양 자동입력건 20131021

					if ( (prh == "ES_ASTDS" && prd == "Y") || (prh == "MW_ASTDS" && prd == "Y") ) 
						fn_astds(""); // ES/MW 사양 자동입력건 20131021		
					break;
				case "ds_template2"	:
					if (atkla == "EL_INSIDE") {
						switch (prh) {
							case "EL_BCPI"  : fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h); break; // LED 총 수량
							case "EL_BCLCD" : fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); break;
							default         : break;
						}
					} else if (atkla == "ES_OPTION") { // 2013.02.05 추가
						switch (prh) {
							case "ES_DSV1"  : fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반1
							case "ES_DSV2"  : fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반2
							default         : break;
						}
					} else if (atkla == "MW_OPTION") { // 2013.02.05 추가
						switch (prh) {
							case "MW_DSV1"  : fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반1
							case "MW_DSV2"  : fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반2
							default         : break;
						}
					}
					 
					if (prh == "EL_BMDL" && prd != "")  
						fn_bmdl(prd); // 신형 MRL 사양 자동 입력 건 20140327 김선호 
					break;

				case "ds_template3"	:
					if (atkla == "EL_OUTSIDE") {
						switch (prh) {
							case "EL_CHLCD" : fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); break; // LCD 총 수량
							default :
								if (prh == "EL_CHPI1" || prh == "EL_CHPI2" || prh == "EL_CHPI3" || prh == "EL_CHPI4") {
									fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h); // LED 총 수량
								} break;
						}
					} break;

				case "ds_template4"	:
					if (atkla == "EL_OPTION") {
						switch (prh) {
							case "EL_DEPH"  : fn_deph ("", "", "", 0, 0, 0, 0, ds_h); break; // 비상통화장치 DI-PBX 적용대수
							case "EL_DDVR"  : fn_ddvr ("", "", "", 0, 0, 0, 0, ds_h); break; // DVR 적용대수
							//case "EL_DRVHQ" : fn_drvhq("", "", "", 0, 0, 0, 0, ds_h); break; // 행선층 예약시스템 적용대수 - 2012.01.15 삭제
							case "EL_DSV1"  : fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반1
							case "EL_DSV2"  : fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반2
							default         : break;
						}
					} else if (atkla == "ES_OPTION") { // 2012.01.15 추가
						switch (prh) {
							case "ES_DSV1"  : fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반1
							case "ES_DSV2"  : fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반2
							default         : break;
						}
					} else if (atkla == "MW_OPTION") { // 2012.01.15 추가
						switch (prh) {
							case "MW_DSV1"  : fn_dsv1 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반1
							case "MW_DSV2"  : fn_dsv2 ("", "", "", 0, 0, 0, 0, ds_h); break; // 감시반2
							default         : break;
						}
					}
					break;

				default : break;
			}

			obj.OnColumnChanged = "ds_template_OnColumnChanged";
		}
	}
}

// BMDL 값에 따른 사양 자동입력 fuction 20140327 김선호 
function fn_bmdl(prd) {
	var qtseq  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
	var prh = "";

	for (var i = 0 ; i < ds_template2.GetRowCountNF(); i++)	{
	    prh = ds_template2.GetColumnNF(i, "PRH");
	    if(qtseq == ds_template2.GetColumnNF(i, "QTSEQ")) {
            if(prh == "EL_BCL" || prh == "EL_BHR" || prh == "EL_BFR" || prh== "EL_BFSPC" ||
               prh == "EL_BCDM" || prh == "EL_BCPI" || prh == "EL_BMOPB") {
				switch (prd) {
					case "NYSB"  : 
						switch(prh){
							case "EL_BCL"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "CD199B"); break;
							case "EL_BHR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "1FG"); break;
							case "EL_BFR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "PV"); break;
							case "EL_BFSPC" : setDsTemplateFlagNF(ds_template2, i, "PRD", "NYSB"); break;
							case "EL_BCDM"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "ARTMTL_SVR"); break;
							case "EL_BCPI"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "L210"); break;
							case "EL_BMOPB" : setDsTemplateFlagNF(ds_template2, i, "PRD", "N364"); break;
							default       : break;					
						}
						break;
					case "NYSZ"  : 
						switch(prh){
							case "EL_BCL"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "CD199A"); break;
							case "EL_BHR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "1FW"); break;
							case "EL_BFR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "PV"); break;
							case "EL_BFSPC" : setDsTemplateFlagNF(ds_template2, i, "PRD", "NYSZ"); break;
							case "EL_BCDM"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "ARTMTL_BRZ"); break;
							case "EL_BCPI"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "L210"); break;
							case "EL_BMOPB" : setDsTemplateFlagNF(ds_template2, i, "PRD", "N364"); break;
							default       : break;
						}
						break;
					case "NYSG"  : 
						switch(prh){
							case "EL_BCL"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "CD199A"); break;
							case "EL_BHR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "1FW"); break;
							case "EL_BFR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "PV"); break;
							case "EL_BFSPC" : setDsTemplateFlagNF(ds_template2, i, "PRD", "NYSG"); break;
							case "EL_BCDM"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "ARTMTL_GLD"); break;
							case "EL_BCPI"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "L210"); break;
							case "EL_BMOPB" : setDsTemplateFlagNF(ds_template2, i, "PRD", "N364"); break;
							default       : break;
						}
						break;
					case "NYSS"  : 
						switch(prh){
							case "EL_BCL"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "CD191A"); break;
							case "EL_BHR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "1FG"); break;
							case "EL_BFR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "PV"); break;
							case "EL_BFSPC" : setDsTemplateFlagNF(ds_template2, i, "PRD", "NYSS"); break;
							case "EL_BCDM"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "ARTMTL_SVR"); break;
							case "EL_BCPI"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "L210"); break;
							case "EL_BMOPB" : setDsTemplateFlagNF(ds_template2, i, "PRD", "N364"); break;
							default       : break;
						}
						break;
					case "NYDB"  : 
						switch(prh){
							case "EL_BCL"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "CD399A"); break;
							case "EL_BHR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "1LB"); break;
							case "EL_BFR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "PV"); break;
							case "EL_BFSPC" : setDsTemplateFlagNF(ds_template2, i, "PRD", "NYDB"); break;
							case "EL_BCDM"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "ARTMTL_BLK"); break;
							case "EL_BCPI"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "L210"); break;
							case "EL_BMOPB" : setDsTemplateFlagNF(ds_template2, i, "PRD", "N464"); break;
							default       : break;
						}
						break;
					case "NYDZ"  : 
						switch(prh){
							case "EL_BCL"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "CD319A"); break;
							case "EL_BHR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "1LB"); break;
							case "EL_BFR"   : setDsTemplateFlagNF(ds_template2, i, "PRD", "PV"); break;
							case "EL_BFSPC" : setDsTemplateFlagNF(ds_template2, i, "PRD", "NYDZ"); break;
							case "EL_BCDM"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "ARTMTL_BRZ"); break;
							case "EL_BCPI"  : setDsTemplateFlagNF(ds_template2, i, "PRD", "L210"); break;
							case "EL_BMOPB" : setDsTemplateFlagNF(ds_template2, i, "PRD", "N464"); break;
							default       : break;
						}
						break;
					default      : break;
				}
            }   
	    }
	}	

	for (var i = 0 ; i < ds_template3.GetRowCountNF(); i++)	{   //HATCH DOOR  사양 자동 결정 
	    prh = ds_template3.GetColumnNF(i, "PRH");
	    if(qtseq == ds_template3.GetColumnNF(i, "QTSEQ")) {
	        if(prh == "EL_CHD1" || prh == "EL_CHD2") {
				switch (prd) {
					case "NYSB"  : setDsTemplateFlagNF(ds_template3, i, "PRD", "ARTMTL_SVR"); break;
					case "NYSZ"  : setDsTemplateFlagNF(ds_template3, i, "PRD", "ARTMTL_BRZ"); break;
					case "NYSG"  : setDsTemplateFlagNF(ds_template3, i, "PRD", "ARTMTL_GLD"); break;
					case "NYSS"  : setDsTemplateFlagNF(ds_template3, i, "PRD", "ARTMTL_SVR"); break;
					case "NYDB"  : 
						switch(prh){
							case "EL_CHD1" : setDsTemplateFlagNF(ds_template3, i, "PRD", "GLASTL_ART"); break;
							case "EL_CHD2" : setDsTemplateFlagNF(ds_template3, i, "PRD", "ARTMTL_BLK"); break;
							default        : break;
					} break;
					case "NYDZ"  : 
						switch(prh){
							case "EL_CHD1" : setDsTemplateFlagNF(ds_template3, i, "PRD", "GLASTL_ART"); break;
							case "EL_CHD2" : setDsTemplateFlagNF(ds_template3, i, "PRD", "ARTMTL_BRZ"); break;
							default        : break;
					} break;
					default      : break;
				}								
	        }
	    }
	}
}

function fn_astd(qtseq) {  //2013년 9월 15일 이후 건축허가 자동입력 
    
    var arise = "";
    var asubw = "";

	qtseq  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
	
	var strFilterPrh1 = "QTSEQ=="+quote(qtseq)+
						"&&(PRH=="+quote("ES_ATFRC")+"||PRH=="+quote("ES_ASTDS")+
						"||PRH=="+quote("MW_ATFRC")+"||PRH=="+quote("MW_ASTDS")+
						")";
	var strFilterPrh2 = "QTSEQ=="+quote(qtseq)+
						"&&(PRH=="+quote("ES_BCS")+"||PRH=="+quote("ES_BBRU")+
						"||PRH=="+quote("MW_BCS")+"||PRH=="+quote("MW_BBRU")+
						")";
	var strFilterPrh3 = "QTSEQ=="+quote(qtseq)+
						"&&(PRH=="+quote("ES_CHRS")+"||PRH=="+quote("ES_CBSS")+"||PRH=="+quote("ES_CSMS")+
						"||PRH=="+quote("ES_CREVS")+"||PRH=="+quote("ES_CBODETS")+"||PRH=="+quote("ES_CFLCOSS")+
						"||PRH=="+quote("ES_CFPS")+
						"||PRH=="+quote("MW_CHRS")+"||PRH=="+quote("MW_CBPS")+"||PRH=="+quote("MW_CSMS")+
						"||PRH=="+quote("MW_CREVS")+"||PRH=="+quote("MW_CBODETS")+"||PRH=="+quote("MW_CFLCOSS")+
						"||PRH=="+quote("MW_CFPS")+
						")";
						
	ds_template1.UnFilter();
	ds_template2.UnFilter();
	ds_template3.UnFilter();
	
	ds_template1.Filter(strFilterPrh1);
	ds_template2.Filter(strFilterPrh2);
	ds_template3.Filter(strFilterPrh3);
     
    
	create("dataset", "ds_temp2");
	ds_temp2.copyF(ds_template3);
    	
	for (var i = 0 ; i < ds_template1.GetRowCount(); i++)	{
		ds_template1.SetColumn(i, "PRD", "Y");
	}	
	for (var i = 0 ; i < ds_template2.GetRowCount(); i++)	{
		ds_template2.SetColumn(i, "PRD", "Y");
	}	
	for (var i = 0 ; i < ds_template3.GetRowCount(); i++)	{
		ds_template3.SetColumn(i, "PRD", "Y");
	}

	ds_template1.UnFilter();
	ds_template2.UnFilter();
	ds_template3.UnFilter();
	
	// 2020 브랜드
	ds_template1.Filter("QTSEQ == "+quote(qtseq)+" && DISPTP == " + quote("X"));
	ds_template2.Filter("QTSEQ == "+quote(qtseq)+" && DISPTP == " + quote("X"));
	ds_template3.Filter("QTSEQ == "+quote(qtseq)+" && DISPTP == " + quote("X"));
	
	fn_astds();      //안전회로기판 자동입력 함수 call 
}

function fn_astd2(qtseq) {  //2014년 7월 1일 이후 건축허가 자동입력 
    
	qtseq  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
	
	var strFilterPrh1 = "QTSEQ=="+quote(qtseq)+
						"&&(PRH=="+quote("ES_ATFRC")+"||PRH=="+quote("ES_ASTDS")+
						"||PRH=="+quote("MW_ATFRC")+"||PRH=="+quote("MW_ASTDS")+
						")";
	var strFilterPrh2 = "QTSEQ=="+quote(qtseq)+
						"&&(PRH=="+quote("ES_BCS")+"||PRH=="+quote("ES_BBRU")+"||PRH=="+quote("ES_BAB")+
						"||PRH=="+quote("MW_BCS")+"||PRH=="+quote("MW_BBRU")+"||PRH=="+quote("MW_BAP")+
						")";
	var strFilterPrh3 = "QTSEQ=="+quote(qtseq)+
						"&&(PRH=="+quote("ES_CHRS")+"||PRH=="+quote("ES_CBSS")+"||PRH=="+quote("ES_CSMS")+
						"||PRH=="+quote("ES_CREVS")+"||PRH=="+quote("ES_CBODETS")+"||PRH=="+quote("ES_CFLCOSS")+
						"||PRH=="+quote("ES_CFPS")+
						"||PRH=="+quote("MW_CHRS")+"||PRH=="+quote("MW_CBPS")+"||PRH=="+quote("MW_CSMS")+
						"||PRH=="+quote("MW_CREVS")+"||PRH=="+quote("MW_CBODETS")+"||PRH=="+quote("MW_CFLCOSS")+
						"||PRH=="+quote("MW_CFPS")+
						")";
						
	ds_template1.UnFilter();
	ds_template2.UnFilter();
	ds_template3.UnFilter();
	
	ds_template1.Filter(strFilterPrh1);
	ds_template2.Filter(strFilterPrh2);
	ds_template3.Filter(strFilterPrh3);
     
    
	create("dataset", "ds_temp2");
	ds_temp2.copyF(ds_template3);
    	
	for (var i = 0 ; i < ds_template1.GetRowCount(); i++)	{
		ds_template1.SetColumn(i, "PRD", "Y");
	}	
	for (var i = 0 ; i < ds_template2.GetRowCount(); i++)	{
		ds_template2.SetColumn(i, "PRD", "Y");
	}	
	for (var i = 0 ; i < ds_template3.GetRowCount(); i++)	{
		ds_template3.SetColumn(i, "PRD", "Y");
	}

	ds_template1.UnFilter();
	ds_template2.UnFilter();
	ds_template3.UnFilter();
	
	// 2020 브랜드
	ds_template1.Filter("QTSEQ == "+quote(qtseq)+" && DISPTP == " + quote("X"));
	ds_template2.Filter("QTSEQ == "+quote(qtseq)+" && DISPTP == " + quote("X"));
	ds_template3.Filter("QTSEQ == "+quote(qtseq)+" && DISPTP == " + quote("X"));
	
	fn_astds();      //안전회로기판 자동입력 함수 call 
}

// ES MW 안전회로기판 입력시  자동입력 사양 추가 -20140818  김선호 : 정영권 GJ 요청 
function fn_astds(qtseq) {

	qtseq  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
	

	var strFilterPrh3 = "QTSEQ=="+quote(qtseq)+
						"&&(PRH=="+quote("ES_CHRS")+"||PRH=="+quote("ES_CSMS")+"||PRH=="+quote("ES_CREVS")+
						"||PRH=="+quote("ES_CBODETS")+"||PRH=="+quote("ES_CFPS")+
						"||PRH=="+quote("MW_CHRS")+"||PRH=="+quote("MW_CSMS")+"||PRH=="+quote("MW_CREVS")+
						"||PRH=="+quote("MW_CBODETS")+"||PRH=="+quote("MW_CFPS")+
						")";
						
	ds_template3.UnFilter();	
	ds_template3.Filter(strFilterPrh3);
         
	create("dataset", "ds_temp2");
	ds_temp2.copyF(ds_template3);
    	
	for (var i = 0 ; i < ds_template3.GetRowCount(); i++)	{
		ds_template3.SetColumn(i, "PRD", "Y");
	}

	ds_template3.UnFilter();
	
	ds_template3.Filter("qtseq=="+quote(qtseq));
	
}

// 2020년 박수근 추가 E/L 대수
function fn_coElqty() {
	var znumSum = round(ds_detail.caseSum("FLAG!='D'&&MATNR='L-1000'", "ZNUMBER"),0);
	//alert("znumSum:"+znumSum);
	for (var i=0; i<ds_template0.GetRowCountNF(); i++) { //CO_ELQTY 요청반영(2020.2.4)
		prh = ds_template0.getColumnNF(i,"PRH");		
		if(prh == "CO_ELQTY" ) {
			setDsTemplateFlagNF(ds_template0, i, "PRD", znumSum);
		}
	}
}

function fn_shang(nRow, zeam, zuam, znumber, shang, zcost) { // 시행율

	if (ParseInt(zeam) == 0) {
		shang = 0;
	} else {
		shang = ParseFloat(zcost) * 100 / ParseFloat(zeam);

		if (shang >= 999) shang = 999;
		else              shang = Round(shang, 1);
	}
	ds_detail.OnColumnChanged = "";
	ds_detail.SetColumn(nRow, "SHANG", shang);
	ds_detail.SetColumn(nRow, "FLAG", "U"   );
	ds_detail.OnColumnChanged = "ds_detail_OnColumnChanged";
}

function fn_aspc(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // 시방서

	var strFilterPrh = "PRH=="+quote("EL_ASPC")+"||PRH=="+quote("ES_ASPC")+"||PRH=="+quote("MW_ASPC");

	ds_user1.UnFilter();
	ds_user1.Filter(strFilterPrh);

	qtseq_co  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
	searchRow = ds_user1.searchRow("QTSEQ=="+quote(qtseq_co)+"&& ("+strFilterPrh+")");
	prd_co    = ds_user1.GetColumn(searchRow, "PRD");

	for (var i = 0 ; i < ds_user1.GetRowCount(); i++)	{
		ds_user1.SetColumn(i, "PRD", prd_co);
	}

	ds_user1.UnFilter();

	ds_h.SetColumn(0, "CO_ASPC", prd_co);
}

function fn_bclcd(prd_co, prd_co2, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // LCD 총 수량

	ds_user2.UnFilter(); ds_user2.Filter("PRH == " + quote("EL_BCLCD"));
	ds_user3.UnFilter(); ds_user3.Filter("PRH == " + quote("EL_CHLCD"));

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_user2.searchRow("PRH =="+quote("EL_BCLCD")+" && QTSEQ == "+quote(qtseq_co));
		prd_co    = trim(ds_user2.GetColumn(searchRow, "PRD"));

		searchRow = ds_user3.searchRow("PRH =="+quote("EL_CHLCD")+" && QTSEQ == "+quote(qtseq_co));
		prd_co2   = trim(ds_user3.GetColumn(searchRow, "PRD"));

		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (Length(prd_co) > 0 || Length(prd_co2) > 0) znumber_sum = ParseInt(znumber_sum) + znumber;
	}
	ds_user2.UnFilter();
	ds_user3.UnFilter();

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_BCLCDTQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_BCLCDTQ", ""         );
}

function fn_bcpi(prd_co, prd_co2, prd_co3, prd_co4, prd_co5, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // LED 총 수량

	ds_user2.UnFilter(); ds_user2.Filter("PRH == " + quote("EL_BCPI"));
	ds_user3.UnFilter(); ds_user3.Filter("Substr(PRH,0,7)==" + quote("EL_CHPI"));

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_user2.searchRow("PRH =="+quote("EL_BCPI")+" && QTSEQ == "+quote(qtseq_co));
		prd_co    = ds_user2.GetColumn(searchRow, "PRD");

		searchRow = ds_user3.searchRow("PRH =="+quote("EL_CHPI1")+" && QTSEQ == "+quote(qtseq_co));
		prd_co2   = ds_user3.GetColumn(searchRow, "PRD");

		searchRow = ds_user3.searchRow("PRH =="+quote("EL_CHPI2")+" && QTSEQ == "+quote(qtseq_co));
		prd_co3   = ds_user3.GetColumn(searchRow, "PRD");

		searchRow = ds_user3.searchRow("PRH =="+quote("EL_CHPI3")+" && QTSEQ == "+quote(qtseq_co));
		prd_co4   = ds_user3.GetColumn(searchRow, "PRD");

		searchRow = ds_user3.searchRow("PRH =="+quote("EL_CHPI4")+" && QTSEQ == "+quote(qtseq_co));
		prd_co5   = ds_user3.GetColumn(searchRow, "PRD");

		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if ( (prd_co == "L12" || prd_co == "L24")
			|| (prd_co2 == "L12" || prd_co2 == "L24")
			|| (prd_co3 == "L12" || prd_co3 == "L24")
			|| (prd_co4 == "L12" || prd_co4 == "L24")
			|| (prd_co5 == "L12" || prd_co5 == "L24")
		) {
			znumber_sum = ParseInt(znumber_sum) + znumber;
		}
	}
	ds_user2.UnFilter();
	ds_user3.UnFilter();

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_CHPITQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_CHPITQ", ""         );
}

function fn_deph(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // 비상통화장치 DI-PBX 적용대수

	ds_user4.UnFilter(); ds_user4.Filter("PRH == " + quote("EL_DEPH"));

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_user4.searchRow("PRH=="+quote("EL_DEPH")+" && (PRD=="+quote("DI")+"||PRD=="+quote("DILP")+"||PRD=="+quote("HYBRIDW")+"||PRD=="+quote("HYBRIDWL")+") && QTSEQ=="+quote(qtseq_co));
		prd_co    = ds_user4.GetColumn(searchRow, "PRD");
		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (prd_co == "DI"||prd_co == "DILP"||prd_co == "HYBRIDW"||prd_co == "HYBRIDWL") znumber_sum = ParseInt(znumber_sum) + znumber;
	}
	ds_user4.UnFilter();

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_DEPHTQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_DEPHTQ", ""         );
}

function fn_ddvr(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // DVR 적용대수

	ds_user4.UnFilter(); ds_user4.Filter("PRH == " + quote("EL_DDVR"));

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_user4.searchRow("PRH =="+quote("EL_DDVR")+" && QTSEQ == "+quote(qtseq_co));
		prd_co    = trim(ds_user4.GetColumn(searchRow, "PRD"));
		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (Length(prd_co) > 0) znumber_sum = ParseInt(znumber_sum) + znumber;
	}
	ds_user4.UnFilter();

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_DDVRTQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_DDVRTQ", ""         );
}

function fn_drvhq(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) { // 행선층 예약시스템 적용대수

	ds_user4.UnFilter(); ds_user4.Filter("PRH == " + quote("EL_DRVHQ"));

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_user4.searchRow("PRH =="+quote("EL_DRVHQ")+" && QTSEQ == "+quote(qtseq_co));
		prd_co    = trim(ds_user4.GetColumn(searchRow, "PRD"));
		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (Length(prd_co) > 0) znumber_sum = ParseInt(znumber_sum) + (znumber * ParseInt(prd_co));
	}
	ds_user4.UnFilter();

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_DSSQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_DSSQ", ""         );
}

function fn_dsv1(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) {
	// 2013.02.05 엘리베이터는 ds_user4에, ES, MW는 ds_user2에 있으므로 합쳐서 계산
	destroy("ds_temp");
	create("dataset", "ds_temp");
	ds_temp.copy(ds_user2);
	ds_temp.AppendDataset(ds_user4);

	var strFileterPrh = "PRH=="+quote("EL_DSV1")+"||PRH=="+quote("ES_DSV1")+"||PRH=="+quote("MW_DSV1");
	ds_temp.Filter(strFileterPrh);

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_temp.searchRow("QTSEQ == "+quote(qtseq_co) + "&& ("+strFileterPrh+")");
		prd_co    = trim(ds_temp.GetColumn(searchRow, "PRD"));
		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (Length(prd_co) > 0) znumber_sum = ParseInt(znumber_sum) + znumber;

		if (prd_co == null || prd_co == "") cnt_co++;
		else                                prd_max = prd_co; //if (i==ds_detail.GetRowCount()-1) prd_max = ds_user4.Max("PRD");
	}

	if (cnt_co == ds_detail.GetRowCount()) ds_h.SetColumn(0, "CO_DSV1", "");
	else                                   ds_h.SetColumn(0, "CO_DSV1", prd_max);

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_DSV1TQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_DSV1TQ", ""         );
}

function fn_dsv2(prd_co, prd_max, qtseq_co, cnt_co, searchRow, znumber, znumber_sum, ds_h) {
	// 2013.02.05 엘리베이터는 ds_user4에, ES, MW는 ds_user2에 있으므로 합쳐서 계산
	destroy("ds_temp");
	create("dataset", "ds_temp");
	ds_temp.copy(ds_user2);
	ds_temp.AppendDataset(ds_user4);

	var strFileterPrh = "PRH=="+quote("EL_DSV2")+"||PRH=="+quote("ES_DSV2")+"||PRH=="+quote("MW_DSV2");
	ds_temp.Filter(strFileterPrh);

	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 2012.01.15 삭제된 행은 계산안함

		qtseq_co  = ds_detail.GetColumn(i, "QTSEQ");
		searchRow = ds_temp.searchRow("QTSEQ == "+quote(qtseq_co) + "&& ("+strFileterPrh+")");
		prd_co    = trim(ds_temp.GetColumn(searchRow, "PRD"));
		znumber   = ParseInt(ds_detail.GetColumn(i, "ZNUMBER")); // 대수
		if (Length(prd_co) > 0) znumber_sum = ParseInt(znumber_sum) + znumber;

		if (prd_co == null || prd_co == "") cnt_co++;
		else                                prd_max = prd_co; //if (i==ds_detail.GetRowCount()-1) prd_max = ds_user4.Max("PRD");
	}

	if (cnt_co == ds_detail.GetRowCount()) ds_h.SetColumn(0, "CO_DSV2", "");
	else                                   ds_h.SetColumn(0, "CO_DSV2", prd_max);

	if (znumber_sum > 0) ds_h.SetColumn(0, "CO_DSV2TQ", znumber_sum);
	else 				 ds_h.SetColumn(0, "CO_DSV2TQ", ""         );
}

// 고속현장 2013.04.03
function fn_aspd() {
// 추가로 발생한 공용사양으로 호기별 사양서에 모두 존재하는 경우에 대하여 확인 필요
//trace("************fn_aspd);
	var strFilterPrh = "PRH=="+quote("EL_ASPD");
	
	//ds_user1.UnFilter();
	//ds_user1.Filter(strFilterPrh);

	var varAspd   = "";
	var varCheck  = false;
	var searchRow = -1;
	var qtseq_co  = "";

	// 고속 존재여부 확인
	for (var i = 0; i < ds_detail.GetRowCount(); i++) 	{
		if ( ds_detail.GetColumn(i, "FLAG") == "D" ) continue; // 삭제된 행은 제외

		qtseq_co = ds_detail.GetColumn(i, "QTSEQ");

		searchRow = ds_user1.searchRow("QTSEQ=="+quote(qtseq_co)+"&& ("+strFilterPrh+")");
		// 조건이 존재하는 경우
		if (searchRow != -1)	{
			varAspd = ds_user1.GetColumn(searchRow, "PRD");
			if (varAspd == "180" || varAspd == "210" || varAspd == "240")	{
				varCheck = true;
				break;
			}
		}
	}

	// 공용특성(고속현자)에 반영 처리
	var prd = "";
	var ds0 = object(ds_template0.ID);
	var prh    = "";
	var oldPrd = ""; 

	if (varCheck == true)	{
		prd = "Y";
	}

	for (var i = 0; i < ds0.GetRowCountNF(); i++) {

		prh = ds0.GetColumnNF(i, "PRH"  );
		
		if (prh == "CO_ASPD") 	{
			oldPrd = trim(ds0.GetColumnNF(i, "PRD"));

			if (prd != oldPrd) {
				ds0.SetColumnNF(i, "PRD", prd);
				ds0.SetColumnNF(i, "FLAG", "U");
			}
		}
	}

	ds_user0.Copy(ds0);
}

// 견적일 공통사양 추가 20150821 김선호 
function fn_qtdat() {

	var qtdat  = substr(cal_qtdat.Text,0,4) + substr(cal_qtdat.Text,5,2) + substr(cal_qtdat.Text,8,2) ;
	
	for (var i = 0; i < ds_template0.GetRowCount(); i++) {

		prh = ds_template0.GetColumn(i, "PRH"  );
		prd = ds_template0.GetColumn(i, "PRD"  );
		
		if (prh == "CO_QTDAT" && prd != qtdat) {
			//ds_template0.SetColumn(i, "PRD", qtdat);
			//ds_template0.SetColumn(i, "FLAG", "U");
			setDsTemplateFlag(ds_template0, i, "PRD", qtdat);
		}		
	}
  
}



//교환기 세팅
function fn_dpex() {
	for (var i = 0; i < ds_template4.GetRowCount(); i++) {
		prh = ds_template4.GetColumn(i, "PRH"  );
		
		if (prh == "EL_DPEXQ" && el_dpexq_prc != "") {
			ds_template4.SetColumn(i, "PRD", el_dpexq_prd);
			ds_template4.SetColumn(i, "FLAG", "U");
		}
	}
	
	for (var i = 0; i < ds_template0.GetRowCount(); i++) {
		prh = ds_template0.GetColumn(i, "PRH"  );

		if (prh == "CO_DPEXQ1" && el_dpexq_prc != "") {
			ds_template0.SetColumn(i, "PRD", el_dpexq1);
			ds_template0.SetColumn(i, "FLAG", "U");
		}		

		if (prh == "CO_DPEXQ2" && el_dpexq_prc != "") {
			ds_template0.SetColumn(i, "PRD", el_dpexq2);
			ds_template0.SetColumn(i, "FLAG", "U");
		}		

		if (prh == "CO_DPEXQ3" && el_dpexq_prc != "") {
			ds_template0.SetColumn(i, "PRD", el_dpexq3);
			ds_template0.SetColumn(i, "FLAG", "U");
		}
	}	
	
}

//Building Type : 2021.09 jss
function fn_buildType() {
	var zbdtyp = trim(ds_header.GetColumn(0, "ZBDTYP"));
	if( length(zbdtyp) > 0 ) { 
		for(var i = 0; i < ds_template0.GetRowCount(); i++) {
			var prh = ds_template0.GetColumn(i, "PRH"  );
			var prd = ds_template0.GetColumn(i, "PRD"  );
			if( prh == "CO_FBDUSE" && length(trim(prd)) < 1 ) {
				setDsTemplateFlag(ds_template0, i, "PRD", zbdtyp);
			}		
		}
	}
}

// 현재 조회된 자료의 MAX 순번 구하기
function fn_getMaxSerno() { 
	var max_serno 	= 0;
	var serno 		= 0; 
	for (var i=0;i<ds_detail.GetCount();i++) {
		serno = ds_detail.GetColumn(i, "SERNO");
		if (ToNumber(serno) > ToNumber(max_serno)) max_serno = serno;
	}
	return max_serno;
}

function grd_detail_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,nLLParam,nHLParam) {

	var ds = object(obj.BindDataset);
	
	if (nChar==13) { 	// 엔터키이면 다음 행으로 이동
		ds.row = ds.row + 1;
	} else if (nChar==27)	{ 	// Esc 키이면 변경전 자료로 되돌린다.
		var nCol = obj.GetCellPos();
		gfn_SetOrgColumn(obj, ds.row, nCol);
	} else {
	
		//2021.05 jss : 사양수정시 영업화면진행서순 반영
		var obj_template;
		switch (obj) {
			case "grd_template0" : obj_template = object(ds_template0.ID); break;
			case "grd_template1" : obj_template = object(ds_template1.ID); break;
			case "grd_template2" : obj_template = object(ds_template2.ID); break;
			case "grd_template3" : obj_template = object(ds_template3.ID); break;
			case "grd_template4" : obj_template = object(ds_template4.ID); break;
			case "grd_template5" : obj_template = object(ds_template5.ID); break;
			case "grd_template6" : obj_template = object(ds_template6.ID); break;
			default : break;
		}
		
		var atnam = obj_template.getcolumn(ds.row, "PRH"  );
		var obj_template6 = object(ds_template6.ID); 
		var findRow = obj_template6.FindRow("PRH", "EL_YSTAT");
		if(findRow > -1 ) {
			obj_template6.SetColumn(findRow, "PRD",atnam);
			obj_template6.SetColumn(findRow, "FLAG", "U");
		}
	
		gfn_GrdCellCopyPasteReset(obj, ds, bCtrl, nChar);
	}
}

function grd_detail_OnExpandEdit(obj,nRow,nCell,strVal,nPivotIndex) {

	if (ds_detail.RowCount()==0) return;
	
	switch (nCell) {
		case  5	: 	var mandt = ds_header.GetColumn(0, "MANDT");
					var zprdgbn = ds_detail.GetColumn(nRow, "ZPRDGBN");
					// 2020 브랜드
					var matnr = ds_detail.GetColumn(nRow, "MATNR");
					if( zprdgbn == 'ELV_01' && F_BRND_FLAG == "Y" ) {
						var arg = "fa_mandt="+quote(ds_header.GetColumn(0, "MANDT"))+" fa_qtnum="+quote(ds_header.GetColumn(0, "QTNUM"))+" fa_gtype="+quote("")+" fa_zprdgbn="+quote(zprdgbn)+" fa_brndcd="+quote("");
						var arr = gfn_openPopUpUrlHdel("COM::Coms01A.xml", true, arg);
						var orgBrndcd = ds_detail.GetColumn(nRow, "BRNDCD");
						if(arr == null) {
							return;
						} else if(Length(arr) == 5) {
							if(orgBrndcd != arr[1]) {
								var flag = ds_detail.GetColumn(nRow, "FLAG");
								if(flag != "I") {
									// 2020 브랜드 사용자 확인 메시지 출력 후
									if (gfn_showConfirm("CI00024", "브랜드 변경 시 해당 브랜드에만 적용 가능한 영업사양 및 관련 금액은 모두 초기화됩니다.") == true) {
										fn_chanageBrand(nRow, arr, orgBrndcd, arr[1]);
									}
								} else {
									fn_chanageBrand(nRow, arr, orgBrndcd, arr[1]);
								}
							} else {
								ds_detail.SetColumn(ds_detail.row, "BRNDSEQ", arr[0]);  // 브랜드차수
								ds_detail.SetColumn(ds_detail.row, "BRNDCD", arr[1]);   // 브랜드코드
								ds_detail.SetColumn(ds_detail.row, "BRNDNM", arr[2]);   // 브랜드명
								ds_detail.SetColumn(ds_detail.row, "GTYPE", arr[3]);    // 기종
								ds_detail.SetColumn(ds_detail.row, "SNDSYS" , arr[4]);  // 시스템전송구분
							}
						}
						break;
					} else {
						var arg = "fa_mandt="+quote(mandt) + " fa_class="+quote(zprdgbn);
						var arr = gfn_openPopUpUrlHdel("COM::Com0220.xml", true, arg);
						if (arr != null && arr != 0) {
							ds_detail.SetColumn(nRow, "GTYPE", arr[6]);
							ds_detail.SetColumn(nRow, "BRNDCD" , "");
							ds_detail.SetColumn(nRow, "BRNDNM" , "");
							ds_detail.SetColumn(nRow, "BRNDSEQ", "000");
						}
					}
                    break;
        case 20 :  //fn_moprint(); 		
	                var qtseq = ds_detail.GetColumn(nRow, "QTSEQ");
                 	
                    ds_template1.Filter("QTSEQ ==" + quote(qtseq) + " && PRD <> '' ");
                    ds_user1.CopyF(ds_template1);
                    //trace("A" + ds_user1.savexml());
                    //trace("A" + ds_template1.savexml());
                    ds_template1.UnFilter(); 
                                        
                    ds_template2.Filter("QTSEQ ==" + quote(qtseq) + " && PRD <> '' ");
                    ds_user2.CopyF(ds_template2);
                    ds_template2.UnFilter(); 
                    
                    ds_template3.Filter("QTSEQ ==" + quote(qtseq) + " && PRD <> '' ");
                    ds_user3.CopyF(ds_template3);
                    ds_template3.UnFilter(); 
                    
                    
                    ds_template4.Filter("QTSEQ ==" + quote(qtseq) + " && PRD <> '' ");
                    ds_user4.CopyF(ds_template4);
                    ds_template4.UnFilter(); 
                    
                    
                    ds_template5.Filter("QTSEQ ==" + quote(qtseq) + " && PRD <> '' ");
                    ds_user5.CopyF(ds_template5);
                    ds_template5.UnFilter(); 
                    
                    // 브랜드 그룹추가
                    ds_template6.Filter("QTSEQ ==" + quote(qtseq) + " && PRD <> '' ");
                    ds_user6.CopyF(ds_template6);
                    ds_template6.UnFilter();
                    
                    ds_detail.Filter("QTSEQ ==" + quote(qtseq));
                    ds_user0.CopyF(ds_detail);
                    ds_detail.UnFilter();
                    
                    
                    var arg = "aCnt="+quote(ds_user1.GetRowCount())
					+ " bCnt="+quote(ds_user2.GetRowCount())
					+ " CCnt="+quote(ds_user3.GetRowCount())
					+ " DCnt="+quote(ds_user4.GetRowCount())
					+ " ECnt="+quote(ds_user5.GetRowCount())
					+ " FCnt="+quote(ds_user0.GetRowCount())
					+ " GCnt="+quote(ds_user6.GetRowCount())
					+ " ABCCnt="+quote(ds_user1.GetRowCount()+ds_user2.GetRowCount()+ds_user3.GetRowCount())
					+ " GBN=B";
			
					Dialog("SES::Ses0372.xml", arg, -1, -1, "Resize=true");
		            
		            break;
		default : break;
	}
}

function grd_detail_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex) {

	// 2013.02.01 fn_template 호출 위치를 그리드 클릭이벤트로 변경
	if ( F_CLICKED_ROW != nRow ) {
		F_CLICKED_ROW = nRow;
		//fn_template("C", nRow);
	}

	var fa_atkla = "";
	var fa_atnam = "";
	var colId    = "";
	var prd      = "";
	var zacapa   = "";
	var matnr    = ds_detail.GetColumn(nRow, "MATNR"  );
	var mclass   = ds_detail.GetColumn(nRow, "ZPRDGBN");
	var h        = tab.main.div_header;
	var searchRow;

	// 2020 브랜드 입력
	var brndcd  = ds_detail.GetColumn(nRow, "BRNDCD");
	var brndseq = ds_detail.GetColumn(nRow, "BRNDSEQ");

	if (mclass == "ELV_01" || mclass == "ELV_02" || mclass == "SHN_01") {
		fa_atkla = quote("EL_BASIC");
	} else if (mclass == "ESC_01" || mclass == "SHN_02") {
		fa_atkla = quote("ES_BASIC");
	} else if (mclass == "MW_01") {
		fa_atkla = quote("MW_BASIC");
	}  else if (mclass == "AP_01") {
		fa_atkla = quote("AP_BASIC");
	} else if (mclass == "PSD_01") { // (2012.12.10)
		fa_atkla = quote("PSD_BASIC");
	}

//-----< 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	Start 		
	if (nCell == 13 ) {
		if ( matnr == "Y-200" || matnr == "Y-300" || matnr == "Y-400" || matnr == "Y-500") {
			h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); 	// 대수 - 입력불가
		}else	{
			h.grd_detail.SetCellProp("body", nCell, "Edit", "integer");	// 대수 - 숫자입력
		}
	}
//-----> 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	End 

	if (matnr == "T-1000" || matnr == "Y-1000" || matnr == "Y-200" || matnr == "Y-300" || matnr == "Y-400" || matnr == "Y-500") {
		if ( nCell == 2 ) {
			h.grd_detail.SetCellProp("body", nCell, "Edit", "none");
		}
	} else if ( nCell == 2 ) {
		// 에스컬레이터, 무빙워크는 국내상해 구분 변경 가능
		if ( mclass == "ESC_01" || mclass == "MW_01" ) {
			h.grd_detail.SetCellProp("body", nCell, "Edit", "combo");
		} else {
			h.grd_detail.SetCellProp("body", nCell, "Edit", "none");
		}
	} else if (nCell==3 || (nCell>=6 && nCell<=12)) {

		if (mclass == "ELV_01" || mclass == "ELV_02" || mclass == "SHN_01") {
			switch (nCell) {
				case  3	: fa_atnam="EL_ACD1" ; colId="ZSAREA"; break; // 판매지역
				case  6	: fa_atnam="EL_AUSE" ; colId="ZUSE"  ; break; // 용도
				case  7	: fa_atnam="EL_AMAN" ; colId="TYPE1" ; break; // 인승, 폭
				case  8	: fa_atnam="EL_ACAPA"; colId="ZACAPA"; break; // 용량
				case  9	: fa_atnam="EL_ASPD" ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // 속도
				case 10	: fa_atnam="EL_AFQ"  ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 층수
				case 11 : fa_atnam="EL_ASTQ" ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 정지층수
				case 12	: fa_atnam="EL_AOPEN"; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // Door 개폐, 길이
				default : break;
			}
		} else if (mclass == "ESC_01" || mclass == "SHN_02") {
			switch (nCell) {
				case  3	: fa_atnam="ES_ALOCAT"; colId="ZSAREA"; break; // 판매지역
				case  6	: fa_atnam="ES_ALOC"  ; colId="ZUSE"  ; break; // 설치형태
				case  7	: fa_atnam="ES_AWID"  ; colId="TYPE1" ; break; // 인승, 폭
				case  9	: fa_atnam="ES_ADEG"  ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // 각도
				case 10	: fa_atnam="ES_ARISE" ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 층수
				case 11 : fa_atnam="ES_ASPE"  ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // 속도
				case 12	: fa_atnam="ES_ALENG" ; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "normal"); break; // Door 개폐, 길이
				default : break;
			}
		} else if (mclass == "MW_01") {
			switch (nCell) {
				case  3	: fa_atnam="MW_ALOCAT"; colId="ZSAREA"; break; // 판매지역
				case  6	: fa_atnam="MW_ALOC"  ; colId="ZUSE"  ; break; // 설치형태
				case  7	: fa_atnam="MW_AWID"  ; colId="TYPE1" ; break; // 인승, 폭
				case  9	: fa_atnam="MW_ADEG"  ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // 각도
				case 10 : fa_atnam="MW_ARIS"  ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 높이
				case 11	: fa_atnam="MW_ASPE"  ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none"); break; // 속도
				case 12	: fa_atnam="MW_ALENG" ; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break;
				default : break;
			}
		} else if (mclass == "AP_01") { // (2012.12.10)
			switch (nCell) {
				case  3	: fa_atnam=""       ; colId="ZSAREA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")   ; break; // 판매지역      -> (비활성화)
				//case  5	: fa_atnam="AP_AMOD"; colId="ZUSE"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")   ; break; // 용도          -> 승입방향
				case  6	: fa_atnam="AP_AMOD"; colId="ZUSE"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "normal")   ; break; // 용도          -> 승입방향
				case  7	: fa_atnam="AP_AEA" ; colId="TYPE1" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")   ; break; // 인승,폭       -> 모델명
				case  8	: fa_atnam="AP_ACS" ; colId="ZACAPA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")   ; break; // 용량          -> 수용차종
				case  9	: fa_atnam="AP_AQL" ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 속도/각도     -> 단수
				case 10 : fa_atnam="AP_AQC" ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 층수/높이     -> 파렛트수
				case 11	: fa_atnam="AP_AQT" ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); break; // 정지층수/속도 -> 리프트수
				case 12	: fa_atnam="AP_AETS"; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")   ; break; // DOOR개폐길이  -> 외부턴
				default : break;
			}
		} else if (mclass == "PSD_01") { // (2012.12.10)
			switch (nCell) {
				case  3	: fa_atnam=""         ; colId="ZSAREA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 판매지역	 	- (비활성화)
				case  6	: fa_atnam=""		  ; colId="ZUSE"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 용도 	        - (비활성화)
				case  7	: fa_atnam="PSD_ANAME"; colId="TYPE1" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "normal"); break; // 인승/폭	 	- 역사명
				case  8	: fa_atnam=""         ; colId="ZACAPA"; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 용량		 	- (비활성화)
				case  9	: fa_atnam=""         ; colId="TYPE2" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 속도/각도		- (비활성화)
				case 10 : fa_atnam=""         ; colId="TYPE3" ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 층수/높이 		- (비활성화)
				case 11	: fa_atnam=""         ; colId="ZLEN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // 정지층수/속도- (비활성화)
				case 12	: fa_atnam=""         ; colId="ZOPN"  ; h.grd_detail.SetCellProp("body", nCell, "Edit", "none")  ; break; // DOOR개폐길이 - (비확성화)
				default : break;
			}
		}
		
		if ((mclass!="SHN_01" && mclass!="AP_01" && mclass!="PSD_01" &&
				(fa_atnam!="EL_AFQ" && fa_atnam!="EL_ASTQ" && fa_atnam!="ES_ARISE" && fa_atnam!="MW_ARIS" && fa_atnam!="ES_ALENG" && fa_atnam!="MW_ALENG")) ||
			(mclass=="AP_01" && (fa_atnam=="AP_AEA" || fa_atnam=="AP_ACS" || fa_atnam=="AP_AETS" || fa_atnam=="AP_AMOD")) ||
			(mclass=="SHN_01" && (fa_atnam=="EL_AUSE" || fa_atnam=="EL_AOPEN"))) {

			if ( fa_atnam == "" ) return;

			// (2012.12.10) 모델명이 AE* 시작될 경우에만 승입방향 선택 가능  ---> 경우의 수 없이 선택가능하도록 수정 2013.04.28  강슬기
			/*var sApModelName = h.grd_detail.GetCellText("Body", nRow, 5);
			sApModelName = iif(length(sApModelName) >= 2, left(sApModelName, 2), "");
			if ( fa_atnam == "AP_AEA" && sApModelName != "AE" ) return;
			*/
			
			if (mclass=="SHN_01") fa_atnam = "SH_" + fa_atnam;

            // 2020 브랜드
			var arg = " fa_mandt="+G_MANDT+" fa_class="+mclass+" fa_brndcd="+quote(brndcd)+" fa_brndseq="+quote(brndseq)+" fa_atkla="+fa_atkla+" fa_atnam="+quote(fa_atnam)+" fa_where="+quote("");
			var arr = gfn_openPopupUrl("COM::Com0150.xml", true, arg);
			if (arr != null && arr != 0) ds_detail.SetColumn(nRow, colId, Trim(arr[6]));
			/* 인승에 따른 용량 셋팅 
			if (fa_atnam="EL_AMAN" && colId == "TYPE1") {

				prd       = ds_detail.GetColumn(nRow, "TYPE1"); // 인승
				searchRow = ds_acapa.SearchRow("ATWRT ==" + quote(prd));
				zacapa    = ds_acapa.GetColumn(searchRow, "ZACAPA");
				ds_detail.SetColumn(nRow, "ZACAPA", zacapa);

				prd       = ds_detail.GetColumn(nRow, "ZACAPA");
				searchRow = ds_template1.SearchRow(searchRow + quote("EL_ACAPA"));
				ds_template1.SetColumn(searchRow, "PRD" , prd);
				ds_template1.SetColumn(searchRow, "FLAG", "U");

				prd       = ds_detail.GetColumn(nRow, "GTYPE");
				searchRow = ds_template1.SearchRow(searchRow + quote("EL_ATYP"));
				ds_template1.SetColumn(searchRow, "PRD" , prd);
				ds_template1.SetColumn(searchRow, "FLAG", "U");
			}
			*/
			// (2012.12.11) 주차 - 모델명이 AE* 가 아닌 경우, 승입방향 초기화 ---> 경우의 수 없이 선택가능하도록 수정 2013.04.28  강슬기
			/*if ( mclass=="AP_01" && fa_atnam=="AP_AMOD" ) {
				var sApModelName = h.grd_detail.GetCellText("Body", nRow, 5);
				sApModelName = iif(length(sApModelName) >= 2, left(sApModelName, 2), "");
				if ( sApModelName != "AE" ) {
					ds_detail.SetColumn(nRow, "TYPE1", ""); // 승입방향
				}
			}*/
		}
	/*} else if ( nCell == 13 ) {
		if ( mclass == "AP_01" || mclass == "PSD_01" ) { // 주차 (2012.12.10), PSD (2012.12.10)
			h.grd_detail.SetCellProp("body", nCell, "Edit", "integer"); //단가 - 숫자입력
		}
	*/	//대리점은 단가입력 불가 	
	}

	// 시행율 (2012.12.11)
	if ( mclass == "AP_01" || mclass == "PSD_01" ) {
		if ( h.grd_detail.GetCellProp("body", 17, "Expr") == "" ) {
			h.grd_detail.SetCellProp("body", 17, "Expr", "toNumber(toNumber(ZCOST,3)/toNumber(ZEAM,3)*100,1)");
		}
	}
}

function btn_template_OnClick(obj) {
	var mclass = ds_detail.GetColumn(ds_detail.currow, "ZPRDGBN");
	// 2020 브랜드
	var brndcd  = ds_detail.GetColumn(ds_detail.currow, "BRNDCD");
	var brndseq = ds_detail.GetColumn(ds_detail.currow, "BRNDSEQ");
	var arg = "mode='Q' mclass="+quote(mclass)+" nRow="+quote(ds_detail.currow)+ " brndcd="+quote(brndcd)+" brndseq="+quote(brndseq)+" qtnum="+quote("");
    gfn_openPopUpUrlHdel("SES::Ses0582.xml", true, arg);
}

function cb_vkbur_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex) {

	ds_vkgrp.UnFilter();
	ds_vkgrp.Filter("DTEXT1 == '" + strCode + "'");
	cb_vkgrp.SetFocus();
	cb_vkgrp.index = 0;
}

function fn_zprgflg() {

	  zprgflg = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태
	var spart = ds_header.GetColumn(0, "SPART"  );
	var d     = tab.template.div_template;
	var h = tab.main.div_header;

	//trace("**************************");
    if ( zprgflg == '33' || zprgflg == '50' ) {
    //    trace("!!!!!!!!!!!!!!!!!");
		h.cal_deldat.Enable = true ; 
		h.cal_frcmfcdat.Enable = true ; 
    }
    if ( zprgflg > '24' ){
		h.ed_zgnm.Enable = false;
		h.ed_addr1.Enable = false;
		h.ed_addr2.Enable = false;
		h.btn_zipcode.Enable = false;		
		//h.med_zipcode     = false;
    }
    
	switch (zprgflg) {
        
		case "20" : btn_qtser_plus.Visible = true ; btn_qtser_minus.Visible = true; btn_estimate.Visible = true; btn_costRequest.Visible = false; break;

		case "25" : btn_estimate.Visible = false; btn_costRequest.Visible = true; 
		            h.cb_qtgbn.Enable = false; break; // 견적최종승인		            
		case "32" : h.cb_qtgbn.Enable = false; 
			for(var i=0; i < ds_detail.GetRowCount(); i++) {
			  ds_detail.SetColumn(i,"ZUAM", "0.00");
			  ds_detail.SetColumn(i,"ZCOST", "0.00");
			  }
			  //fn_enable_set();
			  break;
//----< 2017.06.23 수주생성 단계에서 차수+/-버튼 비활성화 by mj.Shin  Start 
		case "90" : btn_qtser_plus.Visible = false; 
					btn_qtser_minus.Visible = false;
					fn_enable_set();
				    break;			  
//----> 2017.06.23 수주생성 단계에서 차수+/-버튼 비활성화 by mj.Shin  End 
		default   : if (zprgflg < "25" && zprgflg != "21" && zprgflg != "24") { // 24견적반려, 25 견적최종승인
						tab.main.Enable      = false;
						tab.template.Enable  = true;
						btn_estimate.Visible = false;
						btn_costRequest.Visible = false;
					} else if (zprgflg == "21" || (zprgflg >= "24")) { // 24 견적반려
						fn_enable_set();
					} break;
					
	}
	
	// 원가승인 이전 단계에서는 단가와 원가 금액을 보이지 않게 세팅  201303  재수정 2013.03.30
	    //TRACE("진행상태 "+ zprgflg);
		 if (zprgflg != "33" && zprgflg != "50" && zprgflg != "61" && zprgflg != "90")
		 {
		    // ds_detail.oncolumnchanged = "" 하고 끝나는 시점에 다시 넣어준다. ! 
		    ds_detail.OnColumnChanged = "";
	        //ds_detail.CanRowPosChange = "";
		 	//ds_detail.OnRowPosChanged = ";
		 	
		 	for (var i=0; i<ds_detail.GetRowCount(); i++) {
		   		ds_detail.SetColumn(i, "ZUAM", "0");
				ds_detail.SetColumn(i, "ZCOST", "0");
				//TRACE("원가"+i+" => "+ds_detail.GetColumn(i, "ZUAM"));
			}
			ds_detail.OnColumnChanged = "ds_detail_oncolumnchanged";
		    //ds_detail.OnRowPosChanged = "ds_detail_OnRowPosChanged";
		 }
    
	// (2012.12.11) 주차,PSD,물류 - Duty 비활성화
	if ( spart == "20" || spart == "40" || spart == "30" ) {

		d.cb_block.Enable = false;
		d.btn_duty.Enable = false;
		d.btn_depend.Enable = false;
	}
	
	//2021.10 jss:리모델링 수주계획추가 제한
	if(left(ds_header.GetColumn(0, "AUART"),2) == "ZN") tab.main.div_header.btn_popup.Enable=false;
	
}

function fn_queryTemplate() {

	if (flag == "I") {
		btn_plus_OnClick();
		flag = "";
	} else {
		//=========================================================================================
		//  기능ID   : UF001  
		//  수정내역 : 사양조회 로직 변경.
		//             기존 로직 : 한번에 모든 사양을 일련번호별로 조회하여 가져온다.
		//             변경 로직 : 한번에 모든 사양을 차수별로 조회하여 가져온다.
		//=========================================================================================				
		if(ds_detail.rowcount < 1) {
			fn_destroyWait();
			return false;
		}	
		
		//광역 운송지역 sync 처리 2013.01.10   ---> 운송지역 데이타셋 필요해서 추가함.. 
		ds_cond_atnam.ClearData();
		ds_cond_atnam.AddRow();
		ds_cond_atnam.SetColumn(0, "MANDT" , G_MANDT   );
		ds_cond_atnam.SetColumn(0, "KLART" , "300"     );
		ds_cond_atnam.SetColumn(0, "CLASS1", "ELV_01"  );
		ds_cond_atnam.SetColumn(0, "ATKLA" , "EL_BASIC");
		ds_cond_atnam.SetColumn(0, "ATNAM" , "EL_ALOCT");
		ds_cond_atnam.SetColumn(0, "WHERE" , ""        );
		
		http.sync = true;
		nsfRequest("queryTemplate"
				   , "ses0031n/searchTemplate"
				   , "ds_detail=ds_detail ds_template=ds_template ds_cond_atnam=ds_cond_atnam ds_zregn2=ds_zregn2 ds_zregn3=ds_zregn3 ds_t302=ds_t302"
				   , "ds_template=ds_template ds_error=ds_error ds_zregn2=ds_zregn2 ds_zregn3=ds_zregn3 ds_t302=ds_t302"
				   , "ATNAM2='EL_ADTA'"
				   , "fn_afterQuery");
		http.sync = false;
	}
}

function fn_template(popupYn, nRow) {

	fn_createWait("",this); // 처리중입니다. 메시지 처리

	// 그리드 변경사항 반영 여부 2016.02.15 hsi
	fn_grdRedraw(false);
	
	var dstmp = object(ds_temp.ID     );
	var dst   = object(ds_template.ID );
	var ds0   = object(ds_template0.ID); ds0.OnColumnChanged = "";
	var ds1   = object(ds_template1.ID); ds1.OnColumnChanged = "";
	var ds2   = object(ds_template2.ID); ds2.OnColumnChanged = "";
	var ds3   = object(ds_template3.ID); ds3.OnColumnChanged = "";
	var ds4   = object(ds_template4.ID); ds4.OnColumnChanged = "";
	var ds5   = object(ds_template5.ID); ds5.OnColumnChanged = "";
	var ds6   = object(ds_template6.ID); ds6.OnColumnChanged = "";

	var ddvrtq  = ds_header.GetColumn(0, "CO_DDVRTQ" );
	var dephtq  = ds_header.GetColumn(0, "CO_DEPHTQ" );
	var dssq    = ds_header.GetColumn(0, "CO_DSSQ"   );
	var bclcdtq = ds_header.GetColumn(0, "CO_BCLCDTQ");
	var chpitq  = ds_header.GetColumn(0, "CO_CHPITQ" );
	var aspc    = ds_header.GetColumn(0, "CO_ASPC"   );
	var dsv1    = ds_header.GetColumn(0, "CO_DSV1"   );
	var dsv1tq  = ds_header.GetColumn(0, "CO_DSV1TQ" );
	var dsv2    = ds_header.GetColumn(0, "CO_DSV2"   );
	var dsv2tq  = ds_header.GetColumn(0, "CO_DSV2TQ" );
	var auart   = ds_header.GetColumn(0, "AUART"  ); 

	var mandt      = "";
	var qtnum      = "";
	var qtser      = "";
	var qtseq      = "";
	var prseq      = "";
	var atkla      = "";
	var ds_flag    = "";
	var prd        = "";
	var prh        = "";
	var user_prd   = "";
	var user_flag  = "";
	var h          = "head";
	var t          = "Text";
	var searchRow  = 0;
	var matnr      = ds_detail.GetColumn(nRow, "MATNR");
	var user_qtseq = ds_detail.GetColumn(nRow, "QTSEQ");
	var maxprseq   = parseInt(ds_template_add.max("ZTPLSEQ"));
	var ztplseq    = 0;
	var addCnt     = 0;
	var prdCnt     = 0;

	var obj0 = tab.template.div_template.grd_template0;
	var obj1 = tab.template.div_template.grd_template1;
	var obj2 = tab.template.div_template.grd_template2;
	var obj3 = tab.template.div_template.grd_template3;
	var obj4 = tab.template.div_template.grd_template4;
	var obj5 = tab.template.div_template.grd_template5;
	var obj6 = tab.template.div_template.grd_template6;
	var obj7 = tab.template.div_template;
	
	var fa  = "ATKLA==";
	// 20151021  sp 사양중 설치 관련된 사양은 별도 구분 by seonhoworld|| Substr(PRH,0,3)=="+quote("SV_")+" || ( Substr(PRH,0,3)=="+quote("SP_")+" && Substr(PRHNAME, 0, 1) !=" + quote("Z")+")";
	//var fa1 = fa+quote("EL_BASIC"  )+" || "+fa+quote("ES_BASIC" )+" || "+fa+quote("MW_BASIC" )+" || "+fa+quote("PSD_BASIC")+" || "+fa+quote("AP_BASIC")+" || Substr(PRH,0,3)=="+quote("SV_")+" || Substr(PRH,0,3)=="+quote("SP_");
	var fa1 = fa+quote("EL_BASIC"  )+" || "+fa+quote("ES_BASIC" )+" || "+fa+quote("MW_BASIC" )+" || "+fa+quote("PSD_BASIC")+" || "+fa+quote("AP_BASIC")+" || Substr(PRH,0,3)=="+quote("WCL")+" || Substr(PRH,0,3)=="+quote("DW_")+" || Substr(PRH,0,3)=="+quote("SV_")+" || ( Substr(PRH,0,3)=="+quote("SP_")+" && Substr(PRHNAME, 0, 1) !=" + quote("Z")+")";	
	var fa2 = fa+quote("EL_INSIDE" )+" || "+fa+quote("ES_OPTION")+" || "+fa+quote("MW_OPTION")+" || "+fa+quote("PSD_SASH" );
	var fa3 = fa+quote("EL_OUTSIDE")+" || "+fa+quote("ES_SAFETY")+" || "+fa+quote("MW_SAFETY")+" || "+fa+quote("PSD_STEEL");
	var fa4 = fa+quote("EL_OPTION" )+" || "+fa+quote("ES_EXTER" )+" || "+fa+quote("MW_EXTER" )+" || "+fa+quote("PSD_ELEC" );
	var fa5 = fa+quote("EL_LAYOUT" );
	// 브랜드 입력화 신규 그룹 추가
	var fa6 = fa+quote(F_GROUP_FILTER);
	
	var fq  = "QTSEQ==" + quote(user_qtseq);
	var f1  = "Substr(PRH,0,3)==" + quote("CO_");
	var f2  = "Substr(PRH,0,3)!=" + quote("CO_");
	var fq1 = fq+" && "+f1;
	var fq2 = fq+" && "+f2;

	// 2013.02.18 ★★★★★  START  OLD
	// if (popupYn == "Y" || popupYn == "Duty") {

		// ds_template.UnFilter();
		// dstmp.CopyF(ds_template);

		// for (var i= ds_template.GetRowCount()-1; i>=0; i--) {
			// qtseq  = ds_template.GetColumn(i, "QTSEQ");
			// prh    = ds_template.GetColumn(i, "PRH"  );
			// prdCnt = ds_template.GetColumn(i, "CNT"  );

			// if (qtseq == null || qtseq == "") ds_template.SetColumn(i, "QTSEQ", ds_detail.GetColumn(nRow, "QTSEQ"));
			// if (user_qtseq == qtseq) {
				// switch (popupYn) {
					// case "Duty" : if (Substr(prh, 0, 3) != "CO_") {
									// searchRow = ds_template_add.searchRow("PRH ==" + quote(prh) + " && QTSEQ ==" + quote(user_qtseq));
									// ds_template_add.SetColumn(searchRow, "CNT", prdCnt);
									// ds_template.DeleteRow(i);
								  // } break;
					// default     : ds_template.DeleteRow(i); break;
				// }
			// }
		// }

		// for (var i=0; i<ds_template_add.GetRowCount(); i++) {
			// dst.addRow();
			// dst.CopyRow(dst.currow, "ds_template_add", i);

			// mandt     = dst.GetColumn(dst.currow, "MANDT");
			// qtnum     = dst.GetColumn(dst.currow, "QTNUM");
			// qtseq     = dst.GetColumn(dst.currow, "QTSEQ");
			// qtser     = dst.GetColumn(dst.currow, "QTSER");
			// ds_flag   = dst.GetColumn(dst.currow, "FLAG" );
			// prh       = dst.GetColumn(dst.currow, "PRH"  );

			// searchRow = dstmp.searchRow("PRH ==" + quote(prh) + " && QTSEQ ==" + quote(user_qtseq));
			// user_flag = dstmp.GetColumn(searchRow, "FLAG" );
			// prseq     = dstmp.GetColumn(searchRow, "PRSEQ");

			// dst.SetColumn(dst.currow, "FLAG" , user_flag);
			// dst.SetColumn(dst.currow, "PRSEQ", prseq    ); // dst.SetColumn(dst.currow, "PRSEQ", i);

			// if (mandt == null || mandt == "") dst.SetColumn(dst.currow, "MANDT", ds_detail.GetColumn(nRow, "MANDT"));
			// if (qtnum == null || qtnum == "") dst.SetColumn(dst.currow, "QTNUM", ds_detail.GetColumn(nRow, "QTNUM"));
			// if (qtseq == null || qtseq == "") dst.SetColumn(dst.currow, "QTSEQ", ds_detail.GetColumn(nRow, "QTSEQ"));
			// if (qtser == null || qtser == "") dst.SetColumn(dst.currow, "QTSER", ds_detail.GetColumn(nRow, "QTSER"));
		// }
	// }
	// 2013.02.18 ★★★★★  END  OLD
	
	// 2013.02.18 ★★★★★  START NEW
	// Template 불러오기 & Duty call 처리 시 값이 변경된 경우에만 상태 Flag 변경
	if  (popupYn == "Y" || popupYn == "Duty") 	{
		ds_template.UnFilter();
		// 동일 MO의 최종 PRSEQ
		ds_temp.CopyF(ds_template.Filter("QTSEQ ==" + quote(user_qtseq)));
		var max_preseq = ds_temp.GetRowCount();

		var pre_flag = "";	// 이전상태
		var pre_prd  = "";	// 이전 값

		ds_template.UnFilter();
		for (var i = 0; i < ds_template_add.GetRowCount(); i++) {
			// PRD에 값이 존재하는지 확인
			prh = ds_template_add.GetColumn(i, "PRH");
			prd = trim(ds_template_add.GetColumn(i, "PRD"));

			// 공통 사양은 제외하고 처리 (최종적으로 공통사양 재 처리함)
			if (substr(prh, 0, 3) != "CO_") 	{
				// 기존 존재하는 
				searchRow = ds_template.searchRow("PRH ==" + quote(prh) + " && QTSEQ ==" + quote(user_qtseq));
				
				if (searchRow > -1)	{
					pre_flag = trim(ds_template.GetColumn(searchRow, "FLAG"));
					pre_prd  = trim(ds_template.GetColumn(searchRow, "PRD"));
					//ds_template.SetColumn(searchRow, "PRD", prd);

					// FLAG 상태 변경 기존값과 다른경우 처리되도록
					if (pre_prd != prd)	{
					    if( pre_prd == null && prd == '' ) {
							//trace(prh+":========= duty 처리 start");
							//trace("ds_template pre_flag:"+pre_flag);
							//trace("ds_template pre_prd:"+pre_prd+", ds_template_add prd:"+prd);
                            //trace("스크립트 버그3");
					        //ds_template.SetColumn(searchRow, "FLAG", "");
					    } else if( pre_prd == '' && prd == null ) {
							//trace(prh+":========= duty 처리 start");
							//trace("ds_template pre_flag:"+pre_flag);
							//trace("ds_template pre_prd:"+pre_prd+", ds_template_add prd:"+prd);
                            //trace("스크립트 버그4");
					        //ds_template.SetColumn(searchRow, "FLAG", "");
					    } else {
							//trace(prh+":========= duty 처리 start");
							//trace("ds_template pre_flag:"+pre_flag);
							//trace("ds_template pre_prd:"+pre_prd+", ds_template_add prd:"+prd);
					        // ds_template.SetColumn(searchRow, "FLAG", "U");
							var dsOrgValue = ds_template.GetOrgColumn(searchRow, "PRD");
							var dsFlag = ds_template.GetColumn(searchRow, "FLAG");
							ds_template.SetColumn(searchRow, "PRD", prd);
							if( dsOrgValue != prd ) {
								if(dsFlag == "I") {
									ds_template.SetColumn(searchRow, "FLAG", "I");
								} else {
									ds_template.SetColumn(searchRow, "FLAG", "U");
								}
							} else if( dsOrgValue == prd ) {
								if(flag == "U") {
									ds_template.SetColumn(searchRow, "FLAG", "");
								}
							}
					    }
					}					
				}
			}
		}
	}
	// 2013.02.18 ★★★★★  END NEW
	
//	dst.Filter(fq);
	if (popupYn != "C") { ds0.copy(dst); ds1.copy(dst); ds2.copy(dst); ds3.copy(dst); ds4.copy(dst); ds5.copy(dst); ds6.copy(dst);}

	zprdgbn = ds_detail.GetColumn(nRow, "ZPRDGBN");
	
	// 20151021  sp 사양중 설치 관련된 사양은 별도 구분 by seonhoworld
	atkla   = " "; ds0.Filter(fa+quote(atkla) + " && Substr(PRHNAME, 0, 6) !=" + quote("REMARK") + " && Substr(PRH, 0, 3) !=" + quote("WCL") + " && Substr(PRH, 0, 3) !=" + quote("DW_") + " || Substr(PRHNAME, 0, 1) ==" + quote("Z"));
	// 2020 브랜드 입력 필터 조건 추가
	// DISPTP X: 화면 그리드 표시, '': 화면 미표시
	fq  = fq + " && DISPTP==" + quote("X");

	
	dstmp.CopyF(ds0); ds0.Copy(dstmp); ds0.Filter(fq + " && AGENT!="+ quote("Y")); if(IsValidObject(obj0)) obj0.SetCellProp(h,2,t,"COMMON");

	ds1.Filter(fa1); dstmp.CopyF(ds1); ds1.Copy(dstmp); ds1.Filter(fq + " && AGENT!="+ quote("Y"));
	ds2.Filter(fa2); dstmp.CopyF(ds2); ds2.Copy(dstmp); ds2.Filter(fq + " && AGENT!="+ quote("Y"));
	ds3.Filter(fa3); dstmp.CopyF(ds3); ds3.Copy(dstmp); ds3.Filter(fq + " && AGENT!="+ quote("Y"));
	ds4.Filter(fa4); dstmp.CopyF(ds4); ds4.Copy(dstmp); ds4.Filter(fq + " && AGENT!="+ quote("Y"));
	ds5.Filter(fa5); dstmp.CopyF(ds5); ds5.Copy(dstmp); ds5.Filter(fq + " && AGENT!="+ quote("Y"));
	// 2020 브랜드
	ds6.Filter(fa6); dstmp.CopyF(ds6); ds6.Copy(dstmp); ds6.Filter(fq);

	if (zprdgbn == "ELV_01" || zprdgbn == "ELV_02" || zprdgbn == "SHN_01") {

		obj1.Visible=true; obj1.SetCellProp(h,2,t,"BASIC"  );
		obj2.Visible=true; obj2.SetCellProp(h,2,t,"INSIDE" );
		obj3.Visible=true; obj3.SetCellProp(h,2,t,"OUTSIDE");
		obj4.Visible=true; obj4.SetCellProp(h,2,t,"OPTION" );
		obj5.Visible=true; obj5.SetCellProp(h,2,t,"LAYOUT" );
        // 브랜드 신규 그룹 추가
		obj6.Visible=true; obj6.SetCellProp(h,2,t,F_GROUP_TITLE);
		obj0.Visible=true;
		obj0.Left = 2711;  obj7.Scroll = true; // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
		
		// 2020 박수근
		optGroupStyle(tab.template.div_template.grd_template0);
		optGroupStyle(tab.template.div_template.grd_template1);
		optGroupStyle(tab.template.div_template.grd_template2);
		optGroupStyle(tab.template.div_template.grd_template3);
		optGroupStyle(tab.template.div_template.grd_template4);
		optGroupStyle(tab.template.div_template.grd_template5);
		optGroupStyle(tab.template.div_template.grd_template6);
	} else if (zprdgbn == "ESC_01" || zprdgbn == "SHN_02") {

		obj1.Visible=true; obj1.SetCellProp(h,2,t,"BASIC"   );
		obj2.Visible=true; obj2.SetCellProp(h,2,t,"OPTION"  );
		obj3.Visible=true; obj3.SetCellProp(h,2,t,"SAFETY"  );
		obj4.Visible=true; obj4.SetCellProp(h,2,t,"EXTERIOR");
		obj5.Visible=false;
		obj6.Visible=false;
		obj7.Scroll = true; obj0.Left = 1808;
	} else if (zprdgbn == "MW_01") {

		obj1.Visible=true; obj1.SetCellProp(h,2,t,"BASIC"   );
		obj2.Visible=true; obj2.SetCellProp(h,2,t,"OPTION"  );
		obj3.Visible=true; obj3.SetCellProp(h,2,t,"SAFETY"  );
		obj4.Visible=true; obj4.SetCellProp(h,2,t,"EXTERIOR");
		obj5.Visible=false; 
		obj6.Visible=false; 
		obj7.Scroll = true; obj0.Left = 1808; // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정

	}  else if (zprdgbn == "AP_01") {
		obj1.Visible=true; obj1.SetCellProp(h,2,t,"BASIC");
		obj2.Visible=false;
		obj3.Visible=false;
		obj4.Visible=false;
		obj5.Visible=false; 
		obj6.Visible=false; 
		obj7.Scroll = false; obj0.Left = 455; // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
		obj0.Visible=false; 
		obj7.ResizeScroll(); // (주차인 경우 공통사양 제외) (2012.12.10)
	}  else if (zprdgbn == "PSD_01") {

		obj1.Visible=true; obj1.SetCellProp(h,2,t,"BASIC");
		obj2.Visible=true; obj2.SetCellProp(h,2,t,"SASH" );
		obj3.Visible=true; obj3.SetCellProp(h,2,t,"STEEL");
		obj4.Visible=true; obj4.SetCellProp(h,2,t,"ELEC" );
		obj5.Visible=false; 
		obj6.Visible=false; 
		obj7.Scroll = true; obj0.Left = 1357; // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
		obj0.Visible=false; obj7.ResizeScroll(); // PSD인 경우 공통사양 제외 (2012.12.10)

	}  else if (zprdgbn == "SP_01" || zprdgbn == "SV_01") {
		obj0.Visible = true; obj0.SetCellProp(h,2,t,"Y-400 설치 입력부분");
		obj1.Visible = true; obj1.SetCellProp(h,2,t,"BASIC");
		obj2.Visible = false;
		obj3.Visible = false;
		obj4.Visible = false;
		obj5.Visible = false; 
		obj6.Visible = false; 
		obj7.Scroll  = false; 
		obj0.Left = 455; // 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
	}
	obj7.resizeScroll(); // 2013.02.05 공통 안보이는 경우 있어서 스크롤 갱신

	// 2013.02.18 ★★★★★  START 데이터 왜곡을 막기 위해서 주석처리하고 테스트
	// for (var i=0; i<ds0.GetRowCount(); i++) { // 2013.02.14 데이터 왜곡을 막기 위해서 주석처리하고 테스트

		// atkla = ds0.GetColumn(i, "ATKLA");
		// prh   = ds0.GetColumn(i, "PRH"  );

		// if (atkla == " ") {
			// switch (prh) {
				// case "CO_DDVRTQ" : ds0.SetColumn(i, "PRD", ddvrtq ); break;
				// case "CO_DEPHTQ" : ds0.SetColumn(i, "PRD", dephtq ); break;
				// case "CO_DSSQ"   : ds0.SetColumn(i, "PRD", dssq   ); break;
				// case "CO_BCLCDTQ": ds0.SetColumn(i, "PRD", bclcdtq); break;
				// case "CO_CHPITQ" : ds0.SetColumn(i, "PRD", chpitq ); break;
				// case "CO_ASPC"   : ds0.SetColumn(i, "PRD", aspc   ); break;
				// case "CO_DSV1"   : ds0.SetColumn(i, "PRD", dsv1   ); break;
				// case "CO_DSV1TQ" : ds0.SetColumn(i, "PRD", dsv1tq ); break;
				// case "CO_DSV2"   : ds0.SetColumn(i, "PRD", dsv2   ); break;
				// case "CO_DSV2TQ" : ds0.SetColumn(i, "PRD", dsv2tq ); break;
				// default          : break;
			// }
		// }
	// }
	// 2013.02.18 ★★★★★  END 데이터 왜곡을 막기 위해서 주석처리하고 테스트

	if (popupYn == ""||popupYn == "Y" || popupYn == "Duty") {		// 2013.02.18 ★★★★★ Duty추가 반영
		ds_user0.ClearData(); ds_user0.copy(ds0);
		ds_user1.ClearData(); ds_user1.copy(ds1);
		ds_user2.ClearData(); ds_user2.copy(ds2);
		ds_user3.ClearData(); ds_user3.copy(ds3);
		ds_user4.ClearData(); ds_user4.copy(ds4);
		ds_user5.ClearData(); ds_user5.copy(ds5);
		ds_user6.ClearData(); ds_user6.copy(ds6);
	}

	if (popupYn == "Y" || popupYn == "C" || popupYn == "A" || popupYn == "Duty") {
		var obj_template;
		var obj_user;
		for (var a=0; a<=6; a++) {
			switch (a) {
				case 0	: obj_template = object(ds0.ID); obj_user = object(ds_user0.ID); break;
				case 1	: obj_template = object(ds1.ID); obj_user = object(ds_user1.ID); break;
				case 2	: obj_template = object(ds2.ID); obj_user = object(ds_user2.ID); break;
				case 3	: obj_template = object(ds3.ID); obj_user = object(ds_user3.ID); break;
				case 4	: obj_template = object(ds4.ID); obj_user = object(ds_user4.ID); break;
				case 5	: obj_template = object(ds5.ID); obj_user = object(ds_user5.ID); break;
				case 6	: obj_template = object(ds6.ID); obj_user = object(ds_user6.ID); break;
				default : break;
			}

			for (var i=0; i<obj_template.GetRowCount(); i++) {
				prd       = obj_template.GetColumn(i, "PRD");
				atkla     = obj_template.GetColumn(i, "ATKLA");
				prh       = obj_template.GetColumn(i, "PRH"  );
				
				searchRow = obj_user.searchRow("ATKLA ==" + quote(atkla) + " && PRH ==" + quote(prh) + " && QTSEQ ==" + quote(user_qtseq));
				user_prd  = Trim(obj_user.GetColumn(searchRow, "PRD"));
				user_flag = Trim(obj_user.GetColumn(searchRow, "FLAG"));
				ds_flag   = obj_template.GetColumn(i, "FLAG");

				if (prd != null && prd != "" ) {
					if (prd != user_prd) {
						switch (user_flag) {
							case "U" : setDsTemplateFlag(obj_template, i, "PRD", user_prd); break;
							default  : setDsTemplateFlag(obj_template, i, "PRD", prd); break;
						}
					}
				} else {
					if (user_prd != null && user_prd != "") {
					    setDsTemplateFlag(obj_template, i, "PRD", user_prd);
					}
				}
			}
		}
	}

	ds0.OnColumnChanged = "ds_template_OnColumnChanged";

	// 2020 박수근 추가
    fn_coElqty(); // E/L 대수 추가

	ds1.OnColumnChanged = "ds_template_OnColumnChanged";

	for (var i=0; i<ds1.GetRowCount(); i++) { // 2013.02.14 데이터 왜곡을 막기 위해서 주석처리하고 테스트

		atkla = ds1.GetColumn(i, "ATKLA");
		prh   = ds1.GetColumn(i, "PRH"  );

		if (atkla == "EL_BASIC") {
			switch (prh) {
				case "EL_ACD1"  : prd = ds_detail.GetColumn(nRow, "ZSAREA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ATYP"  : prd = ds_detail.GetColumn(nRow, "GTYPE" );  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_AUSE"  : prd = ds_detail.GetColumn(nRow, "ZUSE"  );  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ACAPA" : prd = ds_detail.GetColumn(nRow, "ZACAPA");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ASTQ"  : prd = ds_detail.GetColumn(nRow, "ZLEN"  );  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_AOPEN" : prd = ds_detail.GetColumn(nRow, "ZOPN"  );  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_AMAN"  : prd = ds_detail.GetColumn(nRow, "TYPE1");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ASPD"  : prd = ds_detail.GetColumn(nRow, "TYPE2");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_AFQ"   : prd = ds_detail.GetColumn(nRow, "TYPE3");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ALOCT" : prd = ds_header.GetColumn(0, "ZLZONE");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ADTA"  : prd = ds_header.GetColumn(0, "REGION");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "EL_ABRAND"  : prd = ds_detail.GetColumn(nRow, "BRNDCD"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				default        : break;
			}
		} else if (atkla == "ES_BASIC") {
			switch (prh) {
				case "ES_ALOCA" : prd = ds_detail.GetColumn(nRow, "SHANGH");
								  switch (prd) {
									case "상해" : prd = "SHAN"; break;
									default     : prd = "DOMA"; break;
								  }
								  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ALOCAT": prd = ds_detail.GetColumn(nRow, "ZSAREA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ATYP"  : prd = ds_detail.GetColumn(nRow, "GTYPE" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ALOC"  : prd = ds_detail.GetColumn(nRow, "ZUSE"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_AWID"  : prd = ds_detail.GetColumn(nRow, "TYPE1" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ADEG"  : prd = ds_detail.GetColumn(nRow, "TYPE2" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ARISE" : prd = ds_detail.GetColumn(nRow, "TYPE3" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ASPE"  : prd = ds_detail.GetColumn(nRow, "ZLEN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ALOCT" : prd = ds_header.GetColumn(0, "ZLZONE"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "ES_ADTA"  : prd = ds_header.GetColumn(0, "REGION"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				default         : break;
			}
		} else if (atkla == "MW_BASIC") {
			switch (prh) {
				case "MW_ALOCA" : prd = ds_detail.GetColumn(nRow, "SHANGH");
								  switch (prd) {
									case "상해" : prd = "SHAN"; break;
									default     : prd = "DOMA"; break;
								  }
								  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ALOCAT": prd = ds_detail.GetColumn(nRow, "ZSAREA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ATYP"  : prd = ds_detail.GetColumn(nRow, "GTYPE" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ALOC"  : prd = ds_detail.GetColumn(nRow, "ZUSE"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_AWID"  : prd = ds_detail.GetColumn(nRow, "TYPE1" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ADEG"  : prd = ds_detail.GetColumn(nRow, "TYPE2" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ARIS"  : prd = ds_detail.GetColumn(nRow, "TYPE3" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ASPE"  : prd = ds_detail.GetColumn(nRow, "ZLEN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ALENG" : prd = ds_detail.GetColumn(nRow, "ZOPN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ALOCT" : prd = ds_header.GetColumn(0, "ZLZONE"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "MW_ADTA"  : prd = ds_header.GetColumn(0, "REGION"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				default         : break;
			}
		} else if (atkla == "AP_BASIC") { // (2012.12.10)
			switch (prh) {
				case "AP_ATYP"  : prd = ds_detail.GetColumn(nRow, "GTYPE" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AEA"   : prd = ds_detail.GetColumn(nRow, "ZUSE"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AMOD"  : prd = ds_detail.GetColumn(nRow, "TYPE1" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_ACS"   : prd = ds_detail.GetColumn(nRow, "ZACAPA"); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AQL"   : prd = ds_detail.GetColumn(nRow, "TYPE2" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AQC"   : prd = ds_detail.GetColumn(nRow, "TYPE3" ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AQT"   : prd = ds_detail.GetColumn(nRow, "ZLEN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "AP_AETS"  : prd = ds_detail.GetColumn(nRow, "ZOPN"  ); setDsTemplateFlag(ds1, i, "PRD", prd); break;
				default         : break;
			}
		} else if (atkla == "PSD_BASIC") { // (2012.12.10)
			switch (prh) {
				case "PSD_AFORM1": prd = ds_detail.GetColumn(nRow, "GTYPE");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				case "PSD_ANAME" : prd = ds_detail.GetColumn(nRow, "TYPE1");  setDsTemplateFlag(ds1, i, "PRD", prd); break;
				default          : break;
			}
		}
	}

	ds2.OnColumnChanged = "ds_template_OnColumnChanged";
	ds3.OnColumnChanged = "ds_template_OnColumnChanged";
	ds4.OnColumnChanged = "ds_template_OnColumnChanged";

	for (var i=0; i<ds4.GetRowCount(); i++) {

		atkla = ds4.GetColumn(i, "ATKLA");
		prh   = ds4.GetColumn(i, "PRH"  );
		prd   = ds4.GetColumn(i, "PRD"  );

		if (atkla == "EL_OPTION" && Substr(prh, 0, 7) == "EL_FDSP") {
			//ds4.SetColumn(i, "PRD",  Replace(prd, ",", "")); // 2013.01.23 개별입력가격 숫자에 , 있었을 때 오류 확인을 위해서는 조회한 값을 그대로 보여줘야 함
		}
	}

	ds5.OnColumnChanged = "ds_template_OnColumnChanged";

	// 2020 브랜드
	ds6.OnColumnChanged = "ds_template_OnColumnChanged";
	
    //2020.12 jss
    if(auart == "ZN01" || auart =="ZN02"){
   		//if(ds_detail.GetColumn(nRow, "DMSTAT") == 'QT' || ds_detail.GetColumn(nRow, "DMSTAT") == 'SO' || ds_detail.GetColumn(nRow, "DMSTAT") == '' || ds_detail.GetColumn(nRow, "DMSTAT") == null){
   		if(ds_detail.GetColumn(nRow, "DMSTAT") == 'QT' || ds_detail.GetColumn(nRow, "DMSTAT") == 'SO' ){
			//2021.10 jss			
			for (var i=0; i<ds6.GetRowCount(); i++) {
				atkla = ds6.GetColumn(i, "ATKLA");
				prh   = ds6.GetColumn(i, "PRH"  );
				prd   = ds6.GetColumn(i, "PRD"  );
				if (atkla == "EL_OTHERS") {
					switch (prh) {
						case "EL_DELVNO"  : 
							prd = ds_detail.GetColumn(nRow, "SID");
							if(prd != "" && prd != null) setDsTemplateFlag(ds6, i, "PRD", prd); 
							break; 
						default         : break;
					}
				}
			}
		}else{
			for (var i=0; i<ds6.GetRowCount(); i++) {
				atkla = ds6.GetColumn(i, "ATKLA");
				prh   = ds6.GetColumn(i, "PRH"  );
				prd   = ds6.GetColumn(i, "PRD"  );
				if (atkla == "EL_OTHERS") {
					switch (prh) {
						case "EL_DSETUP"  :
							prd = ds_detail.GetColumn(nRow, "MFLIFNRT"); //교체전설치업체
							//trace("MFLIFNRT prd : "+prd);
							if(prd != "" && prd != null) setDsTemplateFlag(ds6, i, "PRD", prd); 	
							break;
						case "EL_DELVNO"  : 
							prd = ds_detail.GetColumn(nRow, "SID"); //2021.03 jss:승강기번호
							//trace("SID prd : "+prd);
							if(prd != "" && prd != null) setDsTemplateFlag(ds6, i, "PRD", prd); 
							break; 
						case "EL_DMNTBF"  : 
							prd = ds_detail.GetColumn(nRow, "CSLIFNRT"); //2021.03 jss:교체전보수업체
							//trace("CSLIFNRT prd : "+prd);
							if(prd != "" && prd != null) setDsTemplateFlag(ds6, i, "PRD", prd); 
							break;
						default         : break;
					}
				}
			}
    	}
    }

	// 2013.02.15
	if ( popupYn == "Duty" ) {
		var ds_h = ds_header;
		fn_aspc("", "", "", 0, 0, 0, 0, ds_h);					// 시방서 처리
		fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h);  // LED 총 수량
		fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); 			// LCD 총 수량
		fn_deph("", "", "", 0, 0, 0, 0, ds_h);					// 비상통화장치 DI-PBX 적용대수
		fn_ddvr("", "", "", 0, 0, 0, 0, ds_h);					// DVR 적용대수
		//fn_drvhq("", "", "", 0, 0, 0, 0, ds_h);					// 행선층 예약시스템 적용대수
		fn_dsv1("", "", "", 0, 0, 0, 0, ds_h);					// 감시반1
		fn_dsv2("", "", "", 0, 0, 0, 0, ds_h);					// 감시반2
		fn_aspd();												// 고속현장 2013.04.03
	}
	
	fn_qtdat();  //견적일 공통사양 추가 김선호 20150821
	fn_dpex();  //교환기1,2,3세팅 2021.02 jss
	fn_buildType(); //Building Type 2021.09 jss

	//ds1.Sort("PRHNAME",True); ds2.Sort("PRHNAME",True); ds3.Sort("PRHNAME",True); ds4.Sort("PRHNAME",True);	ds5.Sort("PRHNAME",True);

	fn_grdRedraw(true);
	
	fn_destroyWait();
}

function fn_save_header() {

	if (ds_header.rowcount == 0) { gfn_showAlert("CW10062"); return false; } // 견적 Header가 없습니다.

	var mandt   = ds_header.GetColumn(0, "MANDT"      ); // 클라이언트
	var qtnum   = ds_header.GetColumn(0, "QTNUM"      ); // 견적번호
	var qtser   = ds_header.GetColumn(0, "QTSER"      ); // 견적차수
	var qtdat   = ds_header.GetColumn(0, "QTDAT"      ); // 견적일자
	var spart   = ds_header.GetColumn(0, "SPART"      ); // 제품군
	var zbdtyp  = ds_header.GetColumn(0, "ZBDTYP"     ); // 건물용도
	var zprgflg = ds_header.GetColumn(0, "ZPRGFLG"    ); // 진행상태
	var vkbur   = ds_header.GetColumn(0, "VKBUR"      ); // 사업장
	var vkgrp   = ds_header.GetColumn(0, "VKGRP"      ); // 영업그룹
	var zkunnr  = ds_header.GetColumn(0, "ZKUNNR"     ); // 담당자
	var kunnr   = ds_header.GetColumn(0, "KUNNR"      ); // 고객번호
	var gsnam   = ds_header.GetColumn(0, "GSNAM"      ); // 공사명
	var zestdat = ds_header.GetColumn(0, "ZESTDAT"    ); // 입찰예정일
	var deldat  = ds_header.GetColumn(0, "DELDAT"     ); // 납기예정일
	var zpid    = ds_header.GetColumn(0, "ZPID"       ); // 현장담당자
	var ztel    = ds_header.GetColumn(0, "ZTEL"       ); // 현장연락처
	var zpost   = ds_header.GetColumn(0, "ZADDR_ZPOST"); // 현장우편번호
	var addr1   = ds_header.GetColumn(0, "ZADDR_ADR1" ); // 현장주소1
	var addr2   = ds_header.GetColumn(0, "ZADDR_ADR2" ); // 현장주소2
	var zregn   = ds_header.GetColumn(0, "ZREGN"      ); // 지역
//	var zdev    = ds_header.GetColumn(0, "ZDEV"       ); // 시행사
//	var inco    = ds_header.GetColumn(0, "INCO"       ); // 인도조건
	var qtgbn   = ds_header.GetColumn(0, "QTGBN"      ); // 견적구분  2013.02.05
	var jgbn    = ds_header.GetColumn(0, "JGBN"      ); // 주차설비유무
	var zregn3  = ds_header.GetColumn(0, "REGION");
    var zregn2  = ds_header.GetColumn(0, "ZLZONE");
	var frcmfcdat = ds_header.GetColumn(0, "FRCMFCDAT"     ); // 골조완료예상일자
	var zicif_pprt = ds_header.GetColumn(0, "ZICIF_PPRT"); // 선수금율
    var zicif_1strt = ds_header.GetColumn(0, "ZICIF_1STRT"); // 1차중도금율
    var zicif_2strt = ds_header.GetColumn(0, "ZICIF_2STRT"); // 2차중도금율
    var zicif_rmrt = ds_header.GetColumn(0, "ZICIF_RMRT"); // 잔금율
    var achdt	 	= ds_header.GetColumn(0, "ACHDT"  		); // 건축허가일
		
	var h       = tab.main.div_header;
	var zeam    = "";
//	var shang   = "";
	var matnr   = "";
	var znumber = "";
	var zprdgbn = "";
	var gtype   = "";
	var zuse    = "";
	var type1   = ""; // 인승, 폭
	var type2   = ""; // 속도, 각도
	var type3   = ""; // 층수
	var zacapa  = ""; // 용량
	var zlen    = ""; // 정지층수, 속도
	var zopn    = ""; // 도어개폐
	var arr;
	var cnt     = 0;

	if (qtdat   == null || qtdat   == "00000000") {	cnt++; gfn_showAlert("CW10037"); cal_qtdat.SetFocus();             return false; } // 견적일자
	if (spart   == null || spart   == ""        ) {	cnt++; gfn_showAlert("CW10038"); h.cb_spart.SetFocus();            return false; } // 제품군
	if (zprgflg == null || zprgflg == ""        ) {	cnt++; gfn_showAlert("CW10041"); h.cb_zprgflg.SetFocus();          return false; } // 진행상태
	if (vkbur   == null || vkbur   == ""        ) {	cnt++; gfn_showAlert("CW10042"); h.cb_vkbur.SetFocus();            return false; } // 사업장
	if (vkgrp   == null || vkgrp   == ""        ) {	cnt++; gfn_showAlert("CW10043"); h.cb_vkgrp.SetFocus();            return false; } // 영업그룹
	if (zkunnr  == null || zkunnr  == ""        ) {	cnt++; gfn_showAlert("CW10047"); h.div_sman.ed_sman_cd.SetFocus(); return false; } // 담당자
	if (kunnr   == null || kunnr   == ""        ) {	cnt++; gfn_showAlert("CW10048"); h.ed_kunnr.SetFocus();            return false; } // 고객번호
	if (gsnam   == null || gsnam   == ""        ) {	cnt++; gfn_showAlert("CW10049"); h.ed_gsnam.SetFocus();            return false; } // 공사명
	if (zestdat == null || zestdat == "00000000") {	cnt++; gfn_showAlert("CW10050"); h.cal_zestdat.SetFocus();         return false; } // 입찰예정일
	if (deldat  == null || deldat  == "00000000") {	cnt++; gfn_showAlert("CW10051"); h.cal_deldat.SetFocus();          return false; } // 납기예정일
	if (zbdtyp  == null || zbdtyp  == ""        ) {	cnt++; gfn_showAlert("CW10040"); h.cb_zbdtyp.SetFocus();           return false; } // 건물용도
	if (zregn   == null || zregn   == ""        ) {	cnt++; gfn_showAlert("CW10056"); h.cb_zregn1.SetFocus();           return false; } // 지역
	if (zpid    == null || zpid    == ""        ) {	cnt++; gfn_showAlert("CW10052"); h.ed_pid.SetFocus();              return false; } // 현장담당자
	if (ztel    == null || ztel    == ""        ) {	cnt++; gfn_showAlert("CW10053"); h.ed_tel.SetFocus();              return false; } // 현장연락처
	if (zpost   == null || zpost   == ""        ) {	cnt++; gfn_showAlert("CW10054"); h.med_zipcode.SetFocus();         return false; } // 우편번호
	if (addr1   == null || addr1   == ""        ) {	cnt++; gfn_showAlert("CW10055"); h.ed_addr1.SetFocus();            return false; } // 현장주소
	if (addr2   == null || addr2   == ""        ) {	cnt++; gfn_showAlert("CW10055"); h.ed_addr2.SetFocus();            return false; } // 현장주소
//	if (zdev    == null || zdev    == ""        ) { cnt++; gfn_showAlert(""); h.ed_dev.SetFocus();              return; } // 시행사
	if (qtgbn   == null || qtgbn   == ""        ) {	cnt++; gfn_showAlert("CW10039"); h.cb_gtgbn.SetFocus();            return false; } // 견적구분 2013.02.05
	if ( zregn3 == null || zregn3 == "" ) { cnt++; gfn_showAlert("CW00116", "운송지역"); h.cb_zregn3.SetFocus(); return false; } // 업종구분 - 물류전용 2013.02.18
	if ( zregn2 == null || zregn2 == "" ) { cnt++; gfn_showAlert("CW00116", "광역"); h.cb_zregn2.SetFocus(); return false; } // 업종구분 - 물류전용 2013.02.18
	if (ParseInt(qtser) >= 250                  ) { cnt++; arr = ["견적차수", ed_ser.Text]; gfn_showAlert("CW00190", arr); return false; } //견적차수 통제
	if (zicif_pprt == "") { cnt++; gfn_showAlert("선수금율을 입력해주세요."); h.zicif_pprt.SetFocus(); return false; } // 선수금비율 
	if (zicif_1strt == "" || zicif_2strt == "") { cnt++; gfn_showAlert("중도금율을 입력해주세요."); h.zicif_1strt.SetFocus(); return false; } // 중도금비율 
	if (zicif_rmrt == "") { cnt++; gfn_showAlert("잔금율을 입력해주세요."); h.zicif_rmrt.SetFocus(); return false; } // 잔금비율 
	
	if ( left(ds_header.GetColumn(0, "AUART"), 2) == "ZS" && frcmfcdat < "10000101") {	
		cnt++; gfn_showAlert("CW00116", "골조완료 예상일자"); h.cal_frcmfcdat.SetFocus();          return false; } // 골조완료예상일자
	if ( left(ds_header.GetColumn(0, "AUART"), 2) == "ZS" && achdt < "10000101") {	
		cnt++; gfn_showAlert("CW00116", "건축허가일"); h.cal_achdt.SetFocus();          								return false; } // 건축허가일
	
	if (jgbn    == "A"){ //주차설비 '유' 체크 시 , 내용 저장 필수 체크 
		http.sync = "true";
		//ds_headerJ.ClearData();
		//ds_headerJ.AddRow();
		//ds_headerJ.SetColumn(0, "MANDT"  , G_MANDT   );
		
		var inDs = "ds_cond=ds_header"
		         + " ds_header=ds_headerJ";
		var outDs ="ds_headerJ=ds_header"
				 + " ds_error=ds_error"	;

		nsfRequest("", "ses0052/find", inDs, outDs, "", "");
		//trace(ds_headerJ.savexml());
		if (ds_headerJ.GetRowCount() < 1) {
			gfn_showAlert("CW10025", "주차설비 '유' 입력시 상세내역 입력 및 저장 바랍니다.");
			return false;
		}
		
		http.sync = "false";
    }	

	for (var i=0; i<ds_detail.GetRowCount(); i++) {

		zprdgbn = Trim(ds_detail.GetColumn(i, "ZPRDGBN")); // 
		gtype   = Trim(ds_detail.GetColumn(i, "GTYPE"  )); // 기종
		zuse    = Trim(ds_detail.GetColumn(i, "ZUSE"   )); // 용도
		type1   = Trim(ds_detail.GetColumn(i, "TYPE1"  )); // 인승, 폭
		type2   = Trim(ds_detail.GetColumn(i, "TYPE2"  )); // 속도, 각도
		type3   = Trim(ds_detail.GetColumn(i, "TYPE3"  )); // 층수
		zacapa  = Trim(ds_detail.GetColumn(i, "ZACAPA" )); // 용량
		zlen    = Trim(ds_detail.GetColumn(i, "ZLEN"   )); // 정지층수, 속도
		zopn    = Trim(ds_detail.GetColumn(i, "ZOPN"   )); // 도어개폐

		znumber = ds_detail.GetColumn(i, "ZNUMBER");
		zeam    = ds_detail.GetColumn(i, "ZEAM"   );
//		shang   = ds_detail.GetColumn(i, "SHANG"  );
		matnr   = ds_detail.GetColumn(i, "MATNR"  );

		if (matnr != "T-1000" && matnr != "Y-1000" && matnr != "Y-200" && matnr != "Y-300" && matnr != "Y-400" && matnr != "Y-500") {

			if (gtype =="" || gtype ==null) { cnt++; arr=[(i+1), "기종"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; }
			if (zeam < 0) {cnt++; arr=[(i+1), "견적가"]; gfn_showAlert("견적가에는 음수를 입력할 수 없습니다."); h.grd_detail.SetFocus(); return false;}

			if (zprdgbn == "ELV_01" || zprdgbn == "ELV_02" || zprdgbn == "SHN_01") {

				if (zuse  =="" || zuse  ==null) { cnt++; arr=[(i+1), "용도"    ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (type1 =="" || type1 ==null) { cnt++; arr=[(i+1), "인승"    ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (type2 =="" || type2 ==null) { cnt++; arr=[(i+1), "속도"    ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (type3 =="" || type3 ==null) { cnt++; arr=[(i+1), "층도"    ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (zacapa=="" || zacapa==null) { cnt++; arr=[(i+1), "용량"    ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (zlen  =="" || zlen  ==null) { cnt++; arr=[(i+1), "정지층수"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (zopn  =="" || zopn  ==null) { cnt++; arr=[(i+1), "도어개폐"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }

			} else if (zprdgbn == "ESC_01" || zprdgbn == "SHN_02") {

				if (type1 =="" || type1 ==null) { cnt++; arr=[(i+1), "폭"  ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (type2 =="" || type2 ==null) { cnt++; arr=[(i+1), "각도"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (type3 =="" || type3 ==null) { cnt++; arr=[(i+1), "높이"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (zlen  =="" || zlen  ==null) { cnt++; arr=[(i+1), "속도"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (zuse  =="" || zuse  ==null) { cnt++; arr=[(i+1), "설치형태"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }

			} else if (zprdgbn == "MW_01") {

				if (type1 =="" || type1 ==null) { cnt++; arr=[(i+1), "폭"  ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (type2 =="" || type2 ==null) { cnt++; arr=[(i+1), "각도"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (type3 =="" || type3 ==null) { cnt++; arr=[(i+1), "높이"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (zlen  =="" || zlen  ==null) { cnt++; arr=[(i+1), "속도"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (zopn  =="" || zopn  ==null) { cnt++; arr=[(i+1), "길이"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (zuse  =="" || zuse  ==null) { cnt++; arr=[(i+1), "설치형태"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }

			} else if (zprdgbn == "AP_01") {

				if (Substr(type1, 0, 2) == "AE") {
					if (zuse=="" || zuse==null) { cnt++; arr=[(i+1), "승입방향"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				}
				if (zacapa=="" || zacapa==null) { cnt++; arr=[(i+1), "수용차종"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (zuse  =="" || zuse ==null) { cnt++; arr=[(i+1), "모델명"  ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (type2 =="" || type2 ==null) { cnt++; arr=[(i+1), "단수"    ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if (type3 =="" || type3 ==null) { cnt++; arr=[(i+1), "수용대수"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				if ( gtype == "CRT" ) {   //crt 인 경우만 리프트수 필수 2013.07.15
				  if (zlen  =="" || zlen  ==null) { cnt++; arr=[(i+1), "리프트수"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
				}
				if (zopn  =="" || zopn  ==null) { cnt++; arr=[(i+1), "외부턴"  ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }

			} else if (zprdgbn == "PSD_01") {
				if (type1 =="" || type1 ==null) { cnt++; arr=[(i+1), "역사명"  ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; }
			}

			if (znumber=="" || znumber==null || Round(znumber, 0) ==0) {
				cnt++; arr=[(i+1), "대수"  ]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; // 대수
			}
			if (zprgflg >= "31" && (zeam=="" || zeam==null || Round(zeam, 0) ==0)) {
				cnt++; arr=[(i+1), "견적가"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return false; // 견적가
			}
//			if (shang=="" || shang==null || Round(shang, 0) ==0) {
//				cnt++; arr=[(i+1), "시행률"]; gfn_showAlert("CW10034",arr); h.grd_detail.SetFocus(); return; // 시행률
//			}
		}
	}
	if (cnt==0) return true;
	else        return false;
}

function fn_save_template() {

	var iu_flag      = "";
	var qtnum        = ds_header.GetColumn(0, "QTNUM");
	var qtser        = ds_header.GetColumn(0, "QTSER");
	var qtseq        = "";
	var prd          = "";
	var prh          = "";
	var atkla        = "";
	var mclass       = "";
	var matnr        = "";
	var j            = 0;
	var detail_qtseq = "";
	var detail_flag  = "";
	var obj;

	// 공용사양의 고속현장 추가에 따른 기 Data의 일치화를 위한 재 호출
	// 고속현장 2013.04.03
	fn_aspd();

	ds_template_save.ClearData();

/*
	for (var a=0; a<ds_detail.GetRowCount(); a++) {
		detail_flag  = ds_detail.GetColumn(a, "FLAG"  );
		detail_qtseq = ds_detail.GetColumn(a, "QTSEQ" );
		mclass       = ds_detail.GetColumn(a, "MCLASS");
		matnr        = ds_detail.GetColumn(a, "MATNR" );

		if (detail_flag == "D") {
			for (var b= ds_template.GetRowCount()-1; b>=0; b--) {
				qtseq = ds_template.GetColumn(b, "QTSEQ");
				if (detail_qtseq == qtseq) ds_template.DeleteRow(b);
			}
			// 2013.02.18 ★★★★★
			for ( var b = ds_template0.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template0.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template0.DeleteRow(b);
			}
			for ( var b = ds_template1.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template1.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template1.DeleteRow(b);
			}
			for ( var b = ds_template2.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template2.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template2.DeleteRow(b);
			}
			for ( var b = ds_template3.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template3.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template3.DeleteRow(b);
			}
			for ( var b = ds_template4.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template4.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template4.DeleteRow(b);
			}
			for ( var b = ds_template5.GetRowCount()-1 ; b >= 0 ; b-- ) {
				qtseq = ds_template5.GetColumn(b, "QTSEQ");
				if ( detail_qtseq == qtseq ) ds_template5.DeleteRow(b);
			}
			// 2013.02.18 ★★★★★
		}
	}
*/
	for (var a=0; a<=6; a++) {
		switch (a) {
			case 0	: obj = object(ds_template0.ID); break;
			case 1	: obj = object(ds_template1.ID); break;
			case 2	: obj = object(ds_template2.ID); break;
			case 3	: obj = object(ds_template3.ID); break;
			case 4	: obj = object(ds_template4.ID); break;
			case 5	: obj = object(ds_template5.ID); break;
			case 6	: obj = object(ds_template6.ID); break;
			default : break;
		}

		//obj.UnFilter();

        // 2020 브랜드 입력 처리 하면서 로직 변경
        // 공통사양 항목 중 화면 이벤트에 의해서 자동 변경되지 않는 항목이 존재하므로
        // 최종 저장 시점에 공통항목의 데이터를 만들어 DB에 반영해 줘야 한다.
		for (var i=0; i<obj.GetRowCountNF(); i++) {
			atkla   = obj.GetColumnNF(i, "ATKLA");
			prh     = obj.GetColumnNF(i, "PRH"  );
			if (prh == "CO_DDVRTQ" || prh == "CO_DEPHTQ" || prh == "CO_DSSQ" || prh == "CO_BCLCDTQ" ||
			    prh == "CO_CHPITQ" || prh == "CO_ASPC"   || prh == "CO_DSV1" || prh == "CO_DSV1TQ"  ||
			    prh == "CO_DSV2"   || prh == "CO_DSV2TQ") {
				if (atkla == " ") {
					switch (prh) {
						case "CO_DDVRTQ" : prd = ds_header.GetColumn(0, "CO_DDVRTQ" ); break;
						case "CO_DEPHTQ" : prd = ds_header.GetColumn(0, "CO_DEPHTQ" ); break;
						case "CO_DSSQ"   : prd = ds_header.GetColumn(0, "CO_DSSQ"   ); break;
						case "CO_BCLCDTQ": prd = ds_header.GetColumn(0, "CO_BCLCDTQ"); break;
						case "CO_CHPITQ" : prd = ds_header.GetColumn(0, "CO_CHPITQ" ); break;
						case "CO_ASPC"   : prd = ds_header.GetColumn(0, "CO_ASPC"   ); break;
						case "CO_DSV1"   : prd = ds_header.GetColumn(0, "CO_DSV1"   ); break;
						case "CO_DSV1TQ" : prd = ds_header.GetColumn(0, "CO_DSV1TQ" ); break;
						case "CO_DSV2"   : prd = ds_header.GetColumn(0, "CO_DSV2"   ); break;
						case "CO_DSV2TQ" : prd = ds_header.GetColumn(0, "CO_DSV2TQ" ); break;
						default          : prd = obj.GetColumnNF(i, "PRD"); break;
					}
					// 값을 변경 처리한다.
					setDsTemplateFlagNF(obj, i, "PRD", prd);
				}
            }

            iu_flag = obj.GetColumnNF(i, "FLAG" );
            prd = obj.GetColumnNF(i, "PRD");
            if(iu_flag == "U" || Length(prd) > 0) {
				var nRow = ds_template_save.AddRow();
				ds_template_save.SetColumn(nRow, "FLAG"  , iu_flag                   );
				ds_template_save.SetColumn(nRow, "MANDT" , obj.GetColumnNF(i, "MANDT" ));
				ds_template_save.SetColumn(nRow, "PRH"   , prh);
				ds_template_save.SetColumn(nRow, "PRD"   , prd);
				ds_template_save.SetColumn(nRow, "QTNUM" , qtnum                     );
				ds_template_save.SetColumn(nRow, "QTSER" , qtser                     );
				ds_template_save.SetColumn(nRow, "QTSEQ" , obj.GetColumnNF(i, "QTSEQ" ));
				ds_template_save.SetColumn(nRow, "PRSEQ" , obj.GetColumnNF(i, "PRSEQ" ));
            }
		}
	}
}

function btn_estimate_OnClick(obj) {

	var qtnum = ds_header.GetColumn(0, "QTNUM"); // 견적번호

	if (qtnum == null || qtnum == "") {
		gfn_showAlert("CW10205"); return; // 견적번호를 입력하세요.
	}

	if (fn_save_header() == false) return;

	var qtser = ds_header.getColumn(0, "QTSER");
	var arg =  " fa_mandt = " + G_MANDT	 + " fa_qtnum = " + qtnum + " fa_qtser = " + qtser + " fa_zrqflg=1";
	var arr = gfn_openPopupUrl("SES::Ses0035.xml", true, arg); break;
}

function btn_costRequest_OnClick(obj) {

	var qtnum = ds_header.getColumn(0, "QTNUM");

	if (qtnum == null || qtnum == "") {
		gfn_showAlert("CW10205"); return; // 견적번호를 입력하세요.
	}

	if (fn_save_header() == false) return;

	var qtser = ds_header.getColumn(0, "QTSER");
	var arg =  " fa_mandt = " + G_MANDT + " fa_qtnum = " + qtnum + " fa_qtser = " + qtser;
	var arr = gfn_openPopupUrl("SES::Ses0036.xml", true, arg);
}

function btn_popup_OnClick(obj) {

	var spart = ds_header.GetColumn(0, "SPART"); // 제품군
	var kunnr = ds_header.GetColumn(0, "KUNNR");

	var arg = "branch="+quote("branch")+" popupYn="+quote("Y")+" spart="+quote(spart)+" kunnr="+quote(kunnr)+" zkunnr="+quote(zkunnr)+" zkunnrNm="+quote(zkunnrNm);
	var arr = gfn_openPopUpUrlHdel("SES::Ses0032.xml", true, arg);

	if (arr != null && arr != 0) btn_plus_OnClick("", arr);
}

function btn_common_OnClick(obj) {
	var arr = gfn_openPopUpUrlHdel("COM::Coms019.xml", true, '');
	if (arr != null && arr != 0) {
		var matnr = arr[0];
		btn_plus_OnClick(matnr);

		ds_detail.SetColumn(ds_detail.row, "MATNR", arr[0]); // 자재번호
		ds_detail.SetColumn(ds_detail.row, "GTYPE", arr[1]); // 기종
	}
}

function tab_OnChanged(obj,nOldIndex,nNewindex) {

	if (nNewindex == 1 && ds_detail.GetRowCount() == 0) {
		gfn_showAlert("CW10063"); // 견적 Detail이 없습니다.
		tab.TabIndex = 0;
	}
	
	if(tab.TabIndex == 1) fn_template("C", decode(F_CLICKED_ROW, -1, 0, F_CLICKED_ROW));
	
	// 리모델링 추가 리모델링실측치적용 버튼 제어
    // VEND_NAME:리모델링영업기술팀 -> G_VEND_NAME
    // DPT1:10 -> G_DPT1
	var findRow = ds_template6.FindRow("PRH", "EL_DREUSE");
	var isRadYsno   = false;
	if(findRow > -1 ) {
		if(ds_template6.getColumn(findRow, "PRD") == "Y" && Substr(ed_qtnum.text, 0,1) == "N") {
		    // 리모델링 대상 여부를 체크한다.
	        isRadYsno = fn_isRadYsno();
            if(isRadYsno) {
				tab.template.div_template.btn_rad_auto.Enable = true;
				// 표준LAYOUT, AUTOLAYOUT 버튼 제어
				tab.template.div_template.btn_stdLayout.Enable = false;
				tab.template.div_template.btn_depend2.Enable = false;
				// 호기별 리모델링 상태 정보 정의
				var qtseq = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
				var findRow = -1;
				findRow = ds_rad_sts.FindRow("QTSEQ", qtseq);
				if(findRow > -1) {
					FLOORYSNO  = ds_rad_sts.GetColumn(findRow, "FLOORYSNO");
					LAYOUTYSNO = ds_rad_sts.GetColumn(findRow, "LAYOUTYSNO");
					APPLYYSNO  = ds_rad_sts.GetColumn(findRow, "APPLYYSNO");
					SAVEYSNO   = ds_rad_sts.GetColumn(findRow, "SAVEYSNO");
				}
				//trace("FLOORYSNO:"+FLOORYSNO+", LAYOUTYSNO:"+LAYOUTYSNO+", APPLYYSNO:"+APPLYYSNO+", SAVEYSNO:"+SAVEYSNO);
            } else {
				tab.template.div_template.btn_rad_auto.Enable = false;
				// 표준LAYOUT, AUTOLAYOUT 버튼 제어
				tab.template.div_template.btn_stdLayout.Enable = true;
				tab.template.div_template.btn_depend2.Enable = true;
            }
		} else {
			tab.template.div_template.btn_rad_auto.Enable = false;
			// 표준LAYOUT, AUTOLAYOUT 버튼 제어
            tab.template.div_template.btn_stdLayout.Enable = true;
            tab.template.div_template.btn_depend2.Enable = true;
		}
	}	
}

// 선택한 row의 CNT값이 0 이상일 경우 수정불가(팝업으로만 선택)
function grd_template_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex) {

	var obj_template;

	switch (obj) {
		case "grd_template0" : obj_template = object(ds_template0.ID); break;
		case "grd_template1" : obj_template = object(ds_template1.ID); break;
		case "grd_template2" : obj_template = object(ds_template2.ID); break;
		case "grd_template3" : obj_template = object(ds_template3.ID); break;
		case "grd_template4" : obj_template = object(ds_template4.ID); break;
		case "grd_template5" : obj_template = object(ds_template5.ID); break;
		case "grd_template6" : obj_template = object(ds_template6.ID); break;
		default : break;
	}

	var fa_atkla = obj_template.getcolumn(nRow, "ATKLA");
	var fa_atnam = obj_template.getcolumn(nRow, "PRH"  );

	if (obj_template.getColumn(nRow, "CNT") > 0 ||
	   (fa_atkla == "EL_BASIC" && (fa_atnam == "EL_AFQ" || fa_atnam == "EL_ASTQ")) ||
	   (fa_atkla == "ES_BASIC" && fa_atnam == "ES_ARISE") ||
	   (fa_atkla == "MW_BASIC" && (fa_atnam=="MW_ATYP"  || fa_atnam=="MW_ALOCAT" || fa_atnam=="MW_ALOCA" || fa_atnam=="MW_AWID" || fa_atnam=="MW_ASPE" || fa_atnam=="MW_ADEG" ||
								   fa_atnam=="MW_ARIS"  || fa_atnam=="MW_ALENG"  || fa_atnam=="MW_ATT" )) ||
	   (fa_atkla == " "        && (fa_atnam=="CO_DDVRTQ" || fa_atnam=="CO_DEPHTQ" || fa_atnam=="CO_DSSQ"   || fa_atnam=="CO_BCLCDTQ" || fa_atnam=="CO_CHPITQ" ||
								   fa_atnam=="CO_ASPC"   || fa_atnam=="CO_DSV1"   || fa_atnam=="CO_DSV1TQ" || fa_atnam=="CO_DSV2"    || fa_atnam=="CO_DSV2TQ" ||
								   fa_atnam=="CO_ASPD"   || fa_atnam=="CO_FBDUSE")) ||		// 고속현장 2013.04.03, Building Type추가 : 2021.09 jss
	   (fa_atkla == "AP_BASIC" && (fa_atnam=="AP_ATYP"   || fa_atnam=="AP_AEA"    || fa_atnam=="AP_AMOD"   || fa_atnam=="AP_ACS"     || 
	                               fa_atnam=="AP_AQL"    || fa_atnam=="AP_AQC"    || fa_atnam=="AP_AQT"    || fa_atnam=="AP_AETS"))   || // (2012.12.10)
	   (fa_atkla == "PSD_BASIC" && (fa_atnam == "PSD_ANAME")) || // (2012.12.10)
	   (fa_atkla == "EL_OTHERS" && fa_atnam == "EL_DELVNO") //승강기번호추가 : 2021.10 jss
	   ) {
	    obj.Editable = false;

	} else {
		if (zprgflg=="24") obj.Editable = false;
		else               obj.Editable = true;
	}
}

function grd_template() {

	switch (zprgflg) {
		case "24" : gfn_showAlert("CW10075"); break; // CW10075 진행상태가 견적반려입니다. 입력할 수 없습니다.
		default : break;
	}
	if (zprgflg=="24") return false; // 24 견적반려
	else return true;
}

function grd_template_OnCellDblClick(obj,nRow,nCell,nX,nY,nPivotIndex) {

	var obj_template;

	switch (obj) {
		case "grd_template0" : obj_template = object(ds_template0.ID); break;
		case "grd_template1" : obj_template = object(ds_template1.ID); break;
		case "grd_template2" : obj_template = object(ds_template2.ID); break;
		case "grd_template3" : obj_template = object(ds_template3.ID); break;
		case "grd_template4" : obj_template = object(ds_template4.ID); break;
		case "grd_template5" : obj_template = object(ds_template5.ID); break;
		case "grd_template6" : obj_template = object(ds_template6.ID); break;
		default : break;
	}

	if (grd_template() == false) return;

	var atkla = obj_template.getcolumn(nRow, "ATKLA");
	var atnam = obj_template.getcolumn(nRow, "PRH"  );

    // 2020 박수근
    if(atnam == 'OPT_GROUP_TITLE' || obj_template.getcolumn(nRow, "MODITP") == '') {
        return;
    }

	switch (atkla) {
		case "EL_BASIC" : if (atnam == "EL_ABRAND" || atnam == "EL_ATYP" || atnam == "EL_AUSE" || atnam == "EL_AMAN"  || atnam == "EL_ACAPA" || atnam == "EL_ASPD" || atnam=="EL_ATT" ||
							  atnam == "EL_AFQ"  || atnam == "EL_ASTQ" || atnam == "EL_AOPEN" || atnam == "EL_ALOCT" || atnam == "EL_ADTA" || atnam=="EL_ACD1") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } else if (atnam=="SH_EL_ATYP" || atnam=="SH_EL_AUSE" || atnam=="SH_EL_AMAN"  || atnam=="SH_EL_ACAPA" || atnam=="SH_EL_ASPD" || atnam=="SH_EL_ATT" ||
									 atnam=="SH_EL_AFQ"  || atnam=="SH_EL_ASTQ" || atnam=="SH_EL_AOPEN" || atnam=="SH_EL_ALOCT" || atnam=="SH_EL_ADTA" || atnam=="SH_EL_ACD1") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case "ES_BASIC" : if (atnam=="ES_ATYP" || atnam=="ES_ALOCAT" || atnam=="ES_ALOCA" || atnam=="ES_AWID" || atnam=="ES_ASPE" || atnam=="ES_ADEG" ||
							  atnam=="ES_ARISE" || atnam=="ES_ATT" || atnam=="ES_ALOC") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } else if (atnam=="SH_ES_ATYP" || atnam=="SH_ES_ALOCAT" || atnam=="SH_ES_ALOCA" || atnam=="SH_ES_AWID" || atnam=="SH_ES_ASPE" ||
							  atnam=="SH_ES_ARISE" || atnam=="SH_ES_ATT") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case "MW_BASIC" : if (atnam=="MW_ATYP" || atnam=="MW_ALOCAT" || atnam=="MW_ALOCA" || atnam=="MW_AWID" || atnam=="MW_ASPE" || atnam=="MW_ADEG" ||
							  atnam=="MW_ARIS" || atnam=="MW_ALENG" || atnam=="MW_ATT" || atnam=="MW_ALOC") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case " "        : if (atnam=="CO_DDVRTQ" || atnam=="CO_DEPHTQ" || atnam=="CO_DSSQ"   || atnam=="CO_BCLCDTQ" || atnam=="CO_CHPITQ" ||
							  atnam=="CO_ASPC"   || atnam=="CO_DSV1"   || atnam=="CO_DSV1TQ" || atnam=="CO_DSV2"    || atnam=="CO_DSV2TQ" ||
							  atnam=="CO_ASPD"   || atnam=="CO_FBDUSE") {	// 고속현장 2013.04.03, Building Type추가 : 2021.09 jss
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case "AP_BASIC" : // (2012.12.10)
						  if (atnam=="AP_ATYP" || atnam=="AP_AEA" || atnam=="AP_AMOD" || atnam=="AP_ACS" || atnam=="AP_AQL" || atnam=="AP_AQC" || atnam=="AP_AQT" || atnam=="AP_AETS") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case "PSD_BASIC": // (2012.12.10)
						  if (atnam=="PSD_AFORM1" || atnam=="PSD_ANAME") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		case "EL_OTHERS": // 2021.10 jss
						  if (atnam=="EL_DELVNO") {
							gfn_showAlert("CW10094"); return; // 입력할 수 없습니다.
						  } break;
		default         : break;
	}

	if (obj_template.getColumn(nRow, "CNT") == 0) {
		obj.Editable = true; return;
	}

	var fa_atkla = atkla;
	var fa_atnam = atnam;
	// 2020 브랜드
	var fa_brndcd  = ds_detail.GetColumn(ds_detail.currow, "BRNDCD");
	var fa_brndseq = ds_detail.GetColumn(ds_detail.currow, "BRNDSEQ");
	
	// 2020 브랜드
	var arg = " fa_mandt = "+quote(G_MANDT)+" fa_class = "+quote(zprdgbn)+" fa_brndcd="+quote(fa_brndcd)+" fa_brndseq="+quote(fa_brndseq)+" fa_atkla = "+quote(fa_atkla)+" fa_atnam = "+quote(fa_atnam)+" fa_where = "+quote("");
	var arr = gfn_openPopupUrl("COM::Com0150.xml", true, arg);
	if (arr != null && arr != 0) {
		obj_template.SetColumn(nRow, "PRD", arr[6]);
		
		//2021.05 jss : 사양수정시 영업화면진행서순 반영
		var obj_template6 = object(ds_template6.ID); 
		var findRow = obj_template6.FindRow("PRH", "EL_YSTAT");
		if(findRow > -1 ) {
			obj_template6.SetColumn(findRow, "PRD",atnam);
			obj_template6.SetColumn(findRow, "FLAG", "U");
		}
	}	
	
	// 리모델링 추가 리모델링실측치적용 버튼 제어
	if(atnam == "EL_DREUSE") {
	    var isRadYsno   = false;
	    if(obj_template.getColumn(nRow, "PRD") == "Y" && Substr(ed_qtnum.text, 0,1) == "N" && isRadYsno) {
	        isRadYsno = fn_isRadYsno();
	        if(isRadYsno) {
				tab.template.div_template.btn_rad_auto.Enable = true;
				// 표준LAYOUT, AUTOLAYOUT 버튼 제어
				tab.template.div_template.btn_stdLayout.Enable = false;
				tab.template.div_template.btn_depend2.Enable = false;
	        } else {
				tab.template.div_template.btn_rad_auto.Enable = false;
				// 표준LAYOUT, AUTOLAYOUT 버튼 제어
				tab.template.div_template.btn_stdLayout.Enable = true;
				tab.template.div_template.btn_depend2.Enable = true;
	        }
	    } else {
	        tab.template.div_template.btn_rad_auto.Enable = false;
	        // 표준LAYOUT, AUTOLAYOUT 버튼 제어
            tab.template.div_template.btn_stdLayout.Enable = true;
            tab.template.div_template.btn_depend2.Enable = true;
	    }
	}
}

function btn_qtser_plus_OnClick(obj) {

	var qtnum = ds_header.GetColumn(0, "QTNUM"); // 견적번호
	var qtser = ds_header.GetColumn(0, "QTSER"); // 견적차수
	var arr;

	// 21.08.12 리모델링 승강기번호 체크
	if(!fn_isReEelvno("A")) {
		return;
	}

	if (qtnum == null || qtnum == "") {
		gfn_showAlert("CW10065"); return; // 견적번호가 없습니다.
	} else {
		if (gfn_showConfirm("CW10067") == true)
			if ( zprgflg == "24" || zprgflg == "26" ) {
				alert("반려된 견적은 차수 증가 불가합니다.");
				//alert("견적승인반려는 차수 증가 불가합니다.");
			}	
		    else {
				if (ParseInt(qtser) >= 250) {
					arr = ["견적차수", ed_ser.Text]; 
					gfn_showAlert("CW00190", arr); 
					return false;
				} //견적차수 통제

				fn_qtser("A"); // 차수를 증가하시겠습니까?
			}
	}
}

function btn_qtser_minus_OnClick(obj) {

    alert("견적삭제는 영업3부 의뢰요망");
	/*     대리점은 삭제 기능 제한 
	var qtnum   = ds_header.GetColumn(0, "QTNUM"  ); // 견적번호
	var zprgflg = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태

	if (qtnum == null || qtnum == "") {
		gfn_showAlert("CW10065"); return; // 견적번호가 없습니다.
	} else if (zprgflg >= "50") { // 50 입찰
		gfn_showAlert("CW00072"); return; // 삭제가 불가한 데이터입니다.
	} else {
		if (gfn_showConfirm("CI00015", "차수") == true) fn_qtser("D"); // 차수를 삭제하시겠습니까?
	} */
}

function fn_qtser(detail_flag) {

	var vSvcId = "saveQtserAdd";

	fn_createWait("",this); // 처리중입니다. 메시지 처리

	if(detail_flag == "D")
		vSvcId = "saveQtserDel";

	nsfRequest(  vSvcId
			   , "ses0031n/saveQtser"
			   , "ds_header=ds_header ds_detail=ds_detail"
			   , "ds_header=ds_header ds_error=ds_error"
			   , "qtser_flag=" + quote(detail_flag)			// A: 추가, D:삭제
			   , "fn_afterSave"
			   );

	// ds_header.OnColumnChanged = "";
	// ds_header.OnRowPosChanged = "";
	// ds_header.SetColumn(0, "FLAG", detail_flag);
	// ds_header.OnColumnChanged = "ds_header_OnColumnChanged";
	// ds_header.OnRowPosChanged = "ds_header_OnRowPosChanged";
				
	// ds_detail.OnColumnChanged = "";
	// ds_detail.CanRowPosChange = "";
	// ds_detail.OnRowPosChanged = "";

	// for (var i=0; i<ds_detail.GetRowCount(); i++) { ds_detail.SetColumn(i, "FLAG", detail_flag); }

	// ds_detail.OnColumnChanged = "ds_detail_OnColumnChanged";
	// ds_detail.CanRowPosChange = "ds_detail_CanRowPosChange";
	// ds_detail.OnRowPosChanged = "ds_detail_OnRowPosChanged";

	// fn_createWait("",this); // 처리중입니다. 메시지 처리
	// ds_template_save.Copy(ds_detail);
	// nsfRequest("saveHeader", "ses0031/saveHeader", "ds_header=ds_header ds_detail=ds_detail ds_template=ds_template_save"
				// , "ds_header=ds_header ds_error=ds_error", "", "fn_afterSave");
}

function cb_zregn2_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex) {

	var str = "";
	var searchRow;
	var qtseq;
	ds_zregn3.UnFilter();

	switch (strCode) {
		case "01" :	str = "ATWRT == " + quote("900016209") + "||ATWRT == " + quote("900016210");     break; // 제주도 + 서귀포
		case "02" :	str = "Substr(ATWRT,0,1) == " + quote("7"); break; // 전라북도
		case "03" :	str = "ATWRT !="+quote("600013119")+" && Substr(ATWRT,0,1) =="+quote("6"); break; // 전라남도
		case "04" :	str = "Substr(ATWRT,0,1) == " + quote("5"); break; // 충청북도
		case "05" :	str = "ATWRT !="+quote("400011095")+" && Substr(ATWRT,0,1) =="+quote("4"); break; // 충청남도
		case "06" :	str = "ATWRT == " + quote("200005028") + "||ATWRT == " + quote("200005029") + "||ATWRT == " + quote("200007049")
		              + "||ATWRT == " + quote("200007053") + "||ATWRT == " + quote("200007212") + "||ATWRT == " + quote("200007214");     
		            break; // 인천광역시 + 부평 + 강화 + 영종 + 용유도 + 옹진군
		case "07" :	str = "Substr(ATWRT,0,1) == " + quote("3"); break; // 강원도
		case "08" :	str = "ATWRT == " + quote("600013119");     break; // 광주광역시
		case "09" :	str = "ATWRT !="+quote("200005029")+" && Substr(ATWRT,0,1) == "+quote("2"); break; // 경기도		
		case "10" :	str = "ATWRT !="+quote("900016201")+" && ATWRT !="+quote("900016185")+" && ATWRT !="+quote("900016220")+" && Substr(ATWRT,0,1) == "+quote("9"); break; // 경상북도
		case "11" : str = "ATWRT !="+quote("800015170")+" && ATWRT !="+quote("800015181")+" && ATWRT !="+quote("800015217")+" && ATWRT !="+quote("800015219")
					  +"&& Substr(ATWRT,0,1) =="+quote("8"); break; // 경상남도
		case "12" : str = "ATWRT == "+quote("800015181") + "||ATWRT == "+quote("800015217") + "||ATWRT == "+quote("800015219")
							+ "||ATWRT == "+quote("800015183")  + "||ATWRT == "+quote("800015184"); break; // 부산광역시
		case "13" : str = "Substr(ATWRT,0,1) == " + quote("1"); break; // 서울특별시
		case "14" :	str = "ATWRT == " + quote("900016201") + "||ATWRT == "+quote("900016220");     break; // 대구광역시 
		case "15" :	str = "ATWRT == " + quote("400011095");     break; // 대전광역시
		case "16" : str = "ATWRT == " + quote("800015170") + "||ATWRT == "+quote("900016185");     break; // 울산광역시 울주포함20160616
		case "17" : str = "ATWRT == " + quote("400011224");     break; // 세종특별자치시
		default : break;
	}
	ds_zregn3.Filter(str);
	tab.main.div_header.cb_zregn3.Index = 0;
}

function cb_zregn3_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex) {

	var str = Substr(strCode, 0, 1);
	var qtseq;
	var searchRow;

	switch (strCode) {
		case "200005029" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("06")); break; // 인천광역시
		case "200005028" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("06")); break; // 부평 -> 인천
		case "200007049" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("06")); break; // 강화 -> 인천
		case "200007053" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("06")); break; // 영종 -> 인천
		case "200007212" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("06")); break; // 용유도 -> 인천
		case "200007214" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("06")); break; // 옹진군 -> 인천
		case "400011095" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("15")); break; // 대전광역시
		case "600013119" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("08")); break; // 광주광역시
		case "800015181" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("12")); break; // 부산광역시
		case "800015217" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("12")); break; // 기장군->부산광역시
		case "800015219" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("12")); break; // 기장(정관,일광면)->부산광역시
		case "800015183" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("12")); break;
		case "800015184" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("12")); break;
		case "800015170" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("16")); break; // 울산광역시
		case "900016185" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("16")); break; // 울산광역시
		case "900016201" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("14")); break; // 대구광역시
		case "900016220" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("14")); break; // 대구광역시
		case "900016209" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("01")); break; // 제주도
		default :
			switch (str) {
				case "1" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("13")); break; // 서울
				case "2" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("09")); break; // 경기도
				case "3" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("07")); break; // 강원도
				case "4" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("05")); break; // 충청남도
				case "5" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("04")); break; // 충청북도
				case "6" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("03")); break; // 전라남도
				case "7" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("02")); break; // 전라북도
				case "8" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("11")); break; // 경상남도
				case "9" : searchRow = ds_zregn2.searchRow("ATWRT =="+quote("10")); break; // 경상북도
				default  : break;
			} break;
	}
	tab.main.div_header.cb_zregn2.Index = searchRow;
}

function fn_visible(str) {

	var searchRow;
	switch (str) {
		case "estimate"    : searchRow = ds_zprgflg.searchRow("CODE =="+quote("21")); // 견적승인의뢰
							 ds_header.SetColumn(0, "ZPRGFLG", "21");
							 fn_enable_set(); break;
		case "costRequest" : searchRow = ds_zprgflg.searchRow("CODE =="+quote("31")); // 원가산출요청
							 ds_header.SetColumn(0, "ZPRGFLG", "31");
							 btn_costRequest.Visible = false; break;
		default : break;
	}

	tab.main.div_header.cb_zprgflg.Index=searchRow;
}

function fn_enable_set() {

	var zprgflg  = ds_header.GetColumn(0, "ZPRGFLG"); // 진행상태
	var h = tab.main.div_header;

	if (zprgflg=="32" || zprgflg=="33" || zprgflg=="42" || zprgflg=="50" || zprgflg=="61" || zprgflg=="90") { // 32 원가산출, 33 원가산출승인, 42 원가팀완료, 50 입찰

		h.div_sprmk.Enable   = false; h.btn_popup.Enable  = false; h.btn_plus.Enable  = false; h.btn_minus.Enable  = false;
		h.btn_common.Enable  = false; h.grd_zicif.Enable  = false; h.btn_copy.Enable  = false;

		h.cal_zestdat.Enable = false; 
		
		if(zprgflg=="32" || zprgflg=="33" || zprgflg=="42" ) h.cal_zestdat.Enable = true;  //입찰예정일 변경가능으로 변경 2021.05 jss
		
		if (zprgflg=="32" || zprgflg=="42" ){
			h.cal_deldat.Enable = false; 
			h.cal_frcmfcdat.Enable = false; 
		}	
		else if ( zprgflg=="90" ) {
		    h.cal_deldat.Enable = false; 
		    h.cal_frcmfcdat.Enable = false; 
		    h.ed_gsnam.Enable = false; 		    
		    h.ed_zgnm.Enable = false;
		}
		h.ed_dev.Enable      = false; h.chk_cst.Enable    = false; h.cb_zbdtyp_l.Enable = false; 
		h.cb_zbdtyp.Enable   = false; h.cb_zregn1.Enable  = false; h.cb_zregn2.Enable   = false; h.cb_zregn3.Enable   = false;
		h.ed_pid.Enable      = false; h.ed_tel.Enable     = false; h.med_zipcode.Enable = false; h.btn_zipcode.Enable = false;
		h.ed_addr1.Enable    = false; h.ed_addr2.Enable   = false; h.cb_inco1.Enable    = false; h.ed_zagnt.Enable    = false;
		h.cb_qtgbn.Enable    = false; h.cb_fa_byrgbn.Enable = false;

		//h.grd_detail.OnCellClick  = "";	// 2013.02.22 
		// 2013.02.22 h.grd_detail.OnCellClick  이벤트를 변경 처리
		h.grd_detail.OnCellClick = "grd_detail_OnCellClick_View";
		h.grd_detail.OnExpandEdit = "";

		for (var i=0; i<h.grd_detail.GetColCount(); i++) {
			if (i!=15 && i!=16) h.grd_detail.SetCellProp("body", i, "Edit", "none");
			else if (zprgflg=="50" || zprgflg=="61" || zprgflg=="90") h.grd_detail.SetCellProp("body", i, "Edit", "none");
		}
	} else {
		tab.main.Enable = false;		
	}
	
    //trace("!!!");
    //trace("zprgflg=>" + zprgflg);
    
    if (zprgflg > "24" ) {  // 24:견적접수반려 25:견적승인  승인이후 견적구분변경 발주처 불가
		h.cb_qtgbn.Enable = false;
		h.ed_zgnm.Enable = false;
		h.ed_addr1.Enable = false;
		h.ed_addr2.Enable = false;
		h.btn_zipcode.Enable = false;	
		//h.med_zipcode     = false;
    }
	btn_estimate.Visible = false; btn_costRequest.Visible = false; cal_qtdat.Enable = false;

	var obj0 = tab.template.div_template.grd_template0; obj0.Editable = false; obj0.OnCellPosChanged = ""; obj0.OnCellDblClick = "";
	var obj1 = tab.template.div_template.grd_template1; obj1.Editable = false; obj1.OnCellPosChanged = ""; obj1.OnCellDblClick = "";
	var obj2 = tab.template.div_template.grd_template2; obj2.Editable = false; obj2.OnCellPosChanged = ""; obj2.OnCellDblClick = "";
	var obj3 = tab.template.div_template.grd_template3; obj3.Editable = false; obj3.OnCellPosChanged = ""; obj3.OnCellDblClick = "";
	var obj4 = tab.template.div_template.grd_template4; obj4.Editable = false; obj4.OnCellPosChanged = ""; obj4.OnCellDblClick = "";
	var obj5 = tab.template.div_template.grd_template5; obj5.Editable = false; obj5.OnCellPosChanged = ""; obj5.OnCellDblClick = "";
	var obj6 = tab.template.div_template;

	obj6.cb_block.Enable     = false;
	obj6.btn_duty.Enable     = false;
	obj6.btn_depend.Enable   = false;
	obj6.btn_template.Enable = false;
	
	if (zprgflg = "24" || zprgflg = "26"){
		btn_qtser_plus.Visible = false;
	}
}

function btn_duty_OnClick(obj) {
    var sndSys = "PDM"; 
    // 2020 브랜드
    sndSys = ds_detail.GetColumn(ds_detail.currow, "SNDSYS");
    plm_ds_log.ClearData();
    ds_log.ClearData();
    if(sndSys == "PLM") {
        // PLM 연동 처리
        fn_singlePlmDuty("DUTY");
   		fn_destroyWait();
		if(plm_ds_log.getRowCount() > 0) {
			fn_openPlmLogWin("grd_logList", ds_template, plm_ds_log, "FLAG");
			return false;
		}
    } else {
		ds_cond.ClearData();
		ds_cond.AddRow();
		ds_cond.SetColumn(0, "MANDT"   , G_MANDT         );
		ds_cond.SetColumn(0, "BLOCKGBN", tab.template.div_template.cb_block.value);
		ds_cond.SetColumn(0, "ZFLG", "Q");
		
		var cond = "BLOCKGBN=" + tab.template.div_template.cb_block.value;
	
		fn_duty();
		//=========================================================================================
		//  기능ID   : UF003  
		//  수정내역 : 영업사양 종속성체크 호출 변경
		//             duty/genDuty >>> dutyN/genSpecDutySingleMo
		//=========================================================================================		
		nsfRequest("queryDuty"
				   , "dutyN/genSpecDutySingleMo"
				   , "ds_cond=ds_cond ds_template1=ds_template_add"
				   , "ds_template_add=ds_template1 ds_error=ds_error"
				   , cond
				   , "fn_afterQuery");
				   
		fn_createWait("",this);     // 처리중입니다. 메시지 처리
	}
}

function fn_duty() {
	
	var j = 0;
	var obj_template;

	ds_template_add.ClearData();

	var qtseq = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
	var nRow = 0;
	for (var a=0; a<=6; a++) {

		switch (a) {
			case 0	: obj_template = object(ds_template0.ID); break;
			case 1	: obj_template = object(ds_template1.ID); break;
			case 2	: obj_template = object(ds_template2.ID); break;
			case 3	: obj_template = object(ds_template3.ID); break;
			case 4	: obj_template = object(ds_template4.ID); break;
			case 5	: obj_template = object(ds_template5.ID); break;
			case 6	: obj_template = object(ds_template6.ID); break;
			default : break;
		}

        // 2020 브랜드 입력화 처리 PRH", "OPT_GROUP_TITLE
		for (var i=0; i< obj_template.GetRowCountNF(); i++) {
		    if( obj_template.GetColumnNF(i, "QTSEQ") == qtseq && obj_template.GetColumnNF(i, "PRH") != "OPT_GROUP_TITLE") {
				nRow = ds_template_add.AddRow();
				ds_template_add.SetColumn(nRow, "FLAG"   , Trim(obj_template.GetColumnNF(i, "FLAG"   )));
				ds_template_add.SetColumn(nRow, "MANDT"  , Trim(obj_template.GetColumnNF(i, "MANDT"  )));
				ds_template_add.SetColumn(nRow, "ATKLA"  , Trim(obj_template.GetColumnNF(i, "ATKLA"  )));
				ds_template_add.SetColumn(nRow, "PRH"    , Trim(obj_template.GetColumnNF(i, "PRH"    )));
				ds_template_add.SetColumn(nRow, "PRHNAME", Trim(obj_template.GetColumnNF(i, "PRHNAME")));
				ds_template_add.SetColumn(nRow, "PRD"    , Trim(obj_template.GetColumnNF(i, "PRD"    )));
				ds_template_add.SetColumn(nRow, "ZRMK"   , Trim(obj_template.GetColumnNF(i, "ZRMK"   )));
				ds_template_add.SetColumn(nRow, "QTNUM"  , Trim(obj_template.GetColumnNF(i, "QTNUM"  )));
				ds_template_add.SetColumn(nRow, "QTSER"  , Trim(obj_template.GetColumnNF(i, "QTSER"  )));
				ds_template_add.SetColumn(nRow, "QTSEQ"  , Trim(obj_template.GetColumnNF(i, "QTSEQ"  )));
				ds_template_add.SetColumn(nRow, "PRSEQ"  , Trim(obj_template.GetColumnNF(i, "PRSEQ"  )));
				ds_template_add.SetColumn(nRow, "ATFOR"  , Trim(obj_template.GetColumnNF(i, "ATFOR"  )));	// 2013.01.09 사양 입력 구분
				ds_template_add.SetColumn(nRow, "DISPTP"  , Trim(obj_template.GetColumnNF(i, "DISPTP"  )));
				ds_template_add.SetColumn(nRow, "MODITP"  , Trim(obj_template.GetColumnNF(i, "MODITP"  )));
		    }
		}
	}
}

// 제품군에 따른 화면 설정 (2012.12.10)
function fn_setFormByPrd(sZprdgbn, svcId, sPart)
{
	var objGrid = tab.main.div_header.grd_detail;
	
	//2016.12.22 분기기준 수정(자재ClassID -> 자재ClassID, 헤더:제품군) by mj.Shin 
	// if ( sZprdgbn == "AP_01" ) //주차
	if ( sZprdgbn == "AP_01" || sPart == "20" ) //주차
	{
		tab.main.div_header.cb_zregn3.Enable = false; // 비활성화 - 운송지역 콤보
		
		// 기본값 설정 - 최초 입력시에만 설정
		if ( svcId == "querySo" )
		{
			// 특기사항 기본값
			tab.main.div_header.div_sprmk.ed_sprmk1.Text = "건축토목 및 1차전원 인입공사 제외";
			tab.main.div_header.div_sprmk.ed_sprmk2.Text = "수용차량 대수 : 승용 ( )대,  RV ( )대";
			//tab.main.div_header.div_sprmk.ed_sprmk3.Text = "무상보수 ( ) 개월";
			
			// 수금조건 기본값
			ds_header.SetColumn(0, "ZICIF_PPRT", 30); 		// 선수금-율(%)
			ds_header.SetColumn(0, "ZICIF_PPCD", "10"); 	// 선수금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_PPCT", "계약시"); // 선수금-내용
			
			ds_header.SetColumn(0, "ZICIF_1STRT", 50); 				// 1차중도금-율(%)
			ds_header.SetColumn(0, "ZICIF_1STCD", "10"); 			// 1차중도금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_1STCT", "주자재 반입시"); // 1차중도금-내용
			
			ds_header.SetColumn(0, "ZICIF_RMRT", 20); 					// 잔금-율(%)
			ds_header.SetColumn(0, "ZICIF_RMCD", "10"); 				// 잔금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_RMCT", "사용검사필증교부시"); // 잔금-내용
		}
		
		// 디테일 그리드 헤더 텍스트 변경
		objGrid.SetCellProp("head",  5, "text", "모델명");    // 용도          -> 승입방향
		objGrid.SetCellProp("head",  6, "text", "승입방향");   // 인승,폭       -> 모델명
		objGrid.SetCellProp("head",  7, "text", "수용차종"); // 용량          -> 수용차종
		objGrid.SetCellProp("head",  8, "text", "단수");     // 속도/각도     -> 단수
		objGrid.SetCellProp("head",  9, "text", "수용대수"); // 층수/높이     -> 파렛트수
		objGrid.SetCellProp("head", 10, "text", "리프트수"); // 정지층수/속도 -> 리프트수
		objGrid.SetCellProp("head", 11, "text", "외부턴");   // DOOR개폐길이  -> 외부턴
		objGrid.SetCellProp("head", 12, "text", "기수");   // 대수  -> 기수
	}
	// else if ( sZprdgbn == "PSD_01" ) // PSD
	else if ( sZprdgbn == "PSD_01" || sPart == "40" ) // PSD
	{
		tab.main.div_header.ed_zagnt.Enable  = false; // 비활성화-대리점명
		tab.main.div_header.cb_zregn3.Enable = false; // 비활성화-운송지역
		
		// 기본값 설정 - 최초 입력시에만 설정
		if ( svcId == "querySo" )
		{
			//특기사항 기본값
			tab.main.div_header.div_sprmk.ed_sprmk1.Text = "Prototype Test 별도";
			tab.main.div_header.div_sprmk.ed_sprmk2.Text = "Spare Parts는 견적가 0.5% 이내";
			tab.main.div_header.div_sprmk.ed_sprmk3.Text = "임시동력 및 용수 등 Utility는 발주처 제공 조건(자재보관장소 포함)";
			tab.main.div_header.div_sprmk.ed_sprmk4.Text = "Operator Training은 현장교육에 중함";
			tab.main.div_header.div_sprmk.ed_sprmk5.Text = "1차측 전원공사 제외";
			
			// 수금조건 기본값
			ds_header.SetColumn(0, "ZICIF_PPRT", 30); 		// 선수금-율(%)
			ds_header.SetColumn(0, "ZICIF_PPCD", "10"); 	// 선수금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_PPCT", "계약시"); // 선수금-내용
			ds_header.SetColumn(0, "ZICIF_1STRT", 50); 				// 1차중도금-율(%)
			ds_header.SetColumn(0, "ZICIF_1STCD", "10"); 			// 1차중도금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_1STCT", "주자재 반입시"); // 1차중도금-내용
			ds_header.SetColumn(0, "ZICIF_RMRT", 20); 					// 잔금-율(%)
			ds_header.SetColumn(0, "ZICIF_RMCD", "10"); 				// 잔금-조건	=> 10-현금
			ds_header.SetColumn(0, "ZICIF_RMCT", "사용검사필증교부시"); // 잔금-내용
		}
		
		// 디테일 그리드 헤더 텍스트 변경
		objGrid.SetCellProp("head",  6, "text", "역사명");   // 인승,폭       -> 역사명
		
		// Type2, Type3 미사용
		ds_detail.SetColumn(0, "TYPE2", "");
		ds_detail.SetColumn(0, "TYPE3", "");
	}
}

// Detail의 원가,견적가가 변경되면 헤더의 합계에 반영
function fn_applayHeaderCost()
{
	tab.main.div_header.ed_sum_zcost.mask = "##0"; // 원가
	tab.main.div_header.ed_sum_zeam.mask  = "##0"; // 견적가
	tab.main.div_header.ed_sum_shang.mask = "##0.#"; // 시행율
	
	var nZnumber = round(ds_detail.caseSum("FLAG!='D'", "ZNUMBER"),0); // 대수
	var nZcost   = round(ds_detail.caseSum("FLAG!='D'", "ZCOST"  ),0); // 원가
	var nZeam    = round(ds_detail.caseSum("FLAG!='D'", "ZEAM"   ),0); // 견적가
	
	var nShang  = 0;
	if ( parseInt(nZeam) == 0 ) {
		nShang = 0;
	} else {
		nShang = parseFloat(nZcost) * 100 / parseFloat(nZeam);
		if (nShang >= 999) nShang = 999;
		else               nShang = round(nShang, 1);
	}
	
	ds_header.SetColumn(0, "ZSUM_ZNUMBER", nZnumber); // 대수
	ds_header.SetColumn(0, "ZSUM_ZCOST"  , nZcost  ); // 원가
	ds_header.SetColumn(0, "ZSUM_ZEAM"   , nZeam   ); // 견적가
	ds_header.SetColumn(0, "ZSUM_SHANG"  , nShang  ); // 시행율	
}

// 견적승인판정에서 호출되는 경우 처리 2013.01.07
// 화면의 상태를 비활성화 상태로 변경
function fn_callSes0081()
{
	div_btn.btn_save.Visible  = false;
	div_btn.btn_print.Visible = false;
	btn_qtser_plus.Visible    = false;
	btn_qtser_minus.Visible   = false;
	btn_estimate.Visible      = false;
	btn_costRequest.Visible   = false;

	cal_qtdat.Enable = false;
	tab.main.Enable  = false;

	var t = tab.main.div_header;
	t.btn_common.Visible = false;
	t.btn_popup.Visible  = false;
	t.btn_plus.Visible   = false;
	t.btn_minus.Visible  = false;

	var obj0 = tab.template.div_template.grd_template0; obj0.Editable = false; obj0.OnCellPosChanged = ""; obj0.OnCellDblClick = "";
	var obj1 = tab.template.div_template.grd_template1; obj1.Editable = false; obj1.OnCellPosChanged = ""; obj1.OnCellDblClick = "";
	var obj2 = tab.template.div_template.grd_template2; obj2.Editable = false; obj2.OnCellPosChanged = ""; obj2.OnCellDblClick = "";
	var obj3 = tab.template.div_template.grd_template3; obj3.Editable = false; obj3.OnCellPosChanged = ""; obj3.OnCellDblClick = "";
	var obj4 = tab.template.div_template.grd_template4; obj4.Editable = false; obj4.OnCellPosChanged = ""; obj4.OnCellDblClick = "";
	var obj5 = tab.template.div_template.grd_template5; obj5.Editable = false; obj5.OnCellPosChanged = ""; obj5.OnCellDblClick = "";
	var obj6 = tab.template.div_template;

	obj6.cb_block.Enable     = false;
	obj6.btn_duty.Enable     = false;
	obj6.btn_depend.Enable   = false;
	obj6.btn_template.Enable = false;
}

// 2013.01.08 설계부의 표준템플릿 사용시 종속성 Duty call
// 사양템플릿 화면에서 호출됨
function fn_stdGenDuty(vZTPLGBN, vGtype)
{
	fn_createWait("",this);     // 처리중입니다. 메시지 처리

	ds_error.ClearData();

	var cond = "strGtype=" + quote(vGtype) + " strZflg='Q'";

	fn_duty();
	// 종속성 Duty 처리 후 기존 Duty적용 fn호출됨
	//=========================================================================================
	//  기능ID   : UF003  
	//  수정내역 : 영업사양 종속성체크 호출 변경
	//             duty/dependDuty >>> dutyN/dependDutySingleMo
	//=========================================================================================			
	nsfRequest(   "queryDuty"
				, "dutyN/dependDutySingleMo"
				, "ds_template1=ds_template_add"
				, "ds_template_add=ds_template1 ds_error=ds_error"
				, cond
				, "fn_afterQuery"
			   );		
}

// 2013.01.10 사양 그리드 값에 대한 tooltip 처리
function tab_template_div_template_grd_template_OnMouseOver(obj,nPosX,nPosY,nRow,nCell,nPivotIndex)
{
	if ( nCell == 2 || nCell == 3 )
	{
		obj.ToolTipText = obj.GetCellText('Body', nRow, nCell);
	}else	{
		obj.ToolTipText = "";
	}
}

// 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
function fn_resize() {
	this.onsize = "";

	//this.window.showwindow("Maximize");
	window.top    = GetPlatformInfo("WorkArea","top");
	window.left   = GetPlatformInfo("WorkArea","left");
	window.width  = GetPlatformInfo("WorkArea","width");
	window.height = GetPlatformInfo("WorkArea","height");

	tab.width  = window.width-10;
	tab.height = window.height-80;
	
	tab.main.div_header.Width       = tab.width-4;
	tab.template.div_template.Width = tab.width-2;

	tab.main.div_header.height      = tab.height-25;
	tab.template.div_template.height= tab.height-30;
	
	tab.main.div_header.grd_detail.height = tab.height-305;
	tab.main.div_header.grd_detail.width  = tab.width-10;
	
	tab.template.div_template.grd_template0.height = tab.template.div_template.height-84;
	tab.template.div_template.grd_template1.height = tab.template.div_template.height-84;
	tab.template.div_template.grd_template2.height = tab.template.div_template.height-84;
	tab.template.div_template.grd_template3.height = tab.template.div_template.height-84;
	tab.template.div_template.grd_template4.height = tab.template.div_template.height-84;
	tab.template.div_template.grd_template5.height = tab.template.div_template.height-84;
	tab.template.div_template.grd_template6.height = tab.template.div_template.height-84;		
}

// 2013.02.22 진행상태에 따른 grd의 click이벤트 변경
function grd_detail_OnCellClick_View(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	if ( F_CLICKED_ROW != nRow ) {
		F_CLICKED_ROW = nRow;
		fn_template("C", nRow);
	}
}

// 2013.03.22 종속성 추가
function fn_dependDuty(obj)
{
    var sndSys = "PDM"; 
	fn_createWait("",this);     // 처리중입니다. 메시지 처리

    // 2020 브랜드
    sndSys = ds_detail.GetColumn(ds_detail.currow, "SNDSYS");

    plm_ds_log.ClearData();
	ds_error.ClearData();
    if(sndSys == "PLM") {
        // PLM 연동 처리
        fn_singlePlmDuty("DEPENDENCY");
        fn_destroyWait();
		if(plm_ds_log.getRowCount() > 0) {
			fn_openPlmLogWin("grd_logList", ds_template, plm_ds_log, "FLAG");
			return false;
		}
    } else {
		var vGtype = "";
		switch(ds_detail.GetColumn(ds_detail.currow, "ZPRDGBN"))	{
			case "ELV_01" : vGtype = "ZEL1";
							break;
			case "ESC_01" : vGtype = "ZES1";
							break;
			case "MW_01"  : vGtype = "ZMW1";
							break;
			default       : break;
		}
	
		var cond = "strGtype=" + quote(vGtype) + " strZflg='Q'";
	
		fn_duty();
	
		// 종속성 Duty 처리 후 기존 Duty적용 fn호출됨
		//=========================================================================================
		//  기능ID   : UF003  
		//  수정내역 : 영업사양 종속성체크 호출 변경
		//             duty/dependDuty >>> dutyN/dependDutySingleMo
		//=========================================================================================			
		http.Sync = true;   			// 2017.06.14 동기방식 호출 Async -> Sync by mj.Shin 	
		nsfRequest(   "queryDuty"
					, "dutyN/dependDutySingleMo"
					, "ds_template1=ds_template_add"
					, "ds_template_add=ds_template1 ds_error=ds_error"
					, cond
					, "fn_afterQuery"
				   );
		http.Sync = false;   
	}
}

function fn_dependDuty2(obj)
{
	fn_createWait("",this);     // 처리중입니다. 메시지 처리

	ds_error.ClearData();

    var sndSys = "PDM"; 
    sndSys = ds_detail.GetColumn(ds_detail.currow, "SNDSYS");
    var brndcd_left3  = left(trim(ds_detail.GetColumn(ds_detail.currow,"BRNDCD")),3);

	var ethru = "";
	var arfq = "";
	var arf = "";
	var vGtype = "";
	//var zprdgbn = fn_getClassCdFromMatnr(ds_detail.GetColumn(ds_detail.currow, "MATNR"));
	var zprdgbn = "ELV_01";
	var zuse    = trim(ds_detail.GetColumn(ds_detail.currow,"ZUSE"));
	var gtype   = trim(ds_detail.GetColumn(ds_detail.currow,"GTYPE"));
	var type1   = trim(ds_detail.GetColumn(ds_detail.currow,"TYPE1"));
	
    if ( obj.id == "btn_depend2" ){
		for(var i=0;i<ds_template1.GetRowCount();i++){ // EL_ARFQ A017, EL_ARF A018 특성 값 찾기 - 오서택 - 2021.10.28.
			prh = ds_template1.GetColumn(i,"PRH");
			prd = ds_template1.GetColumn(i,"PRD");
			
			if(PRH == "EL_ARFQ"){
				arfq = prd;
			}
			else if(PRH == "EL_ARF"){
				arf = prd;
			}			
		}
		
		for(var i=0;i<ds_template5.GetRowCount();i++){ // EL_ETHRU E006 특성 값 찾기 - 오서택 - 2021.10.28.
			prh = ds_template5.GetColumn(i,"PRH");
			prd = ds_template5.GetColumn(i,"PRD");
			
			if(PRH == "EL_ETHRU"){
				ethru = prd;
			}	
		}
		
		// 좌우 공백 제거 및 빈 값은 NULL로
		arfq = trim(arfq);
		arf = trim(arf);
		ethru = trim(ethru);
		
		
		switch(zprdgbn) {
			case "ELV_01" : //vGtype = "ZEL2";
							//break;
							if ( (zuse == "BD" || zuse == "BH" || zuse == "EB") && (gtype == "STVF" || gtype == "WBSS") && //병원용 적용 20151215
			                      (type1 == "20" || type1 == "24" || type1 =="26")) { //병원용일 경우 
			                    vGtype = "ZEL4";
			                } 
			                else if(arfq != NULL && arf != NULL && ethru == "Y") { // LAD 관통형 AutoLayout - 오서택 - 2021.10.28.
								vGtype = "ZEL7";
			                }		    
			                else {
			                    if(brndcd_left3 == "NEX") {
			                        vGtype = "XEL2";
			                    } else {
								    vGtype = "ZEL2";
			                    }
			                }
			                break;  
			case "ESC_01" : vGtype = "ZES2";
							break;
			case "MW_01"  : vGtype = "ZMW2";
							break;
			default       : break;
		}
		
		if(sndSys == "PLM") {
            fn_destroyWait();
		    gfn_openMsgWin("해당 브랜드의 오토레이아웃 산출은 DUTY CALL에 병합되었습니다. DUTY CALL로 실행해주세요.", "", "A", "AUTO LAYOUT");
		    return;
		}
	}else {
		switch(ds_detail.GetColumn(ds_detail.currow, "ZPRDGBN"))	{
			case "ELV_01" : //vGtype = "ZEL3";
							//break;
							vGtype = "ZEL5";                         //병원용 적용 20151215
							break; 
			case "ESC_01" : vGtype = "ZES3";
							break;
			case "MW_01"  : vGtype = "ZMW3";
							break;
			default       : break;
		}
	}
	
	
	var cond = "strGtype=" + quote(vGtype) + " strZflg='Q'";

	fn_duty();

	// 종속성 Duty 처리 후 기존 Duty적용 fn호출됨
	//=========================================================================================
	//  기능ID   : UF003  
	//  수정내역 : 영업사양 종속성체크 호출 변경
	//             duty/dependDuty >>> dutyN/dependDutySingleMo
	//=========================================================================================			
	nsfRequest(   "queryDuty"
				, "dutyN/dependDutySingleMo"
				, "ds_template1=ds_template_add"
				, "ds_template_add=ds_template1 ds_error=ds_error"
				, cond
				, "fn_afterQuery"
			   );		
}

function tab_main_div_header_rd_jgbn_OnClick(obj)
{
	if (tab.main.div_header.rd_jgbn.value == "A"){
		var arg  = "fa_qtnum="+quote(ds_header.GetColumn(0,"QTNUM"));
		    arg += "fs_qtser="+quote(ds_header.GetColumn(0,"QTSER"));
				        
		if ( ds_header.GetColumn(0,"QTNUM") != null ) {		        
			gfn_openPopUpUrlHdel("SES::Ses0052.xml", true, arg);
		} else {
			gfn_showAlert("CW10025", "견적번호 생성 후 상세 정보 입력 바랍니다.");
		}
	}
}

// 2015.05.08  레이아웃 자동생성   김선호 

function btn_dwg_OnClick(obj)   //post 방식 lad 포탈 호출 20150416 
{
    // 리모델링 추가
	var findRow = ds_template6.FindRow("PRH", "EL_DREUSE");
	var isRadYsno   = false;
	var elDreUse = "N";
	if(findRow > -1 ) {
	    elDreUse = ds_template6.getColumn(findRow, "PRD");
	    if(elDreUse == "Y" && Substr(ed_qtnum.text, 0,1) == "N") {
	        // 리모델링 자동도면 대상여부 체크
	        isRadYsno = fn_isRadYsno();
	        if(!isRadYsno) {
                gfn_openMsgWin("리모델링 자동도면 생성 대상이 아닙니다.", "", "A", "알림");
                return;
	        }

			if(SAVEYSNO == "N") {
				gfn_openMsgWin("견적사양에 반영된 실측값 저장 후 표준도면생성을 요청해 주십시요", "", "A", "알림");
				return;
			}
	    } 
	}

    if(isRadYsno) {
        // 리모델링 자동도면 대상 조건 추가 필요
        if(FLOORYSNO == "Y" && LAYOUTYSNO == "Y" && APPLYYSNO == "Y") {
			// 리모델링 실측적용 상태값을 체크해 메시지 출력
			// 제한 조건을 수행한다.
			fn_make_ds_char();		
			http.Sync = true;  
			nsfRequest("checkRestriction", "ses0031n/restrictionCondi"
				, "ds_char=ds_char" 
				, "ds_error=ds_error ds_log=ds_log"
				, "F_CHK_QTSEQ=" + quote(F_CHK_QTSEQ) + " ONE='Y'"
				, "fn_afterQuery");
			http.Sync = false; 
			
			if (ds_error.GetRowCount() > 0 || ds_log.GetRowCount() > 0) {
				return;
			}

			// RAD 표준도면 생성 URL을 호출한다.
			var urlg = "qt_num="+ed_qtnum.Text+"&qt_serial="+ed_ser.Text+"&qt_seq="+ds_detail.GetColumn(ds_detail.currow, "QTSEQ")+"&user_id="+G_USER_ID+"&user_vbcd="+G_SAP_USER_VBCD+"&user_vgcd="+G_SAP_USER_VGCD;
			var URL;
			// 전체 구성에서 처리
			URL = gfn_get_lad_baseurl("R") + "IF_R_0001.html?" + urlg;
			ExecBrowser(URL);

			// 도면생성 요청 플래그 표시
			http.Sync = true;
			nsfRequest(	  "updateDwgFlag"
						, "ses0031n/updateDwgFlag"
						, "ds_header=ds_header"
						, "ds_header=ds_header ds_error=ds_error"
						, ""
						, "fn_afterSave" );	
			http.Sync = false;
        } else {
			gfn_openMsgWin("표준도면생성을 위해 리모델링실측적용을 실행하십시요.", "", "A", "알림");
            return;
        }
    } else {
	//  -----< 2017.06.26 동기방식 호출 Async -> Sync, 표준도면 생성 시 제한조건 체크 후 진행 by mj.Shin Start 
		var sndSys = "PDM"; 
		sndSys = ds_detail.GetColumn(ds_detail.currow, "SNDSYS");
		if(sndSys == "PLM") {
			// PLM 연동 처리
			plm_ds_log.ClearData();
			fn_singlePlmDuty("CONSTRAINT");
			if(plm_ds_log.getRowCount() > 0) {
			    fn_destroyWait();
			    fn_openPlmLogWin("grd_logList", ds_template, plm_ds_log, "FLAG");
				return;
			}
		} else {
			fn_make_ds_char();		
			http.Sync = true;  
			nsfRequest("checkRestriction", "ses0031n/restrictionCondi"
				, "ds_char=ds_char" 
				, "ds_error=ds_error ds_log=ds_log"
				, "F_CHK_QTSEQ=" + quote(F_CHK_QTSEQ) + " ONE='Y'"
				, "fn_afterQuery");
			http.Sync = false; 
			
			if (ds_error.GetRowCount() > 0 || ds_log.GetRowCount() > 0) {
				return;
			}
		}
	//  -----> 2017.06.26 동기방식 호출 Async -> Sync, 표준도면 생성 시 제한조건 체크 후 진행 by mj.Shin End 
		
		qtseq  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");	
		var urlg = "qt_num="+ed_qtnum.Text+"&qt_serial="+ed_ser.Text+"&qt_seq="+qtseq+"&user_id="+G_USER_ID;
		var URL;
		var brndcd_left3  = left(trim(ds_detail.GetColumn(ds_detail.currow,"BRNDCD")),3);
		if( brndcd_left3 == "NEX" ) {
			URL = gfn_get_lad_baseurl("NEX") + "IF_I_0001.html?" + urlg;
		} else {
			URL = gfn_get_lad_baseurl() + "IF_C_0001.html?" + urlg;
		}
		ExecBrowser(URL);
		
		http.Sync = true;   			// 2017.06.14 동기방식 호출 Async -> Sync by mj.Shin 
		nsfRequest(	  "updateDwgFlag"
					, "ses0031n/updateDwgFlag"
					, "ds_header=ds_header"
					, "ds_header=ds_header ds_error=ds_error"
					, ""
					, "fn_afterSave" );	
		http.Sync = false;
    }
}

function btn_pdf_OnClick(obj)   //post 방식 lad 포탈 호출 20150416
{

	qtseq  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");	
	var urlg = "qt_num="+ed_qtnum.Text+"&qt_serial="+ed_ser.Text+"&qt_seq="+qtseq+"&user_id="+G_USER_ID;
	var URL = gfn_get_lad_baseurl() + "IF_C_0012.html" + "?" + urlg;
	ExecBrowser(URL);
}

function btn_moveDwg_OnClick(obj)   //post 방식 lad 포탈 호출 20150416 
{
    // 리모델링 추가
	var findRow = ds_template6.FindRow("PRH", "EL_DREUSE");
	var isRadYsno   = false;
	var elDreUse = "N";
	if(findRow > -1 ) {
	    elDreUse = ds_template6.getColumn(findRow, "PRD");
	    if(elDreUse == "Y" && Substr(ed_qtnum.text, 0,1) == "N") {
	        // 리모델링 자동도면 대상여부 체크
	        isRadYsno = fn_isRadYsno();
	        // 리모델링 자동도면 대상여부 체크
	        isRadYsno = fn_isRadYsno();
	        if(!isRadYsno) {
                gfn_openMsgWin("리모델링 자동도면 생성 대상이 아닙니다.", "", "A", "알림");
                return;
	        }
	    }
	}

    if(isRadYsno) {
        // 리모델링 자동도면 대상 조건 추가 필요
		qtseq  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");	
		var urlg = "no="+ed_qtnum.Text+"&seq="+ed_ser.Text+"&ser="+qtseq+"&gubun=Q&user_id="+G_USER_ID;   
		var URL = gfn_get_lad_baseurl("R") + "dwgRADDet.html" + "?" + urlg;
		// 리모델링 자동도면 시스템 호출
		ExecBrowser(URL);
    } else {
		qtseq  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");	
		var urlg = "no="+ed_qtnum.Text+"&seq="+ed_ser.Text+"&ser="+qtseq+"&gubun=Q&user_id="+G_USER_ID;  
		var URL = "";
		var brndcd_left3  = left(trim(ds_detail.GetColumn(ds_detail.currow,"BRNDCD")),3);
		if( brndcd_left3 == "NEX" ) {
		    URL = gfn_get_lad_baseurl("NEX") + "IF_I_dwgDet.html?" + urlg;
		} else {
		    URL = gfn_get_lad_baseurl() + "dwgDet.html?" + urlg;
		}
		ExecBrowser(URL);
    }
}

//=========================================================================================
//  함수기능 : 영업사양 찾기
//  파라미터 : 
//  리턴값   : 
//  기능ID   : UF004
//  개선내역 :
//  HISTORY  : 2016.02.15 최초 코딩 hsi
//=========================================================================================
function tab_template_div_template_ed_temp_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam) {
	if(nChar == "13") {
		var grdArry = ["tab.template.div_template.grd_template1", "tab.template.div_template.grd_template2",
		               "tab.template.div_template.grd_template3", "tab.template.div_template.grd_template4",
		               "tab.template.div_template.grd_template5", "tab.template.div_template.grd_template0",
		               "tab.template.div_template.grd_template6"];
		               
		if(length(obj.text) < 1) {
			for(var i = 0; i < grdArry.length; i++) {
				eval(grdArry[i]).Redraw = false;
				eval(grdArry[i]).SetCellProp("body", 1, "bkColor", "");
				eval(grdArry[i]).SetCellProp("body", 1, "bkColor2", "User Color 22");
				eval(grdArry[i]).SetCellProp("body", 2, "Color", "");
				eval(grdArry[i]).Redraw = true;
			}
		} else {
			for(var i = 0; i < grdArry.length; i++) {
				eval(grdArry[i]).Redraw = false;
				eval(grdArry[i]).SetCellProp("body", 1, "bkColor", "expr:iif(IndexOf(PRHNAME, tab.template.div_template.ed_temp.Text) < 0, '', 'red')");
				eval(grdArry[i]).SetCellProp("body", 1, "bkColor2", "expr:iif(IndexOf(PRHNAME, tab.template.div_template.ed_temp.Text) < 0, 'User Color 22', 'red')");
				eval(grdArry[i]).SetCellProp("body", 2, "color", "expr:iif(IndexOf(PRHNAME, tab.template.div_template.ed_temp.Text) < 0, '', 'red')");
				eval(grdArry[i]).Redraw = true;
			}
		}
	}
}

//=========================================================================================
//  함수기능 : 견적 복사
//  파라미터 : 
//  리턴값   : 
//  기능ID   : UF005
//  개선내역 :
//  HISTORY  : 2016.02.15 최초 코딩 hsi
//=========================================================================================
function tab_main_div_header_btn_copy_OnClick(obj)
{
	var arg  = "ParentTitle="+quote("")         // 타이틀지정		
	         + " fa_ser="+quote(ed_ser.Text);
	         + " fa_seq="+quote(ed_seq.Text);
	
	gfn_openPopupUrl("SES::Ses0031A.xml", true, arg);	
}

//=========================================================================================
//  함수기능 : 그리드 변경 반영여부
//  파라미터 : 
//  리턴값   : 
//  기능ID   : 
//  개선내역 : 
//  HISTORY  : 2016.02.15 최초 코딩 hsi
//=========================================================================================
function fn_grdRedraw(val) {
	var grdArry = ["tab.template.div_template.grd_template1", "tab.template.div_template.grd_template2",
				   "tab.template.div_template.grd_template3", "tab.template.div_template.grd_template4",
				   "tab.template.div_template.grd_template5", "tab.template.div_template.grd_template0",
				   "tab.template.div_template.grd_template6"];
					
	for(var i = 0; i < grdArry.length; i++) {
		eval(grdArry[i]).Redraw = val;
	}
}

//-----< 2016.11.09 Grid내 Cell이동 Enter인 경우 grd_detail_OnCellClick 호출 by mj.Shin 	Start 	
function tab_main_div_header_grd_detail_OnEnterEdit(obj,nRow,nCell,nPivotIndex)
{
	grd_detail_OnCellClick(obj, nRow, nCell);
}

function tab_main_div_header_grd_detail_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex)
{
	if (nOldRow != nRow)	{
		grd_detail_OnCellClick(obj, nRow, nCell);
	}
}
//----->2016.11.09 Grid내 Cell이동 Enter인 경우 grd_detail_OnCellClick 호출 by mj.Shin 	End 

//2017.06.26 ds_char 생성 함수 공통화 by mj.Shin  
function fn_make_ds_char()   
{
	var qtnum   = "";
	var qtser   = "";
	var qtseq   = "";
	var atkla   = "";
	var prh     = "";
	var prhname = "";
	var prd     = "";
	var qtdat   = Substr(ds_header.GetColumn(0, "QTDAT"), 0, 4);
	var poper   = "0" + Substr(ds_header.GetColumn(0, "QTDAT"), 4, 2);
	var matnr   = "";
	var vkbur   = ds_header.GetColumn(0, "VKBUR");
	var vkgrp   = ds_header.GetColumn(0, "VKGRP");
	var auart   = ds_header.GetColumn(0, "AUART");
	var uch_duty = ds_header.GetColumn(0, "UCH_DUTY");
	var searchRow;
	var callBackId, strParam;

	qtseq  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");	
	
	ds_template.UnFilter();
	ds_template.Filter("QTSEQ ==" + quote(ds_detail.GetColumn(ds_detail.currow, "QTSEQ")));
	
	ds_char.ClearData();
	
	for (var i = 0; i < ds_template.GetRowCount(); i++) {
		qtnum   = ds_template.GetColumn(i, "QTNUM"  );
		qtser   = ds_template.GetColumn(i, "QTSER"  );
		qtseq   = ds_template.GetColumn(i, "QTSEQ"  );
		atkla   = ds_template.GetColumn(i, "ATKLA"  );
		prh     = ds_template.GetColumn(i, "PRH"    );
		prhname = ds_template.GetColumn(i, "PRHNAME");
		prd     = ds_template.GetColumn(i, "PRD"    );
		
		searchRow = ds_detail.searchRow("QTSEQ ==" + quote(qtseq));
		matnr     = ds_detail.getcolumn(searchRow, "MATNR");

		if (qtnum   == null) qtnum   = "";
		if (qtser   == null) qtser   = "";
		if (qtseq   == null) qtseq   = "";
		if (atkla   == null) atkla   = "";
		if (prh     == null) prh     = "";
		if (prhname == null) prhname = "";
		if (prd     == null) prd     = "";
		
		ds_char.AddRow();
		ds_char.SetColumn(i, "QTNUM", qtnum  ); // 견적번호
		ds_char.SetColumn(i, "QTSER", qtser  ); // 견적차수
		ds_char.SetColumn(i, "QTSEQ", qtseq  ); // 견적일련번호
		ds_char.SetColumn(i, "PSPID", ""     ); // 프로젝트 정의
		ds_char.SetColumn(i, "POSID", ""     ); // 작업 분석 구조 요소(WBS 요소)
		ds_char.SetColumn(i, "GJAHR", qtdat  );
		ds_char.SetColumn(i, "POPER", poper  );
		ds_char.SetColumn(i, "MATNR", matnr  );
		ds_char.SetColumn(i, "VKBUR", vkbur  );
		ds_char.SetColumn(i, "VKGRP", vkgrp  );
		ds_char.SetColumn(i, "AUART", auart  );
		ds_char.SetColumn(i, "KTGRM", ""     ); // 해당자재 계정지정그룹 
		ds_char.SetColumn(i, "NETWR", ""     ); // 문서통화에서의 오더품목의 정가
		ds_char.SetColumn(i, "REGIO", ""     ); // 광역지역
		ds_char.SetColumn(i, "LZONE", ""     ); // 운송지역
		ds_char.SetColumn(i, "ATKLA", atkla  ); // 특성그룹
		ds_char.SetColumn(i, "ATNAM", prh    ); // 특성코드
		ds_char.SetColumn(i, "ATBEZ", prhname); // 특성이름
		ds_char.SetColumn(i, "VALUE", prd    ); // 특성값
		ds_char.SetColumn(i, "ATWTB", ""     ); // 특성값내역
		ds_char.SetColumn(i, "MESSG", ""     ); // 메시지
		ds_char.SetColumn(i, "UCH_DUTY", uch_duty);
	}

//	trace("F_CHK_QTSEQ : " + F_CHK_QTSEQ);	
	
}

/******************************************************
*  WebService 처리시 발생한 에러 정보 표시
* @param  grdObj 처리 그리드 객체
* @param  dsObj 데이터셋 객체
* @param  errDsObj 에러 정보 데이터셋 객체
* @param  flagColNm 플래그 컬럼명
* @return
******************************************************/
function fn_openLogWin(grdObj, dsObj, logDsObj, flagColNm) {
	var grdNm = "";
	
	if ( type( grdObj ) == "STRING") {
		grdNm = grdObj;
	} else {
		grdNm = grdObj.id;
	}
	
	var dsNm = dsObj.id;
	var logDsNm = logDsObj.id;

	var arg = "fa_flagNm=" + quote( flagColNm);
		arg += " fa_grdName=" + quote(grdNm);
		arg += " fa_dsName=" + quote( dsNm);
		arg += " fa_logDsName=" + quote( logDsNm );
	//alert("gtn 넘어가는 값 : " + arg );
	gfn_openPopupUrl("COM::Com0270.xml", true, arg);
}

/****************************************************************
* 브랜드 변경 시 from template
* input Data set ds0 ~ ds5
* 데이터셑 ID:ds_template_org
* nRow: ds_detail 선택 로우
* ds_detail.SetColumn(ds_detail.row, "BRNDSEQ", arr[0]);  // 브랜드차수
* ds_detail.SetColumn(ds_detail.row, "BRNDCD", arr[1]);   // 브랜드코드
* ds_detail.SetColumn(ds_detail.row, "BRNDNM", arr[2]);   // 브랜드명
* ds_detail.SetColumn(ds_detail.row, "GTYPE", arr[3]);    // 기종
***************************************************************/
function fn_chanageBrand(nRow, arr, orgBrndcd, chgBrndcd) {
    var flag  = ds_detail.GetColumn(nRow, "FLAG");
    var qtnum = ds_detail.GetColumn(nRow, "QTNUM");
    var qtser = ds_detail.GetColumn(nRow, "QTSER");
    var qtseq = ds_detail.GetColumn(nRow, "QTSEQ");
    var zprdgbn = ds_detail.GetColumn(nRow, "ZPRDGBN");
	var newRow = 0;
	var ds_List     = [ds_template0, ds_template1, ds_template2, ds_template3, ds_template4, ds_template5, ds_template6];
	var ds_UserList = [ds_user0, ds_user1, ds_user2, ds_user3, ds_user4, ds_user5, ds_user6];

    // 변경처리를 위한 데이터 삭제
    ds_template.UnFilter();
	for (var i = ds_template.GetRowCountNF()-1; i >=0; i--) {
		if (qtseq == ds_template.GetColumnNF(i, "QTSEQ") )	{
			// 추가 후 삭제 시 삭제
			ds_template.DeleteRow(i);
		}
	}

    // 입력 데이터 그리드 삭제 처리
	ds_template_org.ClearData();
	for ( var iObj = 0; iObj < Length(ds_List); iObj++) {
		for ( var b = ds_List[iObj].GetRowCountNF()-1 ; b >= 0 ; b-- ) {
		    //trace(b+" : QTSEQ:"+ds_List[iObj].GetColumnNF(i, "QTSEQ"));
			if (qtseq == ds_List[iObj].GetColumnNF(b, "QTSEQ"))	{
				newRow = ds_template_org.AddRow();
				ds_template_org.SetColumn(newRow, "QTSEQ", ds_List[iObj].GetColumnNF(b, "QTSEQ"));
				ds_template_org.SetColumn(newRow, "PRH", ds_List[iObj].GetColumnNF(b, "PRH"));
				ds_template_org.SetColumn(newRow, "PRD", ds_List[iObj].GetColumnNF(b, "PRD"));
				ds_template_org.SetColumn(newRow, "DISPTP", ds_List[iObj].GetColumnNF(b, "DISPTP"));
				ds_template_org.SetColumn(newRow, "MODITP", ds_List[iObj].GetColumnNF(b, "MODITP"));
				ds_List[iObj].DeleteRow(b);
			}
		}
	}

    // user data set도 삭제 처리해 줘야 한다.
    for ( var iObj = 0; iObj < Length(ds_UserList); iObj++) {
		for ( var b = ds_UserList[iObj].GetRowCountNF()-1 ; b >= 0 ; b-- ) {
			if (qtseq == ds_UserList[iObj].GetColumnNF(b, "QTSEQ"))	{
				ds_UserList[iObj].DeleteRow(b);
			}
		}
	}

	ds_cond.ClearData();
	ds_cond.AddRow();
	ds_cond.SetColumn(0, "MANDT" , G_MANDT);
	ds_cond.SetColumn(0, "QTNUM" , qtnum);
	ds_cond.SetColumn(0, "QTSER" , qtser);
	ds_cond.SetColumn(0, "QTSEQ" , qtseq);
	ds_cond.SetColumn(0, "MCLASS", zprdgbn);
	ds_cond.SetColumn(0, "BRNDSEQ" , arr[0]);
	ds_cond.SetColumn(0, "BRNDCD" , arr[1]);

	http.sync = true;
	ds_error.ClearData();
	ds_template_des.ClearData();
	nsfRequest("brandTemplateAdd"
				   , "ses0031n/searchAddTemplate"
				   , "ds_detail=ds_cond ds_template=ds_template_des"
				   , "ds_template_des=ds_template ds_error=ds_error"
				   , ""
				   , "fn_chanageBrandQuery");
	http.sync = false;

	if(ds_error.rowcount() > 0) {
		gfn_showMsg("CE00001");
	} else {
	    // 백업 받은 자료로 기존 자료 값을 입력한다.
	    // 공통 적용 내용 화면 클릭 스 알아서 변경 되게 한다.
	    var prh = "";
	    var prd = "";
	    var searchRow = 0;
	    var orgPrd = "";
	    var disptp;
	    var orgDisptp;
	    var orgMditp;
	    var moditp;
	    var iRow = 0;
	    var findRow = 0;
        var orgCnt;
        var isCopy = false;
	    // 저장시 브랜드변경전 해당 호기에 대한 브랜드 삭제 데이터셑을 생성한다.
	    
	    findRow = ds_brnd_del.FindRow("QTSEQ", qtseq);
	    if(findRow < 0) {
			iRow = ds_brnd_del.AddRow();
			ds_brnd_del.SetColumn(iRow, "MANDT" , G_MANDT);
			ds_brnd_del.SetColumn(iRow, "QTNUM" , qtnum);
			ds_brnd_del.SetColumn(iRow, "QTSER" , qtser);
			ds_brnd_del.SetColumn(iRow, "QTSEQ" , qtseq);
	    }

        // 해당 브랜드에 대한 영업특성값을 조회한다.
        fn_sayangPrdList(arr[0], arr[1]);

		// 사양값을 복사한다.
		for (var i = 0; i < ds_template_des.GetRowCount(); i++) {
			prh = ds_template_des.GetColumn(i, "PRH");
			prd = ds_template_des.GetColumn(i, "PRD");
			disptp = ds_template_des.GetColumn(i, "DISPTP");
			moditp = ds_template_des.GetColumn(i, "MODITP");

			newRow = ds_template.AddRow();
			ds_template.CopyRow(newRow, ds_template_des, i);

			// 백업된 데이터에 입력값이 있으면 넣어 준다.
			// 복사 시 DISPTP(출력여붜 X값이 아니면 복사 대상에서 제외
			// 복사 대상: 복사대상이 수정가능, 공통사양이 아니고, 복사본/복사대상 모두 화면 출력 대상인 경우에 대해서만 복사를 한다.
			// 복사 시 ㅣ공통 대상 항목은 제외하고 복사를 수행한다.
			if( prh != 'EL_ABRAND' && prh !=  'EL_ATYP' &&  prh != 'EL_AUSE' && prh != 'EL_AMAN' && prh != 'EL_ACAPA' && prh != 'EL_AOPEN' &&
				prh != 'EL_ASPD' && prh != 'EL_AFQ' && prh != 'EL_ASTQ' && substr(prh,0,3) != 'CO_') {
				searchRow = ds_template_org.SearchRow("PRH =="+quote(prh));
				if(searchRow > -1) {
					orgPrd = ds_template_org.GetColumn(searchRow, "PRD");
					orgDisptp = ds_template_org.GetColumn(searchRow, "DISPTP");
					orgMditp  = ds_template_org.GetColumn(searchRow, "MODITP");
					orgCnt  = ds_template_org.GetColumn(searchRow, "CNT");
					if(orgCnt == "0") {
					    isCopy = true;
					} else {
					    isCopy = fn_isBrndPrd(arr[0], arr[1], prh, orgPrd);
					}
					if(moditp == "X" && disptp == "X" && orgDisptp == "X" && orgMditp == "X" && isCopy ) {
						// 입력된 영업사양값을 변경된 브랜드 사양값에 입력 처리
						ds_template.SetColumn(newRow, "PRD", orgPrd);
					}
				}
			}
		}

	    // 입력된 값을 선 반영한다.
        // 해당값을 반영하면 ds_template1, ds_template 영업사양 특성값이 같이 변경된다.
        ds_detail.SetColumn(nRow, "BRNDSEQ", arr[0]);  // 브랜드차수
        ds_detail.SetColumn(nRow, "BRNDCD", arr[1]);   // 브랜드코드
        ds_detail.SetColumn(nRow, "BRNDNM", arr[2]);   // 브랜드명
        ds_detail.SetColumn(nRow, "GTYPE", arr[3]);    // 기종
        ds_detail.SetColumn(nRow, "SNDSYS", arr[4]);   // 시스템전송구분
        
        // 단가, 원가, 견적가를 초기화 한다.
        ds_detail.SetColumn(nRow, "ZUAM", 0);    // 단가
        ds_detail.SetColumn(nRow, "ZCOST", 0);   // 원가
        ds_detail.SetColumn(nRow, "ZEAM", 0);   // 견적가        

	    // 값을 셑팅한다.
        // 2020 박수근 추가
        initCreateOptGroup(ds_template);
		
        // 복사가 완료 되고 나서 공통 변경사항을 적용하기 위해서 해당 메소드를 강제로 호출한다.
		fn_template("A", ds_detail.currow);
	}
}

/****************************************************************
* 브랜드 변경 시 from template 조회 결과
***************************************************************/
function fn_chanageBrandQuery(svcId, errCode, errMsg) {
}

// 2020 브랜드 사용복사 후 공통정보 처리
function fn_afterItemCopy() {
	var ds_h = ds_header;
	fn_aspc("", "", "", 0, 0, 0, 0, ds_h);					// 시방서 처리
	fn_bcpi("", "", "", "", "", "", "", 0, 0, 0, 0, ds_h);  // LED 총 수량
	fn_bclcd("", "", "", "", 0, 0, 0, 0, ds_h); 			// LCD 총 수량
	fn_deph("", "", "", 0, 0, 0, 0, ds_h);					// 비상통화장치 DI-PBX 적용대수
	fn_ddvr("", "", "", 0, 0, 0, 0, ds_h);					// DVR 적용대수
	//fn_drvhq("", "", "", 0, 0, 0, 0, ds_h);					// 행선층 예약시스템 적용대수
	fn_dsv1("", "", "", 0, 0, 0, 0, ds_h);					// 감시반1
	fn_dsv2("", "", "", 0, 0, 0, 0, ds_h);					// 감시반2
	fn_aspd();												// 고속현장 2013.04.03
}

/****************************************************************
* PLM  단일 호기 Duty 실행
* opt1: DUTY CALL : "DUTY", 종속성 : "DEPENDENCY", 제한조건 : "CONSTRAINT"
***************************************************************/
function fn_singlePlmDuty(opt1) {
    var sysId = G_SYSID;
    var callSys = 'S';
    var zflag = "Q";
    var qtnum = ds_detail.GetColumn(ds_detail.currow, "QTNUM");
    var qtser = ds_detail.GetColumn(ds_detail.currow, "QTSER");
    var qtseq = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
    var auart= ds_header.GetColumn(0, "AUART");
   	var ds_List = [ds_template1, ds_template2, ds_template3, ds_template4, ds_template5, ds_template6, ds_template0];
    var startIdx = 0;
    var endIdx   = 0;
    var ds;

    plm_ds_header.ClearData();
    plm_ds_template.ClearData();
    for (var i=0; i < Length(ds_List); i++) {
        ds = ds_List[i];
        for(var j=0; j < ds.GetRowCountNF(); j++) {
            if(qtseq == ds.GetColumnNF(j, "QTSEQ")) {
                endIdx = plm_ds_template.AddRow();
                plm_ds_template.SetColumn(endIdx, "IDX", ds.ID+":"+j);
                plm_ds_template.SetColumn(endIdx, "PRH", ds.GetColumnNF(j, "PRH"));
                plm_ds_template.SetColumn(endIdx, "PRD", ds.GetColumnNF(j, "PRD"));
            }
        }
    }

    // 헤더 정보를 생성한다.
    plm_ds_header.AddRow();
    plm_ds_header.SetColumn(0, "SYSID", sysId);
    plm_ds_header.SetColumn(0, "CALLSYS", callSys);
    plm_ds_header.SetColumn(0, "ZFLAG", zflag);
    plm_ds_header.SetColumn(0, "QTNUM", qtnum);
    plm_ds_header.SetColumn(0, "QTSER", qtser);
    plm_ds_header.SetColumn(0, "QTSEQ", qtseq);
    plm_ds_header.SetColumn(0, "HOGI", "");
    plm_ds_header.SetColumn(0, "AUART", auart);
    plm_ds_header.SetColumn(0, "START_IDX", startIdx);
    plm_ds_header.SetColumn(0, "END_IDX", endIdx);
    plm_ds_header.SetColumn(0, "USER_ID", G_USER_ID);
    plm_ds_header.SetColumn(0, "LAND", "KR");

    // PLM 연동 처리를 수행한다.
    F_OPT1 = opt1;
    if(opt1 == 'FLOOR') {
        callPlmWebService("Q", opt1, "MF", plm_ds_header, plm_ds_template, "fn_plmFloorAfter");
		if(G_STATUS == "") {
			gfn_openMsgWin("PLM 시스템과 연결이 안됩니다. 시스템 관리자에게 문의하십시요, ", "A", "PLM 연동");
		}    
    } else {
        callPlmWebService("Q", opt1, "MF", plm_ds_header, plm_ds_template, "fn_plmDutyAfter");
		if(G_STATUS == "") {
			gfn_openMsgWin("PLM 시스템과 연결이 안됩니다. 시스템 관리자에게 문의하십시요, ", "A", "PLM 연동");
		}    
    }
}

/****************************************************************
* PLM  멀티 호기 Duty 실행
* opt1: DUTY CALL : "DUTY", 종속성 : "DEPENDENCY", 제한조건 : "CONSTRAINT"
***************************************************************/
function fn_MultiPlmDuty(opt1) {
    var sysId = G_SYSID;
    var callSys = 'S';
    var zflag = "Q";
    var qtnum;
    var qtser;
    var qtseq;
    var auart= ds_header.GetColumn(0, "AUART");
   	var ds_List = [ds_template1, ds_template2, ds_template3, ds_template4, ds_template5, ds_template6, ds_template0];
    var startIdx = 0;
    var endIdx   = 0;
    var ds;
    var newRow = 0;
    var sndSys = "PDM";

    plm_ds_header.ClearData();
    plm_ds_template.ClearData();
    for(var r=0; r < ds_detail.GetRowCount(); r++) {
		if(ds_detail.GetColumn(r, "ZPRDGBN") == "AP_01" || ds_detail.GetColumn(r, "ZPRDGBN") == "PSD_01" || 
		   ds_detail.GetColumn(r, "ZPRDGBN") == "F-1000" || ( ds_detail.GetColumn(r, "ZPRDGBN") == "SP_01" && ds_detail.GetColumn(r, "MATNR") != "Y-400" )||
		   ds_detail.GetColumn(r, "ZPRDGBN") == "DW_01") {
			continue;
		}

        sndSys = ds_detail.GetColumn(r, "SNDSYS");
        if(ds_detail.GetColumn(r, "ZPRGFLG") != "32" && sndSys == "PLM") {
			qtnum = ds_detail.GetColumn(r, "QTNUM");
			qtser = ds_detail.GetColumn(r, "QTSER");
			qtseq = ds_detail.GetColumn(r, "QTSEQ");
			for (var i=0; i < Length(ds_List); i++) {
				ds = ds_List[i];
				for(var j=0; j < ds.GetRowCountNF(); j++) {
					if(qtseq == ds.GetColumnNF(j, "QTSEQ")) {
						endIdx = plm_ds_template.AddRow();
						// IDX: dsid + 구분자 + 로우 인덱스
						plm_ds_template.SetColumn(endIdx, "IDX", ds.ID+":"+j);
						plm_ds_template.SetColumn(endIdx, "PRH", ds.GetColumnNF(j, "PRH"));
						plm_ds_template.SetColumn(endIdx, "PRD", ds.GetColumnNF(j, "PRD"));
					}
				}
			}

			// 헤더 정보를 생성한다.
			newRow = plm_ds_header.AddRow();
			plm_ds_header.SetColumn(newRow, "SYSID", sysId);
			plm_ds_header.SetColumn(newRow, "CALLSYS", callSys);
			plm_ds_header.SetColumn(newRow, "ZFLAG", zflag);
			plm_ds_header.SetColumn(newRow, "QTNUM", qtnum);
			plm_ds_header.SetColumn(newRow, "QTSER", qtser);
			plm_ds_header.SetColumn(newRow, "QTSEQ", qtseq);
			plm_ds_header.SetColumn(newRow, "HOGI", "");
			plm_ds_header.SetColumn(newRow, "AUART", auart);
			plm_ds_header.SetColumn(newRow, "START_IDX", startIdx);
			plm_ds_header.SetColumn(newRow, "END_IDX", endIdx);
			plm_ds_header.SetColumn(newRow, "USER_ID", G_USER_ID);
			plm_ds_header.SetColumn(newRow, "LAND", "KR");
			startIdx = endIdx+1;
        }
    }

    // PLM 연동 처리를 수행한다.
    if(plm_ds_header.GetRowCount() > 0) {
        F_OPT1 = opt1;
        callPlmWebService("Q", opt1, "MF", plm_ds_header, plm_ds_template, "fn_plmDutyAfter");
		if(G_STATUS == "") {
			gfn_openMsgWin("PLM 시스템과 연결이 안됩니다. 시스템 관리자에게 문의하십시요, ", "A", "PLM 연동");
		}    
    }
}

/****************************************************************
* PLM  전송 데이터 생성 Call Back 함수
***************************************************************/
function fn_plmDutyAfter() {
    var qtseq;
    var prh;
    var prd;
    var prhName;
    var atkla;
    var logMsg;
    var idName;
    var findRow;
    var idx;
    var idxList;
    var newRow = 0;

    getPlmOutDs(ds_error);
    if(ds_error.GetRowCount() > 0) {
        // PLM 오류 메시지 출력
        if(ds_error.GetColumn(0, "ERRCODE") != "OK") {
            gfn_showAlert(ds_error.GetColumn(0, "ERRMSG"));
            ds_error.ClearData();
            return;
        }
    }

    // 결과 처리
    getPlmOutDs(plm_out_ds_template);
    var errMsg = "";
    var disptp = "";
    var nTmplRow = 0;
    //trace("plm_out_ds_template:"+plm_out_ds_template.SaveXML());
    for(var i=0; i < plm_out_ds_template.GetRowCount(); i++) {
        idx = plm_out_ds_template.GetColumn(i, "IDX");
        if(Length(idx) > 0) {
			idxList = Split(idx, ":");
			idName = idxList[0];
			findRow = ToNumber(idxList[1]);
			// 수신받은 데이터에서 에러 메시지와 화면에 적용할 메시지로 분리하여 처리한다.
			if(IndexOf(plm_out_ds_template.GetColumn(i, "PRH"), "ERRMSG_") > -1) {
				// 에러 데이터 셑을 생성한다.
				prhName = object(idName).GetColumnNF(findRow, "PRHNAME");
				qtseq = object(idName).GetColumnNF(findRow, "QTSEQ");
				atkla = object(idName).GetColumnNF(findRow, "ATKLA");
	
				logMsg = plm_out_ds_template.GetColumn(i, "PRD");
				newRow = plm_ds_log.AddRow();
				plm_ds_log.SetColumn(newRow, "IDX", newRow);
				//결과 처리 시스템명을 입력한다.
				plm_ds_log.SetColumn(newRow, "PRCSYS", "PLM");
				plm_ds_log.SetColumn(newRow, "HOGI", qtseq);
				plm_ds_log.SetColumn(newRow, "ATKLA", atkla);
				plm_ds_log.SetColumn(newRow, "PRHNAME", prhName);
				plm_ds_log.SetColumn(newRow, "LOGMSG", logMsg);
			} else {
				// 제한조건인 경우에는 시스템에서 데이터 처리 없음
				if( F_OPT1 != "CONSTRAINT") {
					prd = plm_out_ds_template.GetColumn(i, "PRD");
					disptp = object(idName).SetColumnNF(findRow, "DISPTP");
					if(disptp == "X") {
					    object(idName).SetColumnNF(findRow, "PRD", prd);
					} else {
					    setDsTemplateFlagNF(object(idName), findRow, "PRD", prd);
						if(object(idName).GetColumnNF(findRow, "FLAG") == "U") {
							qtseq = object(idName).GetColumnNF(findRow, "QTSEQ");
							atkla = object(idName).GetColumnNF(findRow, "ATKLA");
							prh = object(idName).GetColumnNF(findRow, "PRH");
							nTmplRow = ds_template.SearchRowNF(" QTSEQ == " + quote(qtseq) + " && ATKLA == " + quote(atkla) + " && PRH == " + quote(prh));
							if(nTmplRow > -1) {
								ds_template.SetColumnNF(nTmplRow, "PRD", prd);
								ds_template.SetColumnNF(nTmplRow, "FLAG", "U");
								//setDsTemplateFlagNF(ds_template, nTmplRow, "PRD", prd);
							}
						}
					}
				}
			}
        } else {
			if(IndexOf(plm_out_ds_template.GetColumn(i, "PRH"), "ERRMSG") > -1) {
				errMsg = plm_out_ds_template.GetColumn(i, "PRD");
            }
        }
    }


    //2021.03 jss
    el_dpexq_prc=""; el_dpexq_prd=""; el_dpexq1=""; el_dpexq2=""; el_dpexq3="";
	for(var i=0; i < ds_template4.GetRowCount(); i++) {
		if(ds_template4.GetColumn(i, "PRH") == "EL_DPEXQ" && ds_template4.GetColumn(i, "FLAG") == "U" ){
			el_dpexq_prd = ds_template4.GetColumn(i, "PRD");
			el_dpexq_prc = "Y";
		}
	}

	for(var i=0; i < ds_template0.GetRowCount(); i++) {
		if(ds_template0.GetColumn(i, "PRH") == "CO_DPEXQ1" && ds_template0.GetColumn(i, "FLAG") == "U"){
			el_dpexq1 = ds_template0.GetColumn(i, "PRD");
		}
		if(ds_template0.GetColumn(i, "PRH") == "CO_DPEXQ2" && ds_template0.GetColumn(i, "FLAG") == "U"){
			el_dpexq2 = ds_template0.GetColumn(i, "PRD");
		}
		if(ds_template0.GetColumn(i, "PRH") == "CO_DPEXQ3" && ds_template0.GetColumn(i, "FLAG") == "U"){
			el_dpexq3 = ds_template0.GetColumn(i, "PRD");
		}
	}


	// 단일 메시지 처리
	if(F_OPT1 != "CONSTRAINT" && Length(errMsg) > 0) {
		if(F_OPT1 == "DUTY") {
			gfn_openMsgWin(errMsg, "", "A", "Duty Call 알림");
		} else if(F_OPT1 == "DEPENDENCY") {
			gfn_openMsgWin(errMsg, "", "A", "종속성 알림");
		}
	}

}

/******************************************************
*  WebService 처리시 발생한 에러 정보 표시
* @param  grdObj 처리 그리드 객체
* @param  dsObj 데이터셋 객체
* @param  errDsObj 에러 정보 데이터셋 객체
* @param  flagColNm 플래그 컬럼명
* @return
******************************************************/
function fn_openPlmLogWin(grdObj, dsObj, logDsObj, flagColNm) {
	var grdNm = "";
	
	if ( type( grdObj ) == "STRING") {
		grdNm = grdObj;
	} else {
		grdNm = grdObj.id;
	}
	
	var dsNm = dsObj.id;
	var logDsNm = logDsObj.id;

    // 정렬
    logDsObj.Sort("HOGI:A,PRHNAME:A,IDX:A");

	var arg = "fa_flagNm=" + quote( flagColNm);
		arg += " fa_grdName=" + quote(grdNm);
		arg += " fa_dsName=" + quote( dsNm);
		arg += " fa_logDsName=" + quote( logDsNm );
	//alert("gtn 넘어가는 값 : " + arg );
	gfn_openPopupUrl("COM::Com0271.xml", true, arg);
	
}

/******************************************************
*  PLM 웹서비스 연동을 통한 층별사양 정보 
* @return
******************************************************/
function btn_floor_OnClick(obj)
{
    var sndSys = "PDM"; 
    sndSys = ds_detail.GetColumn(ds_detail.currow, "SNDSYS");
    if(sndSys == "PLM") {
		// PLM 연동 처리
		fn_createWait("",this);
		plm_ds_log.ClearData();
		fn_singlePlmDuty("FLOOR");
    } else {
        gfn_openMsgWin("해당 브랜드에서 제공되지 않습니다.", "", "A", "층별사양");
    }
}

/****************************************************************
* PLM  층별사양 정보 전송 데이터 생성 Call Back 함수
***************************************************************/
function fn_plmFloorAfter() {
    var qtseq = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
    var logMsg;
    var newRow = 0;

    getPlmOutDs(ds_error);
    if(ds_error.GetRowCount() > 0) {
        // PLM 오류 메시지 출력
        if(ds_error.GetColumn(0, "ERRCODE") != "OK") {
            gfn_showAlert(ds_error.GetColumn(0, "ERRMSG"));
            ds_error.ClearData();
            return;
        }
    }

    // 결과 처리
    getPlmOutDs(plm_out_ds_template);
    //trace("plm_out_ds_template:"+plm_out_ds_template.SaveXML());
    var errMsg = "";
    for(var i=0; i < plm_out_ds_template.GetRowCount(); i++) {
        // 수신받은 데이터에서 에러 메시지와 화면에 적용할 메시지로 분리하여 처리한다.
        if(IndexOf(plm_out_ds_template.GetColumn(i, "PRH"), "ERRMSG_") > -1) {
            logMsg = plm_out_ds_template.GetColumn(i, "PRD");
            newRow = plm_ds_log.AddRow();
            plm_ds_log.SetColumn(newRow, "IDX", newRow);

            //결과 처리 시스템명을 입력한다.
            plm_ds_log.SetColumn(newRow, "PRCSYS", "PLM");
            plm_ds_log.SetColumn(newRow, "HOGI", qtseq);
            plm_ds_log.SetColumn(newRow, "LOGMSG", logMsg);
        } else if(plm_out_ds_template.GetColumn(i, "PRH") == "ERRMSG") {
            logMsg = plm_out_ds_template.GetColumn(i, "PRD");
            errMsg = logMsg;
        }
    }

    // 네비게이션 삭제
    fn_destroyWait();
    if(plm_ds_log.GetRowCount() >0 && errMsg == "") {
        // 층별사양 체크 메시지를 출력한다.
		fn_openPlmLogWin("grd_logList", ds_template, plm_ds_log, "FLAG");
    } else if(errMsg != "") {
        gfn_openMsgWin(errMsg, "", "A", "층별사양");
    } else {
        getPlmOutDs(plm_out_ds_header);
        //trace("plm_out_ds_header:"+plm_out_ds_header.SaveXML());
        // 층별사양전개 팝업을 호출한다.
        if(plm_out_ds_header.GetRowCount() > 0 && plm_out_ds_template.GetRowCount() > 0) {
			var arg;
			var brndArr = gfn_openPopUpUrlHdel("COM::Com0272.xml", true, arg);
	    }
    }
}

//=========================================================================================
//  함수기능  : 수주생성 문서유형, 건물용도, 지급조건, 인도조건, 종별구분 코드목록 조회
//  SV ID : fn_query_bdtyp
//  Call Back : fn_afterQuery_bdtyp
//  기능ID    : UF014
//  개선내역  : 2016.02.12 공용코드 개별 액션 호출 통합하여 처리
//=========================================================================================
function fn_query_bdtyp() {
    nsfRequest("query", "com0160/find_extend"
              ,"ds_cond_build=ds_cond_build ds_list_build=ds_list_build ds_list_build_l=ds_list_build_l"
              ,"ds_cond_build=ds_cond_build ds_list_build=ds_list_build ds_list_build_l=ds_list_build_l ds_error=ds_error"
              , ""
              , "fn_afterQuery_bdtyp"
              );
}

//=========================================================================================
//  함수기능  : 수주생성 문서유형, 건물용도, 지급조건, 인도조건, 종별구분 코드목록 조회 call Back
//  기능ID    : UF014
//=========================================================================================
function fn_afterQuery_bdtyp(svcId, errCode, errMsg) {
	
	// 건물용도 콤보박스 초기값 선언
    gfn_InsertRowCombo(ds_list_build, 0, "N", "Y", "BUILDUSE", "STEXT"); // 선택 행 추가
    gfn_InsertRowCombo(ds_list_build_l, 0, "N", "Y", "BUILDUSE_L", "STEXT"); //2020.12 jss
	
	ds_list_build.UnFilter();
	var zbdtyp = trim(ds_header.GetColumn(0, "ZBDTYP"));
	if( length(trim(zbdtyp)) != 0 ) { 
		var rowIdx = ds_list_build.FindRowNF("BUILDUSE", zbdtyp);
		var zbdtyp_l = trim(ds_list_build.GetColumnNF(rowIdx, "BUILDUSE_L"));
		if(length(zbdtyp_l) > 0 ){
			ds_list_build.Filter("BUILDUSE_L == "+quote(zbdtyp_l));
		}
	}
		
    // 에러 메시지 처리 추가
    if(ds_error.RowCount() > 0) 
    {
        gfn_showAlert(ds_error.GetColumn(0, "ERRMSG"));
    } 
}

function cb_zbdtyp_l_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
	ds_list_build.UnFilter();
	if(length(trim(strCode)) > 0){
	  ds_list_build.Filter("BUILDUSE_L == "+quote(strCode));
	}else{
	  ds_list_build.UnFilter();
	} 	
	tab.main.div_header.cb_zbdtyp.index = 0;	
}


function fn_callPopup(obj,strValue)
{
	var url = "Ses::Ses0088.xml";
	var arg =  " fa_qtnum = " + quote(ds_header.getColumn(0, "QTNUM"));
		arg += " fa_qtser = " + quote(ds_header.getColumn(0, "QTSER"));
		arg += " fa_chk1 = " + quote(tab.main.div_header.fa_chk1.value);
		arg += " fa_chk2 = " + quote(tab.main.div_header.fa_chk2.value);
	
	var rtn = gfn_openPopUpUrlHdel(url, true, arg);
	
	if(rtn=="Y"){	
		nsfRequest("queryHeader", "ses0030/header", "ds_cond=ds_header ds_header=ds_header", "ds_header=ds_header ds_error=ds_error", "", "fn_afterQuery");
	}
}


function fn_qtvadt() {
	if (gfn_showConfirm("CW10025", "건적유효일 갱신하시겠습니까?")) {
		var vSvcId = "saveQtVadt";
		nsfRequest(  vSvcId
				   , "ses0031n/saveQtVadt"
				   , "ds_header=ds_header"	
				   , "ds_header=ds_header ds_error=ds_error"
				   , ""
				   , "fn_afterSave"
				   );
	}			   
}


/****************************************************************
* 리모델링실측적용 팝업화면 호출
***************************************************************/
function tab_template_div_template_btn_rad_auto_OnClick(obj)
{
	var arg  = "";
	arg = "FLOORYSNO="+quote(FLOORYSNO)+" LAYOUTYSNO="+quote(LAYOUTYSNO)+" APPLYYSNO="+quote(APPLYYSNO);
	var arr  = gfn_openPopUpUrlHdel("SES::Ses0031R.xml", true, arg);
    if(Length(arr) == 3) {
        FLOORYSNO  = arr[0];
        LAYOUTYSNO = arr[1];
        APPLYYSNO  = arr[2];
        SAVEYSNO   = "N";
    } else if(Length(arr) == 4) {
        // 변경사항이 없는 경우 리턴 파라미터
        FLOORYSNO  = arr[0];
        LAYOUTYSNO = arr[1];
        APPLYYSNO  = arr[2];
        SAVEYSNO   = arr[3];
    }

	// 데이터셑에 최신값 반영
	var qtseq = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");
	var findRow = -1;
	var addRow = -1;
	findRow = ds_rad_sts.FindRow("QTSEQ", qtseq);
	if(findRow > -1) {
		ds_rad_sts.SetColumn(findRow, "FLOORYSNO", FLOORYSNO);
		ds_rad_sts.SetColumn(findRow, "LAYOUTYSNO", LAYOUTYSNO);
		ds_rad_sts.SetColumn(findRow, "APPLYYSNO", APPLYYSNO);
		ds_rad_sts.SetColumn(findRow, "SAVEYSNO", SAVEYSNO);
	} else {
		addRow = ds_rad_sts.AddRow();
		ds_rad_sts.SetColumn(addRow, "FLOORYSNO", FLOORYSNO);
		ds_rad_sts.SetColumn(addRow, "LAYOUTYSNO", LAYOUTYSNO);
		ds_rad_sts.SetColumn(addRow, "APPLYYSNO", APPLYYSNO);
		ds_rad_sts.SetColumn(addRow, "SAVEYSNO", SAVEYSNO);
	}
	//trace("ds_rad_sts input:"+ds_rad_sts.SaveXML());
    
}

/****************************************************************
* 리모델링 자동도면 대상여부
***************************************************************/
function fn_isRadYsno()
{
	var isRad   = true;
	var findRow = -1;
	var elAtyp;
	var elAuse;
	var elAman;
	var elErpr;
	var elAspd;
	var znumber;
	var elEhm;
	var elEthru;
	var elEcwtp;
	// 기종(EL_ATYP): LXVF
	elAtyp = ds_detail.GetColumn(ds_detail.currow, "GTYPE");
	//trace("기종 elAtyp:"+elAtyp);
	if(elAtyp != "LXVF") {
	    return false;
	}

    // 용도(EL_AUSE): 인승(PS) '장애(HC), 비상(EP), 비상,장애(EH)
	elAuse = ds_detail.GetColumn(ds_detail.currow, "ZUSE");
	//trace("용도 elAuse:"+elAuse);
	if(elAuse == "PS" || elAuse == "HC" || elAuse == "EP" || elAuse == "EH") {
	    isRad   = true;
	} else {
	    return false;
	}

    // 인승(EL_AMAN): 6~21
    elAman = ds_detail.GetColumn(ds_detail.currow, "TYPE1");
    elAman = ToNumber(elAman);
	//trace("인승 elAman:"+elAman);
    if(elAman >=6 && elAman <= 21) {
	    isRad   = true;
    } else {
	    return false;
    }
    
    // 속도(EL_ASPD): 60, 90, 105
    elAspd = ds_detail.GetColumn(ds_detail.currow, "TYPE2");
    //trace("속도 elAspd:"+elAspd);
    if(elAspd == "60" || elAspd == "90" || elAspd == "105") {
	    isRad   = true;
    } else {
	    return false;
    }
    
    // 단독호기 -> 대수 1
    znumber = ds_detail.GetColumn(ds_detail.currow, "ZNUMBER");
	//trace("대수 znumber:"+znumber);
    if(znumber == "1") {
	    isRad   = true;
    } else {
	    return false;
    }
    
    // 로핑방식(EL_ERPR), 1:1, 2:1
    findRow = ds_template5.FindRow("PRH", "EL_ERPR");
    if(findRow > -1) {
        elErpr = ds_template5.GetColumn(findRow, "PRD");
	    //trace("로핑방식(EL_ERPR) elErpr:"+elErpr);
		if(elErpr == "1:1" || elErpr == "2:1") {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }

    // 승강로재질(EL_EHM): 골조(CEMEN) elEhm
    findRow = ds_template1.FindRow("PRH", "EL_EHM");
    if(findRow > -1) {
        elEhm = ds_template1.GetColumn(findRow, "PRD");
	    //trace("골조(CEMEN) elEhm:"+elEhm);
		if(elEhm == "CEMEN") {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }
    
    // 관통여부(EL_ETHRU): !Y elEthru
    findRow = ds_template5.FindRow("PRH", "EL_ETHRU");
    if(findRow > -1) {
        elEthru = ds_template5.GetColumn(findRow, "PRD");
        //trace("관통여부 elEthru:"+elEthru);
		if(elEthru != "Y") {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }
    
    // CWT 위치 -> 후락만 대상임(R)
    findRow = ds_template5.FindRow("PRH", "EL_ECWTP");
    if(findRow > -1) {
        elEcwtp = ds_template5.GetColumn(findRow, "PRD");
        //trace("CWT 위치 elEcwtp:"+elEcwtp);
		if(elEcwtp == "R") {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }
    return isRad;
}

/****************************************************************
* 리모델링 승강기번호 필수 체크 S: 저장 A: 차수추가
***************************************************************/
function fn_isReEelvno(div)
{
    var isCheck = true;
    var mono = "";
    var matnr = "";  // 자재번호
    var delvno = ""; // 승강기번호
    var qtseq = "";
    var flag = "";
    var auart = ds_header.GetColumn(0, "AUART");  // 오더유형
    var qtnum = ds_header.GetColumn(0, "QTNUM");

    // 리모델링 영업(오더유형 : ZN01, ZN02)
    if (auart == "ZN01" || auart =="ZN02") {
        // 특정 견적번호는 견적진행할 수 있게 예외 처리한다.
        // N200028289 한양대학교병원
        if(qtnum == "N200028289") {
            return true;
        }
    
		// 차수 추가인 경우
		if(div == "A") {
			var qtdat = ds_header.GetColumn(0, "QTDAT");  // 견적일자
			//  : 견적일자가 2020.12.31일 이전인 경우 [차수+]버튼 클릭 시 "2020년 12월 31일 이전 견적은 차수 증가 불가 합니다."  메시지 표기하고 기능 종료 한다.
			if( ToNumber(qtdat) <= 20201231) {
				isCheck = false;
				gfn_showAlert("CW10025", "2020년 12월 31일 이전 견적은 차수 증가 불가 합니다.");
				return false;
			}
		}

        for(var i=0; i < ds_detail.GetRowCount(); i++) {
            matnr   = ds_detail.GetColumn(i, "MATNR"  );  // 자재번호
            delvno  = ds_detail.GetColumn(i, "SID"  );    // 승강기번호 SID DELVNO
            qtseq   = ds_detail.GetColumn(i, "QTSEQ"  ); 
            flag    = ds_detail.GetColumn(i, "FLAG"  );

            // E/L, E/S인 경우 승강기 번호 필수 체크
            if( (matnr == "S-1000" ||  matnr == "L-1000") && flag != "D" ) {
                if(Length(delvno) == 0) {
                    mono = mono +","+ qtseq;
                }
            }
        }

        if(Length(mono) > 0 ) {
            isCheck = false;
            mono = Substr(mono, 1);
            gfn_showAlert("CW10025", "["+mono+"] - 수요정보관리 내 담당자 지정 바랍니다.");
        }
   }

   return isCheck;
}
]]></Script>
</Window>