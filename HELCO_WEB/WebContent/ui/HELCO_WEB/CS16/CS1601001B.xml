<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="358" Id="CS1601001B" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="통합거래처&#32;고객명&#32;관리" Top="8" Ver="1.0" Width="478" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cst">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond" OnColumnChanged="ufn_setCstCombo">
				<Contents>
					<colinfo id="UPN" size="256" type="STRING"/>
					<colinfo id="CST" size="256" type="STRING"/>
					<colinfo id="SPT" size="256" type="STRING"/>
					<colinfo id="NAM" size="256" type="STRING"/>
					<record>
						<CST></CST>
						<NAM></NAM>
						<SPT></SPT>
						<UPN></UPN>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list">
				<Contents>
					<colinfo id="CST" size="256" type="STRING"/>
					<colinfo id="NAM" size="256" type="STRING"/>
					<colinfo id="SEQ" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_condData">
				<Contents>
					<colinfo id="UPN" size="256" type="STRING"/>
					<colinfo id="CST" size="256" type="STRING"/>
					<colinfo id="SPT" size="256" type="STRING"/>
					<colinfo id="NAM" size="256" type="STRING"/>
					<record>
						<CST></CST>
						<NAM></NAM>
						<SPT></SPT>
						<UPN></UPN>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="66" Height="30" Id="Shape0" Left="0" LineColor="user1" Right="478" TabOrder="1" Top="36" Type="Rectangle" Width="478"></Shape>
		<Static Align="Right" Height="20" Id="Static0" Left="5" Style="sty_lb_search" TabOrder="2" Text="통합&#32;Proj.&#32;" Top="41" VAlign="Middle" Width="80"></Static>
		<Edit BindDataset="ds_cond" Border="Flat" Column="UPN" Height="20" Id="ed_upn" Left="87" MaxLength="6" Style="sty_ipt_search" TabOrder="3" Top="41" UpperOnly="TRUE" Width="122"></Edit>
		<Static Align="Right" Height="20" Id="Static1" Left="211" Style="sty_lb_search" TabOrder="4" Text="현장명&#32;" Top="41" VAlign="Middle" Width="80"></Static>
		<Edit BindDataset="ds_cond" Border="Flat" Column="SPT" Enable="FALSE" Height="20" Id="ed_spt" Left="293" Style="sty_ipt_search" TabOrder="5" Top="41" Width="180"></Edit>
		<Shape BKColor="user12" Bottom="100" Height="26" Id="Shape1" Left="8" LineColor="user13" Right="470" TabOrder="6" Top="74" Type="Rectangle" Width="462"></Shape>
		<Static Align="Right" Height="24" Id="Static4" Left="9" Style="sty_lb_form_basic" TabOrder="7" Text="거래처&#32;" Top="75" VAlign="Middle" Width="80"></Static>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="CST" DataColumn="CODE_NAME" Height="20" Id="cb_cst" InnerDataset="ds_cst" Left="90" OnChanged="ufn_chgCst" Style="sty_ipt_form" TabOrder="8" Top="76" Width="122"></Combo>
		<Static Align="Right" Height="24" Id="Static2" Left="213" Style="sty_lb_form_basic" TabOrder="9" Text="고객명&#32;" Top="75" VAlign="Middle" Width="80"></Static>
		<Edit BindDataset="ds_cond" Border="Flat" Column="NAM" Height="20" Id="ed_nam" Left="295" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="10" Top="77" Width="172"></Edit>
		<Grid AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="350" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="242" Id="grd_list" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellDBLClick="ufn_closeWindow" Right="470" RowHeight="20" Style="sty_grid" TabOrder="11" TabStop="true" Top="108" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="462">
			<contents>
				<format id="Default">
					<columns>
						<col width="20"/>
						<col width="40"/>
						<col width="160"/>
						<col width="140"/>
						<col width="80"/>
					</columns>
					<head>
						<cell col="0" display="text" font="굴림,9"/>
						<cell col="1" display="text" font="굴림,9" text="No"/>
						<cell col="2" display="text" font="굴림,9" text="거래처"/>
						<cell col="3" display="text" font="굴림,9" text="고객명"/>
						<cell col="4" display="text" font="굴림,9" text="순번"/>
					</head>
					<body>
						<cell bkcolor2="user22" col="0" display="text"/>
						<cell align="center" bkcolor2="user22" col="1" display="text" expr="currow+1"/>
						<cell align="center" bkcolor2="user22" col="2" colid="CST" display="text"/>
						<cell bkcolor2="user22" col="3" colid="NAM" display="text"/>
						<cell align="center" bkcolor2="user22" col="4" colid="SEQ" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Div Height="36" Id="div_btn" TabOrder="12" Text="Div0" Url="WB01::CommBtnForm.xml" Width="478">
			<Contents></Contents>
		</Div>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 통합 프로젝트 정보 검색 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initForm();
	//공통코드		
	
	ds_cond.SetColumn(0,"UPN",upn);	
	ds_cond.SetColumn(0,"CST",cst);	
	ds_cond.SetColumn(0,"SPT",spt);	
	ds_cond.SetColumn(0,"NAM",nam);	
	ufn_setCstComboOrigin();
	ds_cond.SetColumn(0,"CST",cst);	
	fn_query();
	
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
	
}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() {
	gfn_clearGridSortMark(grd_list);
	
	tit_clearActionInfo();
	tit_addSearchActionInfo("cs16:CS1601001B_S1");
	
	tit_callService(
        ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_list=ds_list"
        , ""
        , "fn_afterQuery"
        , true
        , true
        , true);
}
/********************************************************************************
* 기      능   : 저장 
********************************************************************************/
function fn_save() {
	if(ed_upn.value == "") {	
		//alert("통합Proj Noi.를 입력하세요.");
		gfn_showAlert("CW00001","통합Proj No");
		return;
	}
	else if(cb_cst.value == "") {		
		//alert("거래처를 입력하세요.");
		gfn_showAlert("CW00001","거래처");
		return;
	}
	else if(ed_nam.value == "") {
		//alert("고객명을 입력하세요.");
		gfn_showAlert("CW00001","고객명");
		return;
	}		 
	else {		
		tit_clearActionInfo();
		//fn_save152Insert();
		tit_addSingleActionInfo("cs16:CS1601001B_I1");	
		//fn_save121Update();
		tit_addSingleActionInfo("cs16:CS1601001B_U1");	
	
		tit_callService(
			""
			, ""
			, "ds_cond=ds_cond"
			, ""
			, ""
			, "fn_query"
			, true
			, true
			, true);
	}
}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close(null);
}
/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	// Excel Export 
	gfn_saveToExcel(grd_list, true );
}
/********************************************************************************
* 기      능   : 취소 35
********************************************************************************/
function fn_cancel() {
	ds_cond.SetColumn(0,"NAM","");	
}
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
	// 메시지 처리 	
	gfn_showSearchMsg(grd_list);
}
/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
	if ( errCode!= 0 ) {
	} else {
		fn_query();
	}
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/
function ufn_openUpn() {
	var arg = "upn="+quote(ed_upn.Text);
	gfn_openPopup("CS9601001A",true,arg);
}
function ufn_setCstComboOrigin(){
	ds_cst.DeleteAll();
	tit_clearActionInfo();
	tit_addSearchActionInfo("cs16:CS1601001B_S2");		
		
	tit_callService(
		""
		, ""
		, "ds_cond=ds_cond"
		, "ds_cst=ds_cst"
		, ""
		, "ufn_afterSetCstCombo"
		, true
		, true
		, true
		);	
}
function ufn_setCstCombo(obj,nRow,strColumnID,varOldValue,varNewValue){
	if(strColumnID=="UPN"){
		ufn_setCstComboOrigin();
	}
}
function ufn_afterSetCstCombo(){
	cb_cst.Index=0;
//	ufn_chgCst();
}
function ufn_chgCst(){
	tit_clearActionInfo();
	tit_addSearchActionInfo("cs16:CS1601001B_S3");
	tit_callService(
		""
		, ""
		, "ds_cond=ds_cond"
		, "ds_condData=ds_condData"
		, ""
		, "ufn_afterChgCst"
		, true
		, true
		, true);		
}
function ufn_afterChgCst(){
	if(ds_condData.GetRowCount()>0){
		ds_cond.copy(ds_condData);	
		fn_query();
	}	
}

function ufn_closeWindow() {
	if(gfn_findObj("ed_nam", parent)){
		parent.ed_nam.value = ds_list.GetColumn(ds_list.currow,"NAM");	
	}	

	var arr = [
		ds_list.GetColumn(ds_list.currow,"UPN")
		, ds_list.GetColumn(ds_list.currow,"CST")
		, ds_list.GetColumn(ds_list.currow,"SPT")
		, ds_list.GetColumn(ds_list.currow,"NAM")
	];
	
	close( arr );
}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	// 그리드 정렬 처리 
	gfn_sortGrid(obj,nCell);
}]]></Script>
</Window>