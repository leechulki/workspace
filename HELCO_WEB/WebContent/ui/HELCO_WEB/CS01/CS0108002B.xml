<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="520" Id="CS0108002B" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="사양별&#32;특성값&#32;지정" Top="8" Ver="1.0" Width="976" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="REQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="PDM803" size="256" summ="default" type="STRING"/>
					<record>
						<GRP></GRP>
						<MANDT></MANDT>
						<PDM803/>
						<POSID></POSID>
						<QTNUM></QTNUM>
						<REQNO></REQNO>
						<SEQ></SEQ>
						<VBELN></VBELN>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="FLAG" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZTPLGBN" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ZPRDGBN" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error">
				<Contents>
					<colinfo id="IDX" size="256" type="STRING"/>
					<colinfo id="ERRMSG" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ztplgbn">
				<Contents>
					<colinfo id="CODE" size="1" type="STRING"/>
					<colinfo id="CODE_NAME" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_temp" OnColumnChanged="ds_temp_OnColumnChanged">
				<Contents>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="FLAG" size="256" type="STRING"/>
					<colinfo id="ZTPLGBN" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ZPRDGBN" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="PRH0" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="ATFOR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_prhcd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_head" OnColumnChanged="ds_head_OnColumnChanged">
				<Contents>
					<colinfo id="FLAG" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLGBN" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ZPRDGBN" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<record>
						<FLAG></FLAG>
						<ZPRDGBN></ZPRDGBN>
						<ZRMK></ZRMK>
						<ZTPLGBN></ZTPLGBN>
						<ZTPLNM></ZTPLNM>
						<ZTPLNO></ZTPLNO>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zprdgbn">
				<Contents>
					<colinfo id="CODE" size="1" type="STRING"/>
					<colinfo id="CODE_NAME" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_atnam_copy">
				<Contents>
					<colinfo id="CLASS1" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="ATNAM" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="ATINN" size="256" type="STRING"/>
					<colinfo id="ATZHL" size="256" type="STRING"/>
					<colinfo id="ATWRT" size="256" type="STRING"/>
					<colinfo id="CHECKBOX" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list2">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="NUM" size="256" summ="default" type="STRING"/>
					<colinfo id="NEC" size="256" summ="default" type="STRING"/>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="EXP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_save">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="NUM" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="NEC" size="256" summ="default" type="STRING"/>
					<record>
						<CHK></CHK>
						<CNM></CNM>
						<COD></COD>
						<GRP></GRP>
						<KND></KND>
						<KNM></KNM>
						<NEC></NEC>
						<NUM></NUM>
						<VBELN></VBELN>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_save2">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="REQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="BSTDK" size="256" summ="default" type="STRING"/>
					<colinfo id="RDATE" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list3">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="REQNO" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond2">
				<Contents>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_pdm">
				<Contents>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="MOWBS" size="256" summ="default" type="STRING"/>
					<colinfo id="CUOBJ" size="256" summ="default" type="STRING"/>
					<colinfo id="VALUE" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="CR_DATE" size="256" summ="default" type="STRING"/>
					<colinfo id="CR_TIME" size="256" summ="default" type="STRING"/>
					<colinfo id="REQNO" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_status">
				<Contents>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_save0">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="NUM" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="NEC" size="256" summ="default" type="STRING"/>
					<record>
						<CHK></CHK>
						<CNM></CNM>
						<COD></COD>
						<GRP></GRP>
						<KND></KND>
						<KNM></KNM>
						<NEC></NEC>
						<NUM></NUM>
						<VBELN></VBELN>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_master">
				<Contents>
					<colinfo id="LZONE" size="256" summ="default" type="STRING"/>
					<colinfo id="ADD1" size="256" summ="default" type="STRING"/>
					<colinfo id="ADD2" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET" size="256" summ="default" type="STRING"/>
					<colinfo id="CELLP" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET2" size="256" summ="default" type="STRING"/>
					<colinfo id="CELLP2" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_master2">
				<Contents>
					<colinfo id="LZONE" size="256" summ="default" type="STRING"/>
					<colinfo id="ADD1" size="256" summ="default" type="STRING"/>
					<colinfo id="ADD2" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET" size="256" summ="default" type="STRING"/>
					<colinfo id="CELLP" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET2" size="256" summ="default" type="STRING"/>
					<colinfo id="CELLP2" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<record>
						<ADD1></ADD1>
						<ADD2></ADD2>
						<CELLP></CELLP>
						<CELLP2></CELLP2>
						<LZONE></LZONE>
						<NAMET></NAMET>
						<NAMET2></NAMET2>
						<POSID></POSID>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Div Height="36" Id="div_btn" Left="1" TabOrder="6" Text="Div0" Url="WB01::CommBtnForm.xml" Width="975">
			<Contents></Contents>
		</Div>
		<Tab Border="Flat" FixedImage="FALSE" Font="굴림,9" Height="473" Id="tab" Left="2" MouseOverColor="user16" OnChanging="Tab_OnChanging" SelColor="user15" SelectFont="굴림,9" Style="sty_tab" TabOrder="1" Top="39" Width="966">
			<Contents>
				<TabPage BorderColor="black" Height="448" Id="EL_BASIC" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="19" Text="1.기본" Top="23" Width="962"></TabPage>
				<TabPage BorderColor="black" Height="448" Id="EL_INSIDE" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="26" Text="2.카내의장" Top="23" Width="962">
					<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="385" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="384" Id="grd_list" InputPanel="FALSE" Left="6" LineColor="user20" LineType="ExHORZ" OnHeadClick="grd_list_OnHeadClick" Right="456" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="1" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="20"/>
									<col width="30"/>
									<col width="222"/>
									<col width="159"/>
								</columns>
								<head>
									<cell col="0" display="text"/>
									<cell align="center" bkimageid="icon_grid_sel" col="1" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="2" color="user21" display="text" domainid="bs.charac" font="굴림,9" text="특성내역" wordwrap="word"/>
									<cell col="3" display="text" domainid="bs.value1" font="굴림,9" text="특성값" wordwrap="word"/>
								</head>
								<body>
									<cell bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="0" display="text"/>
									<cell align="center" bkcolor2="user22" col="1" display="text" expr="currow+1"/>
									<cell bkcolor2="user22" col="2" colid="PRH" combocol="CODE" combodataset="ds_prhcd" combotext="CODE_NAME" display="combo" suppress="1"/>
									<cell align="left" checklength="Byte" col="3" colid="PRD" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
								</body>
							</format>
						</contents>
					</Grid>
				</TabPage>
				<TabPage BorderColor="black" Height="448" Id="EL_OUTSIDE" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="31" Text="3.카외의장" Top="23" Width="962">
					<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="407" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="406" Id="Grid0" InputPanel="FALSE" Left="1" LineColor="user20" LineType="ExHORZ" OnHeadClick="grd_list_OnHeadClick" Right="451" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="1" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="20"/>
									<col width="30"/>
									<col width="222"/>
									<col width="159"/>
								</columns>
								<head>
									<cell col="0" display="text"/>
									<cell align="center" bkimageid="icon_grid_sel" col="1" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="2" color="user21" display="text" domainid="bs.charac" font="굴림,9" text="특성내역" wordwrap="word"/>
									<cell col="3" display="text" domainid="bs.value1" font="굴림,9" text="특성값" wordwrap="word"/>
								</head>
								<body>
									<cell bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="0" display="text"/>
									<cell align="center" bkcolor2="user22" col="1" display="text" expr="currow+1"/>
									<cell bkcolor2="user22" col="2" colid="PRH" combocol="CODE" combodataset="ds_prhcd" combotext="CODE_NAME" display="combo" suppress="1"/>
									<cell align="left" checklength="Byte" col="3" colid="PRD" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
								</body>
							</format>
						</contents>
					</Grid>
				</TabPage>
				<TabPage BorderColor="black" Height="448" Id="EL_OPTION" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="32" Text="4.OPTION" Top="23" Width="962">
					<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="407" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="406" Id="Grid0" InputPanel="FALSE" Left="1" LineColor="user20" LineType="ExHORZ" OnHeadClick="grd_list_OnHeadClick" Right="451" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="1" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="20"/>
									<col width="30"/>
									<col width="222"/>
									<col width="159"/>
								</columns>
								<head>
									<cell col="0" display="text"/>
									<cell align="center" bkimageid="icon_grid_sel" col="1" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="2" color="user21" display="text" domainid="bs.charac" font="굴림,9" text="특성내역" wordwrap="word"/>
									<cell col="3" display="text" domainid="bs.value1" font="굴림,9" text="특성값" wordwrap="word"/>
								</head>
								<body>
									<cell bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="0" display="text"/>
									<cell align="center" bkcolor2="user22" col="1" display="text" expr="currow+1"/>
									<cell bkcolor2="user22" col="2" colid="PRH" combocol="CODE" combodataset="ds_prhcd" combotext="CODE_NAME" display="combo" suppress="1"/>
									<cell align="left" checklength="Byte" col="3" colid="PRD" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
								</body>
							</format>
						</contents>
					</Grid>
				</TabPage>
				<TabPage BorderColor="black" Height="448" Id="EL_LAYOUT" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="32" Text="5.LAYOUT" Top="23" Width="962">
					<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="407" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="406" Id="Grid0" InputPanel="FALSE" Left="1" LineColor="user20" LineType="ExHORZ" OnHeadClick="grd_list_OnHeadClick" Right="451" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="1" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="20"/>
									<col width="30"/>
									<col width="222"/>
									<col width="159"/>
								</columns>
								<head>
									<cell col="0" display="text"/>
									<cell align="center" bkimageid="icon_grid_sel" col="1" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="2" color="user21" display="text" domainid="bs.charac" font="굴림,9" text="특성내역" wordwrap="word"/>
									<cell col="3" display="text" domainid="bs.value1" font="굴림,9" text="특성값" wordwrap="word"/>
								</head>
								<body>
									<cell bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="0" display="text"/>
									<cell align="center" bkcolor2="user22" col="1" display="text" expr="currow+1"/>
									<cell bkcolor2="user22" col="2" colid="PRH" combocol="CODE" combodataset="ds_prhcd" combotext="CODE_NAME" display="combo" suppress="1"/>
									<cell align="left" checklength="Byte" col="3" colid="PRD" edit="expr:decode(ATFOR,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;)" limit="30"/>
								</body>
							</format>
						</contents>
					</Grid>
				</TabPage>
				<TabPage Height="448" Id="EL_EFH" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="2" Text="6.층고" Top="23" Width="962"></TabPage>
			</Contents>
		</Tab>
		<Static BKColor="user1" Height="23" Id="reqno1" Left="296" TabOrder="2" Top="576" Visible="FALSE" Width="0"></Static>
		<Static Height="23" Id="chk1" Left="8" TabOrder="3" Top="560" Width="56"></Static>
		<Static Align="Center" BKColor="user1" Height="23" Id="hogi1" Left="8" TabOrder="4" Top="584" Visible="FALSE" Width="0"></Static>
		<Static Align="Center" BKColor="user1" Height="23" Id="vbeln1" Left="528" TabOrder="5" Top="576" Visible="FALSE" Width="0"></Static>
		<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list2" BkColor2="default" BoldHead="true" Border="Flat" Bottom="512" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="452" Id="grd_list" InputPanel="FALSE" Left="2" LineColor="user20" LineType="ExHORZ" OnCellDBLClick="grd_list_OnCellDblClick" OnCellPosChanged="grd_list_OnCellPosChanged" OnChar="grd_list_OnChar" OnHeadClick="grd_list_OnHeadClick" Right="970" RowHeight="20" Style="sty_grid" TabOrder="8" TabStop="true" Top="60" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="968">
			<contents>
				<format id="Default">
					<columns>
						<col width="0"/>
						<col width="310"/>
						<col width="310"/>
						<col width="0"/>
						<col width="0"/>
						<col width="310"/>
					</columns>
					<head>
						<cell col="0" display="text"/>
						<cell align="center" col="1" color="user21" display="text" domainid="bs.charac" font="굴림,9" text="특성내역" wordwrap="word"/>
						<cell col="2" color="user21" display="text" font="굴림,9" text="특성값" wordwrap="word"/>
						<cell col="3" display="text" text="CNT"/>
						<cell col="4" display="text" domainid="bs.value1" font="굴림,9" text="특성값" wordwrap="word"/>
						<cell col="5" color="user21" display="text" font="굴림,9" text="특성값&#32;설명" wordwrap="word"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" display="text" edit="normal"/>
						<cell bkcolor2="user22" col="1" colid="CNM" color="expr:iif(COD&#32;==&#32;&apos;EL_111&apos;,&#32;&apos;RED&apos;,&#32;&apos;null&apos;)" display="combo"/>
						<cell align="left" checklength="Byte" col="2" colid="KNM" display="text" edit="expr:iif(KND&#32;==&#32;&apos;KEYIN&apos;&#32;OR&#32;KND&#32;==&#32;&apos;KEY&#32;IN&apos;,&#32;&apos;NORMAL&apos;,&#32;&apos;null&apos;)" limit="30"/>
						<cell col="3" colid="CNT" display="text"/>
						<cell align="left" checklength="Byte" col="4" colid="KND" display="text" edit="expr:iif(CNM&#32;==&#32;&apos;KEYIN&apos;,&#32;&apos;normal&apos;,&#32;&apos;null&apos;)" limit="30"/>
						<cell align="left" checklength="Byte" col="5" colid="EXP" display="text" limit="30"/>
					</body>
				</format>
			</contents>
		</Grid>
		<AxMSIE Height="0" Id="AxMSIE0" TitleChange="AxMSIE0_TitleChange" Width="0"></AxMSIE>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 사양별 특성값 지정
 * 작  성  자   : Yong Ah reum
 * 작성  일자   : 2015.06.01
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";    // 공통 스크립트
#include "LIB::FormResize_sd.js";    // 공통 스크립트
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다.
//=========================================================================================
var pGubun;
var tabindex;
var hogi;
var saveYsNo="N";

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
    gfn_initForm();             // Form 로드 이벤트 맨 첫줄에 기술
    fn_init_form();             // 폼 초기화
}

/********************************************************************************
* 기      능   : form UnloadCompleted
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
    return gfn_isFormUnload(obj);
}

/********************************************************************************
* 기      능   : 폼 초기화
********************************************************************************/
function fn_init_form() {

    /* 배차항목 포함 
    if(tab.TabIndex = 0)    ds_cond.SetColumn(0, "GRP", "EL_MM");
    if(tab.TabIndex = 1)    ds_cond.SetColumn(0, "GRP", "EL_BASIC");
    if(tab.TabIndex = 2)    ds_cond.SetColumn(0, "GRP", "EL_INSIDE");
    if(tab.TabIndex = 3)    ds_cond.SetColumn(0, "GRP", "EL_OUTSIDE");
    if(tab.TabIndex = 4)    ds_cond.SetColumn(0, "GRP", "EL_OPTION");
    if(tab.TabIndex = 5)    ds_cond.SetColumn(0, "GRP", "EL_LAYOUT");
    if(tab.TabIndex = 6)    ds_cond.SetColumn(0, "GRP", "EL_EFH");
    */

    if(tab.TabIndex = 0)    ds_cond.SetColumn(0, "GRP", "EL_BASIC");
    if(tab.TabIndex = 1)    ds_cond.SetColumn(0, "GRP", "EL_INSIDE");
    if(tab.TabIndex = 2)    ds_cond.SetColumn(0, "GRP", "EL_OUTSIDE");
    if(tab.TabIndex = 3)    ds_cond.SetColumn(0, "GRP", "EL_OPTION");
    if(tab.TabIndex = 4)    ds_cond.SetColumn(0, "GRP", "EL_LAYOUT");
    if(tab.TabIndex = 5)    ds_cond.SetColumn(0, "GRP", "EL_EFH");
    
    ds_cond.SetColumn(0, "REQNO", reqno);
    ds_cond.SetColumn(0, "POSID", posid2);
    ds_cond.SetColumn(0, "VBELN", vbeln);
    ds_cond.SetColumn(0, "QTNUM", qtnum);	// 견적번호
    ds_cond.SetColumn(0, "PDM803", pdm803); // 재전송여부확인

    if(length(bstkd) == 0) {        //ZSDT0005 테이블에 현장명 ''로 넘어갈 시 ' '로 처리
        bstkd = ' ';
    }

      fn_query();
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() {
    // 영업계약관련 필드
    ds_cond2.ClearData();
    ds_cond2.AddRow();
    ds_cond2.SetColumn(0, "COD", "VKGRP");        //팀
    ds_cond2.SetColumn(0, "KNM", vkgrp);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(1, "COD", "VKBUR");        //부서
    ds_cond2.SetColumn(1, "KNM", vkbur);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(2, "COD", "VBELN");        //프로젝트번호
    ds_cond2.SetColumn(2, "KNM", vbeln);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(3, "COD", "BSTDK");        //수주일(MMPR는 수주일로 대체, 그 외: VBKD테이블)
    ds_cond2.SetColumn(3, "KNM", bstdk);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(4, "COD", "BSTKD");        //현장명
    ds_cond2.SetColumn(4, "KNM", bstkd);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(5, "COD", "VDATU");        //납기일
    ds_cond2.SetColumn(5, "KNM", vdatu);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(6, "COD", "KUNNR");        //고객번호(MMPR: ZMASTER01, 그 외:ZCST121)
    ds_cond2.SetColumn(6, "KNM", kunnr);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(7, "COD", "CONTR_DA");    //계약일(FM청구: CS126_USD, MMPR: 작성일, 견적작성건: 수주일)
    ds_cond2.SetColumn(7, "KNM", contr_da);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(8, "COD", "MATNR");        //기종구분(L-1000, S-1000..)
    ds_cond2.SetColumn(8, "KNM", matnr);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(9, "COD", "MANAGER");    //영업담당자
    ds_cond2.SetColumn(9, "KNM", zman_nm);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(10, "COD", "MANAGER2");    //기술영업담당자
    ds_cond2.SetColumn(10, "KNM", zman_nm2);

    ds_list2.ClearData();
    ds_save.ClearData();
    ds_save0.ClearData();
    tit_clearActionInfo();
    tit_addSingleActionInfo("cs01:CS0108002B_S1");   // BOM청구 리스트 조회

    //if(pdm803 == 'Y') tit_addSingleActionInfo("cs01:CS0108002B_S6");     // PDM 전송할 BOM 사양정보 조회(재전송 경우) yar
    //else
    //tit_addSingleActionInfo("cs01:CS0108002B_S3");     // PDM 전송할 BOM 사양정보 조회

    // 최초 입력되거나 변경된 정보에 대해서만 반영
    tit_addSingleActionInfo("cs01:CS0108002B_S6");     // PDM 전송할 BOM 사양정보 조회
    tit_addSingleActionInfo("cs01:CS0108002B_S4");     // PDM 전송상태 조회
    // tit_addSingleActionInfo("cs01:CS0108002B_S5");     // PDM 전송시 UPDATE하는 배차정보 조회

    tit_callService(
        ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_list2=ds_list2 ds_pdm=ds_pdm ds_status=ds_status"
        , ""
        , "fn_afterQuery"
        , true);
}

/********************************************************************************
* 기      능   : 저장
********************************************************************************/
function fn_save() {
    if(ds_status.GetColumn(0, "CNT") > 0) {                    //ZSDT0005 해당wbs별 TP_STATUS = 'X'인 경우 저장불가
        if(pdm803 == "N") {
            gfn_showAlert("PDM 전송이 완료되어 수정이 불가합니다.");
            return;
        }
    }

    //if(length(doc5) > 0 && apstat5 <> '5') {
    /*
    if(length(doc5) > 0 && apstat5 == '1' || length(doc5) > 0 && apstat5 == '3' || 
		length(doc5) > 0 && apstat5 == '4' || length(doc5) > 0 && apstat5 == '6') { // 2020.01.07 이동진 요청으로 기안반송 이어도 사양값 입력가능하도록 변경. jhhan
        gfn_showAlert("수주취소현장으로 사양입력이 불가합니다.");
        return;
    }
    */
    if(length(doc5) > 0 && (apstat5 == '1' || apstat5 == '3' || apstat5 == '4' || apstat5 == '6')) { // 2020.01.07 이동진 요청으로 기안반송 이어도 사양값 입력가능하도록 변경. jhhan
        gfn_showAlert("수주취소현장으로 사양입력이 불가합니다.");
        return;
    }
    
    
    if( !ds_list2.GetUpdate() ) {
        gfn_showAlert("사양이 입력되지 않았습니다.");
        return;
    }

    if( gfn_showConfirm("CI00008") ) {
        ds_save2.ClearData();
        gfn_clearGridSortMark(grd_list);

        // ds_save2를 이용하여 저장 처리를 수행한다.
        // 현재 입력된 값에 대한 입력값을 체크하면서 ds_list2에 입력된 자료를 등록한다.
        for(var i = 0; i < ds_list2.GetRowCountNF(); i++) {
            // 필수값 체크
			if(land1.length <= 0){
				if(ds_list2.GetColumnNF(i, "NEC") == 'Y' && (parseInt(ds_list2.GetColumnNF(i, "KNM")) == 0 || length(ds_list2.GetColumnNF(i, "KNM")) == 0)){
					alert("필수 항목을 입력해주세요. " + "(" + ds_list2.GetColumnNF(i, "CNM") + ")");
					return;
				}
            }

            // 입력값 체크
            if(ds_list2.GetColumnNF(i, "NUM") == 'Y' && length(ds_list2.GetColumnNF(i, "KNM")) == 0){
                alert("숫자필드에는 공백이 들어갈 수 없습니다" + "(" + ds_list2.GetColumnNF(i, "CNM") + ")");
                return;
            }

            /* 배차정보 포함
            if( substr(posid2, 6,2) == 'NC' ) {
                if( length(ds_list2.GetColumnNF(i, "KNM")) == 0 && ds_list2.GetColumnNF(i, "COD") <> 'EL_111' && ds_list2.GetColumnNF(i, "GRP") == 'EL_MM' ) {
                    alert("배차관련정보를 입력해주세요. " + "(" + ds_list2.GetColumnNF(i, "CNM") + ")");
                    return;
                }
            }
            */

            // 입력값이 존재
            //if(length(ds_list2.GetColumnNF(i, "KNM")) > 0) {  
			if( ds_list2.GetRowTypeNF(i) == "update" ) {
			    if( ds_list2.GetColumnNF(i, "KNM") == "" || ds_list2.GetColumnNF(i, "KNM") == "0" ) {
			        if( ds_list2.GetColumnNF(i, "ORGKNM") != ds_list2.GetColumnNF(i, "KNM") ) {
						var rowIndex = ds_save2.AddRow();
						ds_save2.SetColumn(rowIndex, "POSID", posid2);
						ds_save2.SetColumn(rowIndex, "VBELN", vbeln);
						ds_save2.SetColumn(rowIndex, "REQNO", reqno);
						ds_save2.SetColumn(rowIndex, "CHK", "Y");
						ds_save2.SetColumn(rowIndex, "CNM", ds_list2.GetColumnNF(i, "CNM"));
						ds_save2.SetColumn(rowIndex, "COD", ds_list2.GetColumnNF(i, "COD"));
						ds_save2.SetColumn(rowIndex, "GRP", ds_list2.GetColumnNF(i, "GRP"));
						if(ds_save.GetColumn(rowIndex, "NUM") == 'Y')         //숫자필드인 경우 형변환 후 처리
							{ds_save2.SetColumn(rowIndex, "KNM", toNumber(ds_list2.GetColumnNF(i, "KNM")));}
						else{ds_save2.SetColumn(rowIndex, "KNM", ds_list2.GetColumnNF(i, "KNM"));}
						ds_save2.SetColumn(rowIndex, "KND", ds_list2.GetColumnNF(i, "KND"));
						ds_save2.SetColumn(rowIndex, "SEQ", ds_list2.GetColumnNF(i, "SEQ"));
			        }
			    } else {
					var rowIndex = ds_save2.AddRow();
					ds_save2.SetColumn(rowIndex, "POSID", posid2);
					ds_save2.SetColumn(rowIndex, "VBELN", vbeln);
					ds_save2.SetColumn(rowIndex, "REQNO", reqno);
					ds_save2.SetColumn(rowIndex, "CHK", "Y");
					ds_save2.SetColumn(rowIndex, "CNM", ds_list2.GetColumnNF(i, "CNM"));
					ds_save2.SetColumn(rowIndex, "COD", ds_list2.GetColumnNF(i, "COD"));
					ds_save2.SetColumn(rowIndex, "GRP", ds_list2.GetColumnNF(i, "GRP"));
					if(ds_save.GetColumn(rowIndex, "NUM") == 'Y')         //숫자필드인 경우 형변환 후 처리
						{ds_save2.SetColumn(rowIndex, "KNM", toNumber(ds_list2.GetColumnNF(i, "KNM")));}
					else{ds_save2.SetColumn(rowIndex, "KNM", ds_list2.GetColumnNF(i, "KNM"));}
					ds_save2.SetColumn(rowIndex, "KND", ds_list2.GetColumnNF(i, "KND"));
					ds_save2.SetColumn(rowIndex, "SEQ", ds_list2.GetColumnNF(i, "SEQ"));
			    }
			}
            //}
        }

        // 영업사양 정보를 save2에 추가한다.
        if(land1.length >= 0){}
        else{
        for(var i=0; i < ds_cond2.GetRowCount(); i++ ) {
            var rowIndex = ds_save2.AddRow();
            ds_save2.SetColumn(rowIndex, "POSID", posid2);                            //WBS
            ds_save2.SetColumn(rowIndex, "VBELN", vbeln);                            //프로젝트번호
            ds_save2.SetColumn(rowIndex, "REQNO", reqno);                            //문서번호
            ds_save2.SetColumn(rowIndex, "CHK", "Y");                                //ZCST802 저장여부
            ds_save2.SetColumn(rowIndex, "CNM", '');                                //특성코드명
            ds_save2.SetColumn(rowIndex, "COD", ds_cond2.GetColumn(i, "COD"));        //특성코드
            ds_save2.SetColumn(rowIndex, "GRP", '');                                //그룹명
            ds_save2.SetColumn(rowIndex, "KND", '');                                //특성코드값
            ds_save2.SetColumn(rowIndex, "KNM", ds_cond2.GetColumn(i, "KNM"));     //특성코드값명
            ds_save2.SetColumn(rowIndex, "SEQ", '01');                                //기본입력값 SEQ'01' 고정
        }
		}
		
        tit_clearActionInfo();
        tit_addMultiActionInfo("cs01:CS0108002B_I3");
        
        // 최초 bom 사양 입력일자 및 wbs  ZMMT124 UPDATE
        // ds_pdm.RowCount() 사양입력 이력 없음 
        // ds_status.GetColumn(0,"CNT") pdm 전송 이력 없음
        if(ds_pdm.RowCount() == 0 and ds_status.GetColumn(0,"CNT") == 0) {
			tit_addSingleActionInfo("cs01:CS0108002B_U5");        
        }

        tit_callService(
            ""
            , ""
            , "ds_save2=ds_save2 ds_cond=ds_cond"
            , ""
            , ""
            , "fn_afterSave"
            , true);
        }
}

/********************************************************************************
* 기      능   : 닫기
********************************************************************************/
function fn_close() {
    if( ds_list2.GetUpdate() ) {
        if( gfn_showConfirm("저장처리 없이 종료하시겠습니까?") ) {
            if( saveYsNo == "Y" ) {
                parent.fn_query();
                this.close();
            } else {
                this.close();
            }
        }
    } else {
        if( saveYsNo == "Y" ) {
            parent.fn_query();
            this.close();
        } else {
            this.close();
        }
    }
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {

    ds_master2.SetColumn(0, "NAMET2", ds_master.GetColumn(0, "VALUE"));
    ds_master2.SetColumn(0, "NAMET", ds_master.GetColumn(1, "VALUE"));
    ds_master2.SetColumn(0, "LZONE", ds_master.GetColumn(2, "VALUE"));
    ds_master2.SetColumn(0, "CELLP2", ds_master.GetColumn(3, "VALUE"));
    ds_master2.SetColumn(0, "CELLP", ds_master.GetColumn(4, "VALUE"));
    ds_master2.SetColumn(0, "ADD2", ds_master.GetColumn(5, "VALUE"));
    ds_master2.SetColumn(0, "ADD1", ds_master.GetColumn(6, "VALUE"));
    ds_master2.SetColumn(0, "POSID", ds_master.GetColumn(0, "HOGI"));

    /* 배차항목 포함
    if(tab.TabIndex = 0)    ds_list2.Filter("GRP == " + quote("EL_MM"));        //초기'기본'사양으로 세팅
    */
    
    if(tab.TabIndex = 0)    ds_list2.Filter("GRP == " + quote("EL_BASIC"));        //초기'기본'사양으로 세팅
}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트
//=========================================================================================
/********************************************************************************
* 기      능   : 정렬 처리
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex) {
    if( nCell == 0 ) gfn_selectAllGrid(obj,nCell,nCell,true);
    else             gfn_sortGrid(obj, nCell);
}

/********************************************************************************
* 기      능   : 저장 Callback
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
    tab.TabIndex = 0;
    saveYsNo = "Y";
    if (ds_error.rowcount > 0) {
        gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
    } else {
        // 변경 데이터에 대한 상태값을 초기화 한다.
        dataInitStat();
        // 쿼리 조회하여 최종 PDM 전송 자료 데이터셑을 생성한다.
        fn_queryPdm();
    }
}

/********************************************************************************
* 기      능   : PDM 저장정보 조회
********************************************************************************/
function fn_queryPdm() {
    tit_clearActionInfo();
//    if(pdm803 == 'Y') {
//        tit_addSingleActionInfo("cs01:CS0108002B_S6");     // PDM 전송할 BOM 사양정보 조회(재전송 경우) yar
//    } else {
//        tit_addSingleActionInfo("cs01:CS0108002B_S3");     // PDM 전송할 BOM 사양정보 조회
//    }
    // 최초 입력 및 변경된 내역만 반영
    tit_addSingleActionInfo("cs01:CS0108002B_S6");     // PDM 전송할 BOM 사양정보 조회(재전송 경우) yar
    tit_addSingleActionInfo("cs01:CS0108002B_S4");         // PDM 전송상태 조회

    tit_callService(
        ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_pdm=ds_pdm ds_status=ds_status"
        , ""
        , "fn_afterQueryPdm"
        , true);
}

/********************************************************************************
* 기      능   : PDM 저장정보 조회 Callback
********************************************************************************/
function fn_afterQueryPdm(errCode, errMsg) {
    if (ds_error.rowcount > 0) {
        gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
    } else {
        gfn_showAlert("저장 되었습니다.");
    }
}

function Tab_OnChanging(obj,nOldIndex,nNewIndex) {
    /* 배차항목 포함
    if(tab.TabIndex = 0)    ds_list2.Filter("GRP == " + quote("EL_MM"));
    if(tab.TabIndex = 1)    ds_list2.Filter("GRP == " + quote("EL_BASIC"));
    if(tab.TabIndex = 2)    ds_list2.Filter("GRP == " + quote("EL_INSIDE"));
    if(tab.TabIndex = 3)    ds_list2.Filter("GRP == " + quote("EL_OUTSIDE"));
    if(tab.TabIndex = 4)    ds_list2.Filter("GRP == " + quote("EL_OPTION"));
    if(tab.TabIndex = 5)    ds_list2.Filter("GRP == " + quote("EL_LAYOUT"));
    if(tab.TabIndex = 6)    ds_list2.Filter("GRP == " + quote("EL_EFH"));
    */

    if(tab.TabIndex = 0)    ds_list2.Filter("GRP == " + quote("EL_BASIC"));
    if(tab.TabIndex = 1)    ds_list2.Filter("GRP == " + quote("EL_INSIDE"));
    if(tab.TabIndex = 2)    ds_list2.Filter("GRP == " + quote("EL_OUTSIDE"));
    if(tab.TabIndex = 3)    ds_list2.Filter("GRP == " + quote("EL_OPTION"));
    if(tab.TabIndex = 4)    ds_list2.Filter("GRP == " + quote("EL_LAYOUT"));
    if(tab.TabIndex = 5)    ds_list2.Filter("GRP == " + quote("EL_EFH"));
}

function grd_list_OnCellDblClick(obj,nRow,nCell,nX,nY,nPivotIndex) {
    //KEYIN 값인 경우 사양별특성값지정Detail 팝업창 비활성화
    if (grd_list.CurrentCell == '2'){       //'특성값' 필드
        if (ds_list2.getColumn(ds_list2.currow, "KND") == 'KEYIN' or ds_list2.getColumn(ds_list2.currow, "KND") =='KEY IN') return;

        //시스템공사 외 현장은 배차정보입력 불가
        if(substr(posid2, 6, 2) <> 'NC' && ds_list2.GetColumn(ds_list2.currow, "GRP") == "EL_MM") {
            gfn_showAlert("시스템공사 외 현장은 배차정보를 입력하실 수 없습니다.");
            return;
        }

        if(ds_list2.getColumn(ds_list2.currow, "COD") == 'EL_ADD1') { // 우편번호 팝업 호출
            ufn_openZipcode();
        } else {
            var fa_cod = quote(ds_list2.GetColumn(ds_list2.row, "COD"));
            var args = "cod=" + fa_cod;
            gfn_openPopup("CS0108003B", true, args);
        }
    }
}

//선택한 row의 CNT값이 0 이상일 경우 수정불가(팝업으로만 선택)
function grd_list_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex) {

    if (ds_list.getColumn(ds_list.currow, "CNT") > 0) grd_list.Editable = false;
    else                                              grd_list.Editable = true;
}

function tab00_OnChanged(obj,nOldIndex,nNewindex)
{
    tabindex = nNewindex;
    return;
}

/********************************************************************************
* 기      능   : PDM  전송
********************************************************************************/
function btn_pdm_OnClick(obj)    //ZSDT0005 PDM BOM사양전송
{
    var cal_shdat= gfn_getAfterDate(gfn_getCurrDate(),21);

    //TP_STATUS 예외처리(전송불가)
    //동일WBS건일 경우 zsdt0005 키값 동일-> 오프라인으로 처리
    if(ds_status.GetColumn(0, "CNT") > 0) {
        if(pdm803 == "N") {
            gfn_showAlert("PDM 전송이 완료되어 수정이 불가합니다.");
            return;
        }
    }

    //수주취소(ZCST001-DOC5) 사양전송 불가 2016.07.13 YAR
    //if(length(doc5) > 0 && apstat5 <> '5') {
    /*
    if(length(doc5) > 0 && apstat5 == '1' || length(doc5) > 0 && apstat5 == '3' || 
		length(doc5) > 0 && apstat5 == '4' || length(doc5) > 0 && apstat5 == '6') { // 2020.01.07 이동진 요청으로 기안반송 이어도 사양값 입력가능하도록 변경. jhhan    
        gfn_showAlert("수주취소현장으로 사양전송이 불가합니다.");
        return;
    }
    */
    if(length(doc5) > 0 && (apstat5 == '1' || apstat5 == '3' || apstat5 == '4' || apstat5 == '6')) { // 2020.01.07 이동진 요청으로 기안반송 이어도 사양값 입력가능하도록 변경. jhhan
        gfn_showAlert("수주취소현장으로 사양입력이 불가합니다.");
        return;
    }
    
    

    if(ds_pdm.GetColumn(0, "CHK") <> 'Y') {        //ZCST802 저장한 이력 없는 경우(저장시 ZCST802의 CHK 값 'Y')
        gfn_showAlert("BOM 사양 입력 전입니다.");
        return;
    }

    if( gfn_showConfirm("PDM 전송 하시겠습니까?") ) {
		tit_clearActionInfo();
		tit_addMultiActionInfo("cs01:CS0108002B_I4");         //ZSDT0005 사양전송
		
		//==================ZEAITZSDT0005 : EAI 인터페이스 테이블 추가 =================
		tit_addMultiActionInfo("cs01:CS0108002B_I5");         //ZEAITZSDT0005 사양전송
				
		tit_addMultiActionInfo("cs01:CS0108002B_U1");         //ZCST802 (사양전송) PDM_CHK 여부 'Y' (해당 WBS별)
		tit_addMultiActionInfo("cs01:CS0108002B_U4");         //ZCST803(사양재전송) PDM_CHK 여부 'Y' (해당 WBS별)
		tit_addMultiActionInfo("cs01:CS0108002B_U6");        //PDM_CHK 및 일자 정보 ZMMT124 UPDATE
		//if(substr(posid2, 6,2) == 'NC'){                     //시스템공사(NC)현장인 경우
		//	tit_addSingleActionInfo("cs01:CS0108002B_U2");   //배차정보 ZMASTER01 UPDATE
		//tit_addMultiActionInfo("cs01:CS0108002B_U3");     //납기일 UPDATE
		}
	
		tit_callService(
			 ""
			, ""
			, "ds_pdm=ds_pdm ds_cond=ds_cond"
			, ""
			, ""
			, "fn_afterPdm"
			, "");
    }

}

/********************************************************************************
* 기      능   : PDM 저장 Callback
********************************************************************************/
function fn_afterPdm(errCode, errMsg) {
    tab.TabIndex = 0;
    if (ds_error.rowcount > 0) {
        gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
    } else {
		saveYsNo = "Y";
        gfn_openMsgWin("PDM 전송이 되었습니다.", "", "A", "PDM");
    }
}

function grd_list_OnChar(obj,strPreText,nChar,strPostText,nLLParam,nHLParam,nRow,nCell,nPivotIndex)
{
    // 소수점 . -> nChar 46
    if(ds_list2.GetColumn(nRow, "NUM") == 'Y' )              // 숫자필드 예외처리
    {
        /*
        if(nChar < '48' or '57' < nChar and nChar <> '8'){    // '8' Backspace
            gfn_showAlert("숫자 타입만 입력 가능합니다.");
            ds_list2.SetColumn(nRow, "KNM", 0);
        }
        if(length(nChar) == 0)    // 숫자필드에 '' 값 들어갈 수 없음
        {
            ds_list2.SetColumn(nRow, "KNM", 0);
        }
        */
        // 기능개선 16.11.01
        if( !isDigit(strPostText) ) {
               ds_list2.fireevent = false;
            ds_list2.SetColumn(nRow, "KNM", "0");
               ds_list2.fireevent = true;
            gfn_showAlert("숫자 타입만 입력 가능합니다.");
            var oldValue = ds_list2.GetOrgColumn(nRow, "KNM");
               ds_list2.fireevent = false;
            ds_list2.SetColumn(nRow, "KNM", oldValue);
               ds_list2.fireevent = true;
        }
    }

    if(substr(posid2, 6, 2) <> 'NC' && ds_list2.GetColumn(ds_list2.currow, "GRP") == "EL_MM"){
           gfn_showAlert("시스템공사 외 현장은 배차정보를 입력하실 수 없습니다.");
           ds_list2.SetColumn(nRow, "KNM", '');
    }
}

//숫자여부 확인
function cf_IsNumberByDecimal(sNumber)
{
    var i;
    var end = length(sNumber);
    for(i = 0; i < end; i++)
    {
        if(asc(CharAt(sNumber, i)) == 46) {
            if(i == 0 || i == end-1) {
                return false;
            }
            }else if(asc(CharAt(sNumber, i)) < 48 || asc(CharAt(sNumber, i)) > 57) {
                return false;
            }
        }
    return true;
}

/********************************************************************************
* 기      능   : 우편번호 검색
********************************************************************************/
var strZipcodeObj;
function ufn_openZipcode(Obj) {
    var arg = "strObj="+quote(Obj.id);
    strZipcodeObj=Obj.id;
    AxMSIE0.Navigate2(G_SERVER_URL + "addressSearchLink.jsp");
}

var chk = 0;
function AxMSIE0_TitleChange(obj,Text) {
    chk++;
    if(Text != "address link") {
        if(chk == 2) {
            ufn_setAddr();
            chk = 1;
        }
    } else {
        chk = 1;
    }
}

function ufn_setAddr() {
    var objDocument = AxMSIE0.Document;

    var roadAddrPart1 = objDocument.getElementById('roadAddrPart1').value;
    var roadAddrPart2 = objDocument.getElementById('roadAddrPart2').value;

    var roadAddr = roadAddrPart1 + ' ' + roadAddrPart2;
    var jibunAddr = objDocument.getElementById('jibunAddr').value;

    var addrDetail = objDocument.getElementById('addrDetail').value;

    var zipNo = objDocument.getElementById('zipNo').value;

    var tmpAddr = roadAddr + ' ' + addrDetail;

    var tmpRow = ds_list2.currow;

    ds_list2.SetColumn(tmpRow, "KNM", roadAddr);
    ds_list2.SetColumn(tmpRow+1, "KNM", addrDetail);
}

/********************************************************************************
* 기      능   : 데이터 변경상태 초기화
********************************************************************************/
function dataInitStat() {
    ds_list2.fireevent = false;
    for(var i=0; i < ds_list2.GetRowCountNF(); i++) {
        ds_list2.SetColumnNF(i, "ORGKNM", ds_list2.GetColumnNF(i, "KNM"));
        ds_list2.SetColumnNF(i, "STATUS", "R");
    }
    ds_list2.fireevent = true;
    ds_list2.ApplyChange();
}
]]></Script>
</Window>