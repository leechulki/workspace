<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="72" Id="CS0102001I" Left="8" OnKeyDown="gfn_EnterInForm" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="업무구분&#32;지정" Top="8" Ver="1.0" Width="360" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="JQPRNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="JOBKIND" size="256" summ="default" type="STRING"/>
					<record>
						<JOBKIND></JOBKIND>
						<JQPRNUM></JQPRNUM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list">
				<Contents>
					<colinfo id="SETNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="DESCRIPT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="66" Height="30" Id="Shape0" Left="0" LineColor="user1" Right="352" TabOrder="1" Top="36" Type="Rectangle" Width="352"></Shape>
		<Div Height="36" Id="div_btn" TabOrder="2" Text="Div0" Url="WB01::CommBtnForm.xml" Width="352">
			<Contents></Contents>
		</Div>
		<Radio Border="None" Height="16" Id="rd_car_copy" INDEX="0" Left="113" Style="sty_ipt_search_chk" TabOrder="3" Top="44" Width="120">
			<Contents>
				<Layout code="1" default="true" height="20" left="10" text="서울" top="0" width="60"/>
				<Layout code="2" height="20" left="80" text="이천" top="0" width="60"/>
			</Contents>
		</Radio>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var strArr = []; // 2018.08.17 Han J.H JQPR.NO를 저장하기 위한 변수
var saveChk = 0;
//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) 
{
	// 2018.08.17 Han J.H JQPR.NO를 배열에 저장시킨다.
	if(fa_jqprnum != null) {
		strArr = fa_jqprnum.split(",");
	}
	
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initForm();	
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) 
{	
}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) 
{
	return gfn_isFormUnload(obj);
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() 
{	

}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() 
{
	close(null);
}
/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() 
{
	// Excel Export 
	//gfn_saveToExcel(grd_list, true );	
}
/********************************************************************************
* 기      능   : 취소 35
********************************************************************************/
function fn_cancel() 
{
	
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) 
{
	gfn_showSearchMsg(grd_list);
}

/********************************************************************************
* 기      능   : 업무구분 저장
********************************************************************************/
function fn_save() {
	
	// 매개변수 세팅을 위한 로우추가
	ds_cond.AddRow();
	
	for(var i=0; i<strArr.length; i++) {
		tit_clearActionInfo();
		tit_addSearchActionInfo("cs01:CS0102001I_U1");
		
		ds_cond.SetColumn(0, "JQPRNUM", strArr[i]);
		
		if(rd_car_copy.Text == "서울") {
			ds_cond.SetColumn(0, "JOBKIND", "1");
		} else if(rd_car_copy.Text == "이천") {
			ds_cond.SetColumn(0, "JOBKIND", "2");
		}
		
		// 현재 인덱스 번호가 배열의 마지막 일때, 인덱스 값을 저장함
		if(i+1 == strArr.length) {
			saveChk = i+1;
		}
		
		tit_callService(
					""
					, ""
					, "ds_cond=ds_cond"
					, ""
					, ""
					, "fn_afterSave"
					, true);			
	}
	
}

/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) 
{
	ds_cond.ClearData();
	
	if ( errCode != 0 ) {
		gfn_showMsg("CE00001");
	} else {
		// 가장 마지막 저장 시, 업무구분 지정 팝업을 종료시킨다.
		if(saveChk == strArr.length) {
			saveChk = 0; // 초기화
			gfn_showMsg("CI00003");
			ufn_closeWindow();
		}	
		//fn_query();
	}

}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/
function ufn_closeWindow() 
{
	close("Y");
}
//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	/*if ( nCell == 0 ) 
	{
		// 그리드 표시할 컬럼 선택 
		gfn_selectGridCol(obj);
	} 
	else 
	{
		// 그리드 정렬 처리 
		gfn_sortGrid(obj,nCell);
	}*/
}
/********************************************************************************
* 기      능   : 데이터셋 값 변경 시 - Flag 처리 
********************************************************************************/
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	//gfn_changeFlag( obj, strColumnID, nRow, "FLAG" );
}

]]></Script>
</Window>