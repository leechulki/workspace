<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="520" Id="CS0108002C" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="시스템공사&#32;사양별&#32;특성값&#32;지정" Top="8" Ver="1.0" Width="976" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="REQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PARAMTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="PARAMCTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="PARAMNCYS" size="256" summ="default" type="STRING"/>
					<colinfo id="MATCHFLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="TRNSYSNO" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="PDM803" size="256" summ="default" type="STRING"/>
					<record>
						<GRP></GRP>
						<MANDT></MANDT>
						<MATCHFLAG></MATCHFLAG>
						<PARAMCTYPE></PARAMCTYPE>
						<PARAMNCYS></PARAMNCYS>
						<PARAMTYPE></PARAMTYPE>
						<PDM803></PDM803>
						<POSID></POSID>
						<QTNUM></QTNUM>
						<REQNO></REQNO>
						<SEQ></SEQ>
						<TRNSYSNO></TRNSYSNO>
						<VBELN></VBELN>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond2">
				<Contents>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_status">
				<Contents>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list2">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="NUM" size="256" summ="default" type="STRING"/>
					<colinfo id="NEC" size="256" summ="default" type="STRING"/>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="EXP" size="256" summ="default" type="STRING"/>
					<colinfo id="DEF_KND" size="256" summ="default" type="STRING"/>
					<colinfo id="TMPCOD" size="256" summ="default" type="STRING"/>
					<colinfo id="ORGKNM" size="256" summ="default" type="STRING"/>
					<colinfo id="STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="DUTYVALUE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_save">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="NUM" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="NEC" size="256" summ="default" type="STRING"/>
					<record>
						<CHK></CHK>
						<CNM></CNM>
						<COD></COD>
						<GRP></GRP>
						<KND></KND>
						<KNM></KNM>
						<NEC></NEC>
						<NUM></NUM>
						<VBELN></VBELN>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_save0">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="NUM" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="NEC" size="256" summ="default" type="STRING"/>
					<record>
						<CHK></CHK>
						<CNM></CNM>
						<COD></COD>
						<GRP></GRP>
						<KND></KND>
						<KNM></KNM>
						<NEC></NEC>
						<NUM></NUM>
						<VBELN></VBELN>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_save2">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="REQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="BSTDK" size="256" summ="default" type="STRING"/>
					<colinfo id="RDATE" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_master">
				<Contents>
					<colinfo id="LZONE" size="256" summ="default" type="STRING"/>
					<colinfo id="ADD1" size="256" summ="default" type="STRING"/>
					<colinfo id="ADD2" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET" size="256" summ="default" type="STRING"/>
					<colinfo id="CELLP" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET2" size="256" summ="default" type="STRING"/>
					<colinfo id="CELLP2" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_master2">
				<Contents>
					<colinfo id="LZONE" size="256" summ="default" type="STRING"/>
					<colinfo id="ADD1" size="256" summ="default" type="STRING"/>
					<colinfo id="ADD2" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET" size="256" summ="default" type="STRING"/>
					<colinfo id="CELLP" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET2" size="256" summ="default" type="STRING"/>
					<colinfo id="CELLP2" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<record>
						<ADD1></ADD1>
						<ADD2></ADD2>
						<CELLP></CELLP>
						<CELLP2></CELLP2>
						<LZONE></LZONE>
						<NAMET></NAMET>
						<NAMET2></NAMET2>
						<POSID></POSID>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_pdm">
				<Contents>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="MOWBS" size="256" summ="default" type="STRING"/>
					<colinfo id="CUOBJ" size="256" summ="default" type="STRING"/>
					<colinfo id="VALUE" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="CR_DATE" size="256" summ="default" type="STRING"/>
					<colinfo id="CR_TIME" size="256" summ="default" type="STRING"/>
					<colinfo id="REQNO" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error">
				<Contents>
					<colinfo id="ERRCODE" size="256" summ="default" type="STRING"/>
					<colinfo id="ERRMSG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_match">
				<Contents>
					<column id="Const0" type="STRING"></column>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="NUM" size="256" summ="default" type="STRING"/>
					<colinfo id="NEC" size="256" summ="default" type="STRING"/>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="EXP" size="256" summ="default" type="STRING"/>
					<colinfo id="DEF_KND" size="256" summ="default" type="STRING"/>
					<colinfo id="TMPCOD" size="256" summ="default" type="STRING"/>
					<colinfo id="ORGKNM" size="256" summ="default" type="STRING"/>
					<colinfo id="STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="DUTYVALUE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_match_rslt">
				<Contents>
					<colinfo id="SEQN" size="256" summ="default" type="STRING"/>
					<colinfo id="SENDYSNO" size="256" summ="default" type="STRING"/>
					<colinfo id="ERR_MESSAGE" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="CALCULAT" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCKNO" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCKNOSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="TRANS" size="256" summ="default" type="STRING"/>
					<colinfo id="CALCOD" size="256" summ="default" type="STRING"/>
					<colinfo id="CALRESULT" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list2_excel1">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="NUM" size="256" summ="default" type="STRING"/>
					<colinfo id="NEC" size="256" summ="default" type="STRING"/>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="EXP" size="256" summ="default" type="STRING"/>
					<colinfo id="DEF_KND" size="256" summ="default" type="STRING"/>
					<colinfo id="TMPCOD" size="256" summ="default" type="STRING"/>
					<colinfo id="ORGKNM" size="256" summ="default" type="STRING"/>
					<colinfo id="STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="DUTYVALUE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list2_excel2">
				<Contents>
					<colinfo id="GRP" size="256" summ="default" type="STRING"/>
					<colinfo id="CNM" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KND" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="NUM" size="256" summ="default" type="STRING"/>
					<colinfo id="NEC" size="256" summ="default" type="STRING"/>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="EXP" size="256" summ="default" type="STRING"/>
					<colinfo id="DEF_KND" size="256" summ="default" type="STRING"/>
					<colinfo id="TMPCOD" size="256" summ="default" type="STRING"/>
					<colinfo id="ORGKNM" size="256" summ="default" type="STRING"/>
					<colinfo id="STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="DUTYVALUE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_duty_rslt">
				<Contents>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="KNM" size="256" summ="default" type="STRING"/>
					<colinfo id="DUTYMSG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_pdm_cp">
				<Contents>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="COD" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="MOWBS" size="256" summ="default" type="STRING"/>
					<colinfo id="CUOBJ" size="256" summ="default" type="STRING"/>
					<colinfo id="VALUE" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="CR_DATE" size="256" summ="default" type="STRING"/>
					<colinfo id="CR_TIME" size="256" summ="default" type="STRING"/>
					<colinfo id="REQNO" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Div Height="36" Id="div_btn" TabOrder="6" Text="Div0" Url="WB01::CommBtnForm.xml" Width="976">
			<Contents></Contents>
		</Div>
		<Tab Border="Flat" FixedImage="FALSE" Font="굴림,9" Height="472" Id="tab" Left="4" MouseOverColor="user16" OnChanging="Tab_OnChanging" SelColor="user15" SelectFont="굴림,9" Style="sty_tab" TabOrder="1" Top="40" Width="656">
			<Contents>
				<TabPage BorderColor="black" Height="447" Id="EL_MM" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="19" Text="0.배차" Top="23" Width="652"></TabPage>
				<TabPage BorderColor="black" Height="447" Id="EL_CHANGE" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="32" Text="교체항목LIST(F)" Top="23" Width="652"></TabPage>
				<TabPage BorderColor="black" Height="447" Id="EL_BASIC" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="19" Text="A.기본" Top="23" Width="652"></TabPage>
				<TabPage BorderColor="black" Height="447" Id="EL_INSIDE" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="26" Text="B.카내의장" Top="23" Width="652"></TabPage>
				<TabPage BorderColor="black" Height="447" Id="EL_OUTSIDE" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="31" Text="C.카외의장" Top="23" Width="652"></TabPage>
				<TabPage BorderColor="black" Height="447" Id="EL_OPTION" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="32" Text="D.OPTION" Top="23" Width="652"></TabPage>
				<TabPage BorderColor="black" Height="447" Id="EL_LAYOUT" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="32" Text="E.LAYOUT" Top="23" Width="652"></TabPage>
				<TabPage BorderColor="black" Height="447" Id="EL_EFH" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="32" Text="E.층고" Top="23" Width="652"></TabPage>
				<TabPage BorderColor="black" Height="447" Id="EL_REUSE" ImageEdgeWidth="2" ImageID="tab_main" Left="2" TabOrder="32" Text="D.교체제외항목" Top="23" Width="652"></TabPage>
			</Contents>
		</Tab>
		<Static BKColor="user1" Height="23" Id="reqno1" Left="296" TabOrder="2" Top="576" Visible="FALSE" Width="0"></Static>
		<Static Height="23" Id="chk1" Left="8" TabOrder="3" Top="560" Width="56"></Static>
		<Static Align="Center" BKColor="user1" Height="23" Id="hogi1" Left="8" TabOrder="4" Top="584" Visible="FALSE" Width="0"></Static>
		<Static Align="Center" BKColor="user1" Height="23" Id="vbeln1" Left="528" TabOrder="5" Top="576" Visible="FALSE" Width="0"></Static>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_match" ImageID="btn_sub_03" Left="799" LeftMargin="12" OnClick="btn_match_OnClick" Style="sty_btn" TabOrder="8" Text="정합성" Top="39" Transparent="TRUE" Width="60"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_templet" ImageID="btn_sub_03" Left="860" LeftMargin="12" OnClick="btn_templet_Click" Style="sty_btn" TabOrder="9" Text="템플릿" Top="39" Transparent="TRUE" Width="60"></Button>
		<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_match_rslt" BkColor2="default" BoldHead="true" Border="Flat" Bottom="512" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="450" Id="grd_matchGrid" InputPanel="FALSE" Left="664" LineColor="user20" LineType="ExHORZ" OnHeadClick="grd_list_OnHeadClick" OnMouseOver="grd_OnMouseOver" Right="968" RowHeight="20" Style="sty_grid" TabOrder="10" TabStop="true" Top="62" UseAutoSizing="Both_Merge" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="304">
			<contents>
				<format id="Default">
					<columns>
						<col width="40"/>
						<col width="180"/>
						<col width="180"/>
						<col width="60"/>
						<col width="250"/>
					</columns>
					<head>
						<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="순번" wordwrap="word"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="오류&#32;메세지" wordwrap="word"/>
						<cell align="left" col="2" color="user21" display="text" font="굴림,9" text="특성이름" wordwrap="word"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="전송구분" wordwrap="word"/>
						<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="체크값" wordwrap="word"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" colid="SEQN" display="text" suppress="1"/>
						<cell align="left" bkcolor2="user22" col="1" colid="ERR_MESSAGE" display="text" suppress="1"/>
						<cell align="center" bkcolor2="user22" bkimagealign="left" col="2" colid="CNM" display="text"/>
						<cell align="center" bkcolor2="user22" col="3" colid="SENDYSNO" display="text" suppress="1"/>
						<cell align="left" bkcolor2="user22" col="4" colid="CALCULAT" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="Button0" ImageID="btn_sub_02" Left="921" LeftMargin="12" OnClick="btn_matchExcel_click" Style="sty_btn" TabOrder="11" Text="엑셀" Top="39" Transparent="TRUE" Width="52"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="Button1" ImageID="btn_sub_04" Left="726" LeftMargin="12" OnClick="btn_checkView_OnClick" Style="sty_btn" TabOrder="12" Text="특성표시" Top="39" Transparent="TRUE" Width="76"></Button>
		<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list2" BkColor2="default" BoldHead="true" Border="Flat" Bottom="513" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="452" Id="grd_list" InputPanel="FALSE" Left="4" LineColor="user20" LineType="ExHORZ" OnCellDBLClick="grd_list_OnCellDblClick" OnCellPosChanged="grd_list_OnCellPosChanged" OnChar="grd_list_OnChar" OnHeadClick="grd_list_OnHeadClick" Right="660" RowHeight="20" Style="sty_grid" TabOrder="12" TabStop="true" Top="61" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="656">
			<contents>
				<format id="Default">
					<columns>
						<col width="0"/>
						<col width="233"/>
						<col width="210"/>
						<col width="0"/>
						<col width="0"/>
						<col width="190"/>
					</columns>
					<head>
						<cell col="0" display="text"/>
						<cell align="center" col="1" color="user21" display="text" domainid="bs.charac" font="굴림,9" text="특성내역" wordwrap="word"/>
						<cell col="2" color="user21" display="text" font="굴림,9" text="특성값" wordwrap="word"/>
						<cell col="3" display="text" text="CNT"/>
						<cell col="4" display="text" domainid="bs.value1" font="굴림,9" text="특성값" wordwrap="word"/>
						<cell col="5" color="user21" display="text" font="굴림,9" text="특성값&#32;설명" wordwrap="word"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" display="text" edit="normal"/>
						<cell bkcolor2="user22" col="1" colid="CNM" color="expr:iif(COD&#32;==&#32;&apos;EL_111&apos;,&#32;&apos;RED&apos;,&#32;&apos;null&apos;)" display="combo"/>
						<cell align="left" checklength="Byte" col="2" colid="KNM" display="text" edit="expr:iif(KND&#32;==&#32;&apos;KEYIN&apos;&#32;OR&#32;KND&#32;==&#32;&apos;KEY&#32;IN&apos;,&#32;&apos;NORMAL&apos;,&#32;&apos;null&apos;)" limit="30"/>
						<cell col="3" colid="CNT" display="text"/>
						<cell align="left" checklength="Byte" col="4" colid="KND" display="text" edit="expr:iif(CNM&#32;==&#32;&apos;KEYIN&apos;,&#32;&apos;normal&apos;,&#32;&apos;null&apos;)" limit="30"/>
						<cell align="left" checklength="Byte" col="5" colid="EXP" display="text" limit="30"/>
					</body>
				</format>
			</contents>
		</Grid>
		<AxMSIE Height="0" Id="AxMSIE0" TitleChange="AxMSIE0_TitleChange" Width="0"></AxMSIE>
		<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list2_excel2" BkColor2="default" BoldHead="true" Border="Flat" Bottom="72" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="25" Height="72" Id="grd_list_excel" InputPanel="FALSE" Left="992" LineColor="user20" LineType="ExHORZ" OnCellDBLClick="grd_list_OnCellDblClick" OnCellPosChanged="grd_list_OnCellPosChanged" OnChar="grd_list_OnChar" OnHeadClick="grd_list_OnHeadClick" Right="1216" RowHeight="20" Style="sty_grid" TabOrder="14" TabStop="true" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="224">
			<contents>
				<format id="Default">
					<columns>
						<col width="97"/>
						<col width="254"/>
						<col width="200"/>
					</columns>
					<head>
						<cell align="center" col="0" color="user21" display="text" domainid="bs.charac" font="굴림,9" text="그룹코드" wordwrap="word"/>
						<cell align="center" col="1" color="user21" display="text" domainid="bs.charac" font="굴림,9" text="특성이름" wordwrap="word"/>
						<cell align="center" col="2" color="user21" display="text" domainid="bs.charac" font="굴림,9" text="특성값" wordwrap="word"/>
						<cell align="center" col="3" color="user21" display="text" domainid="bs.charac" font="굴림,9" text="특성값&#32;설명" wordwrap="word"/>
					</head>
					<body>
						<cell align="center" col="0" colid="GRP" display="text"/>
						<cell align="left" col="1" colid="CNM" display="text"/>
						<cell align="left" col="2" colid="KNM" display="text"/>
						<cell align="left" col="3" colid="EXP" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_duty" ImageID="btn_sub_03" Left="664" LeftMargin="12" OnClick="btn_duty_OnClick" Style="sty_btn" TabOrder="15" Text="DUTY" Top="39" Transparent="TRUE" Width="60"></Button>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 시스템공사 사양별 특성값 지정
 * 작  성  자   : 박수근
 * 작성  일자   : 2016.11.03
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";    // 공통 스크립트
#include "LIB::FormResize_sd.js";    // 공통 스크립트
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다.
//=========================================================================================
var pGubun;
var tabindex;
var hogi;
var saveYsNo="N";
var gChangStat="N";

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
    gfn_initForm();             // Form 로드 이벤트 맨 첫줄에 기술
    fn_init_form();             // 폼 초기화
}

/********************************************************************************
* 기      능   : form UnloadCompleted
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
    return gfn_isFormUnload(obj);
}

/********************************************************************************
* 기      능   : 폼 초기화
********************************************************************************/
function fn_init_form() {
    // 정합성 체크 로직에서 추가된 파라미터 추가 PARAMTYPE, PARAMCTYPE
    // 16.11.01
    ds_cond.SetColumn(0, "PARAMNCYS", "Y");
    ds_cond.SetColumn(0, "PARAMTYPE", "EL");
    ds_cond.SetColumn(0, "PARAMCTYPE", "M");

    if(tab.TabIndex = 0)    ds_cond.SetColumn(0, "GRP", "EL_MM");
    if(tab.TabIndex = 1)    ds_cond.SetColumn(0, "GRP", "EL_CHANGE");
    if(tab.TabIndex = 2)    ds_cond.SetColumn(0, "GRP", "EL_BASIC");
    if(tab.TabIndex = 3)    ds_cond.SetColumn(0, "GRP", "EL_INSIDE");
    if(tab.TabIndex = 4)    ds_cond.SetColumn(0, "GRP", "EL_OUTSIDE");
    if(tab.TabIndex = 5)    ds_cond.SetColumn(0, "GRP", "EL_OPTION");
    if(tab.TabIndex = 6)    ds_cond.SetColumn(0, "GRP", "EL_LAYOUT");
    if(tab.TabIndex = 7)    ds_cond.SetColumn(0, "GRP", "EL_EFH");
    if(tab.TabIndex = 8)    ds_cond.SetColumn(0, "GRP", "EL_REUSE");

    ds_cond.SetColumn(0, "REQNO", reqno);
    ds_cond.SetColumn(0, "POSID", posid2);
    ds_cond.SetColumn(0, "VBELN", vbeln);
    ds_cond.SetColumn(0, "QTNUM", qtnum);	// 견적번호
    ds_cond.SetColumn(0, "PDM803", pdm803); // 재전송여부확인

    if(length(bstkd) == 0){        //ZSDT0005 테이블에 현장명 ''로 넘어갈 시 ' '로 처리
        bstkd = ' ';
    }

    // 폼 초기화(파라미터 값 셑팅 후 초기 화면 조회 함수 실행)
    fn_query();
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회
********************************************************************************/
function fn_query() {
    // 영업계약관련 필드
    ds_cond2.ClearData();
    ds_cond2.AddRow();
    ds_cond2.SetColumn(0, "COD", "VKGRP");        //팀
    ds_cond2.SetColumn(0, "KNM", vkgrp);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(1, "COD", "VKBUR");        //부서
    ds_cond2.SetColumn(1, "KNM", vkbur);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(2, "COD", "VBELN");        //프로젝트번호
    ds_cond2.SetColumn(2, "KNM", vbeln);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(3, "COD", "BSTDK");        //수주일(MMPR는 수주일로 대체, 그 외: VBKD테이블)
    ds_cond2.SetColumn(3, "KNM", bstdk);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(4, "COD", "BSTKD");        //현장명
    ds_cond2.SetColumn(4, "KNM", bstkd);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(5, "COD", "VDATU");        //납기일
    ds_cond2.SetColumn(5, "KNM", vdatu);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(6, "COD", "KUNNR");        //고객번호(MMPR: ZMASTER01, 그 외:ZCST121)
    ds_cond2.SetColumn(6, "KNM", kunnr);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(7, "COD", "CONTR_DA");    //계약일(FM청구: CS126_USD, MMPR: 작성일, 견적작성건: 수주일)
    ds_cond2.SetColumn(7, "KNM", contr_da);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(8, "COD", "MATNR");        //기종구분(L-1000, S-1000..)
    ds_cond2.SetColumn(8, "KNM", matnr);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(9, "COD", "MANAGER");    //영업담당자
    ds_cond2.SetColumn(9, "KNM", zman_nm);
    ds_cond2.AddRow();
    ds_cond2.SetColumn(10, "COD", "MANAGER2");    //기술영업담당자
    ds_cond2.SetColumn(10, "KNM", zman_nm2);

    ds_list2.ClearData();
    ds_save.ClearData();
    ds_save0.ClearData();
    tit_clearActionInfo();
    tit_addSingleActionInfo("cs01:CS0108002B_S1");                      // BOM청구 리스트 조회

    //if(pdm803 == 'Y') tit_addSingleActionInfo("cs01:CS0108002B_S6");     // PDM 전송할 BOM 사양정보 조회(재전송 경우) yar
    //else
    //tit_addSingleActionInfo("cs01:CS0108002B_S3");     // PDM 전송할 BOM 사양정보 조회

    // 최초 입력되거나 변경된 정보에 대해서만 반영
    tit_addSingleActionInfo("cs01:CS0108002B_S6");     // PDM 전송할 BOM 사양정보 조회   
    tit_addSingleActionInfo("cs01:CS0108002B_S4");     // PDM 전송상태 조회
    tit_addSingleActionInfo("cs01:CS0108002B_S5");     // PDM 전송시 UPDATE하는 배차정보 조회

    tit_callService(
        ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_list2=ds_list2 ds_pdm=ds_pdm ds_status=ds_status ds_master=ds_master"
        , ""
        , "fn_afterQuery"
        , true);
}

/********************************************************************************
* 기      능   : 저장
********************************************************************************/
function fn_save() {
    if(ds_status.GetColumn(0, "CNT") > 0) {                    //ZSDT0005 해당wbs별 TP_STATUS = 'X'인 경우 저장불가
        if(pdm803 == "N") {
            gfn_openMsgWin("PDM 전송이 완료되어 수정이 불가합니다.", "", "A", "저장");
            return;
        }
    }

    if(length(doc5) > 0 && apstat5 <> '5') {
        gfn_openMsgWin("수주취소현장으로 사양입력이 불가합니다.", "", "A", "저장");
        return;
    }

	// 시스템 변경 자료 여부 체크
	dataChangeStat();
	if( gChangStat = "N" ) {
        gfn_openMsgWin("사양이 입력되지 않았습니다.", "", "A", "저장");
        return;
	}

    if( gfn_showConfirm("CI00008") ) {
        
        ds_save2.ClearData();
        // ds_save2를 이용하여 저장 처리를 수행한다.
        // 현재 입력된 값에 대한 입력값을 체크하면서 ds_list2에 입력된 자료를 등록한다.
		// 입력값이 존재
		var searchRow = ds_list2.SearchRowNF("COD='EL_FCLIST'");
		var EL_FCLIST = ds_list2.GetColumnNF(searchRow, "KNM");
        for(var i = 0; i < ds_list2.GetRowCountNF(); i++) {
            // 필수값 체크
            if(ds_list2.GetColumnNF(i, "NEC") == 'Y' && (parseInt(ds_list2.GetColumnNF(i, "KNM")) == 0 || length(ds_list2.GetColumnNF(i, "KNM")) == 0)){
                alert("필수 항목을 입력해주세요. " + "(" + ds_list2.GetColumnNF(i, "CNM") + ")");
                return;
            }

            // 입력값 체크
            if(ds_list2.GetColumnNF(i, "NUM") == 'Y' && length(ds_list2.GetColumnNF(i, "KNM")) == 0){
                alert("숫자필드에는 공백이 들어갈 수 없습니다" + "(" + ds_list2.GetColumnNF(i, "CNM") + ")");
                return;
            }
            if( substr(posid2, 6,2) == 'NC' ) {
                if( length(ds_list2.GetColumnNF(i, "KNM")) == 0 && ds_list2.GetColumnNF(i, "COD") <> 'EL_111' && ds_list2.GetColumnNF(i, "GRP") == 'EL_MM' ) {
                  alert("배차관련정보를 입력해주세요. " + "(" + ds_list2.GetColumnNF(i, "CNM") + ")");
                  return;
                }
            }
            
			if( ds_list2.GetColumnNF(i, "STATUS") == "U" ) {
			    if( EL_FCLIST == "AN" ) {
					var rowIndex = ds_save2.AddRow();
					ds_save2.SetColumn(rowIndex, "POSID", posid2);
					ds_save2.SetColumn(rowIndex, "VBELN", vbeln);
					ds_save2.SetColumn(rowIndex, "REQNO", reqno);
					ds_save2.SetColumn(rowIndex, "CHK", "Y");
					ds_save2.SetColumn(rowIndex, "CNM", ds_list2.GetColumnNF(i, "CNM"));
					ds_save2.SetColumn(rowIndex, "COD", ds_list2.GetColumnNF(i, "COD"));
					ds_save2.SetColumn(rowIndex, "GRP", ds_list2.GetColumnNF(i, "GRP"));
					if( ds_list2.GetColumnNF(i, "NUM") == 'Y') {
						ds_save2.SetColumn(rowIndex, "KNM", toNumber(ds_list2.GetColumnNF(i, "KNM")));
					} else {
						ds_save2.SetColumn(rowIndex, "KNM", ds_list2.GetColumnNF(i, "KNM"));
					}        
					ds_save2.SetColumn(rowIndex, "KND", ds_list2.GetColumnNF(i, "KND"));
					ds_save2.SetColumn(rowIndex, "SEQ", ds_list2.GetColumnNF(i, "SEQ"));
			    } else {
			        if( ds_list2.GetColumnNF(i, "GRP") != "EL_REUSE" ) {
						var rowIndex = ds_save2.AddRow();
						ds_save2.SetColumn(rowIndex, "POSID", posid2);
						ds_save2.SetColumn(rowIndex, "VBELN", vbeln);
						ds_save2.SetColumn(rowIndex, "REQNO", reqno);
						ds_save2.SetColumn(rowIndex, "CHK", "Y");
						ds_save2.SetColumn(rowIndex, "CNM", ds_list2.GetColumnNF(i, "CNM"));
						ds_save2.SetColumn(rowIndex, "COD", ds_list2.GetColumnNF(i, "COD"));
						ds_save2.SetColumn(rowIndex, "GRP", ds_list2.GetColumnNF(i, "GRP"));
					    if( ds_list2.GetColumnNF(i, "NUM") == 'Y') {
							ds_save2.SetColumn(rowIndex, "KNM", toNumber(ds_list2.GetColumnNF(i, "KNM")));
						} else {
							ds_save2.SetColumn(rowIndex, "KNM", ds_list2.GetColumnNF(i, "KNM"));
						}        
						ds_save2.SetColumn(rowIndex, "KND", ds_list2.GetColumnNF(i, "KND"));
						ds_save2.SetColumn(rowIndex, "SEQ", ds_list2.GetColumnNF(i, "SEQ"));
			        }
			    }
			}
        }

        // 이전에 교체제외 항목 값이 존재하는 경우 해당 값을 초기화 한다.
		if( EL_FCLIST != "AN" ) {
		    ds_list2.fireevent = false;
			for(var i = 0; i < ds_list2.GetRowCountNF(); i++) {
			    if( ds_list2.GetColumnNF(i, "GRP") == "EL_REUSE" && length(ds_list2.GetColumnNF(i, "KNM")) > 0 ) {
					var rowIndex = ds_save2.AddRow();
					ds_save2.SetColumn(rowIndex, "POSID", posid2);
					ds_save2.SetColumn(rowIndex, "VBELN", vbeln);
					ds_save2.SetColumn(rowIndex, "REQNO", reqno);
					ds_save2.SetColumn(rowIndex, "CHK", "Y");
					ds_save2.SetColumn(rowIndex, "CNM", ds_list2.GetColumnNF(i, "CNM"));
					ds_save2.SetColumn(rowIndex, "COD", ds_list2.GetColumnNF(i, "COD"));
					ds_save2.SetColumn(rowIndex, "GRP", ds_list2.GetColumnNF(i, "GRP"));
				    if( ds_list2.GetColumnNF(i, "NUM") == 'Y') {
						ds_save2.SetColumn(rowIndex, "KNM", "0");
						ds_list2.SetColumnNF(i, "KNM", "0");
					} else {
						ds_save2.SetColumn(rowIndex, "KNM", "");
						ds_list2.SetColumnNF(i, "KNM", "");
					}        
					ds_save2.SetColumn(rowIndex, "KND", ds_list2.GetColumnNF(i, "KND"));
					ds_save2.SetColumn(rowIndex, "SEQ", ds_list2.GetColumnNF(i, "SEQ"));
			    }
            }
		    ds_list2.fireevent = true;
		}

        // 영업사양 정보를 save2에 추가한다.
        for(var i=0; i < ds_cond2.GetRowCount(); i++ ) {
            var rowIndex = ds_save2.AddRow();
            ds_save2.SetColumn(rowIndex, "POSID", posid2);                            //WBS
            ds_save2.SetColumn(rowIndex, "VBELN", vbeln);                            //프로젝트번호
            ds_save2.SetColumn(rowIndex, "REQNO", reqno);                            //문서번호
            ds_save2.SetColumn(rowIndex, "CHK", "Y");                                //ZCST802 저장여부
            ds_save2.SetColumn(rowIndex, "CNM", '');                                //특성코드명
            ds_save2.SetColumn(rowIndex, "COD", ds_cond2.GetColumn(i, "COD"));        //특성코드
            ds_save2.SetColumn(rowIndex, "GRP", '');                                //그룹명
            ds_save2.SetColumn(rowIndex, "KND", '');                                //특성코드값
            ds_save2.SetColumn(rowIndex, "KNM", ds_cond2.GetColumn(i, "KNM"));     //특성코드값명
            ds_save2.SetColumn(rowIndex, "SEQ", '01');                                //기본입력값 SEQ'01' 고정
        }

        tit_clearActionInfo();
        tit_addMultiActionInfo("cs01:CS0108002B_I3");
        
        // 최초 bom 사양 입력일자 및 wbs  ZMMT124 UPDATE
        // ds_pdm.RowCount() 사양입력 이력 없음 
        // ds_status.GetColumn(0,"CNT") pdm 전송 이력 없음
        if(ds_pdm.RowCount() == 0 and ds_status.GetColumn(0,"CNT") == 0) {
			tit_addSingleActionInfo("cs01:CS0108002B_U5");        
        }
        tit_callService(
            ""
            , ""
            , "ds_save2=ds_save2 ds_cond=ds_cond"
            , ""
            , ""
            , "fn_afterSave"
            , true);
    }
}

/********************************************************************************
* 기      능   : 액셀
********************************************************************************/
function fn_excel() {
    // 그리드에 보이는 값을 엑셀로 출력한다.
    //ds_spec_column_excel.ClearData();
    //ds_spec_column_excel.Copy(ds_spec_column);
    //gfn_saveToExcel(grd_detail_excel, true, "", "", false, true);
    ds_list2_excel1.ClearData();
    ds_list2_excel2.ClearData();
    ds_list2_excel1.Copy(ds_list2);
    ds_list2_excel2.fireevent = false;
    ds_list2_excel1.Filter("GRP == " + quote("EL_MM"));
    for(var i=0; i < ds_list2_excel1.GetRowCount(); i++) {
        var rowIndex = ds_list2_excel2.AddRow();
        ds_list2_excel2.SetColumn(rowIndex, "GRP", "0.배차");
        ds_list2_excel2.SetColumn(rowIndex, "CNM", ds_list2_excel1.GetColumn(i, "CNM"));
        if( ds_list2_excel1.GetColumn(i, "KNM") == "0" ) {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", "");
        } else {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", ds_list2_excel1.GetColumn(i, "KNM"));
        }
        ds_list2_excel2.SetColumn(rowIndex, "EXP", ds_list2_excel1.GetColumn(i, "EXP"));
    }

    ds_list2_excel1.Filter("GRP == " + quote("EL_CHANGE"));
    for(var i=0; i < ds_list2_excel1.GetRowCount(); i++) {
        var rowIndex = ds_list2_excel2.AddRow();
        ds_list2_excel2.SetColumn(rowIndex, "GRP", "교체항목LIST(F)");
        ds_list2_excel2.SetColumn(rowIndex, "CNM", ds_list2_excel1.GetColumn(i, "CNM"));
        if( ds_list2_excel1.GetColumn(i, "KNM") == "0" ) {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", "");
        } else {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", ds_list2_excel1.GetColumn(i, "KNM"));
        }
        ds_list2_excel2.SetColumn(rowIndex, "EXP", ds_list2_excel1.GetColumn(i, "EXP"));
    }

    ds_list2_excel1.Filter("GRP == " + quote("EL_BASIC"));
    for(var i=0; i < ds_list2_excel1.GetRowCount(); i++) {
        var rowIndex = ds_list2_excel2.AddRow();
        ds_list2_excel2.SetColumn(rowIndex, "GRP", "A.기본");
        ds_list2_excel2.SetColumn(rowIndex, "CNM", ds_list2_excel1.GetColumn(i, "CNM"));
        if( ds_list2_excel1.GetColumn(i, "KNM") == "0" ) {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", "");
        } else {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", ds_list2_excel1.GetColumn(i, "KNM"));
        }
        ds_list2_excel2.SetColumn(rowIndex, "EXP", ds_list2_excel1.GetColumn(i, "EXP"));
    }

    ds_list2_excel1.Filter("GRP == " + quote("EL_INSIDE"));
    for(var i=0; i < ds_list2_excel1.GetRowCount(); i++) {
        var rowIndex = ds_list2_excel2.AddRow();
        ds_list2_excel2.SetColumn(rowIndex, "GRP", "B.카내의장");
        ds_list2_excel2.SetColumn(rowIndex, "CNM", ds_list2_excel1.GetColumn(i, "CNM"));
        if( ds_list2_excel1.GetColumn(i, "KNM") == "0" ) {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", "");
        } else {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", ds_list2_excel1.GetColumn(i, "KNM"));
        }
        ds_list2_excel2.SetColumn(rowIndex, "EXP", ds_list2_excel1.GetColumn(i, "EXP"));
    }

    ds_list2_excel1.Filter("GRP == " + quote("EL_OUTSIDE"));
    for(var i=0; i < ds_list2_excel1.GetRowCount(); i++) {
        var rowIndex = ds_list2_excel2.AddRow();
        ds_list2_excel2.SetColumn(rowIndex, "GRP", "C.카외의장");
        ds_list2_excel2.SetColumn(rowIndex, "CNM", ds_list2_excel1.GetColumn(i, "CNM"));
        if( ds_list2_excel1.GetColumn(i, "KNM") == "0" ) {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", "");
        } else {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", ds_list2_excel1.GetColumn(i, "KNM"));
        }
        ds_list2_excel2.SetColumn(rowIndex, "EXP", ds_list2_excel1.GetColumn(i, "EXP"));
    }

    ds_list2_excel1.Filter("GRP == " + quote("EL_OPTION"));
    for(var i=0; i < ds_list2_excel1.GetRowCount(); i++) {
        var rowIndex = ds_list2_excel2.AddRow();
        ds_list2_excel2.SetColumn(rowIndex, "GRP", "D.OPTION");
        ds_list2_excel2.SetColumn(rowIndex, "CNM", ds_list2_excel1.GetColumn(i, "CNM"));
        if( ds_list2_excel1.GetColumn(i, "KNM") == "0" ) {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", "");
        } else {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", ds_list2_excel1.GetColumn(i, "KNM"));
        }
        ds_list2_excel2.SetColumn(rowIndex, "EXP", ds_list2_excel1.GetColumn(i, "EXP"));
    }

    ds_list2_excel1.Filter("GRP == " + quote("EL_LAYOUT"));
    for(var i=0; i < ds_list2_excel1.GetRowCount(); i++) {
        var rowIndex = ds_list2_excel2.AddRow();
        ds_list2_excel2.SetColumn(rowIndex, "GRP", "E.LAYOUT");
        ds_list2_excel2.SetColumn(rowIndex, "CNM", ds_list2_excel1.GetColumn(i, "CNM"));
        if( ds_list2_excel1.GetColumn(i, "KNM") == "0" ) {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", "");
        } else {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", ds_list2_excel1.GetColumn(i, "KNM"));
        }
        ds_list2_excel2.SetColumn(rowIndex, "EXP", ds_list2_excel1.GetColumn(i, "EXP"));
    }

    ds_list2_excel1.Filter("GRP == " + quote("EL_EFH"));
    for(var i=0; i < ds_list2_excel1.GetRowCount(); i++) {
        var rowIndex = ds_list2_excel2.AddRow();
        ds_list2_excel2.SetColumn(rowIndex, "GRP", "E.층고");
        ds_list2_excel2.SetColumn(rowIndex, "CNM", ds_list2_excel1.GetColumn(i, "CNM"));
        if( ds_list2_excel1.GetColumn(i, "KNM") == "0" ) {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", "");
        } else {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", ds_list2_excel1.GetColumn(i, "KNM"));
        }
        ds_list2_excel2.SetColumn(rowIndex, "EXP", ds_list2_excel1.GetColumn(i, "EXP"));
    }

    ds_list2_excel1.Filter("GRP == " + quote("EL_REUSE"));
    for(var i=0; i < ds_list2_excel1.GetRowCount(); i++) {
        var rowIndex = ds_list2_excel2.AddRow();
        ds_list2_excel2.SetColumn(rowIndex, "GRP", "F.교체제외항목");
        ds_list2_excel2.SetColumn(rowIndex, "CNM", ds_list2_excel1.GetColumn(i, "CNM"));
        if( ds_list2_excel1.GetColumn(i, "KNM") == "0" ) {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", "");
        } else {
            ds_list2_excel2.SetColumn(rowIndex, "KNM", ds_list2_excel1.GetColumn(i, "KNM"));
        }
        ds_list2_excel2.SetColumn(rowIndex, "EXP", ds_list2_excel1.GetColumn(i, "EXP"));
    }
    ds_list2_excel2.fireevent = true;
    gfn_saveToExcel(grd_list_excel, true, "", "", false, true);    
}

/********************************************************************************
* 기      능   : 닫기
********************************************************************************/
function fn_close() {
    // if(!gfn_showConfirm("저장처리 없이 종료하시겠습니까?"))     return;
    dataChangeStat();
    if( gChangStat == "Y" ) {
        if( gfn_showConfirm("저장처리 없이 종료하시겠습니까?") ) {
            if( saveYsNo == "Y" ) {
                parent.fn_query();
                this.close();
            } else {
                this.close();
            }
        }
    } else {
        if( saveYsNo == "Y" ) {
            parent.fn_query();
            this.close();
        } else {
            this.close();
        }
    }
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
   gfn_clearGridSortMark(grd_list);
   gfn_clearGridSortMark(grd_matchGrid);
	
   ds_master2.SetColumn(0, "NAMET2", ds_master.GetColumn(0, "VALUE"));
   ds_master2.SetColumn(0, "NAMET", ds_master.GetColumn(1, "VALUE"));
   ds_master2.SetColumn(0, "LZONE", ds_master.GetColumn(2, "VALUE"));
   ds_master2.SetColumn(0, "CELLP2", ds_master.GetColumn(3, "VALUE"));
   ds_master2.SetColumn(0, "CELLP", ds_master.GetColumn(4, "VALUE"));
   ds_master2.SetColumn(0, "ADD2", ds_master.GetColumn(5, "VALUE"));
   ds_master2.SetColumn(0, "ADD1", ds_master.GetColumn(6, "VALUE"));
   ds_master2.SetColumn(0, "POSID", ds_master.GetColumn(0, "HOGI"));

   ds_save0.Copy(ds_list2);    //데이터 변경되기 전 확인하기위한 dataset
   gChangStat = "N";

   tab.TabIndex = 0;
   ds_list2.Filter("GRP == " + quote("EL_MM"));        //초기'기본'사양으로 세팅
}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트
//=========================================================================================
/********************************************************************************
* 기      능   : 정렬 처리
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex) {
    if( nCell == 0 ) gfn_selectAllGrid(obj,nCell,nCell,true);
    else             gfn_sortGrid(obj, nCell);
}

/********************************************************************************
* 기      능   : 저장 Callback
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
    tab.TabIndex = 0;
    //fn_query();
    if (ds_error.rowcount > 0) {
        gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
    } else {
        // 쿼리 조회하여 최종 PDM 전송 자료 데이터셑을 생성한다.
        saveYsNo = "Y";
        // 데이터를 변경 상태 정보를 초기화 한다.
        dataInitStat();

        // 데이터셑 변경사항 초기화
        ds_list2.ApplyChange();

        // pdm 자료 조회
        fn_queryPdm();
    }
}

/********************************************************************************
* 기      능   : PDM 저장정보 조회
********************************************************************************/
function fn_queryPdm() {
    tit_clearActionInfo();
//    if(pdm803 == 'Y') {
//        tit_addSingleActionInfo("cs01:CS0108002B_S6");     // PDM 전송할 BOM 사양정보 조회(재전송 경우) yar
//    } else {
//        tit_addSingleActionInfo("cs01:CS0108002B_S3");     // PDM 전송할 BOM 사양정보 조회
//    }
    // 최초 입력 및 변경된 내역만 반영
    tit_addSingleActionInfo("cs01:CS0108002B_S6");     // PDM 전송할 BOM 사양정보 조회(재전송 경우) yar
    tit_addSingleActionInfo("cs01:CS0108002B_S4");         // PDM 전송상태 조회
    tit_addSingleActionInfo("cs01:CS0108002B_S5");         // PDM 전송시 UPDATE하는 배차정보 조회

    tit_callService(
        ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_pdm=ds_pdm ds_status=ds_status ds_master=ds_master"
        , ""
        , "fn_afterQueryPdm"
        , true);
}

/********************************************************************************
* 기      능   : PDM 저장정보 조회 Callback
********************************************************************************/
function fn_afterQueryPdm(errCode, errMsg) {
    if (ds_error.rowcount > 0) {
        gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
    } else {
	    ds_master2.SetColumn(0, "NAMET2", ds_master.GetColumn(0, "VALUE"));
	    ds_master2.SetColumn(0, "NAMET", ds_master.GetColumn(1, "VALUE"));
	    ds_master2.SetColumn(0, "LZONE", ds_master.GetColumn(2, "VALUE"));
	    ds_master2.SetColumn(0, "CELLP2", ds_master.GetColumn(3, "VALUE"));
	    ds_master2.SetColumn(0, "CELLP", ds_master.GetColumn(4, "VALUE"));
	    ds_master2.SetColumn(0, "ADD2", ds_master.GetColumn(5, "VALUE"));
	    ds_master2.SetColumn(0, "ADD1", ds_master.GetColumn(6, "VALUE"));
	    ds_master2.SetColumn(0, "POSID", ds_master.GetColumn(0, "HOGI"));

        gfn_openMsgWin("저장 되었습니다.\n정합성 체크를 수행합니다.", "", "A", "저장");
        // 저장 후 정합성 체크 로직 수행
        btn_match_OnClick();
    }
}

function Tab_OnChanging(obj,nOldIndex,nNewIndex) {
    if(tab.TabIndex = 0)    ds_list2.Filter("GRP == " + quote("EL_MM"));
    if(tab.TabIndex = 1)    ds_list2.Filter("GRP == " + quote("EL_CHANGE"));
    if(tab.TabIndex = 2)    ds_list2.Filter("GRP == " + quote("EL_BASIC"));
    if(tab.TabIndex = 3)    ds_list2.Filter("GRP == " + quote("EL_INSIDE"));
    if(tab.TabIndex = 4)    ds_list2.Filter("GRP == " + quote("EL_OUTSIDE"));
    if(tab.TabIndex = 5)    ds_list2.Filter("GRP == " + quote("EL_OPTION"));
    if(tab.TabIndex = 6)    ds_list2.Filter("GRP == " + quote("EL_LAYOUT"));
    if(tab.TabIndex = 7)    ds_list2.Filter("GRP == " + quote("EL_EFH"));
    if(tab.TabIndex = 8)    ds_list2.Filter("GRP == " + quote("EL_REUSE"));
}

//선택한 row의 CNT값이 0 이상일 경우 수정불가(팝업으로만 선택)
function grd_list_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex) {

    if (ds_list.getColumn(ds_list.currow, "CNT") > 0) grd_list.Editable = false;
    else                                              grd_list.Editable = true;
}

function grd_list_OnCellDblClick(obj,nRow,nCell,nX,nY,nPivotIndex) {
    //KEYIN 값인 경우 사양별특성값지정Detail 팝업창 비활성화
    if (obj.CurrentCell == '2'){       //'특성값' 필드
        if (ds_list2.getColumn(ds_list2.currow, "KND") == 'KEYIN' or ds_list2.getColumn(ds_list2.currow, "KND") =='KEY IN') return;

        //교체항목은 EL_FCLIST AN 값이 선택되어 있을때만 교체제외항목을 입력할 수 있다.
        var searchRow = ds_list2.SearchRowNF("COD='EL_FCLIST'");
        var EL_FCLIST = ds_list2.GetColumnNF(searchRow, "KNM");
        if( EL_FCLIST <> 'AN' && ds_list2.GetColumn(ds_list2.currow, "GRP") == "EL_REUSE")    
        {
            gfn_openMsgWin("F001 프로젝트 종류가 신규 또는 리모델링 공사인 경우에만 교체제외항목 특성을 등록합니다.", "", "A", "특성값입력");
            return;
        }

        if(ds_list2.getColumn(ds_list2.currow, "COD") == 'EL_ADD1') { // 우편번호 팝업 호출
            ufn_openZipcode();
        }
        else
        {
            var fa_cod = quote(ds_list2.GetColumn(ds_list2.row, "COD"));
            var args = "cod=" + fa_cod;
            gfn_openPopup("CS0108003B", true, args);
        }
    }
}

function tab00_OnChanged(obj,nOldIndex,nNewindex)
{
    tabindex = nNewindex;
    return;
}

/********************************************************************************
* 기      능   : PDM  전송
********************************************************************************/
function btn_pdm_OnClick(obj)    //ZSDT0005 PDM BOM사양전송
{
    var cal_shdat= gfn_getAfterDate(gfn_getCurrDate(),21);
    //TP_STATUS 예외처리(전송불가)
    //동일WBS건일 경우 zsdt0005 키값 동일-> 오프라인으로 처리
    if(ds_status.GetColumn(0, "CNT") > 0) {
        if(pdm803 == "N") {
            gfn_openMsgWin("PDM 전송이 완료되어 수정이 불가합니다.", "", "A", "PDM");
            return;
        }
    }

    //수주취소(ZCST001-DOC5) 사양전송 불가 2016.07.13 YAR
    if(length(doc5) > 0 && apstat5 <> '5') {
        gfn_openMsgWin("수주취소현장으로 사양전송이 불가합니다.", "", "A", "PDM");
        return;
    }

    if(ds_pdm.GetColumn(0, "CHK") <> 'Y') {        //ZCST802 저장한 이력 없는 경우(저장시 ZCST802의 CHK 값 'Y')
        gfn_openMsgWin("BOM 사양 입력 전입니다.", "", "A", "PDM");
        return;
    }

	// 시스템 변경 자료 여부 체크
	dataChangeStat();
	if( gChangStat = "Y" ) {
        gfn_openMsgWin("사양 특성 저장 후 PDM 전송이 가능합니다.", "", "A", "PDM");
        return;
	}

    if( ds_cond.GetColumn(0, "MATCHFLAG") != "Y" ) {
        gfn_openMsgWin("정합성 체크 후 PDM 전송이 가능합니다.", "", "A", "PDM");
        return;
    }

    if( ds_cond.GetColumn(0, "TRNSYSNO") == "N" ) {
        gfn_openMsgWin("입력된 특성값 중 전송불가 특성값이 있어 PDM 전송이 불가합니다.\n정합성 체크 결과에서 오류 확인 후 사양 특성값을 수정해 주십시요.", "", "A", "PDM");
        return;
    }
    
    
    //==========================================================================    
    ds_pdm_cp.ClearData();
    for(var i = 0; i < ds_pdm.GetRowCount(); i++) {
		//if ( ds_pdm.GetColumn(i, "COD") == 'EL_ATYP' && length(ds_pdm.GetColumn(i, "VALUE")) > 0 ) {			
		if ( ( ds_pdm.GetColumn(i, "COD") == 'EL_ATYP' || ds_pdm.GetColumn(i, "COD") == 'EL_ACAPA' || 
		       ds_pdm.GetColumn(i, "COD") == 'EL_ASPD' || ds_pdm.GetColumn(i, "COD") == 'EL_AMAN'     ) 
		     && length(ds_pdm.GetColumn(i, "VALUE")) > 0  && ds_pdm_cp.GetRowCount() <= 0               ) 
		{			
			ds_pdm_cp.addrow();
			ds_pdm_cp.SetColumn(0, "HOGI", ds_pdm.GetColumn(i, "HOGI")); 
			ds_pdm_cp.SetColumn(0, "SEQ",  ds_pdm.GetColumn(i, "SEQ")); 
		}
    
    }
    //==========================================================================
    

    if( gfn_showConfirm("PDM 전송 하시겠습니까?") ) {
		tit_clearActionInfo();
		tit_addMultiActionInfo("cs01:CS0108002B_I4");         //ZSDT0005 사양전송
		
		//==================ZEAITZSDT0005 : EAI 인터페이스 테이블 추가 =================
		tit_addMultiActionInfo("cs01:CS0108002B_I5");         //ZEAITZSDT0005 사양전송
		
		
		tit_addMultiActionInfo("cs01:CS0108002B_U1");         //ZCST802 (사양전송) PDM_CHK 여부 'Y' (해당 WBS별)
		tit_addMultiActionInfo("cs01:CS0108002B_U4");         //ZCST803(사양재전송) PDM_CHK 여부 'Y' (해당 WBS별)
		tit_addMultiActionInfo("cs01:CS0108002B_U2");        //배차정보 ZMASTER01 UPDATE
		tit_addMultiActionInfo("cs01:CS0108002B_U6");        //PDM_CHK 및 일자 정보 ZMMT124 UPDATE

		if(ds_pdm_cp.RowCount() == 1) {
			tit_addSearchActionInfo("cs01:CS0108002C_U1");      //zmasgter02 의 기종spec12 값 업데이트 용
		}
        	
/*	
alert("aaaaa");		
trace(ds_pdm.SaveXML());
trace(ds_pdm_cp.SaveXML());
trace(ds_cond.SaveXML());
trace(ds_master2.SaveXML());
*/


		tit_callService(
			 ""
			, ""
			, "ds_pdm=ds_pdm ds_cond=ds_cond ds_master2=ds_master2 ds_pdm_cp=ds_pdm_cp"
			, ""
			, ""
			, "fn_afterPdm"
			, ""
			, ""
			, "true"        //2018.10.25 SYNC로 변경
			);
	}
}

/********************************************************************************
* 기      능   : PDM 저장 Callback
********************************************************************************/
function fn_afterPdm(errCode, errMsg) {
    tab.TabIndex = 0;
    if (ds_error.rowcount > 0) {
        gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
    } else {
		saveYsNo = "Y";
		pdm803 = "Y";
        gfn_openMsgWin("PDM 전송이 되었습니다.", "", "A", "PDM");
    }
}

/********************************************************************************
* 기      능   : onChar 키 입력 이벤트 시 숫자 입력 여부 체크
********************************************************************************/
function grd_list_OnChar(obj,strPreText,nChar,strPostText,nLLParam,nHLParam,nRow,nCell,nPivotIndex)
{
    // 소수점 . -> nChar '46' , backspace '8'	            // 숫자필드 예외처리
    if(ds_list2.GetColumn(nRow, "NUM") == 'Y'||ds_list2.GetColumn(nRow, "COD") == "EL_CELLP" || ds_list2.GetColumn(nRow, "COD") == "EL_CELLP2")  
    {
        if( !isDigit(strPostText) ) {
            ds_list2.fireevent = false;
            ds_list2.SetColumn(nRow, "KNM", "0");
            ds_list2.fireevent = true;
            gfn_showAlert("숫자 타입만 입력 가능합니다.");
            var oldValue = ds_list2.GetOrgColumn(nRow, "KNM");
            ds_list2.fireevent = false;
            ds_list2.SetColumn(nRow, "KNM", oldValue);
            ds_list2.fireevent = true;
        }
    }		
}

function grd_list_focusOut(obj)
{
    if(ds_list2.GetColumn(nRow, "NUM") == 'Y') {
        if( ds_list2.GetColumn(nRow, "KNM") == '' || ds_list2.GetColumn(nRow, "KNM") == null ) {
            ds_list2.SetColumn(nRow, "KNM", "0");
        }
    }
}

/********************************************************************************
* 기      능   : 우편번호 검색
********************************************************************************/
var strZipcodeObj;
function ufn_openZipcode(Obj) {
    var arg = "strObj="+quote(Obj.id);
    strZipcodeObj=Obj.id;
    AxMSIE0.Navigate2(G_SERVER_URL + "addressSearchLink.jsp");
}

var chk = 0;
function AxMSIE0_TitleChange(obj,Text) {
    chk++;
    if(Text != "address link") {
        if(chk == 2) {
            ufn_setAddr();
            chk = 1;
        }
    } else {
        chk = 1;
    }
}

function ufn_setAddr() {
    var objDocument = AxMSIE0.Document;

    var roadAddrPart1 = objDocument.getElementById('roadAddrPart1').value;
    var roadAddrPart2 = objDocument.getElementById('roadAddrPart2').value;

    var roadAddr = roadAddrPart1 + ' ' + roadAddrPart2;
    var jibunAddr = objDocument.getElementById('jibunAddr').value;

    var addrDetail = objDocument.getElementById('addrDetail').value;

    var zipNo = objDocument.getElementById('zipNo').value;

    var tmpAddr = roadAddr + ' ' + addrDetail;

    var tmpRow = ds_list2.currow;

    ds_list2.SetColumn(tmpRow, "KNM", roadAddr);
    ds_list2.SetColumn(tmpRow+1, "KNM", addrDetail);
}

/********************************************************************************
* 기      능   : 서비스 사양 특성에 대한 정합성 체크 로직을 수행한다.
********************************************************************************/
function btn_match_OnClick()
{

    tit_clearActionInfo();
    ds_list_match.ClearData();
    ds_match_rslt.ClearData();
    ds_list_match.Copy(ds_list2);

    // 서비스 체크 로직은 별도 Act를 호출하여 처리한다.
    tit_callService(
          "CS0108002B_ACT"
        , "specBomMatchCheck"
        , "ds_cond=ds_cond ds_list_match=ds_list_match ds_match_rslt=ds_match_rslt"
        , "ds_cond=ds_cond ds_match_rslt=ds_match_rslt ds_error=ds_error"
        , ""
        , "fn_afterMatch"
        , true
        , true
        , false);
}

/********************************************************************************
* 기      능   : 서비스 사양 특성에 처리 결과
********************************************************************************/
function fn_afterMatch(obj)
{
    gfn_clearGridSortMark(grd_matchGrid);
    tab.TabIndex = 0;
    // 체크 색깔 원복
    restoreGridColor();
    if( ds_error.GetRowCount() > 0 ) {
        gfn_openMsgWin("담당자에 문의하십시요\n"+ds_error.GetColumn(0,"ERRMSG"), "E", "A", ds_error.GetColumn(0,"ERRCODE") );
    } else {
        // grd_matchGrid 전송 불가 건에 대해서 폰트 색깔을 빨강으로 변경    
		grd_matchGrid.Redraw = false;
		grd_matchGrid.SetCellProp("body", 0, "color", "expr:iif(SENDYSNO == '전송불가', 'red', '')");
		grd_matchGrid.SetCellProp("body", 1, "color", "expr:iif(SENDYSNO == '전송불가', 'red', '')");
		grd_matchGrid.SetCellProp("body", 2, "color", "expr:iif(SENDYSNO == '전송불가', 'red', '')");
		grd_matchGrid.SetCellProp("body", 3, "color", "expr:iif(SENDYSNO == '전송불가', 'red', '')");
		grd_matchGrid.SetCellProp("body", 4, "color", "expr:iif(SENDYSNO == '전송불가', 'red', '')");
		grd_matchGrid.Redraw = true;
    
		if( ds_match_rslt.GetRowCount() > 0 ) {
			gfn_openMsgWin("정합성 체크 오류 메세지 확인 후 입력된 사양 특성값을 확인해 주십시요.", "", "A", "정합성");
		} else {
			gfn_openMsgWin("정합성 체크가 완료된 사양 특성값 입니다. 저장 후 PDM 전송 처리를 수행 하시면 됩니다.", "", "A", "정합성");
		}

        grd_list.Redraw = false;
        grd_list.SetCellProp("body", 2, "color", "expr:iif(DUTYVALUE != '' && DUTYVALUE == KNM, 'red', '')");
        grd_list.Redraw = true;
    }
}

/********************************************************************************
* 기      능   : 템플릿 팝업 호출
********************************************************************************/
function btn_templet_Click(obj)
{
    var arg = "";
    gfn_openPopup("CS0108002D", true, arg);
}

/********************************************************************************
* 기      능   : 툴팁으로 오류 메세지 상세 정보를 표현한다.
********************************************************************************/
function grd_OnMouseOver(obj,nPosX,nPosY,nRow,nCell,nPivotIndex)
{
     var text;
     text = ds_match_rslt.GetColumn(nRow, "ERR_MESSAGE");
     grd_matchGrid.ToolTipText = text;
}

/********************************************************************************
* 기      능   : 오류 메세지 엑셀 다운로드
********************************************************************************/
function btn_matchExcel_click(obj)
{
    gfn_saveToExcel(grd_matchGrid, true, "", "", false, true);
}

/********************************************************************************
* 기      능   : 관련 체크된 사양 특성에 대한 그리드 색깔을 변경한다.
********************************************************************************/
function btn_checkView_OnClick(obj)
{
    var seIndex = ds_match_rslt.RowPos;
    var checkSpec = "";

    if( seIndex > -1 )  {
        // 그리드 색깔을 원복 시킨다.
        restoreGridColor();

        // 오류 사양 특성 정보를 추출한다.
        var seqn = ds_match_rslt.GetColumn(seIndex, "SEQN");
        for(var i=0; i < ds_match_rslt.GetRowCount(); i++ )  {
            if( seqn == ds_match_rslt.GetColumn(i, "SEQN") ) {
                if( ds_match_rslt.GetColumn(i, "CALCOD") != null )  {
                    var specArray = Split(ds_match_rslt.GetColumn(i, "CALCOD"), ",");
                    ds_list2.fireevent = false;
                    for(var j=0; j < Length(specArray); j++) {
                        var searchRow = ds_list2.SearchRowNF("COD='"+specArray[j]+"'");
                        ds_list2.SetColumnNF(searchRow, "TMPCOD", specArray[j]);
                    }
                    ds_list2.fireevent = true;
                } else {
                    var checkSpec = ds_match_rslt.GetColumn(i, "COD");
					var searchRow = ds_list2.SearchRowNF("COD='"+checkSpec+"'");
                    ds_list2.fireevent = false;
					ds_list2.SetColumnNF(searchRow, "TMPCOD", checkSpec);
					ds_list2.fireevent = true;
                }
            }
        }
        changeGridColor();
        gfn_openMsgWin("정합성 체크 결과 그리드 순번("+ds_match_rslt.GetColumn(seIndex, "SEQN")+")에 관련된 사양 특성 그리드 색깔이 변경되었습니다.", "", "A", "정합성특성표시");
    } else {
        // 변경된 셀 그리드 색깔을 원래 색깔로 변경한다.
        restoreGridColor();
    }
}

/********************************************************************************
* 기      능   : 그리드 색깔변경
********************************************************************************/
function changeGridColor() {
    grd_list.Redraw = false;
    grd_list.SetCellProp("body", 1, "bkColor", "expr:iif(TMPCOD == COD || DUTYVALUE != '', 'skyblue', '')");
    grd_list.SetCellProp("body", 1, "bkColor2", "expr:iif(TMPCOD == COD || DUTYVALUE != '', 'skyblue', 'User Color 22')");
    grd_list.SetCellProp("body", 2, "color", "expr:iif(TMPCOD == COD || DUTYVALUE != '', 'red', '')");
    grd_list.Redraw = true;
}

/********************************************************************************
* 기      능   : 그리드 색깔변경 원복
********************************************************************************/
function restoreGridColor() {
    ds_list2.fireevent = false;
    for(var i=0; i < ds_list2.GetRowCountNF(); i++) {
        ds_list2.SetColumnNF(i, "TMPCOD", "");
    }
    ds_list2.fireevent = true;

    grd_list.Redraw = false;
    grd_list.SetCellProp("body", 1, "bkColor", "");
    grd_list.SetCellProp("body", 1, "bkColor2", "User Color 22");
    grd_list.SetCellProp("body", 2, "Color", "");
    grd_list.Redraw = true;
}

/********************************************************************************
* 기      능   : 데이터 변경상태 처리
********************************************************************************/
function dataChangeStat() {
    ds_list2.fireevent = false;
    gChangStat = "N";
    for(var i=0; i < ds_list2.GetRowCountNF(); i++) {
        if( ds_list2.GetColumnNF(i, "KNM") != ds_list2.GetColumnNF(i, "ORGKNM") ) {
            ds_list2.SetColumnNF(i, "STATUS", "U");
            gChangStat = "Y";
        } else {
            ds_list2.SetColumnNF(i, "STATUS", "R");
        }
    }
    ds_list2.fireevent = true;
}

/********************************************************************************
* 기      능   : 데이터 변경상태 초기화
********************************************************************************/
function dataInitStat() {
    ds_list2.fireevent = false;
    gChangStat = "N";
    for(var i=0; i < ds_list2.GetRowCountNF(); i++) {
        ds_list2.SetColumnNF(i, "ORGKNM", ds_list2.GetColumnNF(i, "KNM"));
        ds_list2.SetColumnNF(i, "STATUS", "R");
        ds_list2.SetColumnNF(i, "DUTYVALUE", "");
    }
    ds_list2.fireevent = true;
    ds_list2.ApplyChange();
}

/********************************************************************************
* 기      능   : 서비스 사양 특성에 대한 DUTY 체크 로직을 수행한다.
********************************************************************************/
function btn_duty_OnClick(obj)
{
    tit_clearActionInfo();
    ds_list_match.ClearData();
    ds_duty_rslt.ClearData();
    ds_list_match.Copy(ds_list2);

    // 서비스 체크 로직은 별도 Act를 호출하여 처리한다.
    tit_callService(
          "CS0108002B_ACT"
        , "specBomDutyCheck"
        , "ds_cond=ds_cond ds_list_match=ds_list_match ds_duty_rslt=ds_duty_rslt"
        , "ds_cond=ds_cond ds_duty_rslt=ds_duty_rslt ds_error=ds_error"
        , ""
        , "fn_afterDuty"
        , true
        , true
        , false);
}

/********************************************************************************
* 기      능   : DUTY 체크 처리 결과
********************************************************************************/
function fn_afterDuty(obj)
{
    tab.TabIndex = 0;
    if( ds_error.GetRowCount() > 0 ) {
        gfn_openMsgWin("담당자에 문의하십시요\n"+ds_error.GetColumn(0,"ERRMSG"), "E", "A", ds_error.GetColumn(0,"ERRCODE") );
    } else {
        // ds_duty_rslt 값이 존재하는 경우 입력값에 반영 시켜준다.
        if( ds_duty_rslt.GetRowCount() > 0 ) {
			for(var i=0; i < ds_list2.GetRowCountNF(); i++) {
				ds_list2.SetColumnNF(i, "DUTYVALUE", "");
			}

			grd_list.Redraw = false;
			grd_list.SetCellProp("body", 2, "color", "expr:iif(DUTYVALUE != '' && DUTYVALUE == KNM, 'red', '')");
			grd_list.Redraw = true;

            // 정합성 DUTY 사양 특성값 팝업 호출
            var arg = "";
            gfn_openPopup("CS0108002F", true, arg);
        } else {
	        gfn_openMsgWin("입력된 사양특성값에 적용될 DUTY 사양특성값이 없습니다.", "", "A", "DUTY");
        }
    }
}
]]></Script>
</Window>