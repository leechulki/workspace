<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="616" Id="CS0108002C" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="정합성&#32;연산&#32;수식" Top="8" Ver="1.0" Width="976" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="SPEC" size="256" summ="default" type="STRING"/>
					<colinfo id="DFLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="VERIFY" size="256" summ="default" type="STRING"/>
					<colinfo id="FOMAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CALCULAT" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
					<record>
						<BIGO></BIGO>
						<CALCULAT></CALCULAT>
						<DFLAG></DFLAG>
						<FOMAT></FOMAT>
						<SPEC></SPEC>
						<VERIFY>N</VERIFY>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zcstmatchid_insert">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC" size="256" summ="default" type="STRING"/>
					<colinfo id="CALCULAT" size="256" summ="default" type="STRING"/>
					<colinfo id="FOMAT" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQN" size="256" summ="default" type="STRING"/>
					<colinfo id="DFLAG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_fomat">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE>A</CODE>
						<CODE_NAME>A형</CODE_NAME>
					</record>
					<record>
						<CODE>B</CODE>
						<CODE_NAME>B형</CODE_NAME>
					</record>
					<record>
						<CODE>C</CODE>
						<CODE_NAME>C형</CODE_NAME>
					</record>
					<record>
						<CODE>D</CODE>
						<CODE_NAME>D형</CODE_NAME>
					</record>
					<record>
						<CODE>E</CODE>
						<CODE_NAME>E형(더미)</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zcstmatchid_scale" OnColumnChanged="ds_zcstmatchid_scale_OnColumnChanged">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC" size="256" summ="default" type="STRING"/>
					<colinfo id="CALCULAT" size="256" summ="default" type="STRING"/>
					<colinfo id="FOMAT" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
					<colinfo id="SCALE" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQN" size="256" summ="default" type="STRING"/>
					<colinfo id="DFLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="SCALE_TYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="VERIFY" size="256" summ="default" type="STRING"/>
					<colinfo id="CRUD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_calcu">
				<Contents>
					<colinfo id="SEQN" size="256" summ="default" type="STRING"/>
					<colinfo id="OPR" size="256" summ="default" type="STRING"/>
					<colinfo id="RTN" size="256" summ="default" type="STRING"/>
					<colinfo id="FOMAT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_dflag">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME>-전체-</CODE_NAME>
					</record>
					<record>
						<CODE>Y</CODE>
						<CODE_NAME>사용</CODE_NAME>
					</record>
					<record>
						<CODE>N</CODE>
						<CODE_NAME>미사용</CODE_NAME>
					</record>
					<record>
						<CODE>D</CODE>
						<CODE_NAME>삭제</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_dflag1">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME>사용</CODE_NAME>
					</record>
					<record>
						<CODE>N</CODE>
						<CODE_NAME>미사용</CODE_NAME>
					</record>
					<record>
						<CODE>D</CODE>
						<CODE_NAME>삭제</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_logic_opr">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME>-전체-</CODE_NAME>
					</record>
					<record>
						<CODE>&amp;&amp;</CODE>
						<CODE_NAME>AND&#32;(&amp;&amp;)</CODE_NAME>
					</record>
					<record>
						<CODE>||</CODE>
						<CODE_NAME>OR&#32;(||)</CODE_NAME>
					</record>
					<record>
						<CODE>!</CODE>
						<CODE_NAME>NOT&#32;(!)</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_logic_num">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME>-전체-</CODE_NAME>
					</record>
					<record>
						<CODE>==</CODE>
						<CODE_NAME>같다&#32;(==)</CODE_NAME>
					</record>
					<record>
						<CODE>&gt;</CODE>
						<CODE_NAME>크다&#32;(&gt;)</CODE_NAME>
					</record>
					<record>
						<CODE>&gt;=</CODE>
						<CODE_NAME>크거나같다&#32;(&gt;=)</CODE_NAME>
					</record>
					<record>
						<CODE>&lt;</CODE>
						<CODE_NAME>작다&#32;(&lt;)</CODE_NAME>
					</record>
					<record>
						<CODE>&lt;=</CODE>
						<CODE_NAME>작거나같다&#32;(&lt;=)</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_logic_string">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME>-전체-</CODE_NAME>
					</record>
					<record>
						<CODE>==</CODE>
						<CODE_NAME>같다&#32;(==)</CODE_NAME>
					</record>
					<record>
						<CODE>!=</CODE>
						<CODE_NAME>다르다&#32;(!=)</CODE_NAME>
					</record>
					<record>
						<CODE>.indexOf(&quot;&quot;)&#32;&gt;&#32;-1&#32;</CODE>
						<CODE_NAME>비교문자&#32;포함</CODE_NAME>
					</record>
					<record>
						<CODE>.indexOf(&quot;&quot;)&#32;&lt;&#32;0&#32;</CODE>
						<CODE_NAME>비교문자&#32;미포함</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_logic_arith">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME>-전체-</CODE_NAME>
					</record>
					<record>
						<CODE>+</CODE>
						<CODE_NAME>더하기&#32;(+)</CODE_NAME>
					</record>
					<record>
						<CODE>-</CODE>
						<CODE_NAME>빼기&#32;(-)</CODE_NAME>
					</record>
					<record>
						<CODE>*</CODE>
						<CODE_NAME>곱셈&#32;(*)</CODE_NAME>
					</record>
					<record>
						<CODE>/</CODE>
						<CODE_NAME>나눗셈&#32;(/)</CODE_NAME>
					</record>
					<record>
						<CODE>%</CODE>
						<CODE_NAME>나머지&#32;(%)</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_scale_type">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME></CODE_NAME>
					</record>
					<record>
						<CODE>R</CODE>
						<CODE_NAME>반올림</CODE_NAME>
					</record>
					<record>
						<CODE>T</CODE>
						<CODE_NAME>절삭</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error">
				<Contents>
					<colinfo id="ERRCODE" size="256" summ="default" type="STRING"/>
					<colinfo id="ERRMSG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zcstmatchid_update">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC" size="256" summ="default" type="STRING"/>
					<colinfo id="CALCULAT" size="256" summ="default" type="STRING"/>
					<colinfo id="FOMAT" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQN" size="256" summ="default" type="STRING"/>
					<colinfo id="DFLAG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zcstmatchid">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC" size="256" summ="default" type="STRING"/>
					<colinfo id="CALCULAT" size="256" summ="default" type="STRING"/>
					<colinfo id="FOMAT" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQN" size="256" summ="default" type="STRING"/>
					<colinfo id="DFLAG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_spec_cnt">
				<Contents>
					<colinfo id="SPEC" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Static Color="user34" Height="25" Id="Static6" Left="54" TabOrder="42" Text="※연산함수유형&#32;설명&#32;&#32;A형:&#32;산술연산,B형:&#32;조건수식&#32;처리&#32;후&#32;문자결과&#32;리턴,C형:&#32;조건수식&#32;처리&#32;후&#32;숫자결과&#32;리턴&#32;D형:&#32;개별&#32;조건&#32;처리&#32;후&#32;문자결과&#32;리턴" Top="200" VAlign="Middle" Width="816"></Static>
		<Shape BKColor="user0" Bottom="608" Height="307" Id="Shape1" Left="4" LineColor="user1" Right="968" TabOrder="32" Top="301" Type="Rectangle" Width="964"></Shape>
		<Div Height="36" Id="div_btn" TabOrder="1" Text="Div0" Url="WB01::CommBtnForm.xml" Width="976">
			<Contents></Contents>
		</Div>
		<AxMSIE Height="0" Id="AxMSIE0" TitleChange="AxMSIE0_TitleChange" Width="0"></AxMSIE>
		<Shape BKColor="user0" Bottom="63" Height="26" Id="Shape0" Left="-1" LineColor="user1" Right="976" TabOrder="3" Top="37" Type="Rectangle" Width="977"></Shape>
		<Static Align="Right" Height="20" Id="st_reqno" Left="4" Style="sty_lb_search" TabOrder="5" Text="연산특성코드" Top="40" VAlign="Middle" Width="130"></Static>
		<Edit BindDataset="ds_cond" Border="Flat" Column="SPEC" Height="20" Id="ed_spec" Left="135" Style="sty_ipt_search" TabOrder="4" Top="40" Width="103"></Edit>
		<Static Height="19" Id="Static2" Left="11" TabOrder="9" Text="*&#32;연산처리결과&#32;입력" Top="561" VAlign="Middle" Width="116"></Static>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_add" ImageID="btn_sub_02" Left="493" LeftMargin="12" OnClick="btn_add_OnClick" Style="sty_btn" TabOrder="10" Text="추가" Top="305" Transparent="TRUE" Width="52"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_del" ImageID="btn_sub_02" Left="544" LeftMargin="12" OnClick="btn_del_OnClick" Style="sty_btn" TabOrder="11" Text="삭제" Top="305" Transparent="TRUE" Width="52"></Button>
		<Static Height="19" Id="Static3" Left="4" TabOrder="12" Text="*&#32;연산식" Top="215" VAlign="Middle" Width="140"></Static>
		<TextArea BindDataset="ds_zcstmatchid_scale" Column="CALCULAT" Height="64" Id="et_calculat" Left="4" TabOrder="13" Text='&quot;{EL_ATP}&quot;.indexOf(&quot;aa&quot;)&#32;&gt;&#32;-1&#32;=&quot;T&quot;' Top="233" VScroll="TRUE" Width="964"></TextArea>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_opr_verify" ImageID="btn_sub_06" Left="872" LeftMargin="12" OnClick="btn_opr_verify_OnClick" Style="sty_btn" TabOrder="14" Text="연산식&#32;검증" Top="210" Transparent="TRUE" Width="100"></Button>
		<Static Align="Right" Height="20" Id="Static4" Left="685" Style="sty_lb_search" TabOrder="18" Text="숫자비교연산자" Top="414" VAlign="Middle" Width="106"></Static>
		<Combo Border="Flat" CodeColumn="CODE" Column="TYPE" DataColumn="CODE_NAME" Height="20" Id="cb_logic_num" INDEX="0" InnerDataset="ds_logic_num" Left="794" Style="sty_ipt_form" TabOrder="19" Top="412" Width="120"></Combo>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_giho07" ImageID="btn_sub_02" Left="917" LeftMargin="12" OnClick="btn_num_OnClick" Style="sty_btn" TabOrder="20" Text="추가" Top="413" Transparent="TRUE" Width="52"></Button>
		<Static Align="Right" Height="20" Id="Static7" Left="685" Style="sty_lb_search" TabOrder="21" Text="문자열비교연산자" Top="393" VAlign="Middle" Width="106"></Static>
		<Combo Border="Flat" CodeColumn="CODE" Column="TYPE" DataColumn="CODE_NAME" Height="20" Id="cb_logic_string" INDEX="0" InnerDataset="ds_logic_string" Left="794" Style="sty_ipt_form" TabOrder="22" Top="391" Width="120"></Combo>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_giho06" ImageID="btn_sub_02" Left="917" LeftMargin="12" OnClick="btn_string_OnClick" Style="sty_btn" TabOrder="23" Text="추가" Top="391" Transparent="TRUE" Width="52"></Button>
		<Static Align="Right" Height="20" Id="Static11" Left="685" Style="sty_lb_search" TabOrder="24" Text="사칙연산자" Top="435" VAlign="Middle" Width="106"></Static>
		<Combo Border="Flat" CodeColumn="CODE" Column="TYPE" DataColumn="CODE_NAME" Height="20" Id="cb_logic_arith" INDEX="0" InnerDataset="ds_logic_arith" Left="794" Style="sty_ipt_form" TabOrder="25" Top="434" Width="120"></Combo>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_giho08" ImageID="btn_sub_02" Left="917" LeftMargin="12" OnClick="btn_arith_OnClick" Style="sty_btn" TabOrder="26" Text="추가" Top="435" Transparent="TRUE" Width="52"></Button>
		<Static Align="Right" Height="20" Id="Static5" Left="685" Style="sty_lb_search" TabOrder="28" Text="특성코드" Top="349" VAlign="Middle" Width="92"></Static>
		<Edit Border="Flat" Height="20" Id="ed_cal_spec" Left="777" Style="sty_ipt_search" TabOrder="27" Top="349" UpperOnly="TRUE" Width="83"></Edit>
		<Button Height="18" Id="Button7" ImageID="btn_icon_search" Left="860" OnClick="getCalCode" TabOrder="29" Text="Button0" Top="350" Width="18"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_giho04" ImageID="btn_sub_05" Left="881" LeftMargin="12" OnClick="btn_specValue_OnClick" Style="sty_btn" TabOrder="30" Text="특성값추가" Top="348" Transparent="TRUE" Width="84"></Button>
		<Static Height="19" Id="Static13" Left="10" TabOrder="31" Text="*&#32;조건연산&#32;리스트" Top="306" VAlign="Middle" Width="140"></Static>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_zcstmatchid_scale" BkColor2="default" BoldHead="true" Border="Flat" Bottom="204" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="140" Id="grd_zcstmatchid" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" OnCellPosChanged="gr_calcu_OnCellPosChanged" OnHeadClick="grd_list_OnHeadClick" Right="972" RowHeight="20" Style="sty_grid" TabOrder="33" TabStop="true" Top="64" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="964">
			<contents>
				<format id="Default">
					<columns>
						<col width="0"/>
						<col width="40"/>
						<col width="136"/>
						<col width="79"/>
						<col width="67"/>
						<col width="40"/>
						<col width="521"/>
						<col width="60"/>
						<col width="0"/>
					</columns>
					<head>
						<cell align="center" col="0" color="user21" display="text" font="굴림,9" wordwrap="word"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="순번" wordwrap="word"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="연산특성코드" wordwrap="word"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="연산함수유형" wordwrap="word"/>
						<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="소수점처리" wordwrap="word"/>
						<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="자리수" wordwrap="word"/>
						<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="비고" wordwrap="word"/>
						<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="사용구분" wordwrap="word"/>
						<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="연산식" wordwrap="word"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" display="text"/>
						<cell align="center" bkcolor2="user22" col="1" colid="SEQN" display="text"/>
						<cell align="center" bkcolor2="user22" col="2" colid="SPEC" display="text" edit="expr:iif(SPEC&#32;!=&#32;null,&#32;&apos;none&apos;,&#32;&apos;normal&apos;)"/>
						<cell align="center" bkcolor2="user22" col="3" colid="FOMAT" combocol="CODE" combodataset="ds_fomat" combotext="CODE_NAME" display="combo" edit="combo" expr="expr:iif(&#32;FOMAT&#32;==&#32;&apos;A&apos;,&#32;et_output.Enable&#32;=&#32;false,&#32;et_output.Enable&#32;=&#32;true)"/>
						<cell align="center" bkcolor2="user22" col="4" colid="SCALE_TYPE" combocol="CODE" combodataset="ds_scale_type" combotext="CODE_NAME" display="combo" edit="combo"/>
						<cell align="right" bkcolor2="user22" col="5" colid="SCALE" display="text" edit="number" expandchar="4" expandsize="40" limit="1"/>
						<cell align="left" bkcolor2="user22" col="6" colid="BIGO" display="text" edit="normal"/>
						<cell align="center" bkcolor2="user22" col="7" colid="DFLAG" combocol="CODE" combodataset="ds_dflag1" combotext="CODE_NAME" display="combo" edit="combo"/>
						<cell align="center" bkcolor2="user22" col="8" colid="CALCULAT" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Static Align="Right" Height="20" Id="Static9" Left="543" Style="sty_lb_search" TabOrder="34" Text="사용구분" Top="40" VAlign="Middle" Width="90"></Static>
		<Combo Border="Flat" CodeColumn="CODE" Column="CODE" DataColumn="CODE_NAME" Height="20" Id="cb_dflag" INDEX="0" InnerDataset="ds_dflag" Left="634" Style="sty_ipt_form" TabOrder="35" Top="39" Width="96"></Combo>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_calcu" BkColor2="default" BoldHead="true" Border="Flat" Bottom="463" ColSizing="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="135" Id="gr_calcu" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" Right="678" RowHeight="20" Style="sty_grid" TabOrder="36" TabStop="true" Top="328" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="670">
			<contents>
				<format id="Default">
					<columns>
						<col width="0"/>
						<col width="55"/>
						<col width="484"/>
						<col width="119"/>
					</columns>
					<head>
						<cell col="0" display="text"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="조건순번" wordwrap="word"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="조건문/연산식" wordwrap="word"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="연산처리결과" wordwrap="word"/>
					</head>
					<body>
						<cell col="0" display="text"/>
						<cell align="center" col="1" colid="SEQN" display="text" Valign="Center"/>
						<cell col="2" colid="OPR" display="text" Valign="Center"/>
						<cell align="left" col="3" colid="RTN" display="text" Valign="Center"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_op_make" ImageID="btn_sub_05" Left="595" LeftMargin="12" OnClick="btn_op_make_OnClick" Style="sty_btn" TabOrder="37" Text="연산식생성" Top="305" Transparent="TRUE" Width="84"></Button>
		<Button Height="18" Id="Button11" ImageID="btn_icon_search" Left="238" OnClick="getCode" TabOrder="38" Text="Button0" Top="41" Width="18"></Button>
		<Static Align="Right" Height="20" Id="Static0" Left="685" Style="sty_lb_search" TabOrder="39" Text="논리연산자" Top="371" VAlign="Middle" Width="106"></Static>
		<Combo Border="Flat" CodeColumn="CODE" Column="TYPE" DataColumn="CODE_NAME" Editable="TRUE" Height="20" Id="cb_logic_opr" INDEX="0" InnerDataset="ds_logic_opr" Left="794" Style="sty_ipt_form" TabOrder="40" Top="369" Width="120"></Combo>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_giho05" ImageID="btn_sub_02" Left="917" LeftMargin="12" OnClick="btn_opr_OnClick" Style="sty_btn" TabOrder="41" Text="추가" Top="369" Transparent="TRUE" Width="52"></Button>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_zcstmatchid_scale" BkColor2="default" BoldHead="true" Border="Flat" Bottom="72" ColSizing="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="72" Id="gr_zcstmatchid_excel" InputPanel="FALSE" Left="1000" LineColor="user20" LineType="ExHORZ" OnCellPosChanged="gr_calcu_OnCellPosChanged" Right="1384" RowHeight="20" Style="sty_grid" TabOrder="43" TabStop="true" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="384">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="40"/>
						<col fix="left" width="80"/>
						<col width="79"/>
						<col width="80"/>
						<col width="40"/>
						<col width="540"/>
						<col width="80"/>
						<col width="200"/>
					</columns>
					<head>
						<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="순번" wordwrap="word"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="연산특성코드" wordwrap="word"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="연산유형" wordwrap="word"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="소수점처리" wordwrap="word"/>
						<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="자리수" wordwrap="word"/>
						<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="비고" wordwrap="word"/>
						<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="사용구분" wordwrap="word"/>
						<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="연산식" wordwrap="word"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" colid="SEQN" display="text"/>
						<cell align="center" bkcolor2="user22" col="1" colid="SPEC" display="text" edit="expr:iif(CRUD&#32;==&#32;&apos;R&apos;,&#32;&apos;none&apos;,&#32;&apos;normal&apos;)"/>
						<cell align="center" bkcolor2="user22" col="2" colid="FOMAT" combocol="CODE" combodataset="ds_fomat" combotext="CODE_NAME" display="combo" edit="combo" expr="expr:iif(&#32;FOMAT&#32;==&#32;&apos;A&apos;,&#32;et_output.Enable&#32;=&#32;false,&#32;et_output.Enable&#32;=&#32;true)"/>
						<cell align="center" bkcolor2="user22" col="3" colid="SCALE_TYPE" combocol="CODE" combodataset="ds_scale_type" combotext="CODE_NAME" display="combo" edit="combo"/>
						<cell align="right" bkcolor2="user22" col="4" colid="SCALE" display="text" edit="number" expandchar="4" expandsize="40" limit="1"/>
						<cell align="left" bkcolor2="user22" col="5" colid="BIGO" display="text" edit="normal"/>
						<cell align="left" bkcolor2="user22" col="6" colid="DFLAG" combocol="CODE" combodataset="ds_dflag1" combotext="CODE_NAME" display="combo" edit="combo"/>
						<cell align="left" bkcolor2="user22" col="7" colid="CALCULAT" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Static Color="user34" Height="25" Id="Static8" Left="89" TabOrder="44" Text='※&#32;A/&#32;B/C/D형&#32;정합성&#32;체크&#32;조건&#32;연산자&#32;입력&#32;-&gt;&#32;문자열입력변수:&#32;&quot;{특성코드}&quot;,&#32;숫자형입력변수:&#32;{특성코드}와&#32;조건연산&#32;기호로&#32;구성' Top="462" VAlign="Middle" Width="840"></Static>
		<Static Color="user34" Height="25" Id="Static10" Left="124" TabOrder="45" Text='※&#32;B/C/D형&#32;리턴&#32;결과&#32;및&#32;산술연산&#32;입력&#32;-&gt;&#32;문자열리턴결과:&#32;&quot;T&quot;,&#32;숫자형리턴결과:&#32;{특성코드}*10' Top="557" VAlign="Middle" Width="696"></Static>
		<TextArea BindDataset="ds_calcu" Column="OPR" Height="48" Id="et_input" Left="11" OnCharChanged="et_input_OnCharChanged" OnClick="et_input_OnClick" OnFocus="et_input_OnFocus" TabOrder="6" Top="512" VScroll="TRUE" Width="950"></TextArea>
		<TextArea BindDataset="ds_calcu" Column="RTN" Height="22" Id="et_output" Left="11" OnCharChanged="et_output_OnCharChanged" OnClick="et_output_OnClick" OnFocus="et_output_OnFocus" TabOrder="8" Top="579" VScroll="TRUE" Width="950"></TextArea>
		<Static Color="user34" Height="25" Id="Static12" Left="686" TabOrder="46" Text="※&#32;연산&#32;특성코드/특성값/기호&#32;추가&#32;기능&#32;" Top="303" VAlign="Middle" Width="256"></Static>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_giho03" ImageID="btn_sub_07" Left="754" LeftMargin="12" OnClick="getCalSpecCode" Style="sty_btn" TabOrder="15" Text="특성/연산코드" Top="327" Transparent="TRUE" Width="105"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_giho02" ImageID="btn_sub_02" Left="718" LeftMargin="12" OnClick="btn_rightblock_OnClick" Style="sty_btn" TabOrder="17" Text=")" Top="327" Transparent="TRUE" Width="28"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_giho01" ImageID="btn_sub_02" Left="685" LeftMargin="12" OnClick="btn_leftblock_OnClick" Style="sty_btn" TabOrder="16" Text="(" Top="327" Transparent="TRUE" Width="28"></Button>
		<Static Height="19" Id="Static1" Left="11" TabOrder="7" Text="*&#32;연산식&#32;입력" Top="493" VAlign="Middle" Width="100"></Static>
		<Static Color="user34" Height="25" Id="Static14" Left="104" TabOrder="47" Text='예)&#32;연산유형&#32;B형이고&#32;문자열비교&#32;&quot;{ELATYP}&quot;.indexOf(&quot;SS&quot;)&#32;&gt;&#32;-1&#32;:&#32;기종&#32;특성값&#32;중&#32;입력값에&#32;SS기종&#32;값이&#32;존재하는&#32;경우' Top="477" VAlign="Middle" Width="838"></Static>
		<Static Color="user34" Height="25" Id="Static15" Left="125" TabOrder="48" Text='연산식&#32;입력:&#32;&quot;{ELATYP}&quot;.indexOf(&quot;SS&quot;)&#32;&gt;&#32;-1,&#32;연산처리결과&#32;입력:&#32;&quot;T&quot;' Top="491" VAlign="Middle" Width="734"></Static>
		<Static Color="user34" Height="23" Id="Static16" Left="65" TabOrder="49" Text="연산식&#32;검증을&#32;완료해야&#32;사용구분을&#32;사용으로&#32;변경&#32;할&#32;수&#32;있습니다." Top="215" VAlign="Middle" Width="816"></Static>
		<Static Align="Right" Height="20" Id="Static17" Left="261" Style="sty_lb_search" TabOrder="51" Text="비고" Top="40" VAlign="Middle" Width="90"></Static>
		<Edit BindDataset="ds_cond" Border="Flat" Column="BIGO" Height="20" Id="ed_bigo" Left="352" Style="sty_ipt_search" TabOrder="50" Top="40" Width="182"></Edit>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 시스템공사 사양별 특성값 지정
 * 작  성  자   : 박수근
 * 작성  일자   : 2016.11.03
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";    // 공통 스크립트
#include "LIB::FormResize_sd.js";    // 공통 스크립트
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다.
//=========================================================================================
var ginput = null;
var ginputPos;
var gRowIndex=-1;
var gFomat = "";

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
    gfn_initForm();             // Form 로드 이벤트 맨 첫줄에 기술
    fn_init_form();             // 폼 초기화
    fn_query();
}

/********************************************************************************
* 기      능   : form UnloadCompleted
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
    return gfn_isFormUnload(obj);
}

/********************************************************************************
* 기      능   : 폼 초기화
********************************************************************************/
function fn_init_form() {
    cb_dflag.value = "";
    cb_logic_opr.value = "";

}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회
********************************************************************************/
function fn_query() {
    ds_cond.SetColumn(0, "SPEC", ed_spec.value);
    ds_cond.SetColumn(0, "DFLAG", cb_dflag.value);
    ds_cond.SetColumn(0, "BIGO", ed_bigo.value);

    ds_zcstmatchid.ClearData();
    ds_zcstmatchid_scale.ClearData();
    ds_calcu.ClearData();
    tit_clearActionInfo();
    tit_addSingleActionInfo("cs01:CS0108007C_S1");
    tit_callService(
          ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_zcstmatchid=ds_zcstmatchid"
        , ""
        , "fn_afterQuery"
        , true
        , true
        , false);
}

/********************************************************************************
* 기      능   : 입력
********************************************************************************/
function fn_input() {
    var index = ds_zcstmatchid_scale.row;
    if( index > -1 ) {
		var rowType = ds_zcstmatchid_scale.GetRowType(gRowIndex);
		if( rowType == "insert" )  {
			gfn_openMsgWin("입력 중인 연산 수식 데이터를 저장하십시요", "", "A", "");
		} else {
			var rowIndex = ds_zcstmatchid_scale.AddRow();
			ds_zcstmatchid_scale.SetColumn(rowIndex, "DFLAG", "N");
			gRowIndex = rowIndex;
			ds_calcu.ClearData();
		}
    } else {
		var rowIndex = ds_zcstmatchid_scale.AddRow();
		ds_zcstmatchid_scale.SetColumn(rowIndex, "DFLAG", "N");
		gRowIndex = rowIndex;
		ds_calcu.ClearData();
    }
}

/********************************************************************************
* 기      능   : 삭제
********************************************************************************/
function fn_delete() {
    var index = ds_zcstmatchid_scale.row;
    if( index > -1 ) {
		var rowType = ds_zcstmatchid_scale.GetRowType(gRowIndex);
		if( rowType == "insert" )  {
			// 현재 선택된 그리드를 삭제한다.
			ds_zcstmatchid_scale.DeleteRow(ds_zcstmatchid_scale.row);
		} else {
			gfn_openMsgWin("DB에 저장된 연산 수식은 삭제 할 수 없습니다. \n사용구분을 미사용 변경 후 저장하십시요", "", "A", "");
		}
    }
}

/********************************************************************************
* 기      능   : 저장
********************************************************************************/
function fn_save() {
    // 입력값 체크
    ds_zcstmatchid.ClearData();
    if( ds_zcstmatchid_scale.GetUpdate() ) {
        for(var i=0; i < ds_zcstmatchid_scale.GetRowCount(); i++ ) {
            if( ds_zcstmatchid_scale.GetRowType(i) == "insert" || ds_zcstmatchid_scale.GetRowType(i) == "update" ) {
                if( ds_zcstmatchid_scale.GetColumn(i, "SPEC") == "" || ds_zcstmatchid_scale.GetColumn(i, "SPEC") == null ) {
                    gfn_openMsgWin("연산특성 코드를 입력하세요", "", "A", "저장");
                    return;
                }

                if( ds_zcstmatchid_scale.GetColumn(i, "FOMAT") == "" || ds_zcstmatchid_scale.GetColumn(i, "FOMAT") == null ) {
                    gfn_openMsgWin("연산유형을 선택하세요", "", "A", "저장");
                    return;
                }

                if( Length(ds_zcstmatchid_scale.GetColumn(i, "SCALE_TYPE")) == 0 && Length(ds_zcstmatchid_scale.GetColumn(i, "SCALE")) > 0) {
                    gfn_openMsgWin("소수점 처리를 선택하세요", "", "A", "저장");
                    return;
                }

                if( Length(ds_zcstmatchid_scale.GetColumn(i, "SCALE_TYPE")) == "" && Length(ds_zcstmatchid_scale.GetColumn(i, "SCALE")) > 0) {
                    gfn_openMsgWin("소수점 자리수를 입력하세요", "", "A", "저장");
                    return;
                }

                if( ds_zcstmatchid_scale.GetColumn(i, "BIGO") == "" || ds_zcstmatchid_scale.GetColumn(i, "BIGO") == null ) {
                    gfn_openMsgWin("비고를 입력하세요", "", "A", "저장");
                    return;
                }

                if( ds_zcstmatchid_scale.GetRowType(i) == "insert" ) {
                    ds_spec_cnt.ClearData();
                    var rowIndex = ds_spec_cnt.AddRow();
                    ds_spec_cnt.SetColumn(rowIndex, "SPEC", ds_zcstmatchid_scale.GetColumn(i, "SPEC"));
             	    tit_clearActionInfo();
             	    tit_addSingleActionInfo("cs01:CS0108007C_S2"); 
					tit_callService(
						  ""
						, ""
						, "ds_spec_cnt=ds_spec_cnt"
						, "ds_spec_cnt=ds_spec_cnt"
						, ""
						, "fn_afterSpecCheck"
                        , true
                        , true
                        , true);

					if( ds_spec_cnt.GetRowCount() > 0 ) {
					    gfn_openMsgWin("이미 등록된 연산특성 코드 입니다.", "", "A", "저장");
					    return;
					}
                }

                var rowIndex = ds_zcstmatchid.AddRow();
                ds_zcstmatchid.SetColumn(rowIndex, "MANDT", ds_zcstmatchid_scale.GetColumn(i, "MANDT"));
                ds_zcstmatchid.SetColumn(rowIndex, "SPEC", Trim(ds_zcstmatchid_scale.GetColumn(i, "SPEC")));
                var CALCULAT = Replace(ds_zcstmatchid_scale.GetColumn(i, "CALCULAT"), "\n", "");                
                ds_zcstmatchid.SetColumn(rowIndex, "CALCULAT", CALCULAT);
                var FOMAT = ds_zcstmatchid_scale.GetColumn(i, "FOMAT");
                if( ds_zcstmatchid_scale.GetColumn(i, "SCALE_TYPE") != "" && ds_zcstmatchid_scale.GetColumn(i, "SCALE_TYPE") != null) {
                    FOMAT = FOMAT + ds_zcstmatchid_scale.GetColumn(i, "SCALE_TYPE") + "," + ToString(ds_zcstmatchid_scale.GetColumn(i, "SCALE"));
                } else {
                    FOMAT = Trim(Replace(FOMAT, ",", ""));
                }
                ds_zcstmatchid.SetColumn(rowIndex, "FOMAT", FOMAT);
                ds_zcstmatchid.SetColumn(rowIndex, "BIGO", ds_zcstmatchid_scale.GetColumn(i, "BIGO"));
                ds_zcstmatchid.SetColumn(rowIndex, "DFLAG", ds_zcstmatchid_scale.GetColumn(i, "DFLAG"));
            }
        }
    }

    if( ds_zcstmatchid_scale.GetUpdate() ) {
        if( gfn_showConfirm("연산식을 저장 하시겠습니까?") ) {
			tit_clearActionInfo();
			tit_addMultiActionInfo("cs01:CS0108007C_I1");
			tit_callService(
				  ""
				, ""
				, "ds_zcstmatchid=ds_zcstmatchid"
				, ""
				, ""
				, "fn_afterSave"
				, true);
				
            // 연산 수식 파싱로직 생성하여 변경된 자료에 대해서 관련 서브 테이블에 특성값을 넣어준다.
			tit_clearActionInfo();
			tit_callService(
				  "CS0108007C_ACT"
				, "calSpecInsert"
				, "ds_zcstmatchid=ds_zcstmatchid"
				, "ds_error=ds_error"
				, ""
				, "fn_afterCalSpecInsert"
				, true
				, true
				, false);
        }
    }
}

/********************************************************************************
* 기      능   : 닫기
********************************************************************************/
function fn_close() {
    if( ds_zcstmatchid_scale.GetUpdate() ) {
        if( gfn_showConfirm("저장처리 없이 종료하시겠습니까?") ) {
            this.close();
        }
    } else {
        this.close();
    }
}

/********************************************************************************
* 기      능   : 조회 Callback
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
    if ( errCode != 0 ) {
        gfn_showAlert(errMsg);
    } else {
        gfn_clearGridSortMark(grd_zcstmatchid);
        if( ds_zcstmatchid.GetRowCount() >  0 ) {
            ds_zcstmatchid_scale.fireevent = false;
            for(var i=0; i < ds_zcstmatchid.GetRowCount(); i++) {
                var fomat=ds_zcstmatchid.GetColumn(i, "FOMAT");
                var fomatArray = Split(fomat, ",");
                var scaleType = "";
                var scale="";
                if( Length(fomatArray) == 2 ) {
                    fomat = fomatArray[0];
                    if( Length(fomatArray[0]) == 2 ) {
                        fomat = SubStr(fomatArray[0], 0, 1);
                        scaleType = SubStr(fomatArray[0], 1, 1);
                    }
                    scale = fomatArray[1];
                }
                ds_zcstmatchid_scale.AddRow();
                ds_zcstmatchid_scale.SetColumn(i, "MANDT", ds_zcstmatchid.GetColumn(i, "MANDT"));
                ds_zcstmatchid_scale.SetColumn(i, "SEQN", ds_zcstmatchid.GetColumn(i, "SEQN"));
                ds_zcstmatchid_scale.SetColumn(i, "SPEC", ds_zcstmatchid.GetColumn(i, "SPEC"));
                ds_zcstmatchid_scale.SetColumn(i, "CALCULAT", Replace(ds_zcstmatchid.GetColumn(i, "CALCULAT"), ",", ",\n"));
                ds_zcstmatchid_scale.SetColumn(i, "FOMAT", fomat);
                ds_zcstmatchid_scale.SetColumn(i, "SCALE_TYPE", scaleType);
                ds_zcstmatchid_scale.SetColumn(i, "SCALE", scale);
                ds_zcstmatchid_scale.SetColumn(i, "BIGO", ds_zcstmatchid.GetColumn(i, "BIGO"));
                ds_zcstmatchid_scale.SetColumn(i, "DFLAG", ds_zcstmatchid.GetColumn(i, "DFLAG"));
                ds_zcstmatchid_scale.SetColumn(i, "CRUD", "R");
            }
            ds_zcstmatchid_scale.row = 0;
            ds_zcstmatchid_scale.fireevent = true;
            ds_zcstmatchid_scale.ApplyChange();
            fn_calcuDtData(0);
        }
    }
}

/********************************************************************************
* 기      능   : 연산상세 데이터 생성
********************************************************************************/
function fn_calcuDtData(row) {
     //ed_bigo.value = ds_zcstmatchid_scale.GetColumn(row, "BIGO");
     //et_calculat.value = Replace(ds_zcstmatchid_scale.GetColumn(row, "CALCULAT"), ",", ",\n");
     var rowType = ds_zcstmatchid_scale.GetRowType(gRowIndex);
     if( row > -1 && rowType != "insert") {
		 // CALCULAT 파싱해서 그리드 데이터에 담는다.
		 var oprArray = Split(ds_zcstmatchid.GetColumn(row, "CALCULAT"), ",", false, false);
		 ds_calcu.ClearData();
		 ds_calcu.fireevent = false;
		 for(var i=0; i < Length(oprArray); i++) {
			 var rowIndex = ds_calcu.AddRow();
			 ds_calcu.SetColumn(rowIndex, "SEQN", ToString(rowIndex+1));
			 ds_calcu.SetColumn(rowIndex, "FOMAT", ds_zcstmatchid.GetColumn(row, "FOMAT"));
			 var lastIndex = lastIndexOf(oprArray[i]);
			 if( lastIndex > -1 ) {
				 ds_calcu.SetColumn(rowIndex, "OPR", SubStr(oprArray[i], 0, lastIndex));
				 ds_calcu.SetColumn(rowIndex, "RTN", SubStr(oprArray[i], lastIndex+1));
			 } else {
				 ds_calcu.SetColumn(rowIndex, "OPR", oprArray[i]);
			 }
		 }
		 ds_calcu.fireevent = true;
	
		 if( ds_calcu.GetRowCount() > 0) {
			 ds_calcu.row = 0;
			 fn_oprDtData(0);
		 }
	
		 // 연산 유형이 A형인 경우에는 연산처리결과 입력항목을 readonly로 변경한다.- 입력된 값도 초기화한다.
		 if( IndexOf(ds_zcstmatchid_scale.GetColumn(row, "FOMAT"), "A") > -1 ) { 
            // 입력필드 활성화 처리
			btn_opr_verify.Enable = true;
			et_calculat.Enable = true;
			btn_add.Enable = true;
			btn_del.Enable = true;
			btn_op_make.Enable = true;
			btn_giho01.Enable = true;
			btn_giho02.Enable = true;
			btn_giho03.Enable = true;
			btn_giho04.Enable = true;
			btn_giho05.Enable = true;
			btn_giho06.Enable = true;
			btn_giho07.Enable = true;
			btn_giho08.Enable = true;
			et_input.Enable = true;           
		    et_output.value = "";
			et_output.Enable = false;
		 } else if( IndexOf(ds_zcstmatchid_scale.GetColumn(row, "FOMAT"), "E") > -1 ) {
            // 입력필드 readonly 처리
			btn_opr_verify.Enable = false;
			et_calculat.Enable = false;
			btn_add.Enable = false;
			btn_del.Enable = false;
			btn_op_make.Enable = false;
			btn_giho01.Enable = false;
			btn_giho02.Enable = false;
			btn_giho03.Enable = false;
			btn_giho04.Enable = false;
			btn_giho05.Enable = false;
			btn_giho06.Enable = false;
			btn_giho07.Enable = false;
			btn_giho08.Enable = false;
			et_input.Enable = false;
			et_output.Enable = false;          
         } else {
            // 입력필드 활성화 처리
			btn_opr_verify.Enable = true;
			et_calculat.Enable = true;
			btn_add.Enable = true;
			btn_del.Enable = true;
			btn_op_make.Enable = true;
			btn_giho01.Enable = true;
			btn_giho02.Enable = true;
			btn_giho03.Enable = true;
			btn_giho04.Enable = true;
			btn_giho05.Enable = true;
			btn_giho06.Enable = true;
			btn_giho07.Enable = true;
			btn_giho08.Enable = true;
			et_input.Enable = true;           
			et_output.Enable = true;          
         }		 
     }
}

/********************************************************************************
* 기      능   : 액셀
********************************************************************************/
function fn_excel() {
    // 그리드에 보이는 값을 엑셀로 출력한다.
    gfn_saveToExcel(gr_zcstmatchid_excel, true, "", "", false, true);
}

/********************************************************************************
* 기      능   : fn_afterSpecCheck Callback
********************************************************************************/
function fn_afterSpecCheck(errCode, errMsg) {
    if ( errCode != 0 ) {
        gfn_showAlert(errMsg);
    }
}

/********************************************************************************
* 기      능   : 저장 Callback
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
    if (ds_error.rowcount > 0) {
        gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
    } else {
        gfn_openMsgWin("연산 수식 데이터가 저장되었습니다.", "", "A", "저장");
        // 재조회를 수행한다.
        fn_query();
    }
}

/********************************************************************************
* 기      능   : 연산사양 특성 저장 Callback
********************************************************************************/
function fn_afterCalSpecInsert(errCode, errMsg) {
    if (ds_error.rowcount > 0) {
        gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
    } else {
    }
}

/********************************************************************************
* 기      능   : 특성코드 조회 팝업 호출
********************************************************************************/
function getCode(obj)
{
    var args = "spec="+quote(ed_spec.value);
        args = args + " grp='EL_CAL'";
    var retnArray=null;
    retnArray = gfn_openPopup("CS0108007B", true, args);

    if( Length(retnArray) == 0 ) {
    } else {
        ed_spec.value = retnArray[1];
    }
}

/********************************************************************************
* 기      능   : 연산입력 처리결과 구분 인덱스
********************************************************************************/
function lastIndexOf(src) {
    var lastIndex=-1;
    var srcLength = Length(src)-1;
    for(var i = srcLength; i >= 0; i--) {
        if( SubStr(src, i, 1) == "=" ) {
            lastIndex = i;
            break;
        }
    }
    return lastIndex;
}

/********************************************************************************
* 기      능   : 연산상세 데이터 생성
********************************************************************************/
function fn_oprDtData(row) {
     et_input.value = ds_calcu.GetColumn(row, "OPR");
     et_output.value = ds_calcu.GetColumn(row, "RTN");
}

/********************************************************************************
* 기      능   : 연산식 셀 선택시 값 변경
********************************************************************************/
function gr_calcu_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex)
{
    var rowType = ds_zcstmatchid_scale.GetRowType(gRowIndex);
    if( rowType == "insert" && gRowIndex != nRow )  {
        gfn_openMsgWin("연산 수식 데이터를 저장하십시요", "", "A", "");
        ds_zcstmatchid_scale.row = gRowIndex;  
    } else {
        gRowIndex = nRow;
        fn_calcuDtData(nRow);
    }
}

/********************************************************************************
* 기      능   : 조건식 셀 선택시 값 변경
********************************************************************************/
function gr_opr_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex)
{
    fn_oprDtData(nRow);
}

/********************************************************************************
* 기      능   : 논리기호연산자 입력
********************************************************************************/
function btn_opr_OnClick(obj)
{
    // 해당 오브젝트에 문자열 생성 후 처리
    if( ginput != null ) {
        var inputPos = ginputPos[0];
        if( inputPos < 0 ) return;

        if( inputPos ==0 ) {
            ginput.value = cb_logic_opr.value + ginput.value;
        } else {
            if( Length(ginput.value) == 1 ) {
                ginput.value = ginput.value + cb_logic_opr.value;
            } else {
                var input1 = SubStr(ginput.value, 0, inputPos);
                var input2 = SubStr(ginput.value, inputPos);
                ginput.value = input1 + cb_logic_opr.value +input2;
            }
        }
        ginput = null;
    } else {
        if (gfn_showConfirm("연산입력 텍스트 맨끝에 연산 기호를 추가하겠습니까?")) {
            et_input.value = et_input.value + cb_logic_opr.value;
        }
    }
}

/********************************************************************************
* 기      능   : 문자열비교연산자 입력
********************************************************************************/
function btn_string_OnClick(obj)
{
    // 해당 오브젝트에 문자열 생성 후 처리
    if( ginput != null ) {
        var inputPos = ginputPos[0];
        if( inputPos < 0 ) return;

        if( inputPos ==0 ) {
            ginput.value = cb_logic_string.value + ginput.value;
        } else {
            if( Length(ginput.value) == 1 ) {
                ginput.value = ginput.value + cb_logic_string.value;
            } else {
                var input1 = SubStr(ginput.value, 0, inputPos);
                var input2 = SubStr(ginput.value, inputPos);
                ginput.value = input1 + cb_logic_string.value +input2;
            }
        }
        ginput = null;
    } else {
        if (gfn_showConfirm("연산입력 텍스트 맨끝에 연산 기호를 추가하겠습니까?")) {
            et_input.value = et_input.value + cb_logic_string.value;
        }
    }    
}

/********************************************************************************
* 기      능   : 숫자비교 연산자 입력
********************************************************************************/
function btn_num_OnClick(obj)
{
    // 해당 오브젝트에 문자열 생성 후 처리
    if( ginput != null ) {
        var inputPos = ginputPos[0];
        if( inputPos < 0 ) return;

        if( inputPos ==0 ) {
            ginput.value = cb_logic_num.value + ginput.value;
        } else {
            if( Length(ginput.value) == 1 ) {
                ginput.value = ginput.value + cb_logic_num.value;
            } else {
                var input1 = SubStr(ginput.value, 0, inputPos);
                var input2 = SubStr(ginput.value, inputPos);
                ginput.value = input1 + cb_logic_num.value +input2;
            }
        }
        ginput = null;
    } else {
        if (gfn_showConfirm("연산입력 텍스트 맨끝에 연산 기호를 추가하겠습니까?")) {
            et_input.value = et_input.value + cb_logic_num.value;
        }
    }
}

/********************************************************************************
* 기      능   : 사칙연산자 입력
********************************************************************************/
function btn_arith_OnClick(obj)
{
    // 해당 오브젝트에 문자열 생성 후 처리
    if( ginput != null ) {
        var inputPos = ginputPos[0];
        if( inputPos < 0 ) return;

        if( inputPos ==0 ) {
            ginput.value = cb_logic_arith.value + ginput.value;
        } else {
            if( Length(ginput.value) == 1 ) {
                ginput.value = ginput.value + cb_logic_arith.value;
            } else {
                var input1 = SubStr(ginput.value, 0, inputPos);
                var input2 = SubStr(ginput.value, inputPos);
                ginput.value = input1 + cb_logic_arith.value +input2;
            }
        }
        ginput = null;
    } else {
        if (gfn_showConfirm("연산입력 텍스트 맨끝에 연산 기호를 추가하겠습니까?")) {
            et_input.value = et_input.value + cb_logic_arith.value;
        }
    }
}

/********************************************************************************
* 기      능   : ( 입력
********************************************************************************/
function btn_leftblock_OnClick(obj)
{
    // 해당 오브젝트에 문자열 생성 후 처리
    if( ginput != null ) {
        var inputPos = ginputPos[0];
        if( inputPos < 0 ) return;

        if( inputPos ==0 ) {
            ginput.value = "(" + ginput.value;
        } else {
            if( Length(ginput.value) == 1 ) {
                ginput.value = ginput.value + "(";
            } else {
                var input1 = SubStr(ginput.value, 0, inputPos);
                var input2 = SubStr(ginput.value, inputPos);
                ginput.value = input1 + "(" +input2;
            }
        }
        ginput = null;
    } else {
        if (gfn_showConfirm("연산입력 텍스트 맨끝에 연산 기호를 추가하겠습니까?")) {
            et_input.value = et_input.value + "(";
        }
    }
}

/********************************************************************************
* 기      능   : ) 입력
********************************************************************************/
function btn_rightblock_OnClick(obj)
{
    // 해당 오브젝트에 문자열 생성 후 처리
    if( ginput != null ) {
        var inputPos = ginputPos[0];
        if( inputPos < 0 ) return;

        if( inputPos ==0 ) {
            ginput.value = ")" + ginput.value;
        } else {
            if( Length(ginput.value) == 1 ) {
                ginput.value = ginput.value + ")";
            } else {
                var input1 = SubStr(ginput.value, 0, inputPos);
                var input2 = SubStr(ginput.value, inputPos);
                ginput.value = input1 + ")" +input2;
            }
        }
        ginput = null;
    } else {
        if (gfn_showConfirm("연산입력 텍스트 맨끝에 연산 기호를 추가하겠습니까?")) {
            et_input.value = et_input.value + ")";
        }
    }
}

/********************************************************************************
* 기      능   : 특성코드 조회 팝업 호출 후 변수 입력
********************************************************************************/
function getCalSpecCode(obj)
{
    var specCode = "";
    var specNum = "N";
    if( ginput != null ) {
        var args = "spec=''";
            args = args + " grp=''";
        var retnArray=null;
        retnArray = gfn_openPopup("CS0108007B", true, args);

        if( Length(retnArray) == 0 ) {
        } else {
            specCode = retnArray[1];
            specNum = retnArray[2];
        }

        if( specCode != "" ) {
            if( specNum == "Y" ) {
                specCode = "{"+specCode+"}";
            } else {
                specCode = "\"{"+specCode+"}\"";
            }

            var inputPos = ginputPos[0];
            if( inputPos < 0 ) return;

            if( inputPos ==0 ) {
                ginput.value = specCode + ginput.value;
            } else {
                if( Length(ginput.value) == 1 ) {
                    ginput.value = ginput.value + specCode;
                } else {
                    var input1 = SubStr(ginput.value, 0, inputPos);
                    var input2 = SubStr(ginput.value, inputPos);
                    ginput.value = input1 + specCode +input2;
                }
            }
            ginput = null;
        }
    } else {
        if (gfn_showConfirm("특성코드를 연산식 입력 텍스트 맨끝에 추가하겠습니까?")) {
			var args = "spec=''";
				args = args + " grp=''";
			var retnArray=null;
			retnArray = gfn_openPopup("CS0108007B", true, args);
	
			if( Length(retnArray) == 0 ) {
			} else {
				specCode = retnArray[1];
				specNum = retnArray[2];
			}
	
			if( specCode != "" ) {
				if( specNum == "Y" ) {
					specCode = "{"+specCode+"}";
				} else {
					specCode = "\"{"+specCode+"}\"";
				}
				et_input.value = et_input.value + specCode;
			}
        }
    }
}

/********************************************************************************
* 기      능   : 특성코드 조회 팝업 호출
********************************************************************************/
function getCalCode(obj)
{
    var args = "spec=''";
        args = args + " grp=''";
    var retnArray=null;
    retnArray = gfn_openPopup("CS0108007B", true, args);

    if( Length(retnArray) == 0 ) {
    } else {
        ed_cal_spec.value = retnArray[1];
    }
}

/********************************************************************************
* 기      능   : 특성코드 값조회 팝업 호출 후 처리
********************************************************************************/
function btn_specValue_OnClick(obj)
{
    if( ed_cal_spec.value == "" ) {
        gfn_openMsgWin("특성값 추가를 위해 특성코드 값을 입력하세요", "", "A", "특성값추가");
        return;
    }

    var specValue = "";
    if( ginput != null ) {
        var fa_cod = quote(ed_cal_spec.value);
        var args = "cod=" + fa_cod;
        specValue = gfn_openPopup("CS0108007D", true, args);

        if( specValue != "" ) {
            if( ginput != null ) {
                var inputPos = ginputPos[0];
                if( inputPos < 0 ) return;

                if( inputPos ==0 ) {
                    ginput.value = specValue + ginput.value;
                } else {
                    if( Length(ginput.value) == 1 ) {
                        ginput.value = ginput.value + specValue;
                    } else {
                        var input1 = SubStr(ginput.value, 0, inputPos);
                        var input2 = SubStr(ginput.value, inputPos);
                        ginput.value = input1 + specValue +input2;
                    }
                }
                ginput = null;
            }
        }
    } else {
        if (gfn_showConfirm("특성값을 연산식 입력 텍스트 맨끝에 추가하겠습니까?")) {
			var fa_cod = quote(ed_cal_spec.value);
			var args = "cod=" + fa_cod;
			specValue = gfn_openPopup("CS0108007D", true, args);
	
			if( specValue != "" ) {
			    et_input.value = et_input.value + specValue;
			}
        }
    }
}

/********************************************************************************
* 기      능   : 연산입력시 입력 오브젝트 생성
********************************************************************************/
function et_input_OnCharChanged(obj,strPreText,strPostText)
{
    ginputPos = obj.GetCaretPos();
    ginput = obj;
}

/********************************************************************************
* 기      능   : 연산입력시 입력 오브젝트 생성
********************************************************************************/
function et_input_OnClick(obj)
{
    ginputPos = obj.GetCaretPos();
    ginput = obj;
}

/********************************************************************************
* 기      능   : 연산입력시 입력 오브젝트 생성
********************************************************************************/
function et_input_OnFocus(obj)
{
    ginputPos = obj.GetCaretPos();
    ginput = obj;
}

/********************************************************************************
* 기      능   : 연산처리 결과시 입력 오브젝트 생성
********************************************************************************/
function et_output_OnCharChanged(obj,strPreText,strPostText)
{
    ginputPos = obj.GetCaretPos();
    ginput = obj;
}

/********************************************************************************
* 기      능   : 정렬 처리
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex) {
    if( nCell == 0 ) gfn_selectAllGrid(obj,nCell,nCell,true);
    else             gfn_sortGrid(obj, nCell);
}

/********************************************************************************
* 기      능   : 연산처리 결과시 입력 오브젝트 생성
********************************************************************************/
function et_output_OnClick(obj)
{
    ginputPos = obj.GetCaretPos();
    ginput = obj;
}

/********************************************************************************
* 기      능   : 연산처리 결과시 입력 오브젝트 생성
********************************************************************************/
function et_output_OnFocus(obj)
{
    ginputPos = obj.GetCaretPos();
    ginput = obj;
}

/********************************************************************************
* 기      능   : 연산처리 결과 그리드 추가
********************************************************************************/
function btn_add_OnClick(obj)
{
    var index = ds_zcstmatchid_scale.row;
    if( index > -1 ) {
        if( ds_zcstmatchid_scale.GetColumn(index, "FOMAT") == null || ds_zcstmatchid_scale.GetColumn(index, "FOMAT") == "" ) {
			gfn_openMsgWin("연산유형을 선택하세요", "", "A", "");
			return;
        }
        
        if( ds_zcstmatchid_scale.GetColumn(index, "FOMAT") == "A" ) {
            if( ds_calcu.GetRowCount() >= 1 ) {
			    gfn_openMsgWin("A형 산술연산식은 더 이상 그리드를 추가 할 수 없습니다.", "", "A", "");
            } else {
			    var rowIndex = ds_calcu.AddRow();
				ds_calcu.SetColumn(rowIndex, "SEQN", rowIndex+1);
				ds_calcu.SetColumn(rowIndex, "OPR", "");
				ds_calcu.SetColumn(rowIndex, "RTN", "");
				ds_calcu.SetColumn(rowIndex, "FOMAT", "");
            }
        } else {
			var rowIndex = ds_calcu.AddRow();
			ds_calcu.SetColumn(rowIndex, "SEQN", rowIndex+1);
			ds_calcu.SetColumn(rowIndex, "OPR", "");
			ds_calcu.SetColumn(rowIndex, "RTN", "");
			ds_calcu.SetColumn(rowIndex, "FOMAT", "");
        }
    }
}

/********************************************************************************
* 기      능   : 연산처리 결과 그리드 삭제
********************************************************************************/
function btn_del_OnClick(obj)
{
    var index = ds_zcstmatchid_scale.row;
    if( index > -1 ) {
        if( ds_zcstmatchid_scale.GetColumn(index, "FOMAT") == null || ds_zcstmatchid_scale.GetColumn(index, "FOMAT") == "" ) {
			gfn_openMsgWin("연산유형을 선택하세요", "", "A", "");
			return;
        }
        
        if( ds_zcstmatchid_scale.GetColumn(index, "FOMAT") == "A" ) {
			gfn_openMsgWin("A형 산술연산식은 더 이상 그리드를 삭제 할 수 없습니다.", "", "A", "");
        } else {
            if( ds_calcu.GetRowCount() > 0 ) {
                ds_calcu.DeleteRow(ds_calcu.row);
                // 그리드 순번 재설정
                ds_calcu.fireevent = false;
                for(var i=0; i < ds_calcu.GetRowCount(); i++) {
                    ds_calcu.SetColumn(i, "SEQN", i+1);
                }
                ds_calcu.fireevent = true;
            }
        }
    }
}

/********************************************************************************
* 기      능   : 조합식을 조합하여 그리드에 반영한다.
********************************************************************************/
function btn_op_make_OnClick(obj)
{
    var oprMerge = "";
    var index = ds_zcstmatchid_scale.row;
    var fomat = ds_zcstmatchid_scale.GetColumn(index, "FOMAT");
    if( fomat == "A" ) {
        var opr = ds_calcu.GetColumn(0, "OPR");
        trace("opr length:"+IndexOf(opr, '"'));
        if( IndexOf(opr, '"') > -1 ) {
			gfn_openMsgWin("A형 산술연산식에서 문자열 특성변수는 입력할 수 없습니다.", "", "A", "연산식생성");
			return;
        }
    }
    
	for(var i=0; i < ds_calcu.GetRowCount(); i++) {
		var opr = ds_calcu.GetColumn(i, "OPR");
		var rtn = ds_calcu.GetColumn(i, "RTN");
		
		if( i == ( ds_calcu.GetRowCount() -1 ) ) {
		    if( fomat == "A" ) {
		        oprMerge =  oprMerge + opr;
		    } else {
		        oprMerge =  oprMerge + opr + "=" + rtn;
		    }
		} else {
            oprMerge =  oprMerge + opr + "=" + rtn + ",\n";
		}
	}
	ds_zcstmatchid_scale.SetColumn(index, "CALCULAT", oprMerge);
}

/********************************************************************************
* 기      능   : 그리드 연산유형 선택시 연산처리결과 입력 및 ext 제어
********************************************************************************/
function ds_zcstmatchid_scale_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
    if( strColumnID == "FOMAT" ) {
        if( varNewValue == "A" ) {
            if( ds_calcu.GetRowCount() > 1 ) {
				if (gfn_showConfirm("연산유형이 A형은 한개의 연산로직만 존재합니다. 나머지 연산로직은 삭제하겠습니까?")) {
				    for(var i=ds_calcu.GetRowCount()-1 ; i > 0; i--) {
				        ds_calcu.DeleteRow(i);
				    }
					et_output.value = "";
					et_output.Enable = false;
				} else {
				    gfn_openMsgWin("연산유형을 변경할 수 없습니다.", "", "A", "");
				    ds_zcstmatchid_scale.fireevent = false;
				    ds_zcstmatchid_scale.SetColumn(nRow, "FOMAT", varOldValue);
				    ds_zcstmatchid_scale.fireevent = true;
				}
            } else {
			    et_output.value = "";
			    et_output.Enable = false;
            }
        } else {
		    et_output.Enable = true;
        }
    }

    if( strColumnID == "FOMAT" ) {
        var FOMAT = ds_zcstmatchid_scale.GetColumn(nRow, "FOMAT");
        gFomat = FOMAT;
    	if( IndexOf(FOMAT, "A") > -1 ) {
            // 입력필드 활성화 처리
            btn_opr_verify.Enable = true;
            et_calculat.Enable = true;
            btn_add.Enable = true;
            btn_del.Enable = true;
            btn_op_make.Enable = true;
            btn_giho01.Enable = true;
            btn_giho02.Enable = true;
            btn_giho03.Enable = true;
            btn_giho04.Enable = true;
            btn_giho05.Enable = true;
            btn_giho06.Enable = true;
            btn_giho07.Enable = true;
            btn_giho08.Enable = true;
            et_input.Enable = true;           
            et_output.value = "";
            et_output.Enable = false;
    	} else if( IndexOf(FOMAT, "E") > -1 ) {
			ds_zcstmatchid_scale.fireevent = false;
			ds_zcstmatchid_scale.SetColumn(nRow, "CALCULAT", "");
			ds_zcstmatchid_scale.fireevent = true;

			btn_opr_verify.Enable = false;
			et_calculat.Enable = false;
			btn_add.Enable = false;
			btn_del.Enable = false;
			btn_op_make.Enable = false;
			btn_giho01.Enable = false;
			btn_giho02.Enable = false;
			btn_giho03.Enable = false;
			btn_giho04.Enable = false;
			btn_giho05.Enable = false;
			btn_giho06.Enable = false;
			btn_giho07.Enable = false;
			btn_giho08.Enable = false;
			et_input.Enable = false;
			et_output.Enable = false;          
    	} else {
			btn_opr_verify.Enable = true;
			et_calculat.Enable = true;
			btn_add.Enable = true;
			btn_del.Enable = true;
			btn_op_make.Enable = true;
			btn_giho01.Enable = true;
			btn_giho02.Enable = true;
			btn_giho03.Enable = true;
			btn_giho04.Enable = true;
			btn_giho05.Enable = true;
			btn_giho06.Enable = true;
			btn_giho07.Enable = true;
			btn_giho08.Enable = true;
			et_input.Enable = true;           
			et_output.Enable = true;          
    	}
    }
    // 연산식 사용구분 제어
    if( strColumnID == "DFLAG" ) {
        if( varNewValue == "" ) {
            if( VERIFY != "Y" ) {
                gfn_openMsgWin("연산식 검증 완료 후 사용구분을 사용으로 변경할 수 있습니다.", "", "A", "");
				ds_zcstmatchid_scale.fireevent = false;
				ds_zcstmatchid_scale.SetColumn(nRow, "DFLAG", varOldValue);
				ds_zcstmatchid_scale.fireevent = true;
            }
        }
    }
}

/********************************************************************************
* 기      능   : 연산식 검증
********************************************************************************/
function btn_opr_verify_OnClick(obj)
{
	// 작성된 연산식 조건식을 검증한다.
	var calculat = et_calculat.value;
    var format = ds_zcstmatchid_scale.GetColumn(ds_zcstmatchid_scale.row, "FOMAT")+
                 ds_zcstmatchid_scale.GetColumn(ds_zcstmatchid_scale.row, "SCALE_TYPE")+
                 ToString(ds_zcstmatchid_scale.GetColumn(ds_zcstmatchid_scale.row, "SCALE"));
	if( calculat == "" ) {
        gfn_openMsgWin("입력된 연산식이 없습니다.", "", "A", "연산식검증");
	    return;
	}
	
	if( format == "" || format == null ) {
        gfn_openMsgWin("연산 유형을 선택하십시요", "", "A", "연산식검증");
	    return;
	}
	
	ds_cond.SetColumn(0, "CALCULAT", calculat);
	ds_cond.SetColumn(0, "FOMAT", format);
	ds_cond.SetColumn(0, "VERIFY", "N");
	
    tit_clearActionInfo();
	// 서비스 체크 로직은 별도 Act를 호출하여 처리한다.
	tit_callService(
		  "CS0108002B_ACT"
		, "specBomMatchVerify"
		, "ds_cond=ds_cond"
		, "ds_cond=ds_cond ds_error=ds_error"
		, ""
		, "fn_afterMatchVerify"
		, true
		, true
		, false);
}

/********************************************************************************
* 기      능   : 연산식 검증 처리 결과
********************************************************************************/
function fn_afterMatchVerify(obj)
{
    if( ds_error.GetRowCount() > 0 ) {
        gfn_openMsgWin("담당자에 문의하십시요\n"+ds_error.GetColumn(0,"ERRMSG"), "E", "A", ds_error.GetColumn(0,"ERRCODE") );
    } else {
        gfn_openMsgWin("연산식 검증이 완료 되었습니다. ", "", "A", "연산식검증");
        ds_zcstmatchid_scale.SetColumn(ds_zcstmatchid_scale.row, "VERIFY", ds_cond.GetColumn(0, "VERIFY"));
    }
}


]]></Script>
</Window>