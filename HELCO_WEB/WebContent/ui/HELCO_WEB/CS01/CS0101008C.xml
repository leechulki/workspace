<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="726" Id="form" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="재청구" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="CST" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="SPART" size="256" summ="default" type="STRING"/>
					<colinfo id="UPN" size="256" summ="default" type="STRING"/>
					<colinfo id="USERID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZYEAR" size="256" summ="default" type="STRING"/>
					<record>
						<CST></CST>
						<QTNUM></QTNUM>
						<SEQ></SEQ>
						<SEQNO></SEQNO>
						<SPART></SPART>
						<UPN></UPN>
						<USERID></USERID>
						<ZYEAR></ZYEAR>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_pjt_det">
				<Contents>
					<colinfo id="ADDR" size="256" summ="default" type="STRING"/>
					<colinfo id="ADDRBILL" size="256" summ="default" type="STRING"/>
					<colinfo id="BLD" size="256" summ="default" type="STRING"/>
					<colinfo id="BLDNM" size="256" summ="default" type="STRING"/>
					<colinfo id="BPM" size="256" summ="default" type="STRING"/>
					<colinfo id="BPMNM" size="256" summ="default" type="STRING"/>
					<colinfo id="BSU" size="256" summ="default" type="STRING"/>
					<colinfo id="BSUNM" size="256" summ="default" type="STRING"/>
					<colinfo id="CST" size="256" summ="default" type="STRING"/>
					<colinfo id="ENAME" size="256" summ="default" type="STRING"/>
					<colinfo id="GNO" size="256" summ="default" type="STRING"/>
					<colinfo id="HNA" size="256" summ="default" type="STRING"/>
					<colinfo id="HNO" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNNR" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNNRNM" size="256" summ="default" type="STRING"/>
					<colinfo id="MNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="RATE" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="SITENM" size="256" summ="default" type="STRING"/>
					<colinfo id="SPART" size="256" summ="default" type="STRING"/>
					<colinfo id="SPARTNM" size="256" summ="default" type="STRING"/>
					<colinfo id="TEL" size="256" summ="default" type="STRING"/>
					<colinfo id="TGB" size="256" summ="default" type="STRING"/>
					<colinfo id="UPN" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBUR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBURNM" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRPNM" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERS" size="256" summ="default" type="STRING"/>
					<colinfo id="WERKS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTERM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_bwtar_cd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="AMOUNT" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT" size="256" summ="default" type="STRING"/>
					<colinfo id="BANNAB" size="256" summ="default" type="STRING"/>
					<colinfo id="BISMT" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_NO" size="256" summ="default" type="STRING"/>
					<colinfo id="BRGEW" size="256" summ="default" type="STRING"/>
					<colinfo id="BWTAR" size="256" summ="default" type="STRING"/>
					<colinfo id="CGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="CGBNNM" size="256" summ="default" type="STRING"/>
					<colinfo id="CGUBN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHAR1" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="DZEINR" size="256" summ="default" type="STRING"/>
					<colinfo id="EXEDT" size="256" summ="default" type="STRING"/>
					<colinfo id="EXEID" size="256" summ="default" type="STRING"/>
					<colinfo id="EXTWG" size="256" summ="default" type="STRING"/>
					<colinfo id="EXXETM" size="256" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="GEWEI" size="256" summ="default" type="STRING"/>
					<colinfo id="HNA" size="256" summ="default" type="STRING"/>
					<colinfo id="HNO" size="256" summ="default" type="STRING"/>
					<colinfo id="JOBHOUR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="LCOSTC" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="LCOSTS" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="LGFSB" size="256" summ="default" type="STRING"/>
					<colinfo id="LVORM" size="256" summ="default" type="STRING"/>
					<colinfo id="MAKTX" size="256" summ="default" type="STRING"/>
					<colinfo id="MAN" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="MATKL" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNRNM" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNRNM2" size="256" summ="default" type="STRING"/>
					<colinfo id="MEINS" size="256" summ="default" type="STRING"/>
					<colinfo id="MENGE" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="MTART" size="256" summ="default" type="STRING"/>
					<colinfo id="NETPR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="NETPR_ORG" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="NTGEW" size="256" summ="default" type="STRING"/>
					<colinfo id="OFRHOUR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="PARLAB" size="256" summ="default" type="STRING"/>
					<colinfo id="PARLAB1" size="256" summ="default" type="STRING"/>
					<colinfo id="REQKIND" size="256" summ="default" type="STRING"/>
					<colinfo id="REQKIND_CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="RGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="RGBNNM" size="256" summ="default" type="STRING"/>
					<colinfo id="SAMT2" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC" size="256" summ="default" type="STRING"/>
					<colinfo id="UCOST" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="UCOSTA" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="UCOSTR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="UPR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="VOLEH" size="256" summ="default" type="STRING"/>
					<colinfo id="VOLUM" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERS" size="256" summ="default" type="STRING"/>
					<colinfo id="WERKS" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKST" size="256" summ="default" type="STRING"/>
					<colinfo id="ZGUBN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZGUBN_CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSIZE" size="256" summ="default" type="STRING"/>
					<colinfo id="WEBAZ" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_gbn">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ma_list" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="BANNAB" size="256" summ="default" type="STRING"/>
					<colinfo id="BISMT" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_NO" size="256" summ="default" type="STRING"/>
					<colinfo id="BRGEW" size="256" summ="default" type="STRING"/>
					<colinfo id="DZEINR" size="256" summ="default" type="STRING"/>
					<colinfo id="EXEDT" size="256" summ="default" type="STRING"/>
					<colinfo id="EXEID" size="256" summ="default" type="STRING"/>
					<colinfo id="EXTWG" size="256" summ="default" type="STRING"/>
					<colinfo id="EXXETM" size="256" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="GEWEI" size="256" summ="default" type="STRING"/>
					<colinfo id="JOBHOUR" size="256" summ="default" type="STRING"/>
					<colinfo id="LGFSB" size="256" summ="default" type="STRING"/>
					<colinfo id="LVORM" size="256" summ="default" type="STRING"/>
					<colinfo id="MAKTX" size="256" summ="default" type="STRING"/>
					<colinfo id="MAN" size="256" summ="default" type="STRING"/>
					<colinfo id="MATKL" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNRNM" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNRNM2" size="256" summ="default" type="STRING"/>
					<colinfo id="MEINS" size="256" summ="default" type="STRING"/>
					<colinfo id="MENGE" size="256" summ="default" type="STRING"/>
					<colinfo id="MTART" size="256" summ="default" type="STRING"/>
					<colinfo id="NTGEW" size="256" summ="default" type="STRING"/>
					<colinfo id="PARLAB" size="256" summ="default" type="STRING"/>
					<colinfo id="PARLAB1" size="256" summ="default" type="STRING"/>
					<colinfo id="RGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="RGBNNM" size="256" summ="default" type="STRING"/>
					<colinfo id="SAMT1" size="256" summ="default" type="STRING"/>
					<colinfo id="SAMT2" size="256" summ="default" type="STRING"/>
					<colinfo id="SAMT3" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC" size="256" summ="default" type="STRING"/>
					<colinfo id="UPR" size="256" summ="default" type="STRING"/>
					<colinfo id="VOLEH" size="256" summ="default" type="STRING"/>
					<colinfo id="VOLUM" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERS" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKST" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSIZE" size="256" summ="default" type="STRING"/>
					<colinfo id="WEBAZ" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ma_cond">
				<Contents>
					<colinfo id="BWTAR" size="256" summ="default" type="STRING"/>
					<colinfo id="LGORT" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="NROW" size="256" summ="default" type="STRING"/>
					<colinfo id="SPART" size="256" summ="default" type="STRING"/>
					<record>
						<BWTAR></BWTAR>
						<LGORT></LGORT>
						<MATNR></MATNR>
						<NROW></NROW>
						<SPART></SPART>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_di_stk">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME></CODE_NAME>
					</record>
					<record>
						<CODE>Y</CODE>
						<CODE_NAME>Y</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_out_master">
				<Contents>
					<colinfo id="ADMCOST1" size="256" summ="default" type="STRING"/>
					<colinfo id="ADMCOST2" size="256" summ="default" type="STRING"/>
					<colinfo id="BGUBN" size="256" summ="default" type="STRING"/>
					<colinfo id="BIL_AMT" size="256" summ="default" type="STRING"/>
					<colinfo id="BILAMT1" size="256" summ="default" type="STRING"/>
					<colinfo id="BILAMT2" size="256" summ="default" type="STRING"/>
					<colinfo id="BILAMT3" size="256" summ="default" type="STRING"/>
					<colinfo id="BILDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="BILDAT2" size="256" summ="default" type="STRING"/>
					<colinfo id="BILDAT3" size="256" summ="default" type="STRING"/>
					<colinfo id="BSU" size="256" summ="default" type="STRING"/>
					<colinfo id="BSUNM" size="256" summ="default" type="STRING"/>
					<colinfo id="BUSSI" size="256" summ="default" type="STRING"/>
					<colinfo id="CHGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="CRDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CRNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="CS001_GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="CS001_GBNNM" size="256" summ="default" type="STRING"/>
					<colinfo id="CST" size="256" summ="default" type="STRING"/>
					<colinfo id="CSTNM" size="256" summ="default" type="STRING"/>
					<colinfo id="EXP_PCT" size="256" summ="default" type="STRING"/>
					<colinfo id="EXPENSE1" size="256" summ="default" type="STRING"/>
					<colinfo id="EXPENSE2" size="256" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_DIRSUM" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_INDSUM" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_LABOR" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_LCOST" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_LOG" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_OEM" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_RATE" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_TOTCOST" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_UCOST" size="256" summ="default" type="STRING"/>
					<colinfo id="ID_RATE" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNNR" size="256" summ="default" type="STRING"/>
					<colinfo id="KVGR1" size="256" summ="default" type="STRING"/>
					<colinfo id="KVGR1NM" size="256" summ="default" type="STRING"/>
					<colinfo id="KVGR2" size="256" summ="default" type="STRING"/>
					<colinfo id="KVGR2NM" size="256" summ="default" type="STRING"/>
					<colinfo id="LABSTAT" size="256" summ="default" type="STRING"/>
					<colinfo id="LCOST_OFR" size="256" summ="default" type="STRING"/>
					<colinfo id="LCOST_STD" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="MA_PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="MNG_PCT" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR_DC" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR_OFR" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR_STD" size="256" summ="default" type="STRING"/>
					<colinfo id="NIGHT_WGT" size="256" summ="default" type="STRING"/>
					<colinfo id="PAYSTAT" size="256" summ="default" type="STRING"/>
					<colinfo id="PGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="PNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRO_PCT" size="256" summ="default" type="STRING"/>
					<colinfo id="PS_PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="QSTAT" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="RATE" size="256" summ="default" type="STRING"/>
					<colinfo id="REMARK" size="256" summ="default" type="STRING"/>
					<colinfo id="REQKIND" size="256" summ="default" type="STRING"/>
					<colinfo id="REQKINDNM" size="256" summ="default" type="STRING"/>
					<colinfo id="REVENUE1" size="256" summ="default" type="STRING"/>
					<colinfo id="REVENUE2" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNM" size="256" summ="default" type="STRING"/>
					<colinfo id="SHDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="SODAT" size="256" summ="default" type="STRING"/>
					<colinfo id="SPART" size="256" summ="default" type="STRING"/>
					<colinfo id="SPARTNM" size="256" summ="default" type="STRING"/>
					<colinfo id="SPT" size="256" summ="default" type="STRING"/>
					<colinfo id="SUM_OFR" size="256" summ="default" type="STRING"/>
					<colinfo id="SUM_STD" size="256" summ="default" type="STRING"/>
					<colinfo id="TAXK1" size="256" summ="default" type="STRING"/>
					<colinfo id="TAXK1NM" size="256" summ="default" type="STRING"/>
					<colinfo id="UPN" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBUR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBURNM" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRPNM" size="256" summ="default" type="STRING"/>
					<colinfo id="WEEKEND_WGT" size="256" summ="default" type="STRING"/>
					<colinfo id="WERKS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTERM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTERMNM" size="256" summ="default" type="STRING"/>
					<colinfo id="REQNR" size="256" summ="default" type="STRING"/>
					<colinfo id="RDATE" size="256" summ="default" type="STRING"/>
					<colinfo id="REQNR2" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_INSPEC" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_ETC" size="256" summ="default" type="STRING"/>
					<colinfo id="MODGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="AGENT" size="256" summ="default" type="STRING"/>
					<colinfo id="CYN" size="256" summ="default" type="STRING"/>
					<colinfo id="CTP" size="256" summ="default" type="STRING"/>
					<colinfo id="CSE" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_DLAB" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_BETC" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_MMOD" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_SAFE" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_LIFT" size="256" summ="default" type="STRING"/>
					<colinfo id="HIS_EMACID" size="256" summ="default" type="STRING"/>
					<record>
						<ADMCOST1></ADMCOST1>
						<ADMCOST2></ADMCOST2>
						<AGENT></AGENT>
						<BGUBN></BGUBN>
						<BIL_AMT></BIL_AMT>
						<BILAMT1></BILAMT1>
						<BILAMT2></BILAMT2>
						<BILAMT3></BILAMT3>
						<BILDAT></BILDAT>
						<BILDAT2></BILDAT2>
						<BILDAT3></BILDAT3>
						<BSU></BSU>
						<BSUNM></BSUNM>
						<BUSSI></BUSSI>
						<CHGBN></CHGBN>
						<CRDAT></CRDAT>
						<CRNAME></CRNAME>
						<CS001_GBN></CS001_GBN>
						<CS001_GBNNM></CS001_GBNNM>
						<CSE></CSE>
						<CST></CST>
						<CSTNM></CSTNM>
						<CTP></CTP>
						<CYN></CYN>
						<EXP_PCT></EXP_PCT>
						<EXPENSE1></EXPENSE1>
						<EXPENSE2></EXPENSE2>
						<FLAG></FLAG>
						<HIS_BETC></HIS_BETC>
						<HIS_DIRSUM></HIS_DIRSUM>
						<HIS_DLAB></HIS_DLAB>
						<HIS_EMACID></HIS_EMACID>
						<HIS_ETC></HIS_ETC>
						<HIS_INDSUM></HIS_INDSUM>
						<HIS_INSPEC></HIS_INSPEC>
						<HIS_LABOR></HIS_LABOR>
						<HIS_LCOST></HIS_LCOST>
						<HIS_LIFT></HIS_LIFT>
						<HIS_LOG></HIS_LOG>
						<HIS_MMOD></HIS_MMOD>
						<HIS_OEM></HIS_OEM>
						<HIS_RATE></HIS_RATE>
						<HIS_SAFE></HIS_SAFE>
						<HIS_TOTCOST></HIS_TOTCOST>
						<HIS_UCOST></HIS_UCOST>
						<ID_RATE></ID_RATE>
						<KUNNR></KUNNR>
						<KVGR1></KVGR1>
						<KVGR1NM></KVGR1NM>
						<KVGR2></KVGR2>
						<KVGR2NM></KVGR2NM>
						<LABSTAT></LABSTAT>
						<LCOST_OFR></LCOST_OFR>
						<LCOST_STD></LCOST_STD>
						<LIFNR></LIFNR>
						<MA_PSPID></MA_PSPID>
						<MNG_PCT></MNG_PCT>
						<MODGBN></MODGBN>
						<NETWR_DC></NETWR_DC>
						<NETWR_OFR></NETWR_OFR>
						<NETWR_STD></NETWR_STD>
						<NIGHT_WGT></NIGHT_WGT>
						<PAYSTAT></PAYSTAT>
						<PGBN></PGBN>
						<PNAME></PNAME>
						<PRO_PCT></PRO_PCT>
						<PS_PSPID></PS_PSPID>
						<QSTAT></QSTAT>
						<QTNAM></QTNAM>
						<QTNUM></QTNUM>
						<RATE></RATE>
						<RDATE></RDATE>
						<REMARK></REMARK>
						<REQKIND></REQKIND>
						<REQKINDNM></REQKINDNM>
						<REQNR></REQNR>
						<REQNR2></REQNR2>
						<REVENUE1></REVENUE1>
						<REVENUE2></REVENUE2>
						<SEQ></SEQ>
						<SEQNM></SEQNM>
						<SHDAT></SHDAT>
						<SODAT></SODAT>
						<SPART></SPART>
						<SPARTNM></SPARTNM>
						<SPT></SPT>
						<SUM_OFR></SUM_OFR>
						<SUM_STD></SUM_STD>
						<TAXK1></TAXK1>
						<TAXK1NM></TAXK1NM>
						<UPN></UPN>
						<VKBUR></VKBUR>
						<VKBURNM></VKBURNM>
						<VKGRP></VKGRP>
						<VKGRPNM></VKGRPNM>
						<WEEKEND_WGT></WEEKEND_WGT>
						<WERKS></WERKS>
						<ZTERM></ZTERM>
						<ZTERMNM></ZTERMNM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_days">
				<Contents>
					<colinfo id="DAYS" size="256" type="STRING"/>
					<record>
						<DAYS></DAYS>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_del">
				<Contents>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<record>
						<QTNUM></QTNUM>
						<SEQ></SEQ>
						<SEQNO></SEQNO>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_seq">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE>0</CODE>
						<CODE_NAME>원본</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_hna">
				<Contents>
					<colinfo id="CST" size="256" summ="default" type="STRING"/>
					<colinfo id="HNA" size="256" summ="default" type="STRING"/>
					<colinfo id="HNO" size="256" summ="default" type="STRING"/>
					<colinfo id="PJT" size="256" summ="default" type="STRING"/>
					<colinfo id="UPN" size="256" summ="default" type="STRING"/>
					<colinfo id="WBS" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_key">
				<Contents>
					<colinfo id="QTNUM" size="31" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_req">
				<Contents>
					<colinfo id="AMOUNT" size="256" summ="default" type="STRING"/>
					<colinfo id="AMT" size="256" summ="default" type="STRING"/>
					<colinfo id="BANNAB" size="256" summ="default" type="STRING"/>
					<colinfo id="BISMT" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_NO" size="256" summ="default" type="STRING"/>
					<colinfo id="BRGEW" size="256" summ="default" type="STRING"/>
					<colinfo id="BWTAR" size="256" summ="default" type="STRING"/>
					<colinfo id="CGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="CGBNNM" size="256" summ="default" type="STRING"/>
					<colinfo id="CGUBN" size="256" summ="default" type="STRING"/>
					<colinfo id="CHAR1" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="DZEINR" size="256" summ="default" type="STRING"/>
					<colinfo id="EXEDT" size="256" summ="default" type="STRING"/>
					<colinfo id="EXEID" size="256" summ="default" type="STRING"/>
					<colinfo id="EXTWG" size="256" summ="default" type="STRING"/>
					<colinfo id="EXXETM" size="256" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="GEWEI" size="256" summ="default" type="STRING"/>
					<colinfo id="HNA" size="256" summ="default" type="STRING"/>
					<colinfo id="HNO" size="256" summ="default" type="STRING"/>
					<colinfo id="JOBHOUR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="LCOSTC" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="LCOSTS" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="LGFSB" size="256" summ="default" type="STRING"/>
					<colinfo id="LVORM" size="256" summ="default" type="STRING"/>
					<colinfo id="MAKTX" size="256" summ="default" type="STRING"/>
					<colinfo id="MAN" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="MATKL" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNRNM" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNRNM2" size="256" summ="default" type="STRING"/>
					<colinfo id="MEINS" size="256" summ="default" type="STRING"/>
					<colinfo id="MENGE" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="MTART" size="256" summ="default" type="STRING"/>
					<colinfo id="NETPR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="NETPR_ORG" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="NTGEW" size="256" summ="default" type="STRING"/>
					<colinfo id="OFRHOUR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="PARLAB" size="256" summ="default" type="STRING"/>
					<colinfo id="PARLAB1" size="256" summ="default" type="STRING"/>
					<colinfo id="REQKIND" size="256" summ="default" type="STRING"/>
					<colinfo id="REQKIND_CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="RGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="RGBNNM" size="256" summ="default" type="STRING"/>
					<colinfo id="SAMT2" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC" size="256" summ="default" type="STRING"/>
					<colinfo id="UCOST" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="UCOSTA" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="UCOSTR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="UPR" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="VOLEH" size="256" summ="default" type="STRING"/>
					<colinfo id="VOLUM" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERS" size="256" summ="default" type="STRING"/>
					<colinfo id="WERKS" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKST" size="256" summ="default" type="STRING"/>
					<colinfo id="ZGUBN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZGUBN_CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSIZE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_docno_gen">
				<Contents>
					<colinfo id="PFX" size="256" type="STRING"/>
					<colinfo id="DOCNO" size="256" type="STRING"/>
					<record>
						<PFX></PFX>
						<DOCNO></DOCNO>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_dec">
				<Contents>
					<colinfo id="APPGUBN" size="256" summ="default" type="STRING"/>
					<colinfo id="APSTAT" size="256" summ="default" type="STRING"/>
					<colinfo id="DOCKIND" size="256" summ="default" type="STRING"/>
					<colinfo id="DOCNO" size="256" summ="default" type="STRING"/>
					<colinfo id="REIRUM" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQSTAT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_jhgbn">
				<Contents>
					<colinfo id="JHGBN" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_reject_cond">
				<Contents>
					<colinfo id="DOCNO" size="256" summ="default" type="STRING"/>
					<record>
						<DOCNO></DOCNO>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_reject_list">
				<Contents>
					<colinfo id="MESGSEND" size="256" summ="default" type="STRING"/>
					<colinfo id="MESGACCP" size="256" summ="default" type="STRING"/>
					<colinfo id="MESGTITL" size="256" summ="default" type="STRING"/>
					<colinfo id="MESGDESC" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_reject_wb">
				<Contents>
					<colinfo id="APNUM1" size="256" summ="default" type="STRING"/>
					<colinfo id="APNUM2" size="256" summ="default" type="STRING"/>
					<colinfo id="APDESC" size="256" summ="default" type="STRING"/>
					<record>
						<APDESC></APDESC>
						<APNUM1></APNUM1>
						<APNUM2></APNUM2>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_mmt001">
				<Contents>
					<colinfo id="REQNR" size="256" summ="default" type="STRING"/>
					<colinfo id="SHDAT" size="256" summ="default" type="STRING"/>
					<record>
						<REQNR></REQNR>
						<SHDAT></SHDAT>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_rcond">
				<Contents>
					<colinfo id="ZPROGRAM" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<record>
						<GBN></GBN>
						<ZPROGRAM></ZPROGRAM>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user12" Bottom="253" Height="26" Id="Shape28" Left="488" LineColor="user13" Right="585" TabOrder="54" Top="227" Type="Rectangle" Width="97"></Shape>
		<Shape BKColor="user12" Bottom="253" Height="26" Id="Shape27" Left="392" LineColor="user13" Right="489" TabOrder="53" Top="227" Type="Rectangle" Width="97"></Shape>
		<Shape BKColor="user12" Bottom="253" Height="26" Id="Shape26" Left="296" LineColor="user13" Right="393" TabOrder="52" Top="227" Type="Rectangle" Width="97"></Shape>
		<Shape BKColor="user12" Bottom="662" Height="26" Id="Shape24" Left="9" LineColor="user13" Right="730" TabOrder="48" Top="636" Type="Rectangle" Width="721"></Shape>
		<Shape BKColor="user12" Bottom="637" Height="26" Id="Shape23" Left="9" LineColor="user13" Right="730" TabOrder="47" Top="611" Type="Rectangle" Width="721"></Shape>
		<Shape BKColor="user12" Bottom="637" Height="26" Id="Shape18" Left="248" LineColor="user13" Right="345" TabOrder="35" Top="611" Type="Rectangle" Width="97"></Shape>
		<Shape BKColor="user12" Bottom="612" Height="26" Id="Shape22" Left="9" LineColor="user13" Right="970" TabOrder="46" Top="586" Type="Rectangle" Width="961"></Shape>
		<Shape BKColor="user12" Bottom="715" Height="54" Id="Shape6" Left="8" LineColor="user13" Right="105" TabOrder="43" Top="661" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="52" Id="Static53" Left="9" Style="sty_lb_form_basic" TabOrder="44" Text="특기사항" Top="662" VAlign="Middle" Width="95"></Static>
		<Div Height="36" Id="div_btn" TabOrder="1" Text="Div0" ToolTipFont="Default,0" Url="WB01::CommBtnForm.xml" Width="976">
			<Contents></Contents>
		</Div>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="Static14" Left="8" Style="sty_lb_form_basic" TabOrder="2" Text="구분" Top="153" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="Static15" Left="104" Style="sty_lb_form_basic" TabOrder="3" Text="자재판매가" Top="153" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="Static16" Left="200" Style="sty_lb_form_basic" TabOrder="4" Text="인건비" Top="153" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="Static17" Left="296" Style="sty_lb_form_basic" TabOrder="5" Text="제경비" Top="153" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="Static18" Left="392" Style="sty_lb_form_basic" TabOrder="6" Text="일반관리비" Top="153" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="Static19" Left="488" Style="sty_lb_form_basic" TabOrder="7" Text="기업이윤" Top="153" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="Static20" Left="584" Style="sty_lb_form_basic" TabOrder="8" Text="합계" Top="153" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="Static21" Left="680" Style="sty_lb_form_basic" TabOrder="9" Text="증감율" Top="153" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="Static22" Left="776" Style="sty_lb_form_basic" TabOrder="10" Text="특이사항" Top="153" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_bil_amt" Left="872" Style="sty_lb_form_basic" TabOrder="11" Text="외주예상비용" Top="153" VAlign="Middle" Width="97"></Static>
		<Shape BKColor="user12" Bottom="203" Height="26" Id="Shape5" Left="8" LineColor="user13" Right="105" TabOrder="12" Top="177" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static25" Left="9" Style="sty_lb_form_basic" TabOrder="13" Text="표준금액" Top="178" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="228" Height="26" Id="Shape25" Left="8" LineColor="user13" Right="105" TabOrder="14" Top="202" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static26" Left="9" Style="sty_lb_form_basic" TabOrder="15" Text="견적금액" Top="203" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="203" Height="26" Id="Shape7" Left="776" LineColor="user13" Right="873" TabOrder="16" Top="177" Type="Rectangle" Width="97"></Shape>
		<Shape BKColor="user12" Bottom="228" Height="26" Id="Shape8" Left="776" LineColor="user13" Right="873" TabOrder="17" Top="202" Type="Rectangle" Width="97"></Shape>
		<Checkbox BindDataset="ds_out_master" Column="NIGHT_WGT" DisableBKColor="user5" DisableColor="user7" Enable="FALSE" FalseValue="1" Height="15" Id="chk_night" Left="780" OnClick="chk_night_OnClick" TabOrder="58" Text="야간작업" Top="183" TrueValue="1.5" Value="FALSE" Width="97"></Checkbox>
		<Checkbox BindDataset="ds_out_master" Column="WEEKEND_WGT" DisableBKColor="user5" DisableColor="user7" Enable="FALSE" FalseValue="1" Height="14" Id="chk_weekend" Left="780" OnClick="chk_weekend_OnClick" TabOrder="60" Text="휴일철야작업" Top="208" TrueValue="2" Value="FALSE" Width="89"></Checkbox>
		<Static Height="17" Id="Static28" Left="305" TabOrder="18" Text="적용%" Top="233" Width="40"></Static>
		<Static Height="17" Id="Static29" Left="401" TabOrder="19" Text="적용%" Top="232" Width="40"></Static>
		<Static Height="17" Id="Static30" Left="497" TabOrder="20" Text="적용%" Top="232" Width="40"></Static>
		<Static Height="17" Id="Static31" Left="601" TabOrder="21" Text="(천단위&#32;절사)" Top="235" Width="80"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm1" Left="8" Style="sty_lb_form_basic" TabOrder="22" Text="원가&#32;변동&#32;내역" Top="260" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="612" Height="26" Id="Shape12" Left="8" LineColor="user13" Right="105" TabOrder="23" Top="586" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static43" Left="9" Style="sty_lb_form_basic" TabOrder="24" Text="계산서&#32;구분" Top="587" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="612" Height="26" Id="Shape13" Left="248" LineColor="user13" Right="345" TabOrder="25" Top="586" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static44" Left="249" Style="sty_lb_form_basic" TabOrder="26" Text="발송구분" Top="587" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="612" Height="26" Id="Shape14" Left="488" LineColor="user13" Right="585" TabOrder="27" Top="586" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static45" Left="489" Style="sty_lb_form_basic" TabOrder="28" Text="세금구분" Top="587" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="612" Height="26" Id="Shape15" Left="729" LineColor="user13" Right="826" TabOrder="29" Top="586" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static46" Left="730" Style="sty_lb_form_basic" TabOrder="30" Text="수금조건" Top="587" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="637" Height="26" Id="Shape16" Left="8" LineColor="user13" Right="105" TabOrder="31" Top="611" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static47" Left="9" Style="sty_lb_form_basic" TabOrder="32" Text="계산서발행일&#32;1)" Top="612" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="662" Height="26" Id="Shape17" Left="8" LineColor="user13" Right="105" TabOrder="33" Top="636" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static48" Left="9" Style="sty_lb_form_basic" TabOrder="34" Text="계산서발행금액1)" Top="637" VAlign="Middle" Width="95"></Static>
		<Static Align="Center" Height="24" Id="Static49" Left="249" Style="sty_lb_form_basic" TabOrder="36" Text="계산서발행일&#32;2)" Top="612" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="662" Height="26" Id="Shape19" Left="248" LineColor="user13" Right="345" TabOrder="37" Top="636" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static50" Left="249" Style="sty_lb_form_basic" TabOrder="38" Text="계산서발행금액2)" Top="637" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="637" Height="26" Id="Shape20" Left="488" LineColor="user13" Right="585" TabOrder="39" Top="611" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static51" Left="489" Style="sty_lb_form_basic" TabOrder="40" Text="계산서발행일&#32;3)" Top="612" VAlign="Middle" Width="95"></Static>
		<Shape BKColor="user12" Bottom="662" Height="26" Id="Shape21" Left="488" LineColor="user13" Right="585" TabOrder="41" Top="636" Type="Rectangle" Width="97"></Shape>
		<Static Align="Center" Height="24" Id="Static52" Left="489" Style="sty_lb_form_basic" TabOrder="42" Text="계산서발행금액3)" Top="637" VAlign="Middle" Width="95"></Static>
		<Checkbox BindDataset="ds_out_master" Column="BGUBN" DisableBKColor="user5" DisableColor="user7" Enable="FALSE" Height="24" Id="chk_spbill" Left="741" OnClick="chk_spbill_OnClick" TabOrder="45" Text="계산서&#32;분할&#32;발행" Top="624" Value="FALSE" Width="116"></Checkbox>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="BILAMT1" Enable="FALSE" Height="20" Id="me_bilamt1" Left="107" Style="sty_ipt_form" TabOrder="49" Top="639" Width="139"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="BILAMT2" Enable="FALSE" Height="20" Id="me_bilamt2" Left="347" Style="sty_ipt_form" TabOrder="50" Top="639" Width="139"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="BILAMT3" Enable="FALSE" Height="20" Id="me_bilamt3" Left="587" Style="sty_ipt_form" TabOrder="51" Top="639" Width="140"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="NETWR_OFR" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_netwr_ofr" Left="104" Style="sty_ipt_form" TabOrder="59" TabStop="FALSE" Top="202" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="NETWR_STD" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_netwr_std" Left="104" Style="sty_ipt_form" TabOrder="61" TabStop="FALSE" Top="177" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="LCOST_STD" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_lcost_std" Left="200" Style="sty_ipt_form" TabOrder="63" TabStop="FALSE" Top="177" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="LCOST_OFR" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_lcost_ofr" Left="200" Style="sty_ipt_form" TabOrder="62" TabStop="FALSE" Top="202" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="EXPENSE1" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_exp_std" Left="296" Style="sty_ipt_form" TabOrder="65" TabStop="FALSE" Top="177" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="EXPENSE2" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_exp_ofr" Left="296" Style="sty_ipt_form" TabOrder="64" TabStop="FALSE" Top="202" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" BKColor="user40" Border="Flat" Column="EXP_PCT" Enable="FALSE" Height="20" Id="ed_exp_pct" Left="345" OnChanged="ed_exp_pct_OnChanged" Style="sty_ipt_form" TabOrder="55" Top="230" Width="45"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="ADMCOST1" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_mng_std" Left="392" Style="sty_ipt_form" TabOrder="67" TabStop="FALSE" Top="177" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="ADMCOST2" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_mng_ofr" Left="392" Style="sty_ipt_form" TabOrder="66" TabStop="FALSE" Top="202" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" BKColor="user40" Border="Flat" Column="MNG_PCT" Enable="FALSE" Height="20" Id="ed_mng_pct" Left="441" OnChanged="ed_mng_pct_OnChanged" Style="sty_ipt_form" TabOrder="56" Top="230" Width="45"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" BKColor="user40" Border="Flat" Column="PRO_PCT" Enable="FALSE" Height="20" Id="ed_pro_pct" Left="537" OnChanged="ed_pro_pct_OnChanged" Style="sty_ipt_form" TabOrder="57" Top="230" Width="45"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="REVENUE1" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_pro_std" Left="488" Style="sty_ipt_form" TabOrder="69" TabStop="FALSE" Top="177" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="REVENUE2" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_pro_ofr" Left="488" Style="sty_ipt_form" TabOrder="68" TabStop="FALSE" Top="202" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="SUM_STD" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_sum_std" Left="584" Style="sty_ipt_form" TabOrder="71" TabStop="FALSE" Top="177" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="SUM_OFR" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_sum_ofr" Left="584" Style="sty_ipt_form" TabOrder="70" TabStop="FALSE" Top="202" Width="97"></MaskEdit>
		<MaskEdit Align="Center" BindDataset="ds_out_master" Border="Flat" Column="ID_RATE" DecimalLen="1" DecimalMinLen="1" Enable="FALSE" Height="51" Id="ed_id_rate" Left="680" Mask="##.#%" Style="sty_ipt_form" TabOrder="72" TabStop="FALSE" Top="177" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="BIL_AMT" Enable="FALSE" Height="26" Id="ed_bil_amt" Left="872" Style="sty_ipt_form" TabOrder="73" TabStop="FALSE" Top="177" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="HIS_UCOST" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_his_ucost" Left="102" Style="sty_ipt_form" TabOrder="74" TabStop="FALSE" Top="284" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="HIS_LCOST" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_his_lcost" Left="198" Style="sty_ipt_form" TabOrder="75" TabStop="FALSE" Top="284" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="HIS_LABOR" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_his_labor" Left="294" Style="sty_ipt_form" TabOrder="76" TabStop="FALSE" Top="284" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="HIS_OEM" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_his_oem" Left="390" Style="sty_ipt_form" TabOrder="77" TabStop="FALSE" Top="284" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="HIS_LOG" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_his_log" Left="486" Style="sty_ipt_form" TabOrder="78" TabStop="FALSE" Top="284" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="HIS_DIRSUM" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_his_dirsum" Left="582" Style="sty_ipt_form" TabOrder="79" TabStop="FALSE" Top="284" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="HIS_INDSUM" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_his_indsum" Left="678" Style="sty_ipt_form" TabOrder="80" TabStop="FALSE" Top="284" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="HIS_TOTCOST" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_his_totcost" Left="774" Style="sty_ipt_form" TabOrder="81" TabStop="FALSE" Top="284" Width="97"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" Column="HIS_RATE" DecimalLen="1" DecimalMinLen="1" Enable="FALSE" Height="26" Id="ed_his_rate" Left="870" Mask="##.0%" Style="sty_ipt_form" TabOrder="82" TabStop="FALSE" Top="284" Width="99"></MaskEdit>
		<TextArea BindDataset="ds_out_master" Border="Flat" Column="REMARK" Enable="FALSE" Height="53" Id="ed_remark" Left="104" Style="sty_ipt_form" TabOrder="83" Top="661" Width="865"></TextArea>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm12" Left="8" Style="sty_lb_form_basic" TabOrder="84" Text="변경&#32;전" Top="284" VAlign="Middle" Width="95"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm13" Left="8" Style="sty_lb_form_basic" TabOrder="85" Text="변경&#32;후" Top="309" VAlign="Middle" Width="95"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm14" Left="8" Style="sty_lb_form_basic" TabOrder="86" Text="차&#32;&#32;&#32;&#32;&#32;이" Top="334" VAlign="Middle" Width="95"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm2" Left="102" Style="sty_lb_form_basic" TabOrder="87" Text="재료비" Top="260" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm3" Left="198" Style="sty_lb_form_basic" TabOrder="88" Text="외주인건비" Top="260" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm4" Left="294" Style="sty_lb_form_basic" TabOrder="89" Text="일반노무비" Top="260" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm5" Left="390" Style="sty_lb_form_basic" TabOrder="90" Text="일식외주" Top="260" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm6" Left="486" Style="sty_lb_form_basic" TabOrder="91" Text="운반비" Top="260" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm8" Left="582" Style="sty_lb_form_basic" TabOrder="92" Text="직접비&#32;계" Top="260" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm9" Left="678" Style="sty_lb_form_basic" TabOrder="93" Text="간접비" Top="260" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm10" Left="774" Style="sty_lb_form_basic" TabOrder="94" Text="총원가" Top="260" VAlign="Middle" Width="97"></Static>
		<Static Align="Center" Border="Flat" BorderColor="user13" Height="26" Id="st_adm11" Left="870" Style="sty_lb_form_basic" TabOrder="95" Text="원가율" Top="260" VAlign="Middle" Width="99"></Static>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hl2" Left="198" Style="sty_ipt_form" TabOrder="96" TabStop="FALSE" Top="309" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hla2" Left="294" Style="sty_ipt_form" TabOrder="97" TabStop="FALSE" Top="309" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_ho2" Left="390" Style="sty_ipt_form" TabOrder="98" TabStop="FALSE" Top="309" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hlo2" Left="486" Style="sty_ipt_form" TabOrder="99" TabStop="FALSE" Top="309" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hd2" Left="582" Style="sty_ipt_form" TabOrder="100" TabStop="FALSE" Top="309" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hi2" Left="678" Style="sty_ipt_form" TabOrder="101" TabStop="FALSE" Top="309" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_tc2" Left="774" Style="sty_ipt_form" TabOrder="102" TabStop="FALSE" Top="309" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="1" DecimalMinLen="1" Enable="FALSE" Height="26" Id="ed_hr2" Left="870" Mask="##.0%" Style="sty_ipt_form" TabOrder="103" TabStop="FALSE" Top="309" Width="99"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hu_diff" Left="102" Style="sty_ipt_form" TabOrder="104" TabStop="FALSE" Top="334" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hl_diff" Left="198" Style="sty_ipt_form" TabOrder="105" TabStop="FALSE" Top="334" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hla_diff" Left="294" Style="sty_ipt_form" TabOrder="106" TabStop="FALSE" Top="334" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_ho_diff" Left="390" Style="sty_ipt_form" TabOrder="107" TabStop="FALSE" Top="334" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hlo_diff" Left="486" Style="sty_ipt_form" TabOrder="108" TabStop="FALSE" Top="334" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hd_diff" Left="582" Style="sty_ipt_form" TabOrder="109" TabStop="FALSE" Top="334" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Height="26" Id="ed_tc_diff" Left="774" Style="sty_ipt_form" TabOrder="111" TabStop="FALSE" Top="334" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hi_diff" Left="678" Style="sty_ipt_form" TabOrder="110" TabStop="FALSE" Top="334" Width="97"></MaskEdit>
		<MaskEdit Border="Flat" DecimalLen="1" DecimalMinLen="1" Enable="FALSE" Height="26" Id="ed_hr_diff" Left="870" Mask="##.0%" Style="sty_ipt_form" TabOrder="112" TabStop="FALSE" Top="334" Width="99"></MaskEdit>
		<MaskEdit BindDataset="ds_out_master" Border="Flat" DecimalLen="0" Enable="FALSE" Height="26" Id="ed_hu2" Left="102" Style="sty_ipt_form" TabOrder="113" TabStop="FALSE" Top="309" Width="97"></MaskEdit>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="bt_addMaterial" ImageID="btn_sub_05" Left="711" LeftMargin="12" OnClick="bt_addMaterial_OnClick" Style="sty_btn" TabOrder="115" Text="자재추가" Top="366" Transparent="TRUE" Width="86"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="bt_removeMaterial" ImageID="btn_sub_05" Left="799" LeftMargin="12" OnClick="bt_removeMaterial_OnClick" Style="sty_btn" TabOrder="116" Text="자재삭제" Top="366" Transparent="TRUE" Width="86"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="bt_hogiInput" ImageID="btn_sub_05" Left="886" LeftMargin="12" OnClick="bt_hogiInput_OnClick" Style="sty_btn" TabOrder="114" Text="호기별청구" Top="366" Transparent="TRUE" Width="85"></Button>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="KVGR1NM" Enable="FALSE" Height="20" Id="Edit5" Left="107" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="117" Text="(지급인명)" Top="589" Width="139"></Edit>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="KVGR2NM" Enable="FALSE" Height="20" Id="Edit8" Left="347" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="118" Text="(지급인명)" Top="589" Width="139"></Edit>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="TAXK1NM" Enable="FALSE" Height="20" Id="Edit9" Left="587" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="119" Text="(지급인명)" Top="589" Width="140"></Edit>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="ZTERMNM" Enable="FALSE" Height="20" Id="Edit10" Left="828" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="120" Text="(지급인명)" Top="589" Width="139"></Edit>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="BILDAT" Enable="FALSE" Height="20" Id="Edit11" Left="107" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="121" Text="(지급인명)" Top="614" Width="139"></Edit>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="BILDAT2" Enable="FALSE" Height="20" Id="Edit12" Left="347" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="122" Text="(지급인명)" Top="614" Width="139"></Edit>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="BILDAT3" Enable="FALSE" Height="20" Id="Edit13" Left="587" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="123" Text="(지급인명)" Top="614" Width="140"></Edit>
		<Grid AreaSelect="TRUE" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="580" CellMoving="TRUE" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="189" Id="grd_list" InputPanel="FALSE" Left="9" LineColor="user20" LineType="ExHORZ" OnCellClick="grd_list_OnCellClick" OnExpandUp="grd_list_OnExpandUp" OnHeadClick="grd_list_OnHeadClick" Right="970" RowHeight="20" Style="sty_grid" TabOrder="124" TabStop="true" Top="391" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="961">
			<contents>
				<format id="Default">
					<columns>
						<col width="18"/>
						<col width="90"/>
						<col width="150"/>
						<col width="60"/>
						<col width="90"/>
						<col width="284"/>
						<col width="150"/>
						<col width="40"/>
						<col width="40"/>
						<col width="80"/>
						<col width="80"/>
						<col width="60"/>
						<col width="60"/>
						<col width="60"/>
						<col width="80"/>
						<col width="80"/>
						<col width="150"/>
						<col width="0"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="38"/>
						<col width="41"/>
					</columns>
					<head>
						<cell col="0" display="checkbox" edit="checkbox" font="굴림,9" text="선택"/>
						<cell col="1" display="text" font="굴림,9" text="호기(WBS)"/>
						<cell col="2" display="text" font="굴림,9" text="호기명"/>
						<cell col="3" display="text" font="굴림,9" text="청구유형"/>
						<cell col="4" display="text" font="굴림,9" text="자재번호"/>
						<cell col="5" display="text" font="굴림,9" text="자재내역"/>
						<cell col="6" display="text" font="굴림,9" text="평가유형"/>
						<cell col="7" display="text" font="굴림,9" text="수량"/>
						<cell col="8" display="text" font="굴림,9" text="단위"/>
						<cell col="9" display="text" font="굴림,9" text="판매단가"/>
						<cell col="10" display="text" font="굴림,9" text="판매금액"/>
						<cell col="11" display="text" font="굴림,9" text="투입인원"/>
						<cell col="12" display="text" font="굴림,9" text="표준공수"/>
						<cell col="13" display="text" font="굴림,9" text="견적공수"/>
						<cell col="14" display="text" font="굴림,9" text="인건비(표준)"/>
						<cell col="15" display="text" font="굴림,9" text="인건비(견적)"/>
						<cell col="16" display="text" font="굴림,9" text="자재특성치"/>
						<cell col="17" display="text" font="굴림,9" text="직영재고"/>
						<cell col="18" display="text" font="굴림,9" text="업체재고소진"/>
						<cell col="19" display="text" font="굴림,9" text="변동구분"/>
						<cell bkcolor="khaki" col="20" display="text" font="굴림,9" text="자재원가"/>
						<cell bkcolor="khaki" col="21" display="text" font="굴림,9" text="FLAG"/>
						<cell bkcolor="khaki" col="22" display="text" font="굴림,9" text="CGBN"/>
					</head>
					<body>
						<cell align="center" col="0" colid="CHK" display="checkbox" edit="checkbox"/>
						<cell bkimagealign="right" bkimageid="icon_grid_edit" col="1" colid="HNO" combocol="WBS" combodataset="ds_hna" combodisplayrowcnt="20" combotext="WBS" display="combo" edit="combo" expandsize="18"/>
						<cell bkimagealign="right" bkimageid="icon_grid_edit" col="2" colid="HNA" combocol="HNA" combodataset="ds_hna" combodisplayrowcnt="20" combotext="HNA" display="combo" edit="combo"/>
						<cell align="center" col="3" colid="RGBNNM" display="text"/>
						<cell col="4" colid="MATNR" display="text" edit="normal" expandimage="btn_icon_search" expandshow="true" expandsize="18"/>
						<cell bkimagealign="right" bkimageid="icon_grid_edit" col="5" colid="MAKTX" display="text" edit="normal" limit="120"/>
						<cell align="center" bkimagealign="right" bkimageid="icon_grid_edit" col="6" colid="BWTAR" combocol="CODE" combodataset="ds_bwtar_cd" combotext="CODE_NAME" display="combo" edit="combo"/>
						<cell align="right" bkimagealign="left" bkimageid="icon_grid_edit" col="7" colid="MENGE" display="number" edit="number" LimitDec="2"/>
						<cell align="center" col="8" colid="MEINS" display="text"/>
						<cell align="right" bkimagealign="left" col="9" colid="NETPR" display="currency"/>
						<cell align="right" col="10" colid="NETWR" display="currency"/>
						<cell align="right" col="11" colid="MAN" display="text"/>
						<cell align="right" col="12" colid="JOBHOUR" display="text"/>
						<cell align="right" bkimagealign="left" bkimageid="icon_grid_edit" col="13" colid="OFRHOUR" display="number" edit="number"/>
						<cell align="right" col="14" colid="LCOSTS" display="currency"/>
						<cell align="right" col="15" colid="LCOSTC" display="currency"/>
						<cell bkimagealign="right" bkimageid="icon_grid_edit" col="16" colid="CHAR1" display="text" edit="normal" limit="140"/>
						<cell align="center" bkimagealign="right" bkimageid="icon_grid_edit" col="17" colid="ZGUBN_CHK" display="checkbox" edit="checkbox" text="Y"/>
						<cell align="center" bkimagealign="right" bkimageid="icon_grid_edit" col="18" colid="REQKIND_CHK" display="checkbox" edit="checkbox" text="Y"/>
						<cell align="center" col="19" colid="CGBNNM" display="text"/>
						<cell bkcolor="user0" col="20" colid="UCOST" display="currency"/>
						<cell align="center" bkcolor="user0" col="21" colid="FLAG" display="text"/>
						<cell bkcolor="user0" col="22" colid="CGBN" display="text"/>
					</body>
					<summary>
						<cell col="0" display="text"/>
						<cell align="center" col="1" display="text"/>
						<cell col="2" display="text"/>
						<cell col="3" display="text"/>
						<cell col="4" display="text"/>
						<cell col="5" display="text"/>
						<cell col="6" display="text"/>
						<cell col="7" display="text"/>
						<cell col="8" display="text"/>
						<cell align="center" col="9" display="text" text="소계"/>
						<cell align="right" bkcolor="user25" col="10" display="currency" expr='sum(&quot;NETWR&quot;)'/>
						<cell align="right" bkcolor="user25" col="11" display="number" expr='sum(&quot;MAN&quot;)'/>
						<cell align="right" bkcolor="user25" col="12" display="number" expr='sum(&quot;JOBHOUR&quot;)'/>
						<cell align="right" bkcolor="user25" col="13" display="number" expr='sum(&quot;OFRHOUR&quot;)'/>
						<cell align="right" bkcolor="user25" col="14" display="currency" expr='sum(&quot;LCOSTS&quot;)'/>
						<cell align="right" bkcolor="user25" col="15" display="currency" expr='sum(&quot;LCOSTC&quot;)'/>
						<cell col="16" display="text"/>
						<cell col="17" display="text"/>
						<cell col="18" display="text"/>
						<cell col="19" display="text"/>
						<cell align="right" bkcolor="user25" col="20" display="currency" expr='sum(&quot;UCOST&quot;)'/>
						<cell col="21" display="text"/>
						<cell col="22" display="text"/>
					</summary>
				</format>
			</contents>
		</Grid>
		<Shape BKColor="user12" Bottom="121" Height="26" Id="Shape1" Left="8" LineColor="user13" Right="969" TabOrder="134" Top="95" Type="Rectangle" Width="961"></Shape>
		<Static Align="Center" Height="24" Id="Static3" Left="297" Style="sty_lb_form_basic" TabOrder="126" Text="현장명" Top="71" VAlign="Middle" Width="80"></Static>
		<Shape BKColor="user12" Bottom="96" Height="26" Id="Shape0" Left="8" LineColor="user13" Right="969" TabOrder="125" Top="70" Type="Rectangle" Width="961"></Shape>
		<Static Align="Center" Height="24" Id="Static5" Left="9" Style="sty_lb_form_basic" TabOrder="127" Text="Proj.&#32;No" Top="71" VAlign="Middle" Width="80"></Static>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="MA_PSPID" Enable="FALSE" Height="20" Id="ed_pjt" ImeMode="none" Left="91" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="128" Top="73" Width="94"></Edit>
		<Static Align="Center" Height="24" Id="Static1" Left="335" Style="sty_lb_form_basic" TabOrder="129" Text="견적번호" Top="71" VAlign="Middle" Width="70"></Static>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="QTNUM" Enable="FALSE" Height="20" Id="ed_qtnum" Left="408" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="130" Top="73" Width="80"></Edit>
		<Static Align="Center" Height="24" Id="Static2" Left="491" Style="sty_lb_form_basic" TabOrder="131" Text="차수" Top="71" VAlign="Middle" Width="70"></Static>
		<Static Align="Center" Height="24" Id="Static4" Left="616" Style="sty_lb_form_basic" TabOrder="132" Text="결재상태" Top="71" VAlign="Middle" Width="70"></Static>
		<Edit Align="CENTER" Border="Flat" Enable="FALSE" Height="20" Id="ed_wf_stat" Left="689" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="133" Top="73" Width="104"></Edit>
		<Shape BKColor="user12" Bottom="146" Height="26" Id="Shape2" Left="8" LineColor="user13" Right="969" TabOrder="135" Top="120" Type="Rectangle" Width="961"></Shape>
		<Edit Align="CENTER" Border="Flat" Height="20" Id="ed_reg" Left="795" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="136" Text="(전결규정)" Top="73" Width="101"></Edit>
		<Edit BindDataset="ds_out_master" Border="Flat" Column="SPT" Enable="FALSE" Height="20" Id="ed_spt" Left="188" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="137" Top="73" Width="145"></Edit>
		<Static Align="Center" Height="24" Id="Static0" Left="9" Style="sty_lb_form_basic" TabOrder="138" Text="고객번호" Top="96" VAlign="Middle" Width="80"></Static>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="KUNNR" Enable="FALSE" Height="20" Id="ed_cus" Left="91" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="139" Top="98" Width="94"></Edit>
		<Edit BindDataset="ds_out_master" Border="Flat" Column="CSTNM" Enable="FALSE" Height="20" Id="ed_cstnm" Left="188" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="140" Text="(지급인명)" Top="98" Width="145"></Edit>
		<Static Align="Center" Height="24" Id="Static6" Left="491" Style="sty_lb_form_basic" TabOrder="141" Text="사업구분" Top="96" VAlign="Middle" Width="70"></Static>
		<Static Align="Center" Height="24" Id="Static7" Left="188" Style="sty_lb_form_basic" TabOrder="142" Text="팀명" Top="121" VAlign="Middle" Width="74"></Static>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="VKGRPNM" Enable="FALSE" Height="20" Id="ed_vkgrpnm" Left="265" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="143" Top="123" Width="140"></Edit>
		<Static Align="Center" Height="24" Id="Static8" Left="408" Style="sty_lb_form_basic" TabOrder="144" Text="업체명" Top="121" VAlign="Middle" Width="81"></Static>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="BSUNM" Enable="FALSE" Height="20" Id="ed_bsunm" Left="492" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="145" Top="123" Width="121"></Edit>
		<Static Align="Center" Height="24" Id="Static9" Left="782" Style="sty_lb_form_basic" TabOrder="146" Text="작성자" Top="121" VAlign="Middle" Width="70"></Static>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="CRNAME" Enable="FALSE" Height="20" Id="ed_pname" Left="855" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="147" Top="123" Width="110"></Edit>
		<Static Align="Center" Height="24" Id="Static10" Left="9" Style="sty_lb_form_basic" TabOrder="148" Text="청구구분" Top="121" VAlign="Middle" Width="80"></Static>
		<Static Align="Center" Height="24" Id="Static11" Left="782" Style="sty_lb_form_basic" TabOrder="149" Text="견적구분" Top="96" VAlign="Middle" Width="70"></Static>
		<Static Align="Center" Height="24" Id="Static12" Left="616" Style="sty_lb_form_basic" TabOrder="150" Text="수주예정일" Top="96" VAlign="Middle" Width="70"></Static>
		<Static Align="Center" Height="24" Id="Static13" Left="616" Style="sty_lb_form_basic" TabOrder="151" Text="출고요청일" Top="121" VAlign="Middle" Width="70"></Static>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="SPARTNM" Enable="FALSE" Height="20" Id="ed_spart_nm" Left="563" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="152" Top="98" Width="50"></Edit>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="REQKINDNM" Enable="FALSE" Height="20" Id="Edit1" Left="91" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="153" Text="(지급인명)" Top="123" Width="94"></Edit>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="SODAT" Enable="FALSE" Height="20" Id="Edit2" Left="689" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="154" Text="(지급인명)" Top="97" Width="90"></Edit>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="CS001_GBNNM" Enable="FALSE" Height="20" Id="Edit3" Left="855" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="155" Text="(지급인명)" Top="98" Width="110"></Edit>
		<Static Align="Center" Height="24" Id="Static34" Left="335" Style="sty_lb_form_basic" TabOrder="156" Text="수주번호" Top="96" VAlign="Middle" Width="70"></Static>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="VBELN" Enable="FALSE" Height="20" Id="Edit0" Left="408" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="157" Top="98" Width="80"></Edit>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="SEQNM" Enable="FALSE" Height="20" Id="Edit14" Left="563" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="158" Top="73" Width="50"></Edit>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_upload_con" ImageID="btn_sub_07" Left="981" LeftMargin="12" OnClick="btn_upload_con_OnClick" Style="sty_btn" TabOrder="159" Text="계약서&#32;Up-Load" Top="-2" Transparent="TRUE" Width="107"></Button>
		<Button ButtonStyle="TRUE" Color="blueviolet" Cursor="HAND" Height="20" Id="btn_insert_req" ImageID="btn_sub_05" Left="981" LeftMargin="12" OnClick="btn_insert_req_OnClick" Style="sty_btn" TabOrder="160" Text="자재청구(T)" Top="22" Transparent="TRUE" Width="85"></Button>
		<Calendar BindDataset="ds_out_master" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="RDATE" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Enable="FALSE" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cal_shdat" Left="688" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_form" SundayTextColor="user35" TabOrder="161" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="124" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="93"></Calendar>
		<Shape BKColor="user12" Bottom="253" Height="26" Id="Shape9" Left="104" LineColor="user13" Right="201" TabOrder="163" Top="227" Type="Rectangle" Width="97"></Shape>
		<MaskEdit BindDataset="ds_out_master" BKColor="user40" Border="Flat" Column="NETWR_DC" Height="20" Id="ed_netwr_dc" Left="107" OnChanged="ed_netwr_dc_OnChanged" Style="sty_ipt_form" TabOrder="164" Top="230" Width="90"></MaskEdit>
		<Static Height="17" Id="Static27" Left="40" TabOrder="162" Text="판매할인액" Top="235" Width="58"></Static>
		<MaskEdit Border="Flat" DecimalLen="1" Enable="FALSE" Height="26" Id="ed_netwr_pct" Left="200" Mask="##.#%" Style="sty_ipt_form" TabOrder="165" TabStop="FALSE" Top="227" Width="49"></MaskEdit>
		<Shape BKColor="user12" Bottom="72" Height="26" Id="Shape3" Left="8" LineColor="user13" Right="969" TabOrder="166" Top="46" Type="Rectangle" Width="961"></Shape>
		<Static Align="Center" Height="24" Id="Static23" Left="9" Style="sty_lb_form_basic" TabOrder="167" Text="공사번호" Top="47" VAlign="Middle" Width="80"></Static>
		<Edit Align="CENTER" BindDataset="ds_out_master" Border="Flat" Column="PS_PSPID" Enable="FALSE" Height="20" Id="Edit4" Left="91" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="168" Top="49" Width="94"></Edit>
		<Static Align="Center" Height="24" Id="Static24" Left="188" Style="sty_lb_form_basic" TabOrder="169" Text="견적명" Top="48" VAlign="Middle" Width="74"></Static>
		<Edit BindDataset="ds_out_master" Border="Flat" Column="QTNAM" Enable="FALSE" Height="20" Id="Edit6" Left="264" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="170" Top="49" Width="300"></Edit>
		<Edit Align="CENTER" Border="Flat" Height="20" Id="ed_reg_cfo" Left="898" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="171" Top="73" Width="67"></Edit>
		<Button ButtonStyle="TRUE" Cursor="HAND" Enable="FALSE" Height="20" Id="btn_tmp_accpt" ImageID="btn_sub_16" Left="745" LeftMargin="12" OnClick="bt_imsiaccpt_OnClick" Style="sty_btn" TabOrder="172" Text="재청구완료시실행(신규의경우1로변경)" Top="48" Transparent="TRUE" Visible="FALSE" Width="216"></Button>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 보수자재 재청구
 * 작  성  자   : 이종석
 * 작성  일자   : 2014.11 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트
#include "LIB::common_cs.js";	// 서비스 공통 스크립트
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

var DEBUG_FLAG 	= false;														//디버그 기능 사용을 위한 플래그를 설정한다.
var componentStore;																//enable 상태인 컴포넌트들의 ID를 저장한다. 
var selfFlag;																	//자기자신의 견적인지의 여부를 세팅한다. setPermissions()에서 세팅
var shdatFlag = false;															//납기일변경 여부를 확인한다.
var recharge_auth = false;
//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	gfn_initForm();
	
	
//alert( "1 : " + div_btn.btn_draft.Enable	);
	//if(DEBUG_FLAG) SHOW_ENV();
	
	//관리자 이외에는 원가항목을 감춘다. 
	//원가관련 항목은 DataSet이 채워지기 전에 처리해야 하므로, Form의 Loading이 완료된 직후값이 Assign되기 전에 Hide한다.
	var userGroup = gfn_getUserGroup();											//사용자 권한그룹
	//if(userGroup != "40")														//그룹이 40인 경우를 제외하고는 해당 항목을 감춘다.

	// 서비스 부문장, 관리부장, 최인식, 정보기술부 
	if(G_USER_ID != "1002104" && G_USER_ID != "2017938" && G_USER_ID != "2012804"
	    && G_USER_ID != "3011038" && G_USER_ID != "2020882" && G_USER_ID != "2018209"
	    && G_USER_ID != "2021200" && G_USER_ID != "2023687" && G_USER_ID != "2025418"
	    && G_USER_ID != "2018900" && G_USER_ID != "2029758" && G_USER_ID != "2999999")					//201502120840-원가관련항목은 아무도 볼 수 없도록
	{
		ufn_hideUnitCostComponents();
	}	
	
	//기성 예상 비용은 30번 이상 권한만 열람이 가능하도록 한다.
	if(toNumber(userGroup) < 30)
	{
		ufn_setObjectVisibility("st_bil_amt", false);
		ufn_setObjectVisibility("ed_bil_amt", false);
	}	
	
	//컴포넌트 중 enable 상태인 컴포넌트들을 전역변수에 저장한다.
	ufn_saveEnabledComponents();
	
	//이전 화면에서 견적번호가 넘어온 경우인지 확인한다.
	if ( isExistVar("ar_qtnum", true) && isExistVar("ar_seq", true)) 			//이전화면에서 견적번호/차수가 넘어옴
	{
		if(length(ar_qtnum) < 10 || length(ar_seq) < 1 || length(ar_upn) < 1 || length(ar_cst) < 1)
		{
			gfn_showAlert("CW10025", "잘못된 접근입니다.");
			fn_close();		
		}
	
		ds_cond.SetColumn(0, "QTNUM", ar_qtnum);
		ds_cond.SetColumn(0, "SEQ", ar_seq);
		ds_cond.SetColumn(0, "UPN", ar_upn);
		ds_cond.SetColumn(0, "CST", ar_cst);
	}
	else if( isExistVar("ar_qtnum", true) || isExistVar("ar_seq", true))		//이전화면에서 견적번호 또는 차수만 넘어옴
	{
		gfn_showAlert("CW10025", "견적번호 또는 차수가 올바르지 않습니다.");
		fn_close();
	}
	else
	{
		gfn_showAlert("CW10025", "잘못된 접근입니다.");
		fn_close();
	}

	ufn_initParameters();
	
	gfn_initDs(ds_rcond, true);
	ds_rcond.SetColumn(0, "ZPROGRAM", "CS0101008C");
	ds_rcond.SetColumn(0, "GBN", "01");	
	recharge_auth = gfn_getAuth(ds_rcond);
	ds_rcond.ClearData();
	
	if(recharge_auth == true) {
		btn_tmp_accpt.Visible = true;
		btn_tmp_accpt.Enable = true;	
	}

}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================

/********************************************************************************
* 기      능   : Delete 
********************************************************************************/
function fn_delete() {
	ds_cond_del.clearData();													//삭제할 행을 정한다(재청구 데이터만 삭제)
	
	for(iCnt=ds_list.rowcount - 1;iCnt >= 0;iCnt--)
	{
		if(ds_list.getColumn(iCnt, "CGBN") == "1")								//변경구분이 존재하는 데이터만(재청구자재만) 삭제한다.
		{
			if(ds_list.GetColumn(iCnt, "FLAG") != "I" && 						//저장된 행만 삭제한다(미저장행은 dataset을 clear할 때 삭제된다)
				length(ds_cond.GetColumn(0, "QTNUM")) > 0)
			{
				ds_cond_del.AddRow();
				ds_cond_del.SetColumn(ds_cond_del.rowcount - 1, "QTNUM", ds_cond.GetColumn(0, "QTNUM"));
				ds_cond_del.SetColumn(ds_cond_del.rowcount - 1, "SEQ", ds_cond.GetColumn(0, "SEQ"));
				ds_cond_del.SetColumn(ds_cond_del.rowcount - 1, "SEQNO", ds_list.GetColumn(iCnt, "SEQNO"));
			}
		}
	}
	
	if(ds_cond_del.rowcount <= 0)												//삭제할 데이터가 존재하지 않는 경우 
	{
		gfn_showAlert("CW10025", "재청구 자재가 존재하지 않습니다.");
		return;
	}

	if (!gfn_showConfirm("CI00015", "재청구")) 									//재청구삭제?
	{
		return;
	}
	
	if(ed_pjt.value.length <= 0)												//프로젝트가 존재하는가?
	{
		gfn_showAlert("CW10025", "프로젝트를 선택해주세요.");
		return;
	}

	DEBUG("fn_delete", ds_list.savexml());
	DEBUG("fn_delete", ds_cond_del.SaveXml());
	
	ds_out_master.SetColumn(0, "CHGBN", "0");									//변경구분을 청구상태로 Clear!! -> 수주변경, 수주취소 상태가 전상태였을 경우 확인은 불가하며, 수주변경/취소사유 및 결재이력 등으로 구분이 가능하다.
	
	//ZCST001에 마스터 데이터를 저장(업데이트)하고, 변경정보가 존재하는 Row들을 삭제한다.
	tit_clearActionInfo();
	tit_addMultiActionInfo("cs01:CS0101008B_U1");
	tit_addMultiActionInfo("cs01:CS0101008B_D2");
	tit_callService("",
					"",
					"ds_out_master=ds_out_master ds_cond=ds_cond_del",
					"",
					"",
					"fn_afterDeleteAll"
					);	
}

/********************************************************************************
* 기      능   : Delete Callback
********************************************************************************/
function fn_afterDeleteAll(errCode, errMsg)
{
	if ( errCode!= 0 ) 
	{
		gfn_showMsg("CE00001");
	} 
	else 
	{
		gfn_showAlert("CI00004");
		fn_close();
	}
}

/********************************************************************************
* 기      능   : 저장 
********************************************************************************/
function fn_save() {
	if(ds_list.count <= 0)														//자재가 존재하지 않으면 return. 
	{
		gfn_showAlert("CW10025", "자재리스트가 존재하지 않습니다.");
		return;
	}	
	
	for(iCnt = ds_list.count - 1;iCnt >= 0;iCnt--)								//데이터가 존재하지 않는 Row를 삭제한다.
	{
		if(length(ds_list.GetColumn(iCnt, "MATNR")) == 0)
		{
			ds_list.DeleteRow(iCnt);
		}
	}
	
	if(!ufn_checkInputForSave())												//입력사항에 문제가 있을 경우 return. 
	{
		return;
	}

	var chFlag = false;															//재청구자재 존재 확인 flag
	
	
	for(iCnt=0;iCnt < ds_list.count;iCnt++)										//견적상세데이터에 견적번호, 차수, 견적합계금액 및 플랜트를 추가하고, 재청구 자재가 존재하는지 확인한다.
	{
		ds_list.SetColumn(iCnt, "WERKS", ds_out_master.GetColumn(0, "WERKS"));	//플랜트
		ds_list.SetColumn(iCnt, "AMOUNT", ds_list.GetColumn(iCnt, "NETWR"));	//자재별 견적(제안)금액 = 자재판가
		ds_list.SetColumn(iCnt, "AMT", ds_out_master.GetColumn(0, "RATE"));		//견적연도 임율

		if (ds_list.GetColumn(iCnt, "QTNUM") == "") 							//견적번호가 존재하는가?
		{
			ds_list.SetColumn(iCnt, "QTNUM", ds_out_master.GetColumn(0,"QTNUM"));
			ds_list.SetColumn(iCnt, "SEQ", ds_out_master.GetColumn(0,"SEQ"));
		}
		
		if(ds_list.GetColumn(iCnt, "CGBN") == "1")								//재청구자재가 존재하는가?
		{
			chFlag = true;
		}
	}

	if(!chFlag) 																//재청구자재가 존재하지 않으면
	{	
		gfn_showAlert("CW10025", "재청구 자재가 존재하지 않습니다.");
		return;
	}

	
	if (!gfn_showConfirm("CI00010")) 											//저장하시겠습니까?
	{
		return;
	}
	
	ds_out_master.SetColumn(0, "CHGBN", "3");									//변경구분을 설정한다(1:수주변경/2:수주취소/3:재청구)	
	ds_out_master.SetColumn(0, "DOC3", "");										//재청구 문서번호를 삭제한다.
	
	//cs0101008B_I2에서 사용하기 위해 ds_key를 세팅한다.
	ds_key.SetColumn(0,"QTNUM", ds_out_master.GetColumn(0,"QTNUM"));
	ds_key.SetColumn(0, "SEQ", ds_out_master.GetColumn(0, "SEQ"));
	
	DEBUG("fn_save", ds_out_master.SaveXml());
	DEBUG("fn_save", ds_list.SaveXml());

	ufn_saveData();																//저장한다....
}

/********************************************************************************
* 기      능   : 누락 항목 Check
********************************************************************************/
function ufn_checkInputForSave()
{
	var max_webaz = 0;
	var tmp_webaz = 0;
	var cal_date_fr, cal_date_to;
	shdatFlag = false;
	//----------------------------------------------------------------------
	//계산값 확인
	
	if(length(ed_netwr_std.value) == 0 || length(ed_netwr_ofr.value) == 0 || length(ed_sum_std.value) == 0 ||length(ed_sum_ofr.value) == 0)
	{	
		gfn_showAlert("CW10025", "표준금액 또는 견적금액상에 오류가 있습니다. 자재리스트를 확인해주세요.");
		return false;
	}
	
	//----------------------------------------------------------------------
	//20150208 - 판매단가가 0일경우 저장불가
	for(var iCnt=0;iCnt<ds_list.rowcount;iCnt++)
	{
		if(toNumber(ds_list.GetColumn(iCnt, "NETPR") == 0))
		{
			gfn_showAlert("CW10025", "판매단가가 0인 자재가 존재하여 저장이 불가능합니다.");
			return false;
		}

		if(toNumber(ds_list.GetColumn(iCnt, "MENGE") == 0))
		{
			gfn_showAlert("CW10025", "수량이 0인 자재가 존재하여 저장이 불가능합니다.");
			return false;
		}
	}
	
	//----------------------------------------------------------------------
	//자재리스트값 확인
	var listFlag = true;
	for(iCnt=0;iCnt < ds_list.count;iCnt++)
	{
		if(length(ds_list.GetColumn(iCnt, "HNO")) == 0 							//호기번호
				//|| length(ds_list.GetColumn(iCnt, "HNA")) == 0 					//호기명 --호기명이 비어있는 경우도 있음
				|| length(ds_list.GetColumn(iCnt, "MATNR")) == 0 				//자재번호
				|| length(ds_list.GetColumn(iCnt, "BWTAR")) == 0 				//평가유형
				|| length(toString(ds_list.GetColumn(iCnt, "MENGE"))) == 0 		//수량
				|| length(toString(ds_list.GetColumn(iCnt, "OFRHOUR"))) == 0)	//견적공수
		{
			listFlag = false;
		}
	}
	if(!listFlag)
	{
		gfn_showAlert("CW10025", "자재 리스트의 자재 중 필수입력값이 비어있는 자재가 존재합니다.");
		return false;
	}
	
	if(!check_Rdate())	return false;
	
	//재청구신규 자재에 대해서 납기일 체크로직 추가  2016.02.16 YAR
	// for(var iCnt=0;iCnt<ds_list.rowcount;iCnt++)
	// {
		// if(ds_list.GetColumn(iCnt, "CGBN") == "1"){
			// tmp_webaz = ds_list.GetColumn(iCnt, "WEBAZ");

			// if(parseInt(tmp_webaz) > parseInt(max_webaz)) {
				// max_webaz = tmp_webaz;
			// }
			// if(tmp_webaz == "") tmp_webaz = 0;
		// }
	// }
	// max_webaz = parseInt(max_webaz) + 3;
	// cal_date_to = gfn_getWorkingDate(max_webaz, '2000', gfn_getCurrDate());	//workingday 기준으로 변경 2016.05.24 yar
	// if(cal_shdat.Value < cal_date_to) {
		// cal_shdat.enable = true;
		// shdatFlag = true;
		// gfn_showAlert("CW10025", "납기일은 자재의 LEADTIME을 계산하여 입력하시기 바랍니다. (" 
								// + cal_date_to + "이후)");
		
		// return false;
	// }
	
	if(substr(ds_out_master.GetColumn(0, "REQNR"),0,1) == 3) {
		ds_mmt001.SetColumn(0, "REQNR", ds_out_master.GetColumn(0,"REQNR2"));
	}
	else{	
		ds_mmt001.SetColumn(0, "REQNR", ds_out_master.GetColumn(0,"REQNR"));
	}
	ds_mmt001.SetColumn(0, "SHDAT", cal_shdat.Value);
	ds_out_master.SetColumn(0, "RDATE", cal_shdat.Value);
	if(shdatFlag)
	{	
		ds_out_master.SetColumn(0, "SHDAT", ds_out_master.GetOrgColumn(0, "SHDAT"));
	}
	else{
		cal_shdat.Value = ds_mmt001.GetColumn(0, "SHDAT");
	}
	//20150914 - 동일 자재에 대한 업체재고소진 체크
	var matnrCd, reqkindCd, cgbnCd;								//자재코드(번호), 자재청구유형(1, 6, 7, 8, G), 변동구분(1재청구신규,2재청구완료,그 외 원견적자재)
	for(var iCnt=0;iCnt<ds_list.rowcount;iCnt++)
	{
		matnrCd = ds_list.GetColumn(iCnt, "MATNR");								//자재번호
		reqkindCd = ds_list.GetColumn(iCnt, "REQKIND");							//자재청구유형(업체재고소진시 6)
		cgbnCd = ds_list.GetColumn(iCnt, "CGBNNM");								//변동구분(재청구신규1, 재청구완료2, 그 외 원견적자재)
		
		for(var iCnt2=0;iCnt2<ds_list.rowcount;iCnt2++)
		{
			if(iCnt != iCnt2)													//자신이 아닐 경우에만 비교
			{
				if(matnrCd == ds_list.GetColumn(iCnt2, "MATNR"))				//동일 자재인가?
				{
					if((reqkindCd != ds_list.GetColumn(iCnt2, "REQKIND")) 
														&& reqkindCd == "6" && (cgbnCd == ds_list.GetColumn(iCnt2, "CGBNNM"))
														&& cgbn != "2")			// 재청구완료 제외
					//업체재고소진여부가 다른 자재인가?	
					//변동구분값이 다른 경우 업체재고소진여부 다를 수 있음 2015.11.23 YAR
					{
						gfn_showAlert("CW10025", "업체재고소진여부는 자재별로 동일하게 설정하셔야 합니다.");
						return false;
					}							
				}
			}
		}
	}
	return true;
}

/********************************************************************************
* 기      능   : DB 저장 루틴
********************************************************************************/
function ufn_saveData()
{
	tit_clearActionInfo();														// 저장 처리 
	tit_addSaveActionInfo(														//ZCST001에 마스터 데이터를 저장(업데이트)한다.
         "",
         "cs01:CS0101008B_U1",
         "",
         "FLAG",
         "",
         0,
         "");         	
	
	DEBUG("ufn_saveData", "ds_list is " + ds_list.saveXml());
	
	tit_addSaveActionInfo(														//ZCST002에 디테일 데이터를 저장(업데이트)한다.
        "cs01:CS0101008B_I2",
        "cs01:CS0101008B_U2",
        "",
        "FLAG",
        "",
        0,
        "");	
  
     // tit_addSaveActionInfo(														//ZMMT001에 마스터 데이터를 저장(업데이트)한다.
         // "",
         // "cs01:CS0101008C_U1",
         // "",
         // "FLAG",
         // "",
         // 0,
         // "");  

	tit_addMultiActionInfo("cs01:CS0101008C_U1");

	tit_callService(
        ""
        , ""
        , "ds_out_master=ds_out_master ds_list=ds_list:A ds_cond=ds_cond ds_key=ds_key ds_mmt001=ds_mmt001"
        , "ds_key = ds_key"
        , ""
        , "fn_afterSave");	
}

/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
	if ( errCode!= 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
		gfn_showAlert("CI00003");
	}
		
	for (var i = 0; i < ds_list.rowcount; i++) 									//플래그가 I였던 항목들을 U로 바꿔준다(재 Insert 방지)
	{
		if (ds_list.GetColumn(i, "FLAG") == "I") 
		{
			ds_list.SetColumn(i, "FLAG", "U");
		}
	}
	
	ufn_resetAll();																//모든 정보를 리셋한다.
	ufn_initParameters();														//Parameter를 초기화한다.
}

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}

/********************************************************************************
* 기      능   : 반송 65
********************************************************************************/
function fn_sendback() {
	var docNo3;																	//재청구결재문서번호
	var docNo3Stat;																//재청구결재상태
		
	docNo3 = ds_out_master.GetColumn(0, "DOC3");								//재청구결재문서번호
	docNo3Stat = ds_out_master.GetColumn(0, "DOC3STAT");						//재청구결재상태
	
	if(docNo3.length <= 0)														//견적번호가 제대로 입력되지 않았으면..
	{
		gfn_showAlert("CW10025", "재청구 기안이 완료되지 않았습니다.");
		return;
	}
	
	if(!gfn_showConfirm("CI30001", "본 건을 반송처리 하시겠습니까?"))			//반송처리하시겠습니까?
	{
		gfn_showAlert("CW10025", "반송처리가 취소되었습니다.");
		return;
	}	
	
	ds_dec.ClearData();
	ds_dec.AddRow();
	
	ds_dec.SetColumn(0, "APPGUBN", "S");										//결재구분
	ds_dec.SetColumn(0, "REIRUM", G_USER_NAME);									//결재자 이름
	ds_dec.SetColumn(0, "SEQSTAT", "2");										//결재디테일 상태 - 반송(2)
	ds_dec.SetColumn(0, "DOCNO", docNo3);										//반송문서번호							
	ds_dec.SetColumn(0, "SEQNO", ds_out_master.GetColumn(0, "DOC3CURSEQ"));		//결재디테일 반송자순번
	ds_dec.SetColumn(0, "DOCKIND", "14");										//문서종류(수리공사재청구:14)
	
	if(toNumber(docNo3Stat) > 3)
	{
		ds_dec.SetColumn(0, "APPGUBN", "R");									//수신부서결재플래그
		ds_dec.SetColumn(0, "APSTAT", "5");										//결재마스터 상태 - 반송(2)
	}
	else
	{
		ds_dec.SetColumn(0, "APPGUBN", "S");									//기안부서결재플래그
		ds_dec.SetColumn(0, "APSTAT", "2");										//결재마스터 상태 - 반송(2)
	}
	
	DEBUG("fn_sendback", ds_dec.SaveXml());	
	
	ds_reject_wb.clearData();													//반송의견을 반송쪽지로 전송하기 위해 데이터셋을 클리어하고, 행을 추가한다.
	ds_reject_wb.AddRow();	
	
	if(gfn_showConfirm("CI30001","반송 의견을 입력하시겠습니까?") )				//반송 의견 입력
	{
		var arg = "";
		arg = "fa_docno=" + quote(ds_dec.GetColumn(0,"DOCNO")) + 
		      " fa_dockind=" + quote(ds_dec.GetColumn(0,"DOCKIND"));
		var rtn_yn = gfn_openPopup2("CS0401001C", true , arg);
	}
	
	//반송메시지를 생성한다.
	ufn_sendSendbackMessage();
		
	//결재마스터(zwbap01)와 결재디테일(zwbap02)을 업데이트 해준다.
	
	tit_clearActionInfo();
	tit_addSearchActionInfo("cs01:CS0101008B_T3",true);							//쪽지전송테이블 Lock (중복번호 채번 방지)
	tit_addMultiActionInfo("cs01:CS0101008B_I5", "cs01:CS0101008B_S16", 1);		//쪽지전송	
	tit_addMultiActionInfo("cs04:CS0401001A_U1");								//결재마스터 Update
	tit_addMultiActionInfo("cs04:CS0401002A_U2");								//결재디테일 Update
	tit_callService(
		"",
		"",
		"ds_head=ds_dec ds_list_0=ds_dec ds_reject_list=ds_reject_list",
		"",
		"",
		"", 
		true, 
		false,
		true);	
	
	gfn_showAlert("CI30001", "반송처리가 완료되었습니다.");
	fn_close();	
}

/********************************************************************************
* 기      능   : 반송메시지 작성
********************************************************************************/
function ufn_sendSendbackMessage()
{
	var msgDocNo = ds_dec.GetColumn(0,"DOCNO");
	var msgTitle = "견적번호 " + ds_out_master.GetColumn(0, "QTNUM") + "인 문서가 " +
				   "재청구 결재중 반송되었습니다.";

	var msgBody = "견적명 : " + ds_out_master.GetColumn(0, "QTNAM") + "\n" +
				  "견적번호 : " + ds_out_master.GetColumn(0, "QTNUM") + "\n" +
				  "견적차수 : " + ds_out_master.GetColumn(0, "SEQ") + "\n" +
				  "프로젝트 : " + ds_out_master.GetColumn(0, "SPT") + "\n" +
				  "현장정보 : " + ds_out_master.GetColumn(0, "KUNNR") + "(" + ds_out_master.GetColumn(0, "CSTNM") + ")\n" +
				  "반송정보 : " + ds_reject_wb.GetColumn(0, "APDESC");				//반송메시지를 추가한다.
				  
	//반송쪽지 전송 검색조건 세팅(문서번호)
	ds_reject_cond.clearData();
	ds_reject_cond.AddRow();
	ds_reject_cond.SetColumn(0, "DOCNO", msgDocNo);								//문서번호 설정
	
	ds_reject_list.ClearData();													//전송대상 리스트를 클리어한다.

	tit_clearActionInfo();					
	tit_addSearchActionInfo("cs01:CS0101008B_S15");								//반송 기안자 
	tit_callService("", "", "ds_reject_cond=ds_reject_cond", "ds_reject_wb=ds_reject_wb", "", "", true, false, true);	
	
	ds_reject_list.AddRow();													//작성자
	ds_reject_list.SetColumn(0, "MESGSEND", G_USER_ID);							//반송자
	ds_reject_list.SetColumn(0, "MESGACCP", ds_out_master.GetColumn(0,"CRNAM"));//작성자
	ds_reject_list.SetColumn(0, "MESGTITL", msgTitle);							//제목
	ds_reject_list.SetColumn(0, "MESGDESC", msgBody);							//반송문구
	
	//기안부서 기안자가 존재하고, 작성자가 기안부서 기안자가 아닐 경우(이미 전송된 사용자에게 중복전송되지 않도록)
	if(length(ds_reject_wb.GetColumn(0, "APNUM1")) > 1 
		&&ds_out_master.GetColumn(0, "CRNAM") != ds_reject_wb.GetColumn(0, "APNUM1"))
	{
		ds_reject_list.AddRow();												//기안부서 기안자
		ds_reject_list.SetColumn(1, "MESGSEND", G_USER_ID);
		ds_reject_list.SetColumn(1, "MESGACCP", ds_reject_wb.GetColumn(0, "APNUM1"));
		ds_reject_list.SetColumn(1, "MESGTITL", msgTitle);
		ds_reject_list.SetColumn(1, "MESGDESC", msgBody);
	}
		
	//관리부서 기안자 존재하고 관리부서 기안자 작성자 또는 기안부서 기안자가 아닌 경우(이미 전송된 사용자에게 중복전송되지 않도록)
	if( length(ds_reject_wb.GetColumn(0, "APNUM2")) > 1 
		&& (ds_out_master.GetColumn(0, "CRNAM") != ds_reject_wb.GetColumn(0, "APNUM2"))
		&& (ds_reject_wb.GetColumn(0, "APNUM1") != ds_reject_wb.GetColumn(0, "APNUM2")) )
	{
		ds_reject_list.AddRow();												//관리부서 기안자
		ds_reject_list.SetColumn(2, "MESGSEND", G_USER_ID);
		ds_reject_list.SetColumn(2, "MESGACCP", ds_reject_wb.GetColumn(0, "APNUM2"));
		ds_reject_list.SetColumn(2, "MESGTITL", msgTitle);
		ds_reject_list.SetColumn(2, "MESGDESC", msgBody);
	}
		
	DEBUG("ufn_sendSendbackMessage", "ds_reject_list is " + ds_reject_list.SaveXml());
}

/********************************************************************************
* 기      능   : 결재 15
********************************************************************************/
function fn_decide() {
	var docNo3;																	//재청구결재문서번호
	var docNo3Stat;																//재청구결재상태
	docNo3 = ds_out_master.GetColumn(0, "DOC3");								//재청구결재문서번호
	docNo3Stat = ds_out_master.GetColumn(0, "DOC3STAT");						//재청구결재상태
	reqkind = ds_out_master.GetColumn(0, "REQKIND");							//청구구분
	
	if(docNo3.length <= 0)														//견적번호가 제대로 입력되지 않았으면..
	{
		gfn_showAlert("CW10025", "재청구 기안이 완료되지 않았습니다.");
		return;
	}

	if(!gfn_showConfirm("CI30001", "본 건을 결재처리 하시겠습니까?"))			//결재처리하시겠습니까?
	{
		gfn_showAlert("CW10025", "결재처리가 취소되었습니다.");
		return;
	}
	
	ds_dec.ClearData();
	ds_dec.AddRow();
	
	ds_dec.SetColumn(0, "APPGUBN", "S");										//결재플래그 - 기안부서(S)
	ds_dec.SetColumn(0, "SEQSTAT", "3");										//결재자 정상결재 완료 플래그
	ds_dec.SetColumn(0, "REIRUM", G_USER_NAME);									//결재자 이름
	
	var requestFlag = false;													//청구입력 플래그
	var updateQTFlag = false;													//견적 업데이트 플래그

	if(toNumber(docNo3Stat) > 3)
	{
		ds_dec.SetColumn(0, "APPGUBN", "R");									//수신부서결재플래그
	}
	else
	{
		ds_dec.SetColumn(0, "APPGUBN", "S");									//기안부서결재플래그
	}
	
	ds_dec.SetColumn(0, "DOCNO", docNo3);										//결재문서번호								
	ds_dec.SetColumn(0, "SEQNO", ds_out_master.GetColumn(0, "DOC3CURSEQ"));		//결재자순번
	ds_dec.SetColumn(0, "DOCKIND", "14");										//문서종류(수리공사재청구:14)
	
		
	if(ds_out_master.GetColumn(0, "DOC3CURSEQ") == 							//최종결재자이면
			ds_out_master.GetColumn(0, "DOC3MAXSEQ"))
	{
		if(toNumber(docNo3Stat) > 3 || ds_out_master.GetColumn(0, "SPART") == "40")
		{
			ds_dec.SetColumn(0, "APSTAT", "6");								//수주결재상태를 6으로 변경
			requestFlag = true;												//청구등록을 수행한다.										
		}
		else 
		{
			ds_dec.SetColumn(0, "APSTAT", "3");
		}
	}
	else
	{
		if(toNumber(docNo3Stat) > 3)
		{
			ds_dec.SetColumn(0, "APSTAT", "4");								//최종결재자가 아니면 ZWBAP01의 APSTAT는 1로 남겨둠
		}
		else
		{
			ds_dec.SetColumn(0, "APSTAT", "1");								//최종결재자가 아니면 ZWBAP01의 APSTAT는 1로 남겨둠
		}
	}
	
	if(gfn_showConfirm("CI30001","결재 의견을 입력하시겠습니까?") )				//결재 의견 입력
	{
		var arg = "";
		arg = "fa_docno=" + quote(ds_dec.GetColumn(0,"DOCNO")) + 
		      " fa_dockind=" + quote(ds_dec.GetColumn(0,"DOCKIND"));
		var rtn_yn = gfn_openPopup2("CS0401001C", true , arg);
	}
	
	//결재마스터(zwbap01)와 결재디테일(zwbap02)을 업데이트 해준다.

	tit_clearActionInfo();
	tit_addMultiActionInfo("cs04:CS0401001A_U1");								//결재마스터 Update
	tit_addMultiActionInfo("cs04:CS0401002A_U2");								//결재디테일 Update
	if(updateQTFlag) tit_addMultiActionInfo("cs01:CS0101008B_U1");				//견적마스터 Update (견적승인일 또는 수주승인일 업데이트가 필요할때)
	tit_callService(
		"",
		"",
		"ds_head=ds_dec ds_list_0=ds_dec ds_out_master=ds_out_master",
		"",
		"",
		"",
		true, 
		false,
		true);	
	
	if(requestFlag)																//수주결재 완료로 청구입력이 필요한 경우 청구에 데이터를 입력한다.
	{
		ufn_saveRequest();
	}
	else
	{
		gfn_showAlert("CI30001", "결재가 완료되었습니다.");
		fn_close();
	}	
}

/********************************************************************************
* 기      능   : 승인완료자재를 청구테이블에 등록(승인완료후자동등록으로 변경예정)
********************************************************************************/
function ufn_saveRequest()
{
	//저장 SEQ와 QTNUM을 설정한다.
	ds_cond.ClearData();
	ds_cond.AddRow();
	ds_cond.SetColumn(0, "QTNUM", ds_out_master.GetColumn(0, "QTNUM"));
	ds_cond.SetColumn(0, "SEQ", ds_out_master.GetColumn(0, "SEQ"));
	
	//FLAG를 바꿔준다.
	ds_out_master.SetColumn(0, "FLAG", "U");
	
	gfn_copyDS(ds_list, ds_list_req, "CGBN==1");								//재청구 자재만 전송하기 위해 데이터셋을 복사한다.	
	
	//재청구 자재만 전송한다.
	for (var iCnt = 0;iCnt < ds_list_req.rowcount;iCnt++) 
	{
		if(ds_list_req.GetColumn(iCnt, "CGBN") == "1")
		{
			ds_list_req.SetColumn(iCnt, "FLAG", "I");							//재청구자재만 전송한다. 
			ds_list_req.SetColumn(iCnt, "QTNUM", "");							//재청구자재의 견적번호는 비운다(이중청구 가능성있음:이동진SA)
			ds_list_req.SetColumn(iCnt,"POSID2", 
									ds_out_master.GetColumn(0, "PS_PSPID")); 	//원WBS를 적어준다. (SAP전송 번호)
			if(ds_list_req.GetColumn(iCnt, "REQKIND") != "6" &&					//청구구분이 업체재고소진청구나 실패현장청구가 아닌 경우에는...
					ds_list_req.GetColumn(iCnt, "REQKIND") != "G")
			{	
				ds_list_req.SetColumn(iCnt, "REQKIND", "8");					//청구구분을 재청구로 세팅한다.
			}
		}
		else
		{
			ds_list_req.SetColumn(iCnt, "FLAG", "");	
		}
	}
	
	ds_out_master.SetColumn(0, "QSTAT", "2");									//ZCST001의 QSTAT를 청구접수로 바꾼다.
	ds_out_master.SetColumn(0, "CHGBN", "3");									//ZCST001의 청구구분을 재청구(3)로 바꿔준다. 1:수주변경, 2:수주취소, 3:재청구
	// YAR 2016.02.22
	ds_out_master.SetColumn(0, "SHDAT", ds_out_master.GetColumn(0, "RDATE"));   //ZMMT031에 재청구 시 변경된 
	
	/* BOM자재는 재청구시 선택이 불가능하므로 Filtering 에서 제외 */
	//Action을 Clear한다.
	tit_clearActionInfo();

	tit_addSearchActionInfo("cs01:CS0101008B_T2", true);						//신규청구번호 채번을 위해 exclusive lock을 건다
	tit_addSearchActionInfo("cs01:CS0101008B_S8", true);						//신규청구번호 채번

	tit_addMultiActionInfo("cs01:CS0101008B_I3");								//ZMMT031에 데이터를 INSERT 한다.

	tit_addMultiActionInfo("cs01:CS0101008B_U3");								//ZCST001을 UPDATE해 준다(REQNO, QSTAT, CHGBN)

	tit_callService(
        ""
        , ""
        , "ds_out_master=ds_out_master ds_list=ds_list_req ds_cond=ds_cond ds_key=ds_key"
        , "ds_key = ds_key"
        , ""
        , "fn_afterSaveRequest");
}

function fn_afterSaveRequest(errCode, errMsg)
{
	if ( errCode!= 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
		gfn_showAlert("CI00003");
		
		fn_close();		
	}
}


/********************************************************************************
* 기      능   : 기안 16
********************************************************************************/
function fn_draft() {
	var workStage;																//수주이후작업단계(0:청구전송완료/1:수주변경결재/2:수주취소결재/3:수주재청구결재)
	var reqkind;
	var docNo, docKind;															//결재문서번호, 결재종류
	var appGubn;																//결재종류(S는 기안부서, R는 수신부서)
	var inputArg;																//결재선지정창에 넘길 arguments
	var newDocNo;																//신규 결재문서번호
	var docPrefix;																//재견적 결재문서번호 Prefix
	var docNo3;																	//재청구문서번호
	var docNo3Stat;	
	workStage = ds_out_master.GetColumn(0, "CHGBN");							//견적 현재 결재 상태
	reqkind   = ds_out_master.GetColumn(0, "REQKIND");
	docNo3Stat = ds_out_master.GetColumn(0, "DOC3STAT");
	docNo3 = ds_out_master.GetColumn(0, "DOC3");								//수주결재문서번호
	
	if(!isDigit(workStage))														//수주미완료
	{
		gfn_showAlert("CW10025", "견적 및 수주승인이 완료되지 않았습니다.");
		return;
	}

	if(workStage == "0")														//재청구 미저장(재청구:3)
	{
		gfn_showAlert("CW10025", "저장이 완료되지 않았습니다. 저장 후 기안해주세요.");
		return;
	}

	if(workStage != "3")														//잘못된 작업단계(재청구(3) 아님)
	{
		gfn_showAlert("CW10025", "잘못된 접근입니다.");
		return;
	}
	
	if(!check_Rdate())	return false;
	
	docKind = "14";																//재청구
	docPrefix = "R03";															//재청구

	if(docNo3Stat == "3") appGubn = "R";									//기안부서결재종료시 수신부서결재시 결재구분 R
	else appGubn = "S";	
	
	//10번 권한 사용자면 기안접수함에 데이터를 넣고 끝낸다.
	var user_grp = gfn_getUserGroup();
	if( user_grp == '10' && substr(G_USER_ID,0,1) == '8' ) 
	{
		var arg = "fa_docno=" + quote(ds_out_master.GetColumn(0, "QTNUM") + ds_out_master.GetColumn(0, "SEQ")) + " fa_dockind=" + quote(docKind)
				 +" fa_workstage=" + quote(workStage)
				 +" fa_reqkind=" + quote(reqkind)
				 +" fa_appgubn=" + quote(appGubn) ;
		var returnArgs = gfn_openPopup2("CS0401001B", true, arg);
		if( returnArgs[0] == "S" ) 
		{
			gfn_showAlert("CI30001", "기안 접수가 완료되었습니다.");
		}
		else
		{
			gfn_showAlert("CW10025", "기안접수에 실패했습니다. 확인 후 다시 시도해주세요.");
		}
		ufn_resetAll();															//모든 정보를 리셋한다.
		ufn_initParameters();													//Parameter를 초기화한다.
		return;
	}	
	if(appGubn == "S")															    //기안부서결재시에만 문서번호 신규생성
	{
		ds_docno_gen.ClearData();													//결재번호생성 데이터셋을 클리어한다
		ds_docno_gen.AddRow();																
		ds_docno_gen.SetColumn(0,"PFX",docPrefix);									//Prefix는 R03
		tit_clearActionInfo();					
		tit_addSearchActionInfo("wb01:DOC_CODE_GEN_S1",true);						//docno를 사용하기 위해 dataset reusable flag 를 true로 세팅. 
		tit_addSearchActionInfo("wb01:DOC_CODE_GEN_U1");					
		tit_callService(															//동기화 방식으로 서비스를 콜(계속 진행하기 위해)
			, ""				
			, "ds_docno_gen_i=ds_docno_gen"				
			, "ds_docno_gen=ds_docno_gen_o"				
			, ""				
			, ""				
			, true
			, false
			, true);				
			
		newDocNo = ds_docno_gen.GetColumn(0, "DOCNO");
	}
	else
	{
		newDocNo = docNo3;
	}

	if(length(newDocNo) <= 1)
	{
		gfn_showMsg("CW10025", "결재문서번호 생성에 실패했습니다. 잠시 후 다시 시도해주세요.");
		return;
	}
	
	//appGubn = "S";															//appGubn은 무조건 S (R은 수신부서결재)
	inputArg = "fa_docno=" + quote(newDocNo)+ 									//결재선생성창을 위한 Argument를 설정한다.
			   " fa_dockind=" + quote(docKind) + 
			   " fa_appgubn=" + quote(appGubn) +
			   " fa_workstage=" + quote(workStage)+
			   " fa_reqkind=" + quote(reqkind);
	
	var ret = gfn_openPopup("CS0401001A",true, inputArg);
	if(ret[0] == "S")																//상신 성공시 작업 - 견적결재번호(doc3) update
	{
		ds_out_master.SetColumn(0, "DOC3", newDocNo);							//수주결재번호에 신규생성된 결재번호를 넣음
		ds_out_master.SetColumn(0, "CHGBN", "3");								//변경구분은 재청구로
		ds_mmt001.SetColumn(0, "REQNR", ds_out_master.GetColumn(0,"REQNR2"));
		ds_mmt001.SetColumn(0, "SHDAT", cal_shdat.Value);
		tit_clearActionInfo();
		tit_addMultiActionInfo("cs01:CS0101008B_U1");							//결재번호를 ZCST001에 Update한다.
		tit_addMultiActionInfo("cs01:CS0101008C_U1");							//납기일을 ZMMT001에 Update한다.
		tit_callService(
			"",
			"",
			"ds_out_master=ds_out_master ds_mmt001=ds_mmt001",
			"",
			"",
			"", 
			true, 
			false,
			true);
		
		
		gfn_showAlert("CI30001", "기안이 완료되었습니다.");
		
		ufn_resetAll();															//모든 정보를 리셋한다.
		ufn_initParameters();													//Parameter를 초기화한다.
	}
	else																		//상신 실패시 작업
	{
		gfn_showAlert("CW10025", "기안이 취소되었습니다.");
	}
}


/********************************************************************************
* 기      능   : 리셋 85
********************************************************************************/
function fn_reset() 
{
	if(gfn_showConfirm("CW10025", "입력을 취소하고 모든 정보를 초기화 하시겠습니까?"))
	{
		ufn_resetAll();				//모든 정보를 리셋한다.
		ufn_initParameters();		//Parameter를 초기화한다.
	}
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================

/********************************************************************************
* 기      능   : 공통코드 조회 Callback
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {

}


//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================

/********************************************************************************
* 기      능   : 모든 정보를 리셋(ds_cond는 초기화 및 재조회를 위해 남겨둠)
********************************************************************************/
function ufn_resetAll()
{
	//ds_cond.clearData();														//ds_cond를 clear한다.
	//ds_cond.AddRow();															//ds_cond에 새 Rwo를 Insert한다.
	
	ds_list.clearData();														//ds_list를 삭제한다.
	ds_out_master.clearData();													//ds_out_master를 삭제한다. 
	ds_out_master.addRow();														//ds_out_master에 새 Row를 Insert한다.
	ds_mmt001.clearData();														//ds_mmt001를 삭제한다. 
	ds_mmt001.addRow();															//ds_mmt001에 새 Row를 Insert한다.
	ds_pjt_det.clearData();
	ds_key.clearData();															//ds_key를 clear한다.
	ds_key.AddRow();															//ds_key에 새 Rwo를 Insert한다.
	
	//Mask Edit Box를 모두 Clear한다.
	var comps = Components["MaskEdit"];
	for(iCnt=0;iCnt < comps.count();iCnt++)
	{
		comps[iCnt].value = "";
	}	
}

/********************************************************************************
* 기      능   : Null여부 확인 gfn_isNull을 Status에서 Alert방식으로 바꿈(팝업이므로 메세지창이 없음)
********************************************************************************/
function ufn_isNull(chkObj, isShowMsg, lbTxt, focusObj) {
	if( length( chkObj.value) > 0 ) {
		return false;
	}

	if( isShowMsg ) {
		// 메시지 처리
		if( length( lbTxt) == 0 ) {
			// 필수 입력항목 입니다. 확인하여 주십시오.
			gfn_showAlert("CW00002");
		} else {
			// lbTxt + " 항목에 값이 누락되어 있습니다. 확인하여 주십시오."
			gfn_showAlert("CW00001", lbTxt);
		}
	}

	if( focusObj == null ) {
		focusObj = chkObj;
	}

	focusObj.setFocus();
	return true;
}

/********************************************************************************
* 기      능   : 화면상의 조건들을 초기화 한다
********************************************************************************/
function ufn_initParameters()
{
	//검색조건 Combo Initialize
	var codeArr = ["2"];
    var dsObjArr = [ds_bwtar_cd];
    var addTypeArr = [G_CODE_SELECT];
    gfn_searchCommCode(codeArr, dsObjArr, addTypeArr,true);

	ufn_getOfferInfo();															//프로젝트정보 및 자재정보를 가져온다
}

/********************************************************************************
* 기      능   : 선택된 견적 정보를 Retrieve (추가/수정/삭제 시)
********************************************************************************/
function ufn_getOfferInfo()
{
	ufn_resetAll();																//현재 견적사항을 리셋한다.
	
	fn_createWait("",this);														//"처리중입니다. 잠시 기다려주십시오." 윈도우 create
	grd_list.Redraw = false;													//Grid의 모든 컬럼이 다 채워진 후 refresh하기 위해 redrew를 false로 설정한다.
	
	tit_clearActionInfo();	
	
	tit_addSearchActionInfo("cs01:CS0101008B_S1", true);						//프로젝트 상세정보(호기명/호기id)
	tit_addSearchActionInfo("cs01:CS0101008B_S18", true);						//견적 마스터 정보
	tit_addSearchActionInfo("cs01:CS0101008B_S5", true);  						//견적 디테일 정보
	tit_addSearchActionInfo("cs01:CS0101008B_S6", true);  						//차수 정보
	tit_addSearchActionInfo("cs01:CS0101008B_S7", true);  						//호기선택 콤보박스용 호기정보
	tit_callService(	
        ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_pjt_det=ds_pjt_det ds_out_master=ds_out_master ds_list=ds_list ds_seq=ds_seq ds_hna=ds_hna"
        , ""
        , "fn_afterOfferInfoQuery"
        , true
        , true
        , true);  // 2018.07.18  sync로 변경
}

/********************************************************************************
* 기      능   : 선택된 견적정보 Retrieve Callback
********************************************************************************/
function fn_afterOfferInfoQuery()
{
	fn_destroyWait();															//"처리중입니다. 잠시 기다려주십시오." 윈도우 destroy
	grd_list.Redraw = true;														//Grid Redraw!!
	//selfFlag를 세팅한다.
	var qtUserID, logUserID;													//견적 사용자 ID, 로그인 사용자 ID;
	qtUserID = ds_out_master.GetColumn(0, "CRNAM");								//견적 작성 사용자
	logUserID = G_USER_ID;														//로그인 사용자
	selfFlag = false;
	
	if(logUserID == qtUserID) 													//본인여부
	{
		selfFlag = true;
	}
	// if(shdatFlag)
	// {
		// cal_shdat.Value = ds_mmt001.GetColumn(0, "SHDAT");
	// }
	
	//판매할인액 %를 계산한다. 
	ed_netwr_pct.text = ((toNumber(ed_sum_ofr.Value) - toNumber(ed_sum_std.Value)) / toNumber(ed_sum_std.Value)) * 100;
	
	var workStage;																//결재상태 
	workStage = ds_out_master.GetColumn(0, "CHGBN");							//결재상태를 가져온다.
	
	var docNo3, docStat3;														//재청구 번호, 재청구 단계
	docNo3 = ds_out_master.GetColumn(0, "DOC3");
	docStat3 = ds_out_master.GetColumn(0, "DOC3STAT");
	
	if(ds_out_master.GetColumn(0, "SPART") == "40")
	{
		gfn_showAlert("CW00246");		
		return;
	}
	if(!isDigit(workStage))														//청구전송이 완료된 후의 견적만 재청구가 가능하다
	{
		gfn_showAlert("CW10025", "견적/수주승인이 완료되지 않아 재청구 불가합니다.");
		fn_close();
	}
	
	if(ds_out_master.GetColumn(0,"PS_PSPID").length <= 0)						//자재승인완료 후 SAP전송이 완료되어야 재청구가 가능하다.
	{
		gfn_showAlert("CW10025", "청구승인 및 전송이 완료되지 않아 재청구 불가합니다.");
		fn_close();
	}	
	
	if(workStage == "1") 														//수주변경이 진행중이면 재청구가 불가능하다. 반려(2, 5) 및 수주변경 완료(6)시에는 가능.
	{
		if(ds_out_master.GetColumn(0, "DOC4STAT") == "1" || 					//기안부서 결재
			ds_out_master.GetColumn(0, "DOC4STAT") == "3" || 					//기안부서 결재완료
			ds_out_master.GetColumn(0, "DOC4STAT") == "4")	 					//수신부서 결재
		{
			gfn_showAlert("CW10025", "수주변경 결재가 진행중이므로 재청구 불가합니다.");
			fn_close();
		}
	}	
	
	if(workStage == "2") 														//수주취소가 완료되었거나 현재 진행중이면 재청구가 불가능하다. 반려(2, 5)시에는 가능.
	{
		if(ds_out_master.GetColumn(0, "DOC5STAT") == "1" || 					//기안부서 결재
			ds_out_master.GetColumn(0, "DOC5STAT") == "3" || 					//기안부서 결재완료
			ds_out_master.GetColumn(0, "DOC5STAT") == "4" || 					//수신부서 결재
			ds_out_master.GetColumn(0, "DOC5STAT") == "6")						//수신부서 결재완료
		{
			gfn_showAlert("CW10025", "수주취소 결재중 또는 완료 이력이 존재하여 재청구 불가합니다.");
			fn_close();
		}
	}	

	if(ds_out_master.GetColumn(0,"PAYSTAT") == "N") //인건비 지급여부 제외로직 적용 2015.05.26 LJH
	{
		if (ds_out_master.GetColumn(0,"LABSTAT") == "A" 							//인건비 지급 완료여부를 확인한다(지급완료시 재청구불가)
			|| ds_out_master.GetColumn(0,"LABSTAT") == "B" 
			|| ds_out_master.GetColumn(0,"LABSTAT") == "C")
		{
			gfn_showAlert("CW10025", ds_out_master.GetColumn(0,"PS_PSPID")+
						" 인건비 지급 완료되어 재청구 불가합니다.");
			fn_close();
		}
	}
	
	var convCnt = 0;
	if(selfFlag && docStat3 == "6")												//재청구자재를 변환한다.
	{
		if(gfn_showConfirm("CI30001", "이전 재청구 이력이 존재하여 해당 재청구 자재를\n이전 재청구자재로 변환 후 재청구가 가능합니다.\n변환하시겠습니까?"))
		{
			for(var iCnt=0;iCnt < ds_list.rowcount;iCnt++)
			{
				if(ds_list.GetColumn(iCnt, "CGBN") == "2") 						//전전 재청구 자재인 경우 Update되지 않도록 한다.
				{
					ds_list.SetColumn(iCnt, "CGBN", "");
					ds_list.SetColumn(iCnt, "CGBNNM", "재청구완료");
					ds_list.SetColumn(iCnt, "FLAG", "");
					convCnt++;
				}
				
				if(ds_list.GetColumn(iCnt, "CGBN") == "1") 						//재청구 후 재청구 시 이전 재청구 자재는 CGBN=2로 세팅할 것
				{
					ds_list.SetColumn(iCnt, "CGBN", "2");
					ds_list.SetColumn(iCnt, "CGBNNM", "재청구완료");
					ds_list.SetColumn(iCnt, "FLAG", "U");
					convCnt++;
				}
			}
			gfn_showAlert("CI30001", convCnt + "건의 변환이 완료되었습니다. 저장시 반영됩니다.");
			
			ds_out_master.SetColumn(0, "DOC3", "");
			ds_out_master.SetColumn(0, "DOC3STAT", "");
			ds_out_master.SetColumn(0, "CHGBN", "0");
			
			DEBUG("fn_afterOfferInfoQuery", ds_out_master.SaveXml());
		}
		else
		{
			gfn_showAlert("CW10025", "변환이 취소되었습니다. 열람만 가능합니다.");
			ds_out_master.SetColumn(0, "CHGBN", "3");							//열람만 가능하도록 청구구분을 변경
		}
	}
	

	//만약 시스템 신규 제작 이전 데이터이면, 비어있는 컬럼들을 채운다.
	if(ds_Out_master.GetColumn(0, "UPN") == "")
	{
		//마스터 리스트의 값을 채운다.
		ds_out_master.SetColumn(0, "KUNNR",ds_pjt_det.GetColumn(0, "KUNNR"));	//고객번호
		ds_out_master.SetColumn(0, "SPT",ds_pjt_det.GetColumn(0, "SPT"));		//현장명
		ds_out_master.SetColumn(0, "CST",ds_pjt_det.GetColumn(0, "CST"));		//거래선
		ds_out_master.SetColumn(0, "CSTNM",ds_pjt_det.GetColumn(0, "CSTNM"));	//거래선명
		ds_out_master.SetColumn(0, "SPART", ds_pjt_det.GetColumn(0, "SPART"));	//제품군
		ds_out_master.SetColumn(0, "SPARTNM",
								ds_pjt_det.GetColumn(0, "SPARTNM"));			//제품군명
		ds_out_master.SetColumn(0, "VKGRP", ds_pjt_det.GetColumn(0, "VKGRP"));	//팀
		ds_out_master.SetColumn(0, "VKGRPNM", 
								ds_pjt_det.GetColumn(0, "VKGRPNM"));			//팀명
		ds_out_master.SetColumn(0, "VKBUR", ds_pjt_det.GetColumn(0, "VKBUR"));	//사업장
		ds_out_master.SetColumn(0, "VKBURNM", 
								ds_pjt_det.GetColumn(0, "VKBURNM"));			//사업장명
		ds_out_master.SetColumn(0, "BSU", ds_pjt_det.GetColumn(0, "BSU"));		//업체코드
		ds_out_master.SetColumn(0, "BSUNM", ds_pjt_det.GetColumn(0, "BSUNM"));	//업체명
		ds_out_master.SetColumn(0, "PNAME", ds_pjt_det.GetColumn(0, "PNAME"));	//담당자명
		ds_out_master.SetColumn(0, "LIFNR", ds_pjt_det.GetColumn(0, "LIFNR"));	//공급업체
		ds_out_master.SetColumn(0, "BUSSI",  
								substr(ds_pjt_det.GetColumn(0, "SPART"), 0, 1));//사업부구분(1:승강기/2:주차)
		ds_out_master.SetColumn(0, "SH_ADDR", ds_pjt_det.GetColumn(0, "ADDR"));	//납품처주소
		ds_out_master.SetColumn(0, "UPN", ds_pjt_det.GetColumn(0, "UPN"));		//프로젝트번호
		ds_out_master.SetColumn(0, "VKBUR", ds_pjt_det.GetColumn(0, "VKBUR"));	//사업장
		ds_out_master.SetColumn(0, "VKBURNM", 
								ds_pjt_det.GetColumn(0, "VKBURNM"));			//사업장명		
		ds_out_master.SetColumn(0, "RATE", ds_pjt_det.GetColumn(0, "RATE"));	//임율	
		
		//자재리스트의 값을 채운다.
		var nHRow = 0;
		for(var iCnt=0;iCnt < ds_list.rowcount;iCnt++)
		{
			nHRow = ds_hna.SearchRow("WBS=\"" +  ds_list.GetColumn(iCnt, "HNO") + "\"");
			ds_list.SetColumn(iCnt, "HNA", ds_hna.GetColumn(nHRow, "HNA"));
		}
	}
	
	//재청구 추가 자재 이외에는 에디팅 및 저장이 불가능하도록 한다.
	for(var iCnt=0;iCnt < ds_list.rowcount;iCnt++)
	{
		//DEBUG("fn_afterOfferInfoQuery", "Row:"+iCnt+"/CHK:"+ds_list.GetColumn(iCnt, "CHK")+"/CGBN:" + ds_list.GetColumn(iCnt, "CGBN"));
		if(ds_list.GetColumn(iCnt, "FLAG") == "U" && 							//기존 저장 자재 중 견적자재인 경우 Flag를 Clear한다. 재청구 후 재청구 시 이전 재청구 자재는 CGBN=2로 세팅할 것
										ds_list.GetColumn(iCnt, "CGBN") == "")
		{
			ds_list.SetColumn(iCnt, "FLAG", "");
		}
	}
	
	//각 셀의 property를 변경한다.
	ufn_changeCellProp();	
	
	//실패현장 여부에 따라 셀 값을 변경한다.
	ufn_checkFailSite();
	
	//원가를 계산한다.
	ufn_calcCostValues("fn_afterOfferInfoQuery");

	//전자결재 상태를 Update한다.
	switch (workStage)
	{
		case "":																//저장, 견적승인, 수주승인 단계
			if(ds_out_master.GetColumn(0, "DOC2STATNM").length > 0)
			{
				ed_wf_stat.Text = ds_out_master.GetColumn(0, "DOC2STATNM");
			}
			else if(ds_out_master.GetColumn(0, "DOC1STATNM").length > 0)
			{
				ed_wf_stat.Text = ds_out_master.GetColumn(0, "DOC1STATNM");
			}
			else
			{
				ed_wf_stat.Text = "견적 저장 완료";
			}
			break;
		case "0": 																//청구등록 단계
			if(ds_out_master.GetColumn(0, "PS_PSPID").length > 0)
			{
				ed_wf_stat.Text = "청구 전송 완료";								//SAP전송 후 원 WBS가 입력된 경우 전송완료로 표시
			}
			else
			{
				ed_wf_stat.Text = "청구 등록 완료";
			}
			break;
		case "1":																//수주변경 단계
			ed_wf_stat.Text =  ds_out_master.GetColumn(0, "DOC4STATNM");
			break;
		case "2":																//수주취소 단계
			ed_wf_stat.Text =  ds_out_master.GetColumn(0, "DOC5STATNM");
			break;
		case "3":																//재청구 단계
			if(ds_out_master.GetColumn(0, "DOC3STATNM").length > 0)
			{
				ed_wf_stat.Text =  ds_out_master.GetColumn(0, "DOC3STATNM");
			}
			else
			{
				ed_wf_stat.Text = "재청구 저장완료";
			}			
			break;
	}
	
	ufn_setPermissions();														//권한을 설정한다.
	
	ufn_setRegulation();														//전결규정을 표시한다.
}


/********************************************************************************
* 기      능   : grd_list_OnExpandUp의 자재검색팝업(2)에서 자재코드로 자재상세정보 검색 완료 시
********************************************************************************/
function ufn_setMatnr()
{
	if (ds_ma_list.rowcount > 0)
	{
	    ds_list.fireevent = false;												//데이터리스트의 이벤트를 disable한다.
	    
	    if (ds_ma_list.GetColumn(0,"LVORM") == 'X')
	    {
	   		gfn_showAlert("CW10025", "삭제 표기된 자재번호 입니다. 확인하십시요.");
	   		ds_ma_list.clearData();
			return;
     	}
     	
     	nRow = ds_ma_cond.GetColumn(0,"NROW");
     	
		ufn_clearDsList(nRow);
	
		ds_list.SetColumn(nRow,"MATNR",ds_ma_list.GetColumn(0,"MATNR"));		//자재번호
		ds_list.SetColumn(nRow,"MAKTX",ds_ma_list.GetColumn(0,"MAKTX")); 		//자재내역
		ds_list.SetColumn(nRow,"JOBHOUR",ds_ma_list.GetColumn(0,"JOBHOUR"));	//작업시간
		ds_list.SetColumn(nRow,"MAN",ds_ma_list.GetColumn(0,"MAN"));			//투입인원
		ds_list.SetColumn(nRow,"MTART",ds_ma_list.GetColumn(0,"MTART")); 		//자재유형
		ds_list.SetColumn(nRow,"GEWEI",ds_ma_list.GetColumn(0,"GEWEI")); 		//기본단위
		ds_list.SetColumn(nRow,"MEINS",ds_ma_list.GetColumn(0,"MEINS")); 		//자재단위	
		ds_list.SetColumn(nRow,"NETPR_ORG",ds_ma_list.GetColumn(0,"SAMT1")); 	//판매단가
		ds_list.SetColumn(nRow,"UCOSTA",ds_ma_list.GetColumn(0,"SAMT2")); 		//정품원가
		ds_list.SetColumn(nRow,"UCOSTR",ds_ma_list.GetColumn(0,"SAMT3")); 		//수리품원가
		ds_list.SetColumn(nRow,"UPR",ds_ma_list.GetColumn(0,"UPR")); 			//원가인상율
		ds_list.SetColumn(nRow,"RGBN",ds_ma_list.GetColumn(0,"RGBN")); 			//청구유형(1:보수/2:BOM)
		ds_list.SetColumn(nRow,"RGBNNM",ds_ma_list.GetColumn(0,"RGBNNM"));		//청구유형명
		ds_list.SetColumn(nRow,"MATNRNM",ds_ma_list.GetColumn(0,"MATNRNM"));	//자재명
		ds_list.SetColumn(nRow,"SPEC",ds_ma_list.GetColumn(0,"SPEC")); 			//제품SPEC
		ds_list.SetColumn(nRow,"BANNAB",ds_ma_list.GetColumn(0,"BANNAB")); 		//반납자재여부
		ds_list.SetColumn(nRow,"REQKIND","8");									//청구종류-재청구
		ds_list.SetColumn(nRow,"WEBAZ",ds_ma_list.GetColumn(0,"WEBAZ"));

		if ( parseInt(ds_list.GetColumn(nRow,"MENGE")) < 1)						//xkwh:기초수량을 1로 세팅한다.
		{
			ds_list.SetColumn(nRow,"MENGE",1);
		}
		
		ds_list.SetColumn(nRow, "ZGUBN", "");									//xkwh:직영재고 Index를 초기화한다.

		ds_list.SetColumn(nRow,"OFRHOUR",ds_ma_list.GetColumn(0,"JOBHOUR"));	//xkwh:인건비 및 자재비 합계 계산을 위해 견적공수에 표준공수를 대입

		ds_list.SetColumn(nRow, "NETWR", ds_list.GetColumn(nRow, "MENGE") * 	//xkwh:수량*단가=합계를 계산한다.
											ds_list.GetColumn(nRow, "NETPR"));
		
		//xkwh:표준인건비, 계산인건비를 계산한다. 임율은 견적연도의 임율을 적용한다.
		var lcosts = toNumber(ds_list.GetColumn(nRow, "MENGE")) * 
					 toNumber(ds_list.GetColumn(nRow, "MAN")) * 
					 toNumber(ds_list.GetColumn(nRow, "JOBHOUR")) * 
					 toNumber(ds_out_master.GetColumn(0, "RATE"));
		var lcostc = toNumber(ds_list.GetColumn(nRow, "MENGE")) * 
					 toNumber(ds_list.GetColumn(nRow, "MAN")) * 
					 toNumber(ds_list.GetColumn(nRow, "OFRHOUR")) * 
					 toNumber(ds_out_master.GetColumn(0, "RATE"));
		
		DEBUG("ufn_setMatnr", "lcosts:" + lcosts + "/lcostc:" + lcostc);
					
		ds_list.SetColumn(nRow, "LCOSTS", lcosts);
		ds_list.SetColumn(nRow, "LCOSTC", lcostc);

		if (length(ds_list.GetColumn(nRow,"BWTAR")) < 1) {						//최초 입력시 평가유형 초기값 입력
			if(ds_list.GetColumn(nRow, "MTART") == "PALB"){
				ds_list.SetColumn(nRow,"BWTAR","PA");
			} else if(ds_list.GetColumn(nRow, "MTART") == "HALB") {
				ds_list.SetColumn(nRow,"BWTAR","HA");
			} else {
				ds_list.SetColumn(nRow,"BWTAR","RA");
			}
		}

		if(SubStr(ds_list.GetColumn(nRow, "BWTAR"),1) == "B"){					//평가유형별 판매가 변경
			ds_list.SetColumn(nRow,"NETPR",ds_ma_list.GetColumn(0,"SAMT1")*0.4); 
		} else if (SubStr(ds_list.GetColumn(nRow, "BWTAR"),1) == "A") {
			ds_list.SetColumn(nRow,"NETPR", ds_ma_list.GetColumn(0,"SAMT1")); 
		} else {
			ds_list.SetColumn(nRow,"NETPR", "0"); 
		}
		
		ufn_calcListValues(nRow);												//xkwh:각종 계산식을 업데이트 한다.	
		ufn_calcCostValues("ufn_setMatnr");										//xkwh:청구구분에 따른 계산값을 다시 계산한다.
		ds_list.fireevent = true;												//데이터리스트의 이벤트를 enable한다.
	}
}

/********************************************************************************
* 기      능   : 메인 리스트의 내용을 클리어
********************************************************************************/
function ufn_clearDsList(nRow)
{
	if (ds_list.rowcount > 0)
	{
		ds_list.SetColumn(nRow,"MATNR",""); 									//자재번호
		ds_list.SetColumn(nRow,"MATNRNM","");									//자재명
		ds_list.SetColumn(nRow,"JOBHOUR",""); 									//표준공수
		ds_list.SetColumn(nRow,"MAN",""); 										//투입인원
		ds_list.SetColumn(nRow,"MTART",""); 									//자재유형
		ds_list.SetColumn(nRow,"GEWEI",""); 									//자재단위
		ds_list.SetColumn(nRow,"MENGE",""); 									//수량
		ds_list.SetColumn(nRow,"OFRHOUR",""); 									//견적공수
		ds_list.SetColumn(nRow,"NETWR",""); 									//판매금액
		ds_list.SetColumn(nRow,"LCOSTS",""); 									//표준인건비
		ds_list.SetColumn(nRow,"LCOSTC",""); 									//계산인건비
		ds_list.SetColumn(nRow,"BWTAR","");										//평가유형
		ds_list.SetColumn(nRow,"NETPR","");										//판매단가
		ds_list.SetColumn(nRow,"UCOSTA",""); 									//정품원가
		ds_list.SetColumn(nRow,"UCOSTR",""); 									//수리품원가
		ds_list.SetColumn(nRow,"UPR",""); 										//원가인상율
		ds_list.SetColumn(nRow,"RGBN",""); 										//청구유형
		ds_list.SetColumn(nRow,"RGBNNM","");									//청구유형명
	}
}

/********************************************************************************
* 기      능   : 비용 및 원가 내역을 산정
********************************************************************************/
function ufn_calcCostValues(callerId)
{
	var reqkind = ds_out_master.GetColumn(0, "REQKIND");

	if(ds_list.count <= 0)														//데이터가 입력되어있지 않으면 계산하지 않는다.
	{
		return;
	}	

	if(reqkind == "")															//청구구분을 선택해야 판가할인액 적용이 가능
	{
		if(callerId.length > 0 && DEBUG_FLAG)
		{
			gfn_showAlert("CW10025", "청구구분이 올바르지 않습니다." + "\n" + "Caller:" + callerId);
		}
		else
		{
			gfn_showAlert("CW10025", "청구구분이 올바르지 않습니다.");
			close();
		}
		return;
	}

	ds_list.fireevent = false;	
	
	//변수를 선언한다.
	
	var netwr_std=0, netwr_ofr=0, netwr_dc;										//자재판매가(표준), 자재판매가(견적), 판매가할인액
	var netwr_pct;																//판매할인율
	var lcost_std=0, lcost_ofr=0;												//인건비(표준), 인건비(견적)
	var weekend_wgt, night_wgt;													//휴일(철야)가치중치, 야간가중
	var exp_std, exp_ofr, exp_pct;												//제경비(표준), 제경비(견적), 제경비(적용비율)
	var mng_std, mng_ofr, mng_pct;												//관리비(표준), 관리비(견적), 관리비(적용비율)
	var pro_std, pro_ofr, pro_pct;												//기업이윤(표준), 기업이윤(견적), 기업이윤(적용비율)
	var sum_std, sum_ofr;														//합계(표준), 합계(견적)
	var id_rate;																//증감율
	var bil_amt = 0;															//기성예상비용

	//기초 금액을 산출한다.
	for(iCnt=0;iCnt < ds_list.Count;iCnt++)
	{
		netwr_std += ds_list.getColumn(iCnt, "NETWR");
		netwr_ofr += ds_list.getColumn(iCnt, "NETWR");
		lcost_std += ds_list.getColumn(iCnt, "LCOSTS");
		lcost_ofr += ds_list.getColumn(iCnt, "LCOSTC");	
	}
	
	//인건비에 휴일 및 철야 가중치를 적용한다.
	if(reqkind == "7")															//수리공사
	{	
		chk_wgt = 1;
		if(chk_night.value > 1) chk_wgt = 1.5;
		if(chk_weekend.value > 1) chk_wgt = 2;
		
		lcost_std *= chk_wgt;
		lcost_ofr *= chk_wgt;
	}
	else																		//부품판매
	{
		lcost_std = 0;
		lcost_ofr = 0;
	}
	
	//부품판매(1)의 경우 견적금액 자재판매가에 판가할인액을 적용한다 / 수리공사(7)는 미적용
	if(reqkind == "1")
	{
		netwr_dc = toNumber(ds_out_master.GetColumn(0, "NETWR_DC"));
		netwr_ofr -= netwr_dc;	
	}

	//판매할인율을 계산한다.
	netwr_pct = round(((netwr_ofr-netwr_std)/netwr_std)*100, 1);	
	
	//제경비를 산정한다.
	if(reqkind == "7")															//수리공사
	{	
		exp_pct = toNumber(ed_exp_pct.Value);
		exp_std = (netwr_std + lcost_std) * (exp_pct / 100);
		exp_ofr = (netwr_ofr + lcost_ofr) * (exp_pct / 100);
	}
	else																		//부품판매
	{
		exp_std = 0;
		exp_ofr = 0;
	}
	//DEBUG("ufn_calcCostValues", netwr_std + ":" + netwr_ofr + ":" + lcost_std + ":" + lcost_ofr + ":" + exp_std + ":" + exp_ofr);	
	
	//관리비를 산정한다.
	if(reqkind == "7")															//수리공사
	{		
		mng_pct = toNumber(ed_mng_pct.Value);
		mng_std = round((netwr_std + lcost_std + exp_std) * (mng_pct / 100), 0);
		mng_ofr = round((netwr_ofr + lcost_ofr + exp_ofr) * (mng_pct / 100), 0);
	}	
	else																		//부품판매
	{	
		mng_std = 0;
		mng_ofr = 0;
	}
		
	//기업이윤을 산정한다.
	if(reqkind == "7")															//수리공사
	{		
		pro_pct = toNumber(ed_pro_pct.Value);
		pro_std = round((lcost_std + exp_std + mng_std)  * (pro_pct / 100), 0);
		pro_ofr = round((lcost_ofr + exp_ofr + mng_ofr)  * (pro_pct / 100), 0);
	}
	else																		//부품판매
	{
		pro_std = 0;
		pro_ofr = 0;
	}
	
	//합계를 산정한다.
	sum_std = (netwr_std + lcost_std + exp_std + mng_std + pro_std);
	//sum_ofr = (netwr_ofr + lcost_ofr + exp_ofr + mng_ofr + pro_ofr);
	sum_ofr = toNumber(ed_sum_ofr.Value);
	
	//천단위 절사 (천단위 절사 disable - 201502081948 최선경sa)
	//sum_std = toInteger(sum_std / 1000) * 1000;
	//sum_ofr = toInteger(sum_ofr / 1000) * 1000;	
	
	DEBUG("ufn_calcCostValues", "sum_std(기준판매가):"+sum_std+"/sum_ofr(견적판매가):"+sum_ofr);
	
	//----------------------------------------------------------------------
	//재료비(자재원가합계)를 계산한다.
	var ucost_sum = 0;
	
	for(iCnt=0;iCnt < ds_list.Count;iCnt++)
	{
		ucost_sum += ds_list.getColumn(iCnt, "UCOST");
	}
	
	//----------------------------------------------------------------------
	//ds_pjt_det의 tgb(직영/협력사 구분)에 따라 
	//부품판매(1)/수리공사(7)별 기성예상비용을 계산한다.	
	
	if(ds_pjt_det.GetColumn(0, "TGB") == 1)										//직영일 경우
	{
		if(reqkind == "1")														//부품판매일경우 -> 직영 부품판매 기성예상비용 = 0
		{
			bil_amt = 0;
		}
		else if(reqkind == "7")													//수리공사일 경우 -> 직영 수리공사 기성예상비용 = 수량*투입인원*표준공수*수리공사임율
		{
			for(iCnt=0;iCnt < ds_list.Count;iCnt++)
			{ 
				bil_amt += toNumber(ds_list.getColumn(iCnt, "MENGE"))
				                * toNumber(ds_list.getColumn(iCnt, "MAN"))
				                * toNumber(ds_list.getColumn(iCnt, "JOBHOUR"))
				                * toNumber(ds_pjt_det.getColumn(0, "RATE2"));	//기성예상비용 공사임율 적용
			}
		}	
		else
		{
			bil_amt = 0;
		}
	}
	else																		//협력사일 경우
	{	
		if(reqkind == "1")														//부품판매일 경우 -> 협력사 부품판매 기성예상비용 = 자재판매가*10% + (수주금액(판매금액합계) - 일식외주(ZMMT011에 입력예정. 미정)*1.08) - 자재판매가 * 65%
		{
			bil_amt = ((sum_ofr * 0.8) / 1.3) - ucost_sum;						
			if(bil_amt <= 100000) bil_amt = 0; 									//10만원 미만일 경우 지급하지 않는다.
			if(bil_amt >= sum_ofr * 0.3) bil_amt = round(sum_ofr * 0.3, 0);		//수주금액의 30%가 초과될경우 수주금액의 30%로 제한한다.
		}	
		else if(reqkind == "7")													//수리공사일 경우 -> 협력사 수리공사 기성예상비용 = (수주금액*80%)/1.3(일반관리비)) - 자재비(인상원가)
		{	// 인상 판매가 > 견적금액 인 경우 	
			if(toNumber(ed_netwr_ofr.Value) > toNumber(ed_sum_ofr.Value)) {
				bil_amt = (netwr_ofr * 0.15) ;
			} else {

				bil_amt = (netwr_ofr * 0.15) + ((sum_ofr - netwr_ofr) * 0.75);
			}		
			
		}
		else
		{
			bil_amt = 0;
		}
	}
	
	bil_amt = round(bil_amt, 0);
	//ed_bil_amt.text = bil_amt;												//기성예상비용	

	//----------------------------------------------------------------------
	//원가내역을 계산한다.
	
	//	인건비2	, 	일반노무비2,일식외주2, 	운반비2		직접비계2		간접비2		총원가2			원가율2
	var his_lcost, 	his_labor, 	his_oem, 	his_log, 	his_dirsum, 	his_indsum, his_totcost, 	his_his_rate;
	
	his_ucost = ucost_sum;
	his_lcost = bil_amt;
	his_labor = round(his_lcost  * 0.03, 0);
	his_oem = 0;																//확정 필요
	
	//==================전현정대리요청 추가20181012==================//	
	//his_log = round(ucost_sum * 0.03, 0);										//운반비 = 원가합계의 3%
	his_log = round(ucost_sum * 0.01, 0);	                                   //운반비 = 원가합계의 1% 변경
	//===============================================================//
	
	
	//==================전현정대리요청 추가20181012==================//		
	var his_emacid, his_betc, his_mmod, his_lift, his_safe, his_inspec;
	var his_dlab;
	if( ds_out_master.GetColumn(0, "SPART") == "20") {
		if(reqkind == "7") {  // 수리공사
			his_dlab = sum_ofr * 0.0001 ;
		} else if(reqkind == "S") {   // 시스템공사
			his_dlab = sum_ofr * 0.0001 ;
		} else if(reqkind == "1") {  // 부품판매
			his_dlab = sum_ofr * 0.0175 ;
		}	
	} else {
		his_dlab = sum_ofr * 0.015 ;
	}
	
	ds_out_master.SetColumn(0, "HIS_DLAB", his_dlab);
	
	his_betc 	= ds_out_master.GetColumn(0, "HIS_BETC");
	his_mmod 	= ds_out_master.GetColumn(0, "HIS_MMOD");
	his_lift 	= ds_out_master.GetColumn(0, "HIS_LIFT");
	his_safe 	= ds_out_master.GetColumn(0, "HIS_SAFE");
	his_inspec	= ds_out_master.GetColumn(0, "HIS_INSPEC");
	
	if(reqkind == "S") { // 시스템 공사인 경우만 고용산재 계산		
		
		if( ds_out_master.GetColumn(0, "SPART") == "20") {
			his_emacid = 0;
		} else {		
			his_emacid = (his_lcost + his_betc + his_mmod + his_lift) * 0.037;
		}
	} else {
		his_emacid = 0;
	}
	ds_out_master.SetColumn(0, "HIS_EMACID", his_emacid);
	//===============================================================//	
	
	//his_dirsum = his_ucost + his_lcost + his_oem              + his_log + his_labor ;	
	  his_dirsum = his_ucost + his_lcost + his_oem + his_inspec + his_log + his_betc + his_lift + his_mmod + his_safe + his_dlab + his_emacid;
	
	his_indsum = round(his_dirsum * 0.105, 0);
	
	his_totcost = his_dirsum + his_indsum;
	
	his_rate = round((his_totcost / sum_ofr) * 100, 1);
	

	
	
	DEBUG("ufn_calcCostValues", "his_dirsum:" + his_dirsum + "/his_indsum:" + his_indsum + "/sum_ofr:" + sum_ofr + "/his_rate:" + his_rate);
	
	//원가내역을 텍스트박스에 채워넣는다.
	ed_hu2.text = his_ucost;
	ed_hl2.text = his_lcost;
	ed_hla2.text = his_labor;
	ed_ho2.text = his_oem;
	ed_hlo2.text = his_log;
	ed_hd2.text = his_dirsum;
	ed_hi2.text = his_indsum;
	ed_tc2.text = his_totcost;
	ed_hr2.text = his_rate;
	

	
	
	//차이 내역을 텍스트박스에 채워넣는다.
	ed_hu_diff.text = his_ucost - toNumber(ed_his_ucost.Value);
	ed_hl_diff.text = his_lcost - toNumber(ed_his_lcost.value);
	ed_hla_diff.text = his_labor - toNumber(ed_his_labor.value);
	ed_ho_diff.text = his_oem - toNumber(ed_his_oem.value);
	ed_hlo_diff.text = his_log - toNumber(ed_his_log.value);
	ed_hd_diff.text = his_dirsum - toNumber(ed_his_dirsum.value);
	ed_hi_diff.text = his_indsum - toNumber(ed_his_indsum.Value);
	ed_tc_diff.text = his_totcost - toNumber(ed_his_totcost.value);
	ed_hr_diff.text = his_rate - toNumber(ed_his_rate.value);
	
	
	
	
	//----------------------------------------------------------------------
	//전결규정을 설정한다.
	ufn_setRegulation();
	
	ds_list.fireevent = true;
}

/********************************************************************************
* 기      능   : 전결규정을 설정한다.
********************************************************************************/
function ufn_setRegulation()
{
	tc_diff = toNumber(ed_tc_diff.Value);

	//DEBUG("ufn_setRegulation", "tc_diff is " + tc_diff);
	/* 2020.08.03 변경전
	if(toNumber(tc_diff) >= 3000000)										//300만원 이상
	{
		ed_reg.Text = "부문장";
	}
	else if(toNumber(tc_diff) >= 1000000 && toNumber(tc_diff) < 3000000)	//100만원 이상 300만원 미만 
	{
		ed_reg.Text = "담당";
	}
	else if(toNumber(tc_diff) >= 500000 && toNumber(tc_diff) < 1000000)		//50만원 이상 100만원 미만
	{
		ed_reg.Text = "팀장";
	}	
	else																	//오십만원 미만
	{
		ed_reg.Text = "지사장";
	}
	if(toNumber(tc_diff) >= 5000000)										//500만원 이상 인 경우 cfo 
	{
		ed_reg_cfo.Text = "CFO 확인";
	}
	*/
	//====================================변경 후 2020.08.03==================================================================
	if(toNumber(tc_diff) >= 3000000)										//300만원 이상
	{
		ed_reg.Text = "본부장";
	}
	else if(toNumber(tc_diff) >= 1000000 && toNumber(tc_diff) < 3000000)	//100만원 이상 300만원 미만 
	{
		ed_reg.Text = "담당";
	}
	else if(toNumber(tc_diff) < 1000000)                              		//100만원 미만
	{
		ed_reg.Text = "지사장(팀장)";
	}
	
	if(toNumber(tc_diff) >= 5000000)										//500만원 이상 인 경우 재경본부장
	{
		ed_reg_cfo.Text = "재경본부장 확인";
	}	
	//========================================================================================================================
	//전결규정
	ed_reg.enable = true;
	ed_reg.color = "gray";
	ed_reg.bkColor = "#E9E9E9";
	ed_reg.readOnly = true;
	ed_reg.ToolTipText = "1. 계약 변경시 5천만원 이상일 경우, 재경본부장 확인\n" +
						 "2. 원가변경(상승)시 500만원 이상일 경우, 재경본부장 확인\n" + 
						 "3. 계약 취소시 3천만원 이상인 경우, 재경본부장 확인\n" +
						 "4. 계약 취소/해지(해제) 후 처리가 계약내용과 상이할 경우 (위약금 미청구 등),\n" + 
						 "   계약금액과 상관없이 재경본부장 확인\n";
}

/********************************************************************************
* 기      능   : ds_list의 값들을 계산한다.
********************************************************************************/
function ufn_calcListValues(nRow)
{
	//판매금액(수량*단가)을 계산한다.
	ds_list.SetColumn(nRow, "NETWR", ds_list.GetColumn(nRow, "MENGE") * ds_list.GetColumn(nRow, "NETPR"));
	
	//인건비를 계산한다.
	var lcosts = 0; 															//표준인건비
	var lcostc = 0;																//계산인건비
	
	var lcosts = toNumber(ds_list.GetColumn(nRow, "MENGE")) * 
				 toNumber(ds_list.GetColumn(nRow, "MAN")) * 
				 toNumber(ds_list.GetColumn(nRow, "JOBHOUR")) * 
				 toNumber(ds_out_master.GetColumn(0, "RATE"));
	var lcostc = toNumber(ds_list.GetColumn(nRow, "MENGE")) * 
				 toNumber(ds_list.GetColumn(nRow, "MAN")) * 
				 toNumber(ds_list.GetColumn(nRow, "OFRHOUR")) * 
				 toNumber(ds_out_master.GetColumn(0, "RATE"));

	ds_list.SetColumn(nRow, "LCOSTS", lcosts);
	ds_list.SetColumn(nRow, "LCOSTC", lcostc);

	//자재원가를 계산한다.
	var ucost = 0;
	if(ds_list.GetColumn(nRow, "BWTAR") == "PA" || 								//정품일 경우
			ds_list.GetColumn(nRow, "BWTAR") == "HA" || 
			ds_list.GetColumn(nRow, "BWTAR") == "RA")
	{
		ucost = ds_list.GetColumn(nRow, "UCOSTA") + 
					(ds_list.GetColumn(nRow, "UCOSTA") * (ds_list.GetColumn(nRow, "UPR") / 100));
	}
	else if(ds_list.GetColumn(nRow, "BWTAR") == "PB" || 						//수리품일 경우
			ds_list.GetColumn(nRow, "BWTAR") == "HB" || 
			ds_list.GetColumn(nRow, "BWTAR") == "RB")
	{
		ucost = ds_list.GetColumn(nRow, "UCOSTR") + 
					(ds_list.GetColumn(nRow, "UCOSTR") * (ds_list.GetColumn(nRow, "UPR") / 100));
	}
	else																		//반납자재일 경우
	{
		ucost = 0;
	}
	
	//원가에 수량을 곱해준다(견적전체원가)
	ucost = ucost * ds_list.GetColumn(nRow, "MENGE");
	
	//데이터리스트의 원가 컬럼에 원가를 설정한다.
	ds_list.SetColumn(nRow, "UCOST", round(ucost, 0));
}


/********************************************************************************
* 기      능   : 환경변수/전역변수 등을 출력한다.
********************************************************************************/
function SHOW_ENV()
{
	var strDate = GetDate();
	strDate = Mid(strDate,0,4) + "/" + Mid(strDate,4,2) + "/" + Mid(strDate,6,2) + " " + 
	          Mid(strDate,8,2) + ":" + Mid(strDate,10,2) + ":" + Mid(strDate,12,2);

	Trace("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Startup  Information =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	Trace("Program ID : " + this.title);
	Trace("Start Date & Time : " + strDate);
	Trace("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Global Variables =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	Trace("G_AREA_CODE:사무소 코드/지역 코드) is [" + G_AREA_CODE + "]");
	Trace("G_AREA_CODE_B:영업지사 코드/영업지역 코드) is [" + G_AREA_CODE_B + "]");
	Trace("G_AREA_CODE_E:설치사무소 코드/설치지역 코드) is [" + G_AREA_CODE_E + "]");
	Trace("G_AREA_CODE_R:보수사무소 코드/보수지역 코드) is [" + G_AREA_CODE_R + "]");
	Trace("G_AREA_NAME:지역명/업체지역명) is [" + G_AREA_NAME + "]");
	Trace("G_CURR_DATE:현재시간/현재일자) is [" + G_CURR_DATE + "]");
	Trace("G_DPT1:부서코드/부서코드) is [" + G_DPT1 + "]");
	Trace("G_EMAIL:전자우편 주소/EMAIL) is [" + G_EMAIL + "]");
	Trace("G_EXPR_DATE:비밀번호 만료 일자 /만료일자) is [" + G_EXPR_DATE + "]");
	Trace("G_LANG:사용 언어/사용자 LANG(ko-한국, zh-중국, en-영문) ) is [" + G_LANG + "]");
	Trace("G_LGORT:저장위치/업체-저장위치) is [" + G_LGORT + "]");
	Trace("G_LOGIN_TIME:로그인 시간/현재시간(?)) is [" + G_LOGIN_TIME + "]");
	Trace("G_LOGOUT:로그아웃 구분(1:정상, 0:오류)/) is [" + G_LOGOUT + "]");
	Trace("G_MANDT:Mandt 설정 /SAP CLIENT) is [" + G_MANDT + "]");
	Trace("G_ORG_USER_INFO:원 사용자 ID/사용자 변경시 원 정보 저장) is [" + G_ORG_USER_INFO + "]");
	Trace("G_ORG_VEND_CODE:사원 변경시 사용/업체코드2(현대 ELV) 사용자인 경우)) is [" + G_ORG_VEND_CODE + "]");
	Trace("G_ORG_VEND_CODE_B:사원 변경시 사용/업체코드2(현대 ELV) 사용자인 경우)) is [" + G_ORG_VEND_CODE_B + "]");
	Trace("G_ORG_VEND_CODE_E:사원 변경시 사용/업체코드2(현대 ELV) 사용자인 경우)) is [" + G_ORG_VEND_CODE_E + "]");
	Trace("G_ORG_VEND_CODE_M:사원 변경시 사용/업체코드2(현대 ELV) 사용자인 경우)) is [" + G_ORG_VEND_CODE_M + "]");
	Trace("G_ORG_VEND_CODE_R:사원 변경시 사용/업체코드2(현대 ELV) 사용자인 경우)) is [" + G_ORG_VEND_CODE_R + "]");
	Trace("G_SAP_USER_ID:/) is [" + G_SAP_USER_ID + "]");
	Trace("G_SAP_USER_NAME:/) is [" + G_SAP_USER_NAME + "]");
	Trace("G_SAP_USER_PM_B:PM(영업)/PM(영업)) is [" + G_SAP_USER_PM_B + "]");
	Trace("G_SAP_USER_PM_R:PM(보수)/) is [" + G_SAP_USER_PM_R + "]");
	Trace("G_SAP_USER_PMNM_B:PM명(영업)/PM명(영업)) is [" + G_SAP_USER_PMNM_B + "]");
	Trace("G_SAP_USER_PMNM_R:PM명(보수)/) is [" + G_SAP_USER_PMNM_R + "]");
	Trace("G_SAP_USER_VBCD:SAP 부서코드/SAP용 부서코드) is [" + G_SAP_USER_VBCD + "]");
	Trace("G_SAP_USER_VBNM:SAP 부서명/SAP용 부서명) is [" + G_SAP_USER_VBNM + "]");
	Trace("G_SAP_USER_VGCD:SAP 팀코드/SAP용 팀코드) is [" + G_SAP_USER_VGCD + "]");
	Trace("G_SAP_USER_VGNM:SAP 팀명  /SAP용 팀명) is [" + G_SAP_USER_VGNM + "]");
	Trace("G_SERVER_URL:서버경로/) is [" + G_SERVER_URL + "]");
	Trace("G_SESSION_ID:세션ID /세션ID) is [" + G_SESSION_ID + "]");
	Trace("G_SYSTEM:시스템 구분 /시스템 구분(D-개발, Q-품질, P-운영)) is [" + G_SYSTEM + "]");
	Trace("G_USERMBPN:H.P/) is [" + G_USERMBPN + "]");
	Trace("G_USERTELE:전화번호/) is [" + G_USERTELE + "]");
	Trace("G_USER_GROUP:권한/사용자 그룹) is [" + G_USER_GROUP + "]");
	Trace("G_USER_GROUP_B:영업권한 /사용자 그룹) is [" + G_USER_GROUP_B + "]");
	Trace("G_USER_GROUP_E:설치권한/사용자 그룹) is [" + G_USER_GROUP_E + "]");
	Trace("G_USER_GROUP_M:자재권한/사용자 그룹) is [" + G_USER_GROUP_M + "]");
	Trace("G_USER_GROUP_R:보수권한/사용자 그룹) is [" + G_USER_GROUP_R + "]");
	Trace("G_USER_ID:사용자 id/사용자 ID) is [" + G_USER_ID + "]");
	Trace("G_USER_NAME:사용자명/사용자 명) is [" + G_USER_NAME + "]");
	Trace("G_VEND_CODE:업체코드/업체코드) is [" + G_VEND_CODE + "]");
	Trace("G_VEND_CODE_B:업체코드(영업)/업체코드(영업)) is [" + G_VEND_CODE_B + "]");
	Trace("G_VEND_CODE_E:업체코드(설치)/업체코드(설치)) is [" + G_VEND_CODE_E + "]");
	Trace("G_VEND_CODE_M:업체코드(자재)/업체코드(자재)) is [" + G_VEND_CODE_M + "]");
	Trace("G_VEND_CODE_R:업체코드(보수)/업체코드(보수)) is [" + G_VEND_CODE_R + "]");
	Trace("G_VEND_NAME:업체명/업체명) is [" + G_VEND_NAME + "]");
	Trace("G_VEND_WGBN:업체구분/업체구분(A:설치협력사, B:보수협력사, C:국내대리점, D:자재협력사, E:해외대리점)) is [" + G_VEND_WGBN + "]");
	Trace("G_WEBGUI_URL:WEB-GUI URL 정보/WEB GUI 정보) is [" + G_WEBGUI_URL + "]");
	Trace("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-");
}

/********************************************************************************
* 기      능   : 디버그 문자열을 trace로 출력한다.
********************************************************************************/
function DEBUG(srcFunc, outStr)
{

//alert("debug");
	var outputString = "";

    outputString = "DEBUG " + 
				  this.title + " " + 
				  substr(getDate(), 8, 2) + ":" + 
				  substr(getDate(), 10, 2) + ":" + 
				  substr(getDate(), 12, 2) + ">";
	
	if(DEBUG_FLAG)
	{
		if(outStr.length == 0)
		{	
			outputString += srcFunc;
		}
		else
		{
			outputString += srcFunc + "() - " + outStr;
		}
	
		trace(outputString);
	}
}
/********************************************************************************
* 기      능   : 원가관련 항목을 감춘다.
********************************************************************************/
function ufn_hideUnitCostComponents()
{
	var comps = Components;

	for(iCnt=0;iCnt < comps.count();iCnt++)
	{
		//DEBUG("ufn_hideUnitCostComponents", comps[iCnt].ID + ":" + indexOf(comps[iCnt].ID, "st_adm"));
		if(indexOf(comps[iCnt].ID, "st_adm") >= 0 || indexOf(comps[iCnt].ID, "ed_h") >= 0 || indexOf(comps[iCnt].ID, "ed_tc") >= 0)
		{
			comps[iCnt].visible = false;
		}
	} 	
	
	//관리자 이외에는 원가 및 설정, 디버깅 관련 항목들을 볼 수 없도록 한다.
	for(var iCnt = 20; iCnt < grd_list.GetCellCount("BODY");iCnt++)
	{
		grd_list.SetCellProp("Head", iCnt, "Display", "null");						//20:자재원가
		grd_list.SetCellProp("Body", iCnt, "Display", "null");
		grd_list.ChangeColWidth("", iCnt, 0);
	}
}

/********************************************************************************
* 기      능   : enable 상태인 컴포넌트의 이름을 저장한다.
********************************************************************************/
function ufn_saveEnabledComponents()
{
	var comps = Components;														//form의 component collection 
	var compCnt = 0;															//갯수 카운트
	
	//컴포넌트 수 카운트
	for(iCnt=0;iCnt < comps.count();iCnt++)
	{
		if(comps[iCnt].GetType() == "MaskEdit" 
			|| comps[iCnt].GetType() == "Combo" 
			|| comps[iCnt].GetType() == "Checkbox"
			|| comps[iCnt].GetType() == "Edit" 
			|| comps[iCnt].GetType() == "Calendar" 
			|| comps[iCnt].GetType() == "TextArea"
			|| comps[iCnt].GetType() == "Radio")
		{
			if(comps[iCnt].Enable == true)
			{
				compCnt++;
			}
		}
	} 
	
	componentStore = Array(compCnt);
	
	compCnt = 0;
	
	//컴포넌트명 저장
	for(iCnt=0;iCnt < comps.count();iCnt++)
	{
		
		if(comps[iCnt].GetType() == "MaskEdit" 
				|| comps[iCnt].GetType() == "Combo" 
				|| comps[iCnt].GetType() == "Checkbox"
				|| comps[iCnt].GetType() == "Edit" 
				|| comps[iCnt].GetType() == "Calendar" 
				|| comps[iCnt].GetType() == "TextArea"
				|| comps[iCnt].GetType() == "Radio")
		{
			if(comps[iCnt].Enable == true)
			{
				//DEBUG("ufn_saveEnabledComponents", comps[iCnt].ID + ":" + comps[iCnt].GetType());
				componentStore[compCnt] = comps[iCnt].ID;
				compCnt++;
			}
		}
	} 
	return;
}

/********************************************************************************
* 기      능   : 초기에 Enable상태였던 컴포넌트들을 Restore한다.
********************************************************************************/
function ufn_restoreEnabledComponents()
{
	for(var iCnt = 0;iCnt < length(componentStore);iCnt++)						//컴포넌트 Enable상태 Restore	
	{
		object(componentStore[iCnt]).Enable = true;
	}
	
	grd_list.Editable = true;													//그리드 Editable 속성 Restore

	return;
}

/********************************************************************************
* 기      능   : 모든 입력 및 클릭이 가능한 컴포넌트를 Disable한다.
********************************************************************************/
function ufn_disableAllInput()
{
	ufn_enableGroup("MaskEdit", false);
	ufn_enableGroup("Combo", false);
	ufn_enableGroup("Checkbox", false);
	ufn_enableGroup("Edit", false);
	ufn_enableGroup("Calendar", false);
	ufn_enableGroup("TextArea", false);
	ufn_enableGroup("Radio", false);
	ufn_enableCommBtnGroup(false);
	ufn_setGroupVisiblity("Button", false);
	grd_list.Editable = false;	
}

/********************************************************************************
* 기      능   : 공통버튼을 모두 Enable/Disable한다.
********************************************************************************/
function ufn_enableCommBtnGroup(setFlag)
{
	comps = div_btn.Components["Button"];
	
	if(!IsValidObject(comps)) return;
	
	for(iCnt=0;iCnt < comps.count();iCnt++)
	{			
		comps[iCnt].Enable = setFlag;
	}
	return;
}

/********************************************************************************
* 기      능   : 공통버튼을 Enable/Disable 한다.
********************************************************************************/
function ufn_enableCommBtn(btnStr, setFlag)
{
	object("div_btn.btn_" + btnStr).Enable = setFlag;
	return;
}

/********************************************************************************
* 기      능   : 특정 컴포넌트 그룹을 Enable/Disable 한다.
********************************************************************************/
function ufn_enableGroup(componentGroup, setFlag)
{
	var comps;
	if(componentGroup == "")
	{
		comps = Components;
	}
	else
	{
		comps = Components[componentGroup];	
	}
	
	if(!IsValidObject(comps)) return;

	for(iCnt=0;iCnt < comps.count();iCnt++)
	{
		comps[iCnt].Enable = setFlag;
	} 
	
	return;
}
/********************************************************************************
* 기      능   : 특정 컴포넌트를 Enable/Disable 한다.
********************************************************************************/
function ufn_enableComponent(componentName, setFlag)
{
	if(IsValidObject(object(componentName)))
	{
		object(componentName).Enable = setFlag;	
	}
	else
	{	
		object("div_btn.btn_" + componentName).Enable = setFlag;
	}
	
	return;
}

/********************************************************************************
* 기      능   : 특정 컴포넌트 그룹을 show/hide 한다.
********************************************************************************/
function ufn_setGroupVisiblity(componentGroup, setFlag)
{
	var comps;
	if(componentGroup == "")
	{
		comps = Components;
	}
	else
	{
		comps = Components[componentGroup];	
	}
	
	if(!IsValidObject(comps)) return;

	for(iCnt=0;iCnt < comps.count();iCnt++)
	{
		comps[iCnt].Visible = setFlag;
	}

	return;
}


/********************************************************************************
* 기      능   : Object를 보이게 하거나 감춘다.
********************************************************************************/
function ufn_setObjectVisibility(btnStr, hideFlag)
{
	if(hideFlag == "hide" || hideFlag == false)
	{
		if(IsValidObject(object(btnStr)))
		{
			object(btnStr).visible = false;	
		}
		else
		{	
			object("div_btn.btn_" + btnStr).enable = false;
		}
	}
	else
	{
		if(IsValidObject(object(btnStr)))
		{
			object(btnStr).visible = true;	
		}
		else
		{	
			object("div_btn.btn_" + btnStr).enable = true;
		}
	}
}

/********************************************************************************
* 기      능   : 공통버튼을 보이게 하거나 감춘다.
********************************************************************************/
function ufn_setCommBtnVisibility(btnStr, hideFlag)
{
	if(hideFlag == "hide" || hideFlag == false)
	{
		object("div_btn.btn_" + btnStr).visible = false;
	}
	else
	{
		object("div_btn.btn_" + btnStr).visible = true;
	}
}

/********************************************************************************
* 기      능   : 이용권한을 설정한다.
********************************************************************************/
function ufn_setPermissions()
{
	//return;
	
	var userGroup = gfn_getUserGroup();											//사용자 권한그룹
	var appStage = -1;															//전자결재 단계
	var docNo1, docNo2, docNo3, docNo4, docNo5;									//전자결재 문서번호(견적(1), 수주(2), 재청구(3), 수주변경(4), 수주취소(5))	
	var docNo1Stat, docNo2Stat, docNo3Stat, docNo4Stat, docNo5Stat;				//전자결재 문서상태(견적(1), 수주(2), 재청구(3), 수주변경(4), 수주취소(5))	
	var qtUserID, logUserID;													//견적 사용자 ID, 로그인 사용자 ID;
	var workStage;																//현재 결재 단계
	var currentUser, currentFlag, directFlag;									//현재 결재자, 사용자=차순위결재자일경우, 사용자 직영플래그
	
	qtUserID = ds_out_master.GetColumn(0, "CRNAM");								//견적 작성 사용자
	logUserID = G_USER_ID;														//로그인 사용자

	docNo1 = ds_out_master.GetColumn(0, "DOC1");								//견적결재문서번호
	docNo2 = ds_out_master.GetColumn(0, "DOC2");								//수주결재문서번호
	docNo3 = ds_out_master.GetColumn(0, "DOC3");								//재청구결재문서번호
	docNo4 = ds_out_master.GetColumn(0, "DOC4");								//수주변경결재문서번호
	docNo5 = ds_out_master.GetColumn(0, "DOC5");								//수주취소결재문서번호

	docNo1Stat = ds_out_master.GetColumn(0, "DOC1STAT");						//견적결재상태
	docNo2Stat = ds_out_master.GetColumn(0, "DOC2STAT");						//수주결재상태
	docNo3Stat = ds_out_master.GetColumn(0, "DOC3STAT");						//재청구결재상태
	docNo4Stat = ds_out_master.GetColumn(0, "DOC4STAT");						//수주변경결재상태
	docNo5Stat = ds_out_master.GetColumn(0, "DOC5STAT");						//수주취소결재상태
	
	workStage = ds_out_master.GetColumn(0, "CHGBN");							//견적 현재 결재 상태
	
	//currentUser = substr(ds_out_master.GetColumn(0, "DOC3DEC"), 1);				//차순위(현재) 결재자를 설정한다. 맨 앞의 'H' 제거
	if(substr(ds_out_master.GetColumn(0, "DOC3DEC"), 0, 1) == "H")
		currentUser = substr(ds_out_master.GetColumn(0, "DOC3DEC"), 1);			//차순위(현재) 결재자를 설정한다. 맨 앞의 'H' 제거
	else
		currentUser = ds_out_master.GetColumn(0, "DOC3DEC");		
	if(substr(ds_out_master.GetColumn(0, "REQNR"),0,1) == 3) {
		ds_mmt001.SetColumn(0, "REQNR", ds_out_master.GetColumn(0,"REQNR2"));
	}
	else{	
		ds_mmt001.SetColumn(0, "REQNR", ds_out_master.GetColumn(0,"REQNR"));
	}
	DEBUG("ufn_setPermissions", "현재사용자:" + logUserID + "/견적사용자:" + qtUserID+"/차순위결재자:" + currentUser);

	currentFlag = false;
	if(logUserID == currentUser)												//로그인한 사용자가 차순위(현재)결재자인지 확인한다.
	{
		currentFlag = true;
	}
	
	if(logUserID.length == 7)													//해당 인원의 직영/협력사 구분을 가져온다.
		ds_cond.SetColumn(0, "USERID", "H" + logUserID);						//7자리일경우 H를 붙인다
	else
		ds_cond.SetColumn(0, "USERID", logUserID);								//8자리일경우 pass
	
	tit_clearActionInfo();														
	tit_addSingleActionInfo("cs01:CS0101008B_S9");								
	tit_callService("", "", "ds_cond=ds_cond", "ds_jhgbn=ds_jhgbn", "", "", true, false,true);

	directFlag = false;
	if(ds_jhgbn.GetColumn(0, "JHGBN") == "1")									//직영구분
	{
		directFlag = true;
	}
	
	DEBUG("ufn_setPermissions", "selfFlag:" + selfFlag + "/currentFlag:" + currentFlag + "/docNo4:" + docNo4 + "/workStage:" + workStage + "/directFlag:"+directFlag);

	ufn_restoreEnabledComponents();												//초기에 Enable 상태였던 모든 컴포넌트들을 Restore한다.
	
	ufn_enableCommBtnGroup(false);												//공통버튼을 모두 Disable 한다
	
	
//alert("docNo3.length : " + docNo3.length);	
//alert("workStage : " + workStage);
	/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 재청구작성/저장단계 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/
	if(docNo3.length <= 0 || (workStage != "3"))								//신규재청구건이거나, 수주변경/취소에서 왔을 경우
	{
//alert("A");	
		ufn_setGroupVisiblity("Button", false);									//버튼을 감춘다
				
		if(selfFlag && workStage == "3")										//저장된 자신의 견적이면
		{
			ufn_enableCommBtn("delete", true);									//삭제 enable
			ufn_enableCommBtn("save", true);									//저장 enable
			ufn_enableCommBtn("reset", true);									//리셋 enable
			ufn_setObjectVisibility("bt_addMaterial", true);					//자재추가 enable
			ufn_setObjectVisibility("bt_removeMaterial", true);					//자재삭제 enable
			ufn_setObjectVisibility("bt_hogiInput", true);						//호기별입력 enable
		}
		else if(selfFlag)														//저장되지 않은 자신의 견적이면
		{
			ufn_enableCommBtn("save", true);									//저장 enable
			ufn_enableCommBtn("reset", true);									//리셋 enable
			ufn_setObjectVisibility("bt_addMaterial", true);					//자재추가 enable
			ufn_setObjectVisibility("bt_removeMaterial", true);					//자재삭제 enable
			ufn_setObjectVisibility("bt_hogiInput", true);						//호기별입력 enable
		}
		else																	//타인의 견적이면
		{
			ufn_disableAllInput();												//모든 입력을 disable한다. 버튼은 감춘다. 
		}	
		
		if((toNumber(userGroup) >= 10 || directFlag) && workStage=="3")			//권한10직영인원, 보수PM이상의 권한이면, 저장된 경우 기안 버튼 enable
		{	
//alert( "4 : " + div_btn.btn_draft.Enable	);			
			ufn_enableCommBtn("draft", true);
		}
		
		ufn_enableCommBtn("close", true);										//닫기 enable
	}
	
	/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 재청구 승인단계 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/
	else if(docNo3.length > 0 && workStage=="3")								//재청구 결재중
	{
//alert("B");	
		switch(docNo3Stat)
		{
			case "1":															//결재중(결재자가 자기자신일 경우에만 결재 버튼을 enable 시켜준다)
				ufn_disableAllInput();											//모든 입력을 disable한다. 버튼은 감춘다. 
				switch(userGroup)
				{
					case "10":													//보수협력사	- 닫기
						if(currentFlag && directFlag) 
							ufn_enableCommBtn("decide", true);					//권한10직영인원 결재 enable
						if(currentFlag && directFlag) 
							ufn_enableCommBtn("sendback", true);				//권한10직영인원 반송 enable
						break;
					case "20":													//보수PM		- 결재, 반송, 닫기
					case "30":													//지방사무소	- 결재, 반송, 닫기
					case "40": 													//담당자		- 결재, 반송, 닫기
						if(currentFlag) ufn_enableCommBtn("decide", true);		//결재 enable
						if(currentFlag) ufn_enableCommBtn("sendback", true);	//반송 enable
						break;
					default:													//예외(?)
						break;
				}			
				break;
			case "2":															//결재반려																				
				if(selfFlag)													//자신의 건이면 재청구처리 가능토록 처리 2016.04.01 yar
				{
					ufn_enableCommBtn("save", true);							//저장 enable
					ufn_enableCommBtn("close", true);
					break;
				}
			case "3":															//기안부서결재완료 (존재하지 않음. 기안부서 전결로 결재완료로 처리됨)	
				switch(userGroup)											    
				{
					case "10":													//보수협력사 	
						break;
					case "20":													//보수PM 		
						break;
					case "30":													//지방사무소 	
						break;
					case "40": 													//담당자 	
//alert( "5 : " + div_btn.btn_draft.Enable	);						
							ufn_enableCommBtn("draft", true);					//기안 enable
						break;
					default:													//예외(?)
						break;
				}	
				break;
			case "4":															//수신부서결재중(결재자가 자기자신일 경우에만 결재 버튼을 enable 시켜준다)
				switch(userGroup)
				{
					case "10":													//보수협력사	- 닫기
						if(currentFlag && directFlag) 
							ufn_enableCommBtn("decide", true);					//권한10직영인원 결재 enable
						if(currentFlag && directFlag) 
							ufn_enableCommBtn("sendback", true);				//권한10직영인원 반송 enable
						break;
					case "20":													//보수PM		- 결재, 반송, 닫기
					case "30":													//지방사무소	- 결재, 반송, 닫기
					case "40": 													//담당자		- 결재, 반송, 닫기
						if(currentFlag) ufn_enableCommBtn("decide", true);		//결재 enable
						if(currentFlag) ufn_enableCommBtn("sendback", true);	//반송 enable
						break;
					default:													//예외(?)
						break;
				}			
				break;
			case "5":
				if(selfFlag)													//자신의 건이면 재청구처리 가능토록 처리 2016.04.01 yar
				{
					ufn_enableCommBtn("save", true);							//저장 enable
					ufn_enableCommBtn("close", true);
					break;
				}
			case "6":															//수신부서결재완료(fn_afterOfferInfoQuery에서 변환하지 않은 건 - 단순조회)
			default:															//4, 5는 존재하지 않음(기안부서전결처리)
				ufn_disableAllInput();											//모든 입력을 disable한다. 버튼은 감춘다. 
				break;
		}
		ufn_enableCommBtn("close", true);										//닫기 enable
	}

	/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 예외상황 발생시  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*/
	else
	{
//alert("C");	
		ufn_disableAllInput();													//모든 입력을 disable한다. 버튼은 감춘다. 
		ufn_enableCommBtn("close", true);										//닫기 enable		
	}
}

/********************************************************************************
* 기      능   : 자재추가시 기존자재(CGBN=일반:0 or 기존재청구:2) 및 추가자재(CGBN=신규재청구:1) 변경여부/배경색상/아이콘 변경
********************************************************************************/
function ufn_changeCellProp()
{
	//Editing 여부
	grd_list.SetCellProp("BODY", 0, "edit", "expr:decode(CGBN,1,'checkbox','none')");
	grd_list.SetCellProp("BODY", 1, "edit", "expr:decode(CGBN,1,'combo','none')");
	grd_list.SetCellProp("BODY", 2, "edit", "expr:decode(CGBN,1,'combo','none')");
	grd_list.SetCellProp("BODY", 5, "edit", "expr:decode(CGBN,1,'normal','none')");
	grd_list.SetCellProp("BODY", 6, "edit", "expr:decode(CGBN,1,'combo','none')");
	grd_list.SetCellProp("BODY", 7, "edit", "expr:decode(CGBN,1,'number','none')");
	grd_list.SetCellProp("BODY", 13, "edit", "expr:decode(CGBN,1,'number','none')");
	grd_list.SetCellProp("BODY", 16, "edit", "expr:decode(CGBN,1,'normal','none')");
	grd_list.SetCellProp("BODY", 17, "edit", "expr:decode(CGBN,1,'checkbox','none')");
	grd_list.SetCellProp("BODY", 18, "edit", "expr:decode(CGBN,1,'checkbox','none')");
	
	//배경색상
	grd_list.SetCellProp("BODY", 1, "bkcolor", "expr:decode(CGBN,1,'user27','white')");
	grd_list.SetCellProp("BODY", 2, "bkcolor", "expr:decode(CGBN,1,'user27','white')");
	grd_list.SetCellProp("BODY", 4, "bkcolor", "expr:decode(CGBN,1,'user27','white')");
	grd_list.SetCellProp("BODY", 5, "bkcolor", "expr:decode(CGBN,1,'user27','white')");
	grd_list.SetCellProp("BODY", 6, "bkcolor", "expr:decode(CGBN,1,'user27','white')");
	grd_list.SetCellProp("BODY", 7, "bkcolor", "expr:decode(CGBN,1,'user27','white')");
	grd_list.SetCellProp("BODY", 13, "bkcolor", "expr:decode(CGBN,1,'user27','white')");
	grd_list.SetCellProp("BODY", 16, "bkcolor", "expr:decode(CGBN,1,'user27','white')");
	grd_list.SetCellProp("BODY", 17, "bkcolor", "expr:decode(CGBN,1,'user27','white')");
	grd_list.SetCellProp("BODY", 18, "bkcolor", "expr:decode(CGBN,1,'user27','white')");
	
	//이미지
	grd_list.SetCellProp("BODY", 1, "bkImageID", "expr:decode(CGBN,1,'icon_grid_edit','')");
	grd_list.SetCellProp("BODY", 2, "bkImageID", "expr:decode(CGBN,1,'icon_grid_edit','')");
	grd_list.SetCellProp("BODY", 4, "ExpandShow", "expr:decode(CGBN,1,'true','false')");
	grd_list.SetCellProp("BODY", 5, "bkImageID", "expr:decode(CGBN,1,'icon_grid_edit','')");
	grd_list.SetCellProp("BODY", 6, "bkImageID", "expr:decode(CGBN,1,'icon_grid_edit','')");
	grd_list.SetCellProp("BODY", 7, "bkImageID", "expr:decode(CGBN,1,'icon_grid_edit','')");
	grd_list.SetCellProp("BODY", 13, "bkImageID", "expr:decode(CGBN,1,'icon_grid_edit','')");
	grd_list.SetCellProp("BODY", 16, "bkImageID", "expr:decode(CGBN,1,'icon_grid_edit','')");
	grd_list.SetCellProp("BODY", 17, "bkImageID", "expr:decode(CGBN,1,'icon_grid_edit','')");
	grd_list.SetCellProp("BODY", 18, "bkImageID", "expr:decode(CGBN,1,'icon_grid_edit','')");
}

/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function ufn_checkFailSite()
{
	//이전 청구사항에서 실패현장 청구 여부 확인 및 세팅
	var isFailSite = false;
	for(iCnt = 0;iCnt < ds_list.count;iCnt++)
	{
		if(ds_list.Getcolumn(iCnt, "REQKIND") == "G")							//청구종류가 실패현장청구 이면
		{
			isFailSite = true;
		}
	}

	if(isFailSite)																//실패현장청구일 경우 항목을 세팅한다.
	{
		for(var iCnt = 0; iCnt < ds_list.count; iCnt++)
		{
			if(ds_list.GetColumn(iCnt, "CGBN") == "1")
			{
				ds_list.SetColumn(iCnt, "REQKIND_CHK", 0);						//업체재고소진청구 Clear
				ds_list.SetColumn(iCnt, "REQKIND", "G");						//청구종류 = 실패현장청구(G)
			}
		}
		grd_list.SetCellProp("BODY", 18, "edit", "none");						//업체재고소진 청구가 불가능하게 한다.
		grd_list.SetCellProp("BODY", 18, "bkcolor", "white");
		grd_list.SetCellProp("BODY", 18, "bkImageID", "");
	}	
}


//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if ( nCell == 0 ) 
	{
		gfn_selectAllGrid(obj,nCell,"CHK",false); 								// 그리드 표시할 컬럼 선택 
		
		for(var iCnt=0;iCnt < ds_list.rowcount;iCnt++)							//재청구는 신규재청구자재만 선택되도록
		{
			DEBUG("grd_list_OnHeadClick", "CGBN is " + ds_list.GetColumn(iCnt, "CGBN")) ;
			if(ds_list.GetColumn(iCnt, "CGBN") != "1")
			{
				ds_list.SetColumn(iCnt, "CHK", "0");
			}
		}				
	} 
	else 
	{
		gfn_sortGrid(obj,nCell);												// 그리드 정렬 처리 
	}
}

/********************************************************************************
* 기      능   : 자재추가 버튼 클릭
********************************************************************************/
function bt_addMaterial_OnClick(obj)
{
	if(ed_pjt.value.length <= 0)
	{
		gfn_showAlert("CW10025", "프로젝트를 선택해주세요.");
		return;
	}

/*
	if(cb_reqkind.value = "")
	{
		gfn_showAlert("CW10025", "청구구분을 선택해주세요.");
		return;
	}
*/	
	ds_list.addRow();
	ds_list.SetColumn(ds_list.count - 1, "FLAG", "I");							//INSERT FLAG
	ds_list.SetColumn(ds_list.count - 1, "CGBN", "1");							//변경구분
	ds_list.SetColumn(ds_list.count - 1, "CGBNNM", "재청구신규");				//변경구분명

	grd_list.Redraw = false;
	ufn_changeCellProp();														//셀상태 변경
	ufn_checkFailSite();														//실패현장여부 적용
	grd_list.Redraw = true;
}

/********************************************************************************
* 기      능   : 자재삭제 버튼 클릭
********************************************************************************/
function bt_removeMaterial_OnClick(obj)
{
	if(ds_list.count <= 0)
	{
		return;
	}

	if(ed_pjt.value.length <= 0)
	{
		gfn_showAlert("CW10025", "프로젝트를 선택해주세요.");
		return;
	}

	DEBUG("bt_removeMaterial_OnClick", ds_list.savexml());
	DEBUG("bt_removeMaterial_OnClick", ds_cond.SaveXmL());
	
	ds_cond_del.clearData();
	
	for(iCnt=ds_list.rowcount - 1;iCnt >= 0;iCnt--)
	{
		if(ds_list.getColumn(iCnt, "CHK") == 1)
		{
			//저장된 행일 경우 해당행을 삭제하기 위한 IN 조건을 구성한다.
			if(ds_list.GetColumn(iCnt, "FLAG") != "I" && length(ds_cond.GetColumn(0, "QTNUM")) > 0)
			{
				ds_cond_del.AddRow();
				ds_cond_del.SetColumn(ds_cond_del.rowcount - 1, "QTNUM", ds_cond.GetColumn(0, "QTNUM"));
				ds_cond_del.SetColumn(ds_cond_del.rowcount - 1, "SEQ", ds_cond.GetColumn(0, "SEQ"));
				ds_cond_del.SetColumn(ds_cond_del.rowcount - 1, "SEQNO", ds_list.GetColumn(iCnt, "SEQNO"));
			}
			
			ds_list.deleteRow(iCnt);
		}
	}

	DEBUG("bt_removeMaterial_OnClick", ds_cond_del.savexml());
	
	//청구구분에 따른 계산값을 다시 계산한다.
	ufn_calcCostValues("bt_removeMaterial_OnClick");
	
	//DB에 저장된 행을 삭제한다.
	if(ds_cond_del.rowcount > 0)
	{
		tit_clearActionInfo();
		tit_addMultiActionInfo("cs01:CS0101008B_D2");
		tit_callService(
		"",
		"",
		"ds_cond=ds_cond_del",
		"",
		"",
		"fn_afterDeleteMaterial"
		);
	}		
}

/********************************************************************************
* 기      능   : 자재 삭제 콜백
********************************************************************************/
function fn_afterDeleteMaterial(errCode, errMsg) 
{
	if ( errCode!= 0 ) 
	{
		gfn_showMsg("CE00001");
	} 
	else 
	{
		ds_cond_del.clearData();
		gfn_showMsg("CI00003");
	}
}

/********************************************************************************
* 기      능   : 자재 리스트 Expand Up 시
********************************************************************************/
function grd_list_OnExpandUp(obj,nRow,nCell,strVal,nPivotIndex)
{	
	if(ed_pjt.value.length <= 0)
	{
		gfn_showAlert("CW10025", "프로젝트를 선택해주세요.");
		return;
	}

	switch(nCell)
	{
		case 1: //호기번호
			break;
		case 4:	//자재검색팝업
			if(ds_list.GetColumn(nRow, "CGBN") == "")							//재청구에서 추가한 자재가 아니면 변경불가
			{
				return;
			}		
			
			if(ds_list.GetColumn(nRow, "HNO").length == 0)
			{
				gfn_showAlert("CW10025", "호기(WBS) 또는 호기명을 선택해주세요.");
				return;
			}			
			
			arg = "fa_hty=" + quote(ds_list.GetColumn(nRow, "HTY")) + " fa_hogin=" + quote(ds_list.GetColumn(nRow, "HNO"));
			DEBUG("bt_removeMaterial_OnClick", "Argument of popup CS9614001A is " + arg);
			var mat = gfn_openPopup("CS9614001A", true, arg); 			
			
			if(mat == "NS-100") 												//NS-100은 견적에는 추가불가하고 sap전송시에만 사용됨
			{
				gfn_showAlert("CW10025", "해당 자재는 견적추가 금지 자재입니다.");
				return;
			}
			
			if(mat.length <= 1)
			{
				return;
			}

			//현재는 mat로 바로 넘어오지만, 새로운 자재검색 팝업에서는 자재코드(mat)와 청구유형(내작(BOM), 보수자재)으로 구분하여 넘겨야 함
			
			ds_list.SetColumn(nRow, "MATNR",mat);
			
			ds_ma_cond.SetColumn(0, "MATNR", mat);
			ds_ma_cond.SetColumn(0, "NROW", nRow);
			ds_ma_cond.SetColumn(0, "SPART", ds_pjt_det.GetColumn(0, "SPART"));
			
			if (ds_list.GetColumn(nRow,"MATNR") == "0")
			{
				ds_list.SetColumn(nRow,"MATNR","");
			}
			else
			{
				tit_clearActionInfo();
				tit_addSearchActionInfo("cs01:CS0101008B_S2");
				tit_callService(
					""
					,""
					, "ds_ma_cond=ds_ma_cond"
					, "ds_ma_list=ds_ma_list"
					, ""
					, "ufn_setMatnr"
					, false
					, true);
			}
			break;
		default:
			break;
	}
}

/********************************************************************************
* 기      능   : 자재리스트의 컬럼 값 변경 시
********************************************************************************/
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	switch(strColumnID)
	{
		case "HNO":																//호기번호컬럼의 값이 변경되면, 호기명컬럼도 세팅해준다.
			ds_list.FireEvent = false;
			nHRow = ds_hna.SearchRow("WBS=\"" +  ds_list.GetColumn(nRow, "HNO") + "\"");
			ds_list.SetColumn(nRow, "HNA", ds_hna.GetColumn(nHRow, "HNA"));
			ds_list.FireEvent = true;
			break;
		case "HNA":																//호기명컬럼의 값이 변경되면, 호기번호컬럼도 세팅해준다.
			ds_list.FireEvent = false;
			nHRow = ds_hna.SearchRow("HNA=\"" +  ds_list.GetColumn(nRow, "HNA") + "\"");
			ds_list.SetColumn(nRow, "HNO", ds_hna.GetColumn(nHRow, "WBS"));
			ds_list.FireEvent = true;
			break;
		case "MATNR":
			DEBUG("ds_list_OnColumnChanged", "MATNR is " + ds_list.Getcolumn(nRow, "MATNR"));
			var matType = ds_list.GetColumn(nRow, "RGBN");
			ds_list.fireevent = false;
			
			if(matType == "2")
			{
				ds_list.SetColumn(nRow, "MATNR", "");
				ds_list.fireevent = true;
				return;
			}
			
			if(ds_list.GetColumn(nRow, "HNO").length == 0)
			{
				gfn_showAlert("CW10025", "호기(WBS) 또는 호기명을 선택해주세요.");
				ds_list.SetColumn(nRow, "MATNR", "");
				ds_list.fireevent = true;
				return;
			}
			
			if(length(ds_list.GetColumn(nRow, "MATNR")) > 0)					//입력된 자재번호로 Query
			{
				ds_ma_cond.SetColumn(0, "MATNR", ToUpper(ds_list.Getcolumn(nRow, "MATNR")));
				ds_ma_cond.SetColumn(0, "NROW", nRow);
				ds_ma_cond.SetColumn(0, "SPART", ds_pjt_det.GetColumn(0, "SPART"));
			
				tit_clearActionInfo();
				tit_addSearchActionInfo("cs01:CS0101008B_S2");
				tit_callService("","", "ds_ma_cond=ds_ma_cond", "ds_ma_list=ds_ma_list", "", "ufn_setMatnr", false, true);
			}
			ds_list.fireevent = true;
			break;			
		case "BWTAR":															//자재유형
			//논리적 오류로 평가유형 선택 후 다른 ROW로 이동 시 해당 ROW의 평가유형이 바뀌는 문제를 해결하기 위해 for문 추가
			for(var iCnt=0;iCnt < ds_list.rowcount;iCnt++)
			{
				ds_list.SetColumn(iCnt, "BWTAR", substr(ds_list.GetColumn(iCnt, "MTART"), 0, 1) + substr(ds_list.GetColumn(iCnt, "BWTAR"), 1));
			}

			if(substr(ds_list.GetColumn(nRow, "BWTAR"), 1, 1) == "A")			//정품일 경우
			{
				ds_list.SetColumn(nRow, "NETPR", ds_list.GetColumn(nRow, "NETPR_ORG"));
			}
			else if(substr(ds_list.GetColumn(nRow, "BWTAR"), 1, 1) == "B")		//수리품일경우
			{
				ds_list.SetColumn(nRow, "NETPR", round(toNumber(ds_list.GetColumn(nRow, "NETPR_ORG")) * 0.4, 0));
			}
			else																//반납품일경우
			{
				ds_list.SetColumn(nRow, "NETPR", "0");
			}								
		case "MENGE":															//수량
			if(substr(ds_list.GetColumn(nRow, "MENGE"), 0, 1) == "-")			//마이너스 입력 불가
			{
				gfn_showAlert("CW10025", "특수문자는 사용이 불가합니다.");
				ds_list.SetColumn(nRow, "MENGE", "0");
				return;
			}
		case "OFRHOUR":															//견적공수
			ds_list.FireEvent = false;
			ufn_calcListValues(nRow);											//각종 계산식을 업데이트 한다.
			ds_list.FireEvent = true;
			ufn_calcCostValues("ds_list_OnColumnChanged");
			break;
		case "ZGUBN_CHK": 														//직영구분체크
			if(ds_list.GetColumn(nRow, "ZGUBN_CHK") == "1")
			{
				ds_list.SetColumn(nRow, "ZGUBN", "Y");
			}
			else
			{
				ds_list.SetColumn(nRow, "ZGUBN", "");
			}
			DEBUG("ds_list_OnColumnChanged", "ZGUBN_CHK:" + ds_list.GetColumn(nRow, "ZGUBN_CHK") + "/ZGUBN:" + ds_list.GetColumn(nRow, "ZGUBN"));
			break;
		case "REQKIND_CHK":														//청구구분체크
			if(ds_list.GetColumn(nRow, "REQKIND_CHK") == "1")
			{
				ds_list.SetColumn(nRow, "REQKIND", "6");						//업체재고소진청구
			}
			else
			{
				ds_list.SetColumn(nRow, "REQKIND", "8");						//재청구
			}
			DEBUG("ds_list_OnColumnChanged", "REQKIND_CHK:" + ds_list.GetColumn(nRow, "REQKIND_CHK") + "/REQKIND:" + ds_list.GetColumn(nRow, "REQKIND"));
			break;	
		default:
			break;
	}

}

/********************************************************************************
* 기      능   : 자재리스트 클릭 시 해당 행의 평가유형별 필터링 정보를 세팅한다.
********************************************************************************/
function grd_list_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	switch(nCell)
	{
		case 6:																	//평가유형
			//논리적 오류로 평가유형 선택 후 다른 ROW로 이동 시 해당 ROW의 평가유형이 바뀌는 문제를 해결하기 위해 for문 추가
			for(var iCnt=0;iCnt < ds_list.rowcount;iCnt++)
			{
				ds_list.SetColumn(iCnt, "BWTAR", substr(ds_list.GetColumn(iCnt, "MTART"), 0, 1) + substr(ds_list.GetColumn(iCnt, "BWTAR"), 1));
			}

			DEBUG("ds_list_CanRowPosChange", "OldRow:" + nRow + "/nRow:" + nRow + "/MTART:" + ds_list.GetColumn(nRow, "MTART"));
			
			//평가유형별 필터링정보를 설정한다.
			if(ds_list.GetColumn(nRow, "MTART") == "PALB")
			{
				if(ds_list.GetColumn(nRow, "BANNAB") == "0")					//반납대상자재가 아닐경우
				{
					ds_bwtar_cd.Filter(" CODE>=" +quote("PA") +"&&CODE<=" +quote("PR") + "&&CODE!="+quote("PB"));
				}
				else															//반납대상자재일경우
				{
					ds_bwtar_cd.Filter(" CODE>=" +quote("PA") +"&&CODE<=" +quote("PR"));
				}
			} 
			else if(ds_list.GetColumn(nRow, "MTART") == "HALB") 
			{
			
				if(ds_list.GetColumn(nRow, "BANNAB") == "0")					//반납대상자재가 아닐경우
				{
					ds_bwtar_cd.Filter(" CODE>=" +quote("HA") +"&&CODE<=" +quote("HR") + "&&CODE!="+quote("HB"));
				}
				else															//반납대상자재일경우
				{
					ds_bwtar_cd.Filter(" CODE>=" +quote("HA") +"&&CODE<=" +quote("HR"));
				}			
			} 
			else 
			{
				if(ds_list.GetColumn(nRow, "BANNAB") == "0")					//반납대상자재가 아닐경우
				{
					ds_bwtar_cd.Filter(" CODE>=" +quote("RA") +"&&CODE<=" +quote("RR") + "&&CODE!="+quote("RB"));
				}
				else															//반납대상자재일경우
				{
					ds_bwtar_cd.Filter(" CODE>=" +quote("RA") +"&&CODE<=" +quote("RR"));
				}	
			}		
			break;
		default:
			break;
	}
}

/********************************************************************************
* 기      능   : "청구등록"버튼 (테스트용)
********************************************************************************/
function btn_insert_req_OnClick(obj)
{
	ufn_saveRequest();
}

/********************************************************************************
* 기      능   : 호기별 청구를 위해 호기별 청구 화면을 Call한다.
********************************************************************************/
function bt_hogiInput_OnClick(obj)
{
	var inputArg;																//인수
	var retValue;																//리턴값
	var projectNo;																//통합프로젝트번호
	
	projectNo = ds_out_master.GetColumn(0, "UPN");
	if(projectNo.length <= 0)
	{
		gfn_showAlert("CW10025", "프로젝트를 선택하세요.");
		return;
	}
	
	inputArg = " fa_pjt="+ quote(projectNo) + 
			   " fa_kind="+ quote(cb_reqkind.value) + 
			   " fa_cst=" + quote(ds_out_master.getColumn(0, "CST")) + 
			   " fa_origin='008C'";
			   
	DEBUG("bt_hogiInput_OnClick", "inputArg is " + inputArg);
	
	var retValue = gfn_openPopup("CS0101008E",true, inputArg);
}
/********************************************************************************
* 기      능   : 출고요청일 체크로직
********************************************************************************/
function check_Rdate(obj)
{
	var tmp_webaz = 0;
	var max_webaz = 0;
	var cal_date_fr, cal_date_to;
		
	for(var iCnt=0;iCnt<ds_list.rowcount;iCnt++)
	{
		if(toNumber(ds_list.GetColumn(iCnt, "MENGE") == 0) || toNumber(ds_list.GetOrgColumn(iCnt, "MENGE") == 0))
		{
			gfn_showAlert("CW10025", "수량이 0인 자재가 존재하여 저장이 불가능합니다.");
			return false;
		}

		tmp_webaz = ds_list.GetColumn(iCnt, "WEBAZ");
	
		if(parseInt(tmp_webaz) > parseInt(max_webaz)) {
			max_webaz = tmp_webaz;
		}
		if(tmp_webaz == "") tmp_webaz = 0;	
	}
	//max_webaz = parseInt(max_webaz) + 1;
	//cal_date_to = gfn_getWorkingDate(max_webaz, '2000', gfn_getCurrDate());
	
	// 출고요청일 = 마스터소요일수 + 4일 + 청구종류별 승인소요일
	// 서비스자재 김태한 요청. 2021.06.18 J.H Han	
	max_webaz = parseInt(max_webaz) + 4; // 마스터소요일수 + 4일. 서비스자재 김태한 요청. 2021.06.18 J.H Han
	
	var approveDate = getReqkindDlyDate(); // 청구종류별 승인소요일
	
	max_webaz = max_webaz + approveDate; // 출고요청일
	
	//cal_date_to = gfn_getAfterDate(gfn_getCurrDate(), parseInt(max_webaz));
	
	cal_date_to = gfn_getWorkingDate(max_webaz, '2000', gfn_getCurrDate()); // 2021.07.06 캘린더데이 => 워킹데이로 기준 변경. 서비스자재팀 김태한 요청. Han JH
	
	if(cal_shdat.Value < cal_date_to) {
		
		cal_shdat.Enable = true;
		gfn_showAlert("CW10025", "출고요청일은 자재의 LEADTIME을 계산하여 입력하시기 바랍니다. (" 
								+ cal_date_to + "이후)");
		return false;
	}
	return true;
}

/********************************************************************************
* 기      능   : 수신결제 완료 후 재청구완료에 대한 강제처리 로직(재청구신규의 경우 CGBN==2를 CGBN==1로 변경하여야 함.)
********************************************************************************/
function bt_imsiaccpt_OnClick(obj)
{
	//저장 SEQ와 QTNUM을 설정한다.
	ds_cond.ClearData();
	ds_cond.AddRow();
	ds_cond.SetColumn(0, "QTNUM", ds_out_master.GetColumn(0, "QTNUM"));
	ds_cond.SetColumn(0, "SEQ", ds_out_master.GetColumn(0, "SEQ"));
	
	//FLAG를 바꿔준다.
	ds_out_master.SetColumn(0, "FLAG", "U");
	
	gfn_copyDS(ds_list, ds_list_req, "CGBN==2");								//재청구 자재만 전송하기 위해 데이터셋을 복사한다.	
	
	//재청구 자재만 전송한다.
	for (var iCnt = 0;iCnt < ds_list_req.rowcount;iCnt++) 
	{
		if(ds_list_req.GetColumn(iCnt, "CGBN") == "2")
		{
			ds_list_req.SetColumn(iCnt, "FLAG", "I");							//재청구자재만 전송한다. 
			ds_list_req.SetColumn(iCnt, "QTNUM", "");							//재청구자재의 견적번호는 비운다(이중청구 가능성있음:이동진SA)
			ds_list_req.SetColumn(iCnt,"POSID2", 
									ds_out_master.GetColumn(0, "PS_PSPID")); 	//원WBS를 적어준다. (SAP전송 번호)
			if(ds_list_req.GetColumn(iCnt, "REQKIND") != "6" &&					//청구구분이 업체재고소진청구나 실패현장청구가 아닌 경우에는...
					ds_list_req.GetColumn(iCnt, "REQKIND") != "G")
			{	
				ds_list_req.SetColumn(iCnt, "REQKIND", "8");					//청구구분을 재청구로 세팅한다.
			}
		}
		else
		{
			ds_list_req.SetColumn(iCnt, "FLAG", "");	
		}
	}
	
	ds_out_master.SetColumn(0, "SHDAT", ds_out_master.GetColumn(0, "RDATE"));   //ZMMT031에 재청구 시 변경된 

	/* BOM자재는 재청구시 선택이 불가능하므로 Filtering 에서 제외 */
	//Action을 Clear한다.
	tit_clearActionInfo();
	
	trace(ds_out_master.SaveXML());
	trace(ds_list_req.SaveXML());
	
	tit_addSearchActionInfo("cs01:CS0101008B_T2", true);						//신규청구번호 채번을 위해 exclusive lock을 건다
	tit_addSearchActionInfo("cs01:CS0101008B_S8", true);						//신규청구번호 채번

	tit_addMultiActionInfo("cs01:CS0101008B_I3");								//ZMMT031에 데이터를 INSERT 한다.

	tit_callService(
        ""
        , ""
        , "ds_out_master=ds_out_master ds_list=ds_list_req ds_cond=ds_cond ds_key=ds_key"
        , "ds_key = ds_key"
        , ""
        , "fn_afterSaveRequest");        	
}

/********************************************************************************
* 기      능   : 청구종류별 승인소요일 구하기
********************************************************************************/
function getReqkindDlyDate() {
	var reqkind = '8'; // 청구종류 재청구로 강제 세팅
	var approveDate = 0;
	
	if(reqkind == '8') { // 재청구
		approveDate = 3;
	}
	
	return approveDate;
}]]></Script>
</Window>