<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="136" Id="MMCMMM010" Left="8" OnLoadCompleted="fn_OnLoadCompleted" PidAttrib="7" Title="반송사유입력" Top="8" Ver="1.0" Width="416" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_ret" OnColumnChanged="ds_ret_OnColumnChanged">
				<Contents>
					<colinfo id="RET_CODE" size="54" summ="default" type="STRING"/>
					<colinfo id="RET_BIGO" size="256" summ="default" type="STRING"/>
					<record>
						<RET_BIGO></RET_BIGO>
						<RET_CODE></RET_CODE>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ret_2">
				<Contents>
					<colinfo id="CODE" size="54" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME></CODE_NAME>
					</record>
					<record>
						<CODE>1</CODE>
						<CODE_NAME>MMPR대상&#32;아님</CODE_NAME>
					</record>
					<record>
						<CODE>2</CODE>
						<CODE_NAME>품명&#32;및&#32;SPEC오류&#32;</CODE_NAME>
					</record>
					<record>
						<CODE>3</CODE>
						<CODE_NAME>실물&#32;및&#32;수량&#32;오류</CODE_NAME>
					</record>
					<record>
						<CODE>4</CODE>
						<CODE_NAME>기타(문의요망)</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user12" Bottom="128" Height="59" Id="Shape0" Left="8" LineColor="user13" Right="408" TabOrder="3" Top="69" Type="Rectangle" Width="400"></Shape>
		<Shape BKColor="user12" Bottom="70" Height="26" Id="Shape1" Left="8" LineColor="user13" Right="408" TabOrder="1" Top="44" Type="Rectangle" Width="400"></Shape>
		<Static Align="Center" Height="26" Id="Static7" Left="8" Style="sty_lb_form_basic" TabOrder="2" Text="반송사유" Top="70" VAlign="Middle" Width="105"></Static>
		<Static Align="Center" Height="24" Id="Static8" Left="9" Style="sty_lb_form_group" TabOrder="4" Text="관리항목" Top="45" VAlign="Middle" Width="104"></Static>
		<Static Align="Center" Height="24" Id="Static1" Left="114" Style="sty_lb_form_group" TabOrder="5" Text="내용" Top="45" VAlign="Middle" Width="293"></Static>
		<Div Height="36" Id="div_btn" TabOrder="6" Text="Div0" Url="WB01::CommBtnForm.xml" Width="416">
			<Contents></Contents>
		</Div>
		<Combo BindDataset="ds_ret" Border="Flat" CodeColumn="CODE" Column="RET_CODE" DataColumn="CODE_NAME" Height="20" Id="cb_ret" INDEX="0" InnerDataset="ds_ret_2" Left="115" Style="sty_ipt_search" TabOrder="7" Top="73" Width="293"></Combo>
		<Edit Border="Flat" Height="20" Id="ed_ret" Left="116" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="8" Top="101" Width="290"></Edit>
		<Static Align="Center" Height="26" Id="Static0" Left="8" Style="sty_lb_form_basic" TabOrder="9" Text="기타사유" Top="97" VAlign="Middle" Width="105"></Static>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initForm();
	
	ed_ret.Enable = false;
	cb_ret.Index = 0;
	

}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 
********************************************************************************/
function fn_query() {
	
}
/********************************************************************************
* 기      능   : 삽입 
********************************************************************************/
function fn_insert() {

}
/********************************************************************************
* 기      능   : Delete 
********************************************************************************/
function fn_delete() {

}
/********************************************************************************
* 기      능   : 저장 
********************************************************************************/
function fn_save() {

	// if( length(ed_zeinr.value) != 8 ) 
	// {
		// gfn_showAlert("CW00011","8");
		// return;
	// }
	// else{
		// close(ed_zeinr.value);
	// }
	
	if(cb_ret.Value == 4)
	{
		close(ed_ret.Value);
	} else {
		close(cb_ret.Value);
	}
	
}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {

}

//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/
function ufn_userfunction() {

}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================



function ds_ret_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if(ds_ret.GetColumn(nRow,"RET_CODE") == 4)
	{
		ed_ret.Enable = true;
	} else {
		ed_ret.Enable = false;
	}
	
}
]]></Script>
</Window>