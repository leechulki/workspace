<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="632" Id="PS0208001B" Left="8" OnLoadCompleted="fn_OnLoadCompleted" PidAttrib="7" Title="유형별&#32;호기별&#32;공정진행&#32;입력(2019)" Top="8" Ver="1.0" Width="816" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_pop1"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_pop2"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_pop3"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_pop"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_file_safe">
				<Contents>
					<colinfo id="FPATH" size="256" summ="default" type="STRING"/>
					<colinfo id="FNAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_gbn">
				<Contents>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="GNO" size="256" summ="default" type="STRING"/>
					<colinfo id="GNO_STEP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_safe">
				<Contents>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="48" summ="default" type="STRING"/>
					<colinfo id="POSID" size="48" summ="default" type="STRING"/>
					<colinfo id="FNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="SO_GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="GNO" size="256" summ="default" type="STRING"/>
					<colinfo id="SAFE" size="256" summ="default" type="STRING"/>
					<colinfo id="SAFE_CK" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE_CHK" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_chk">
				<Contents>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_ms">
				<Contents>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="SO_GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="SO_GBN2" size="256" summ="default" type="STRING"/>
					<record>
						<GUBUN></GUBUN>
						<PSPID></PSPID>
						<SO_GBN/>
						<SO_GBN2/>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_trans">
				<Contents>
					<colinfo id="MESGACCP" size="256" summ="default" type="STRING"/>
					<colinfo id="MESGTITL" size="256" summ="default" type="STRING"/>
					<colinfo id="MESGDESC" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_safe">
				<Contents>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN_NM" size="165" summ="default" type="STRING"/>
					<colinfo id="GBN_NM2" size="165" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="48" summ="default" type="STRING"/>
					<colinfo id="POSID" size="48" summ="default" type="STRING"/>
					<colinfo id="POSID_DONG" size="48" summ="default" type="STRING"/>
					<colinfo id="CNT" size="6" summ="default" type="STRING"/>
					<colinfo id="CDATE" size="30" summ="default" type="STRING"/>
					<colinfo id="CNAME" size="105" summ="default" type="STRING"/>
					<colinfo id="CNAME2" size="105" summ="default" type="STRING"/>
					<colinfo id="FNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="FPATH" size="256" summ="default" type="STRING"/>
					<colinfo id="FNAME_APP" size="256" summ="default" type="STRING"/>
					<colinfo id="FSIZE" size="256" summ="default" type="STRING"/>
					<colinfo id="COLOR" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="FNAME_TMP" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="GNO" size="256" summ="default" type="STRING"/>
					<colinfo id="GNO_STEP" size="256" summ="default" type="STRING"/>
					<colinfo id="SAFE" size="256" summ="default" type="STRING"/>
					<colinfo id="SAFE_CK" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="STEP1" size="256" summ="default" type="STRING"/>
					<colinfo id="STEP1_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="STEP1_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="DEVICE_GBN1" size="256" summ="default" type="STRING"/>
					<colinfo id="STEP2" size="256" summ="default" type="STRING"/>
					<colinfo id="STEP2_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="STEP2_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="DEVICE_GBN2" size="256" summ="default" type="STRING"/>
					<colinfo id="STEP3" size="256" summ="default" type="STRING"/>
					<colinfo id="STEP3_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="STEP3_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="DEVICE_GBN3" size="256" summ="default" type="STRING"/>
					<colinfo id="APPR_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="APPR_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="PRONR" size="256" summ="default" type="STRING"/>
					<colinfo id="PROWRK" size="256" summ="default" type="STRING"/>
					<colinfo id="PRO_R" size="256" summ="default" type="STRING"/>
					<colinfo id="VER" size="256" summ="default" type="STRING"/>
					<colinfo id="PMMBPN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_mh">
				<Contents>
					<colinfo id="MH" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_del">
				<Contents>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="DAY_R" size="256" summ="default" type="STRING"/>
					<colinfo id="BEFORE_R" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_file">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="SQFCD" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="MCROM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSPEC3" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNOTXT" size="256" summ="default" type="STRING"/>
					<colinfo id="FNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="F_EXT" size="256" summ="default" type="STRING"/>
					<colinfo id="FPATH" size="256" summ="default" type="STRING"/>
					<colinfo id="FNAME_APP" size="256" summ="default" type="STRING"/>
					<colinfo id="CRDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CRTIM" size="256" summ="default" type="STRING"/>
					<colinfo id="CRNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="CHDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CHTIM" size="256" summ="default" type="STRING"/>
					<colinfo id="CHNAM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_files">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNO" size="256" summ="default" type="STRING"/>
					<colinfo id="SQFCD" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="MCROM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSPEC3" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNOTXT" size="256" summ="default" type="STRING"/>
					<colinfo id="FNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="F_EXT" size="256" summ="default" type="STRING"/>
					<colinfo id="FPATH" size="256" summ="default" type="STRING"/>
					<colinfo id="FNAME_APP" size="256" summ="default" type="STRING"/>
					<colinfo id="CRDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CRTIM" size="256" summ="default" type="STRING"/>
					<colinfo id="CRNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="CHDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CHTIM" size="256" summ="default" type="STRING"/>
					<colinfo id="CHNAM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_sms">
				<Contents>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="TRAN_PHONE" size="256" summ="default" type="STRING"/>
					<colinfo id="TRAN_CALLBACK" size="256" summ="default" type="STRING"/>
					<colinfo id="TRAN_STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="TRAN_DATE" size="256" summ="default" type="STRING"/>
					<colinfo id="TRAN_MSG" size="256" summ="default" type="STRING"/>
					<colinfo id="TRAN_SUBJECT" size="256" summ="default" type="STRING"/>
					<colinfo id="REQDATE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond1_temp">
				<Contents>
					<colinfo id="PSPID" size="255" summ="default" type="STRING"/>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="PRONR" size="256" summ="default" type="STRING"/>
					<colinfo id="COM_CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="FPATH" size="256" summ="default" type="STRING"/>
					<colinfo id="ORGFNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="FNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="FSIZE" size="256" summ="default" type="INT"/>
					<colinfo id="FDATR" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="VER" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="GNO" size="256" summ="default" type="STRING"/>
					<colinfo id="GNO_STEP" size="256" summ="default" type="STRING"/>
					<colinfo id="SAFE_CK" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_reqdate">
				<Contents>
					<colinfo id="REQDATE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_pop" BkColor2="default" BoldHead="true" Border="Flat" Bottom="632" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="592" Id="grd_pop" InputPanel="FALSE" LineColor="user20" LineType="ExHORZ" OnCellClick="grd_pop_OnCellClick" OnCellDBLClick="grd_pop_OnCellDBLClick" OnKeyDown="grd_pop_OnKeyDown" Right="816" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="40" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="816">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="27"/>
						<col fix="left" width="280"/>
						<col fix="left" width="55"/>
						<col fix="left" width="55"/>
						<col width="55"/>
						<col width="60"/>
						<col width="50"/>
						<col width="55"/>
						<col width="80"/>
						<col width="60"/>
					</columns>
					<head>
						<cell col="0" display="text" font="굴림,9" text="NO"/>
						<cell col="1" display="text" font="굴림,9" text="DESCRIPTION"/>
						<cell col="2" display="text" font="굴림,9" text="기성율"/>
						<cell col="3" display="text" font="굴림,9" text="누계"/>
						<cell col="4" display="text" font="굴림,9" text="일보공정"/>
						<cell col="5" display="text" font="굴림,9" text="품질"/>
						<cell col="6" display="text" font="굴림,9" text="업로드"/>
						<cell col="7" display="text" font="굴림,9" text="완료"/>
						<cell col="8" display="text" font="굴림,9" text="안전승인"/>
						<cell col="9" display="text" font="굴림,9" text="기성공정"/>
					</head>
					<body>
						<cell align="center" bkcolor="expr:decode(ZCHECK,&#32;&apos;X&apos;,&#32;&apos;user20&apos;,&#32;&apos;default&apos;)" col="0" display="text" expr="currow+1"/>
						<cell bkcolor="expr:decode(ZCHECK,&#32;&apos;X&apos;,&#32;&apos;user20&apos;,&#32;&apos;default&apos;)" col="1" colid="PROWRK" display="text"/>
						<cell align="right" bkcolor="expr:decode(ZCHECK,&#32;&apos;X&apos;,&#32;&apos;user20&apos;,&#32;&apos;default&apos;)" col="2" colid="PRO_R" display="text"/>
						<cell align="right" bkcolor="expr:decode(ZCHECK,&#32;&apos;X&apos;,&#32;&apos;user20&apos;,&#32;&apos;default&apos;)" col="3" colid="PRO_SUM" display="number"/>
						<cell bkcolor="expr:decode(FLAG,&#32;&apos;1&apos;,&#32;&apos;user34&apos;,&#32;&apos;default&apos;)" bkcolor2="expr:decode(FLAG,&#32;&apos;1&apos;,&#32;&apos;user34&apos;,&#32;&apos;user22&apos;)" col="4" colid="DAY_PROCESS" display="expr:decode(DAY_PROCESS,&#32;&apos;0&apos;,&#32;&apos;checkbox&apos;,&#32;&#32;&apos;1&apos;,&#32;&apos;checkbox&apos;,&#32;&apos;normal&apos;)" edit="expr:iif(&#32;(&#32;(F_CHK&#32;==&#32;&apos;N&apos;&#32;&amp;&amp;&#32;F_COPY&#32;==&#32;&apos;X&apos;)&#32;||&#32;&#32;(&#32;F_CHK&#32;==&#32;&apos;Y&apos;&#32;&amp;&amp;&#32;F_ACTIVE&#32;==&#32;&apos;Y&apos;)&#32;)&#32;&amp;&amp;&#32;(&#32;CHKSAFE&#32;==&#32;&apos;0&apos;&#32;)&#32;&#32;&#32;,&#32;&apos;checkbox&apos;&#32;,&#32;&apos;none&apos;)" Mask="expr:decode(DAY_PROCESS,&#32;&apos;0&apos;,&#32;&apos;&apos;,&#32;&apos;1&apos;,&#32;&apos;&apos;,&#32;&apos;####.##.##&apos;)"/>
						<cell bkcolor2="user22" bkimageid='expr:iif(&#32;QUALITY_PIC_YN&#32;&#32;==&#32;&apos;Y&apos;&#32;,&#32;&quot;photo&quot;,&#32;&quot;&quot;)' col="5" cursor='expr:iif(&#32;QUALITY_PIC_YN&#32;&#32;==&#32;&apos;Y&apos;&#32;,&#32;&quot;hand&quot;,&#32;&quot;arrow&quot;)' display="normal" edit="expr:iif(&#32;F_CHK&#32;==&#32;&apos;Y&apos;&#32;&amp;&amp;&#32;F_ACTIVE&#32;==&#32;&apos;Y&apos;&#32;||&#32;F_COPY&#32;==&#32;&apos;Y&apos;&#32;,&#32;&apos;checkbox&apos;&#32;,&#32;&apos;none&apos;)"/>
						<cell bkcolor2="user22" bkimageid='expr:iif(&#32;FINISH_PIC_YN&#32;&#32;==&#32;&apos;Y&apos;&#32;,&#32;gfn_getFlagBkImageID(&quot;I&quot;)&#32;,&#32;&quot;&quot;)' col="6" cursor='expr:iif(&#32;FINISH_PIC_YN&#32;&#32;==&#32;&apos;Y&apos;&#32;,&#32;&quot;hand&quot;,&#32;&quot;arrow&quot;)' display="number" edit="checkbox"/>
						<cell bkcolor="expr:iif(COM_CHK==&apos;1&apos;,iif(EDATE&#32;==&#32;gfn_getCurrDate()&#32;||&#32;EDATE==&apos;00000000&apos;&#32;&#32;,&#32;&apos;default&apos;&#32;,&#32;&apos;user34&apos;),&apos;default&apos;)" col="7" colid="COM_CHK" display="checkbox" edit="expr:iif(FLAG&#32;==&#32;&apos;1&apos;&#32;&amp;&amp;&#32;VER&#32;&gt;=&#32;&apos;005&apos;,&#32;iif(EDATE&#32;==&#32;gfn_getCurrDate()&#32;&amp;&amp;&#32;FINISH_PIC_YN&#32;==&#32;&apos;N&apos;&#32;,&#32;&apos;checkbox&apos;&#32;,iif(FIX_COM_CHK&#32;!=&#32;1&amp;&amp;&#32;FINISH_PIC_YN&#32;==&#32;&apos;N&apos;&#32;,&#32;&apos;checkbox&apos;,&#32;&apos;none&apos;))&#32;&#32;,&apos;checkbox&apos;)" Mask="expr:decode(COL0,&#32;&apos;0&apos;,&#32;&apos;&apos;,&#32;&apos;1&apos;,&#32;&apos;&apos;,&#32;&apos;####.##.##&apos;)"/>
						<cell bkcolor2="user22" col="8" colid="APRDT" display="text" Mask="####.##.##"/>
						<cell bkcolor2="user22" col="9" colid="RM_PROCESS" display="expr:decode(RM_PROCESS,&#32;&apos;0&apos;,&#32;&apos;checkbox&apos;,&#32;&#32;&apos;1&apos;,&#32;&apos;checkbox&apos;,&#32;&apos;normal&apos;)" Mask="expr:decode(RM_PROCESS,&#32;&apos;0&apos;,&#32;&apos;&apos;,&#32;&apos;1&apos;,&#32;&apos;&apos;,&#32;&apos;####.##.##&apos;)"/>
					</body>
					<summary>
						<cell align="center" bkcolor="user27" col="0" color="user26" colspan="4" display="text" text="누계&#32;공정율"/>
						<cell align="right" bkcolor="user27" col="4" color="user26" display="text"/>
						<cell align="right" bkcolor="user27" col="5" color="user26" display="text"/>
						<cell align="right" bkcolor="user27" col="6" color="user26" display="text"/>
						<cell align="right" bkcolor="user27" col="7" color="user26" display="text"/>
						<cell align="right" bkcolor="user27" col="8" color="user26" colspan="2" display="text"/>
						<cell align="center" bkcolor="user27" col="0" color="user26" colspan="4" display="text" row="1" text="당일&#32;공정율"/>
						<cell align="right" bkcolor="user27" col="4" color="user26" display="text" row="1"/>
						<cell align="right" bkcolor="user27" col="5" color="user26" display="text" row="1"/>
						<cell align="right" bkcolor="user27" col="6" color="user26" display="text" row="1"/>
						<cell align="right" bkcolor="user27" col="7" color="user26" display="text" row="1"/>
						<cell align="right" bkcolor="user27" col="8" color="user26" colspan="2" display="text" row="1"/>
					</summary>
				</format>
			</contents>
		</Grid>
		<Div Height="36" Id="div_btn" OnSize="div_btn_OnSize" TabOrder="2" Text="Div0" Url="WB01::CommBtnForm.xml" Width="816">
			<Contents></Contents>
		</Div>
		<Static Height="24" Id="st_title" Left="816" TabOrder="3" Text="유형별&#32;호기별&#32;공정&#32;진행" Top="160" Visible="FALSE" Width="152"></Static>
		<CyHttpFile Height="24" Id="httpFile1" Left="896" Top="56" Width="24"></CyHttpFile>
		<Static Height="23" Id="Static0" Left="593" TabOrder="4" Text="Static0" Top="564" Width="187"></Static>
	</Form>
	<Script><![CDATA[
/*
 ******************************************************************************************
 * 기      능   :
 * 작  성  자   :
 * 작성  일자   :
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다.
//=========================================================================================
var F_POSID;
var F_GUBUN;
//var F_ZSPEC;
var F_TYPE;
var F_INP;
var F_CHK;
var F_PRO;
var F_SAFE;
//var F_MH;
var F_PSUM;
var F_INWON;
var F_INWON_CHK;
var F_PCNT;
var F_ACTIVE;
var F_COPY;
var F_SELECTABLE = 'N';
var _UPLOAD_NROW = 0;
var _comchkValue = "";
var F_VER;

var initComChkCnt = 0;  // 2019.03.09 nwtns LHL최초 폼로드시 조회한 완료 체크 항목 수

var _send_file = false;  // 2019.03.13 nwtns lhl 완료사진 서버전송 결과
//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	
	//공정표  팝업 화면이 다 보이도록   top 위치 조정
	if (Global.AppStatus == "normal")
	{ // 2019.03.09 nwtns LHL - 현재화면이 normal 상태면 즉 최대화(Max),최소화(Min)  가 아니면
		//trace("공정표 팝업");
		this.window.top = 80;
	}

    //상황에 따른 상단 버튼 처리
    if (F_SELECTABLE == 'Y') {
		grd_pop.Editable = false;
		if (Length(F_TITLE) > 0) {
		    st_title.value = F_TITLE;
		}
		gfn_initFormNotAuth("PS0208001E", st_title.value, ""); // 조회 ,확인 버튼 : "1,80"

		grd_pop.SetColProp(5, "Width", 0);
    } else {
        if (F_CHK == "Y" && F_ACTIVE == "Y") // 미입력분 이고, 작업시간 체크시
        {
            gfn_initFormNotAuth("PS0208001E", st_title.value, "1,80"); // 조회, 확인 버튼 보이게 "1,80"
            grd_pop.Editable = true;
        }
        else if (F_COPY == 'X')
        {
            gfn_initFormNotAuth("PS0208001E", st_title.value, "1,80"); // 조회, 확인 버튼 보이게 "1,80"
            grd_pop.Editable = true;
        }
        else if (F_CHK == "N")
        { //입력분 일때
            gfn_initFormNotAuth("PS0208001E", st_title.value, "1,30"); // 조회, 저장 버튼 보이게 "1,30"
        }
        else if (F_ACTIVE == "N") // 미입력분 : 작업시간 선택안하고 호출 한 경우 , 확인 버튼 보이게
        {
            gfn_initFormNotAuth("PS0208001E", st_title.value, "1,80"); // 조회, 확인 버튼 보이게 "1,80"
        }
        else
        {
            gfn_initFormNotAuth("PS0208001E", st_title.value, "1"); // 조회 ,확인 버튼 : "1,80"
        }
    }

   	gfn_initForm();

	fn_query();
}

/********************************************************************************
* 기      능   : form UnloadCompleted
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() {

	gfn_clearGridSortMark(grd_pop);
	ds_pop.row = -1;
	ds_pop.ClearData();

	var args = "POSID="+quote(F_POSID);
		args += " PSPID="+quote(F_PSPID);
		args += " GUBUN="+quote(F_GUBUN);
		args += " TYPE="+quote(F_TYPE);
		args += " VER="+quote(F_VER);
		args += " INP_DT="+quote(F_INP);
		args += " SAFE="+quote(F_SAFE);
		args += " MH="+quote(F_MH);
		args += " P_SUM="+quote(F_PSUM);
		args += " F_PRO="+quote(F_PRO);
		args += " F_CHK="+quote(F_CHK);
		args += " F_ACTIVE="+quote(F_ACTIVE);
		args += " F_COPY="+quote(F_COPY);
		args += " F_SAFE="+quote(F_SAFE);

	tit_clearActionInfo();

	tit_addSearchActionInfo("ps02:PS0208001B_S2");
	tit_addSearchActionInfo("ps02:PS0207001B_S3");
	tit_addSearchActionInfo("ps02:PS0207001B_S4");

	tit_callService(
        ""
        , ""
        , ""
        , "ds_pop2=ds_pop2 ds_pop3=ds_pop3 ds_mh=ds_mh"
        , args
        , "fn_afterQuery"
        , true);
}

/********************************************************************************
* 기      능   : 조회 Callback
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
	// 메시지 처리
	gfn_showSearchMsg(grd_pop);

	var dsDetailRow = "";
	var dsComChkRow = "";

	/* ==================================================================== */
	// 2019.03.10 nwtns lhl 추가_최초 조회시 완료체크 항목 담기_start
	ds_initComChk.deleteAll();

	ds_pop2.Filter("COM_CHK=='1'");
	ds_initComChk.copyF(ds_pop2);
	ds_pop2.unFilter();
	// 2019.03.10 nwtns lhl 추가_최초 조회시 완료체크 항목 담기_end

	//완료공정율 누계
	var comsum = 0.0;
	var dayComsum = 0.0;

	/* ==================================================================== */

	for (var j=0; j< ds_pop2.rowcount; j++) // =
	{
		//  trace("공정표 조회 후  :" + ds_pop2.GetColumn(j, "DAY_PROCESS"));

		//임시저장된 일보공정 값 반영
		for (var i=0; i< ds_detail_n.rowcount; i++)  //=
		{
			if ((ds_detail_n.GetColumn(i, "POSID") == F_POSID) && (ds_detail_n.GetColumn(i, "PRONR") == ds_pop2.GetColumn(j, "PRONR")) )
			{
				//기존 : ds_pop2.SetColumn(j,"COL0", '1');
				// trace("dkdkdk :" + ds_detail_n.GetColumn(i, "DAY_PROCESS") );
			    ds_pop2.SetColumn(j, "DAY_PROCESS", '1') ; //ds_detail_n.GetColumn(i, "DAY_PROCESS"));
			}
		}
		if(ds_pop2.GetColumn(i, "VER") <  '005')
		{
			ds_pop.SetColumn(i, "FINISH_PIC_YN",'N');
		}
		//2019.03.10 nwtns lhl DB조회해서 가져온 완료체크 건수 확인
		if (ds_pop2.GetColumn(j, 'COM_CHK') == '1') //완료체크
		{
			initComChkCnt++;

			comsum = comsum + ds_pop2.GetColumn(j,"PRO_R") ; //완료공정율 합계

			if ( ds_pop2.GetColumn(j, "EDATE") == gfn_getCurrDate() ) {
				dayComsum = dayComsum + ds_pop2.GetColumn(j,"PRO_R") ; //당일 완료공정율

				//trace("dayComsum_PRONR : " + ds_pop2.GetColumn(j,"PRONR")) ;
			}
		}

		//안전검사(2019) 관련
		if ( parseInt(ds_pop.GetColumn(j,'F_SAFE_NUM')) < parseInt(ds_pop.GetColumn(j,'PROCESS_BY_SAFE_NUM')) ) // 공정별 안전검사단계가 실시된 안점검사보다 크면
		{
			//ds_pop.SetColumn(j, "SAFE_COM_CHK", "0");
		}
    }

    grd_pop.Redraw = false;
    ds_pop.copy(ds_pop2);
	grd_pop.Redraw = true;

	//합계관련
	var endd = parseInt(grd_pop.GetColCount()) - 2 + parseInt(grd_pop.GetColCount()) - 2;
	var posid_1 = "";
	var prosum = 0.0;

	for (var j=0; j < ds_pop2.rowcount; j++) // =
	{
		if (ds_pop2.GetColumn(j,"DAY_PROCESS") == '1')  // 투입일자(INP_DT == 현재날짜)가 당일 인지 확인 (기존: COL0)
		{
			prosum = prosum + ds_pop2.GetColumn(j,"PRO_R") ; //공정항목별 기성율 (당일공정율 (일보공정))
		}
    }

	grd_pop.SetCellProp("summary", 1, "Text", ds_pop3.GetColumn(ds_pop3.FindRow("POSID", F_POSID) , "TOT_B")); //당일공정율 누계

	grd_pop.SetCellProp("summary", 4, "Text", comsum); //완료 공정율 누계
	grd_pop.SetCellProp("summary", 10, "Text", dayComsum); // 당일 완료 공정율


	if (F_CHK == "Y" || F_COPY == "X" ) //미입력분 또는 copy
	{
		if (F_INWON_CHK == "N") //미입력분 탭에서 공정표를 누르면 인원체크가 'N'  값이며,
		{
			//trace("합계_F_PRO : " + F_PRO); // DAY_R (공정율)
			//trace("TOT : " + ds_pop3.GetColumn(ds_pop3.FindRow("POSID", F_POSID) , "TOT"));

			//당일 공정율 = 조회한 값(TOT) + 당일 입력분의 공정(율)값  --> 확인 필요
			grd_pop.SetCellProp("summary", 7, "Text", prosum);

		} else { //있다면 --> 당일 공정율(기성공정)
			grd_pop.SetCellProp("summary", 7, "Text", prosum) ; //당일 공정율(일보공정 합계)
		}

	} else { // 입력분
	    //trace("입력분");

		grd_pop.SetCellProp("summary", 7, "Text", prosum) ; //당일 공정율(일보공정 합계)
	}

	//기성율 누계
	grd_pop.SetCellProp("summary", 5, "Text", ds_pop3.GetColumn(ds_pop3.FindRow("POSID", F_POSID) , "TOT_G"));
}


/********************************************************************************
* 기      능   : 닫기
********************************************************************************/
function fn_close() {
	if (F_COPY == 'X')
	{
		parent.fn_query();
	}

	if (ds_cond3.rowcount > 0) {
		ds_cond3.DeleteAll();
	}

	close();
}

/********************************************************************************
* 기      능   : 확인 버튼 클릭 시
********************************************************************************/
function fn_confirm() {

	for (var i=0; i<ds_pop.GetRowCount(); i++)
	{
		ds_pop.SetColumn(i,"GUBUN",F_GUBUN);
		ds_pop.SetColumn(i,"PSPID",substr(F_POSID,0,6));
		ds_pop.SetColumn(i,"POSID",F_POSID);
		
		if(ds_pop.GetColumn(i, "VER") <  '005')
		{
			if(ds_pop.GetColumn(i, "DAY_PROCESS") == '1')
			{
				ds_pop.SetColumn(i, "COM_CHK", '1');
			}
		}
	}

	if (ds_pop.FindRow("COM_CHK",1) == -1 && ds_pop.FindRow("FIX_COM_CHK",1) == -1) //완료체크가 없을때
	{
		if (ds_pop.FindRow("DAY_PROCESS", 1)==-1)
		{
			gfn_showAlert("CW10025",'공정 내역 한가지 이상 입력하세요.');
			return;
		}
	}

	// 발주 MH 체크 로직 (2019-05-20 정태성 GJ 요청)
	if (ds_mh.GetColumn(0,"MH") == null)
	{
		gfn_openMsgWin("발주 정보(MH)가 없습니다.\n설치관리팀에 문의하세요.");
		return;
	}

	// 계획공정 배경 파란색 전체개수 + 계획공정 체크박스 체크 개수 - 완료공정 체크박스 체크 개수 > 찍은 시간 X 인원 수 X 1.5(효율) 인 경우 메시지 팝업
	// 메시지 : 먼저 완료공정을 입력해야 계획공정을 입력할 수 있습니다. - 2019-05-18 고범석 gj 요청

	var sPlnChk1 = ds_pop.CaseSumNF("FLAG == '1'","PRO_R");
	var sPlnChk2 = ds_pop.CaseSumNF("FLAG == '0' && DAY_PROCESS == '1'","PRO_R");
	var sComplChk = ds_pop.CaseSumNF("COM_CHK == '1'","PRO_R");
	var nCompCnt  = ds_pop.CaseCount("DAY_PROCESS == '1' && (EDATE == '"+gfn_getCurrDate()+"' || EDATE == '00000000' || Length(EDATE) == 0)");

	//Trace(ds_mh.GetColumn(0,"MH"));
	//Trace(sPlnChk1);
	//Trace(sPlnChk2);
	//Trace(sComplChk);
	//Trace(F_CHKTIME);
	//Trace(F_CHKINWON);
	/*
	if(nCompCnt > 3)
	{
	
		if (sPlnChk2 != 0 && ToNumber(ds_mh.GetColumn(0,"MH"))*(ToNumber(sPlnChk1) + ToNumber(sPlnChk2) - ToNumber(sComplChk))/100 > ToNumber(F_CHKTIME)*ToNumber(F_CHKINWON)*1.5)
		{
			gfn_openMsgWin("먼저 완료공정을 입력해야 계획공정을 입력할 수 있습니다.");
			return;
		}
	}*/
	
	//일보공정 부모데이터셋에 임시저장
    ds_detail3_n.deleteAll();
	ds_pop.Filter("DAY_PROCESS=='1'");

	ds_detail3_n.copyF(ds_pop);
	ds_pop.unFilter();
	
	//trace("확인_ds_detail3_n : " + ds_detail3_n.rowcount);

	var pro_chk = 0.0 ;
	for (var i=0; i< ds_detail3_n.rowcount; i++) // =
	{
		 if(ds_detail3_n.GetColumn(i, "PRO_CHK") <> 'X' )
		 { //ZPST0111 공정제한 체크된 항목을 제외한 공정율 합
			   pro_chk = pro_chk + (ds_detail3_n.GetColumn(i, "PRO_R")) ;
		 }
    }

    //F_PSUM : 작업시간
    if (ds_detail3_n.rowcount() > 3 )
	{
		if (  ( ToFloat(F_PSUM) * ToFloat(F_PCNT) * ToFloat(F_INWON) ) < ( ToFloat(ds_mh.GetColumn(0,"MH")) * (ToFloat(pro_chk)) / 100) )
		{
			gfn_showAlert("CW10025",'입력한 시간보다 당일공정율이 큽니다.');
			return;
		}
    }

	//copy data의 경우 바로 저장처리
	if (F_COPY == 'X') {
		if (!gfn_showConfirm("CW10025","저장하시겠습니까?"))
		{
			return;
		}

		ds_del.ClearData();
		ds_del.addRow();
		ds_del.SetColumn(0,"INP_DT" , F_INP );
		ds_del.SetColumn(0,"PSPID" ,substr(F_POSID,0,6));
		ds_del.SetColumn(0,"POSID" ,F_POSID );

		ds_del.SetColumn(0,"DAY_R" , grd_pop.GetCellProp("summary", 4, "text") );
		ds_del.SetColumn(0,"BEFORE_R", grd_pop.GetCellProp("summary",1, "text"));

		if (ds_detail3_n.rowcount > 0)
		{
			tit_clearActionInfo();
			tit_addSingleActionInfo("ps02:PS0207001B_D1");  //zpstW0304DETAIL
			tit_addSingleActionInfo("ps02:PS0207001B_U1");
			tit_addMultiActionInfo("ps02:PS0207001B_I1");//zpstw0304
			tit_callService(
			""
			, ""
			, "ds_del=ds_del ds_detail3=ds_detail3_n"      //신공정
			, ""
			, ""
			, ""
			, ""
			, ""
			, true  // ""
			);
		}
   }
   else {
        //일반데이터의 경우 데이터 누적 후 저장처리
        for (var i= ds_detail_n.rowcount(); i>=0; i--) {
			if(ds_detail_n.GetColumn(i, "POSID") == F_POSID) {

				ds_detail_n.DeleteRow(i);
			}
        }

//		trace("확인3_삭제 후_ds_detail_n : " + ds_detail_n.rowcount);
//		trace("확인4_ds_detail3_n : " + ds_detail3_n.rowcount);
//		trace("ds_detail3_n_data" + ds_detail3_n.saveXML());

		ds_detail_n.AppendDataset(ds_detail3_n); //마지막 레코드에 추가

//		trace("parent.ds_detail3_n_append : " +  ds_detail_n.RowCount() );
//		trace("ds_detail_n" + ds_detail_n.saveXML());

		for (var i = 0 ; i < ds_detail_n.RowCount(); i++) //집계테이블 MERGE 를 위한 담당PM, 협락사번호 입력
		{
		    ds_detail_n.SetColumn(i, "LIFNR", ds_tmcd.getColumn(ds_tmcd.findRow("CODE", cb_tmcd.value), "LIFNR"));
			ds_detail_n.SetColumn(i, "TEMNO2", ds_tmcd.getColumn(ds_tmcd.findRow("CODE", cb_tmcd.value), "CODE"));
		}

		var endd = 0;
		var cRow = 0;

		for (var i=0; i<ds_list1.getRowCount(); i++)
		{
			if (ds_list1.getColumn(i, "ZZGUBUN")==F_GUBUN && ds_list1.getColumn(i, "TYPE")==F_TYPE && ds_list1.getColumn(i, "POSID")==F_POSID)
			{
				endd = parseInt(grd_pop.GetColCount()) - 2 + parseInt(grd_pop.GetColCount()) - 2;
				ds_list1.SetColumn(i, "DAY_R", grd_pop.GetCellProp("summary", 7, "text"));
				ds_list1.SetColumn(i, "BEFORE_R",grd_pop.GetCellProp("summary",1, "text"));
			}
		}
	}

	//완료체크 관련 로직

	parent.ds_cond1.ClearData();

	var sFtime = left(GetDate(),8) +"_"+ right(GetDate(),6);
	for (var i=0; i< ds_pop.rowcount; i++) // =
	{
	    //2019.03.11 nwtns lhl  완료 체크 항목이 최초 조회했던 자료와 변경,추가 된게 있는 지 확인
		var comCheck = fn_findInitComCheck(ds_pop.GetColumn(i,"PRONR"));

		if (ds_pop.GetColumn(i, 'COM_CHK') == '1') //완료체크한  항목
		{
		    if (comCheck == -1){ //최초 완료체크 항목이 아니라면 , 즉 새로 완료체크한 항목이면

				var j = parent.ds_cond1.Addrow();

				parent.ds_cond1.SetColumn(j, "INP_DT",  F_INP);
				parent.ds_cond1.SetColumn(j, "PSPID",   ds_pop.GetColumn(i,"PSPID"));
				parent.ds_cond1.SetColumn(j, "POSID",   ds_pop.GetColumn(i,"POSID"));
				parent.ds_cond1.SetColumn(j, "GUBUN",   ds_pop.GetColumn(i,"GUBUN"));
				parent.ds_cond1.SetColumn(j, "PRONR",   ds_pop.GetColumn(i,"PRONR"));
				parent.ds_cond1.SetColumn(j, "FSIZE",   0);
				parent.ds_cond1.SetColumn(j, "COM_CHK", "1");
				
				parent.ds_cond1.SetColumn(j, "TYPE",   ds_pop.GetColumn(i,"TYPE"));
				parent.ds_cond1.SetColumn(j, "VER",   ds_pop.GetColumn(i,"VER"));

				//trace("사진업로드 공정여부: " + ds_pop.GetColumn(i,"FINISH_PIC_YN"));

				//ds_cond3- 이미지 뷰어팝업창에서 에서 담은 파일 데이터셋
				var findRow = ds_cond3.FindRow("PRONR", ds_pop.GetColumn(i,"PRONR")); //PRONR 공정번호
				
				//완료사진 업로드 여부 체크
				if (ds_pop.GetColumn(i, "VER") >= '005' && length(ds_pop.GetColumn(i,"FINISH_PIC")) > 0 && length(ds_cond3.GetColumn(findRow, "ORGFNAME")) == 0)
				{
					if(ds_pop.getColumn(i, "FIX_COM_CHK") != "1") //이미 등록된 사진이 없을때
					{
						gfn_showAlert(ds_pop.getColumn(i,"PROWRK") + " 완료사진이 업로드 되지 않았습니다.");
						return;
					}
				}

				if (findRow != -1)
				{
					var sFname = sFtime +"_"+G_USER_ID+"."+ gfn_getFileExt(ds_cond3.GetColumn(findRow, "FNAME"));
					//alert(sFname);
					parent.ds_cond1.SetColumn(j, "FDATR", ds_cond3.GetColumn(findRow , "FDATR"));
					parent.ds_cond1.SetColumn(j, "FNAME", ds_cond3.GetColumn(findRow, "FNAME"));
					parent.ds_cond1.SetColumn(j, "FPATH", ds_cond3.GetColumn(findRow, "FPATH"));
					parent.ds_cond1.SetColumn(j, "FSIZE", ds_cond3.GetColumn(findRow, "FSIZE"));
					parent.ds_cond1.SetColumn(j, "ORGFNAME", ds_cond3.GetColumn(findRow, "ORGFNAME"));
				}
			}
			else {// 최초 자료 이면서, 체크값이 변경되었다면,
	
				if ( ds_pop.GetColumn(i,"FINISH_PIC_YN") == 'Y' )//사진 업로드 공정
				{
					//ds_cond3- 이미지 뷰어팝업창에서 에서 담은 파일 데이터셋
					var rfindRow = ds_cond3.FindRow("PRONR", ds_pop.GetColumn(i,"PRONR")); //PRONR 공정번호

					// trace("서버의 체크값이 '1' 그대로 라면: " + rfindRow + ", count :" + ds_cond3.rowcount);

					if (rfindRow != '-1') // 21.04.26 완료는 원래 되어있고 사진이 새로 업로드 된 경우
					{
						//trace("서버의 체크값이 '1' 그대로: ORGFNAME" + ds_pop.GetColumn(i, 'ORGFNAME')  + ", 선택_ORGFNAME:" + ds_cond3.GetColumn(rfindRow, "ORGFNAME"));

						// 2019.03.20 nwtns lhl - 서버의 등록된 원본 파일명 과 선택한 파일명이 변경 되었는지 확인
						if (ds_pop.GetColumn(i, 'ORGFNAME') != ds_cond3.GetColumn(rfindRow, "ORGFNAME")) {

							var j = parent.ds_cond1.Addrow();

							var sFname = sFtime +"_"+G_USER_ID+"."+ gfn_getFileExt(ds_cond3.GetColumn(rfindRow, "FNAME"));
							//alert(sFname);

							parent.ds_cond1.SetColumn(j, "INP_DT",  F_INP);
							parent.ds_cond1.SetColumn(j, "PSPID",   ds_pop.GetColumn(i,"PSPID"));
							parent.ds_cond1.SetColumn(j, "POSID",   ds_pop.GetColumn(i,"POSID"));
							parent.ds_cond1.SetColumn(j, "GUBUN",   ds_pop.GetColumn(i,"GUBUN"));
							parent.ds_cond1.SetColumn(j, "PRONR",   ds_pop.GetColumn(i,"PRONR"));
							parent.ds_cond1.SetColumn(j, "COM_CHK", ds_pop.GetColumn(i,"COM_CHK"));
							
							parent.ds_cond1.SetColumn(j, "TYPE",  	ds_pop.GetColumn(i,"TYPE"));
							parent.ds_cond1.SetColumn(j, "VER", 	ds_pop.GetColumn(i,"VER"));

							parent.ds_cond1.SetColumn(j, "FDATR", ds_cond3.GetColumn(rfindRow , "FDATR"));
							parent.ds_cond1.SetColumn(j, "FNAME", ds_cond3.GetColumn(rfindRow, "FNAME"));
							parent.ds_cond1.SetColumn(j, "FPATH", ds_cond3.GetColumn(rfindRow, "FPATH"));
							parent.ds_cond1.SetColumn(j, "FSIZE", ds_cond3.GetColumn(rfindRow, "FSIZE"));
							parent.ds_cond1.SetColumn(j, "ORGFNAME", ds_cond3.GetColumn(rfindRow, "ORGFNAME"));

							// 서버파일 삭제
							//trace ("삭제할 파일 : Server FPATH: " + ds_pop.GetColumn(i, 'FPATH') + ", FNAME: " + ds_pop.GetColumn(i, 'FNAME'));

							if ( tit_fileDelete("PS", ds_pop.GetColumn(i, 'FNAME'), true) )
							{
								// 삭제 처리 성공
								//trace("fn_save()_서버 파일삭제 성공");
							}
						}
					}
				}

				//===========================================================================================
			}//end else
		}// end if(ds_pop.GetColumn(i, 'COM_CHK') == '1') //완료체크
		else {
			// 당일 완료체크한 자료인 경우
			if ( ds_pop.GetColumn(i, "FLAG") == '1' && (ds_pop.GetColumn(i, "EDATE") == gfn_getCurrDate() ||  ds_pop.GetColumn(i, "EDATE") == '00000000') ) {
				//trace("당일 완료체크한 자료 입니다.");
				//trace("COM_CHECK : " + comCheck + "," + ds_pop.GetColumn(i, 'COM_CHK') );
				//if(ds_pop.GetColumn(i, "FIX_COM_CHK") == '1' && ds_pop.GetColumn(i, 'COM_CHK') != '1')
				if ( comCheck == '1' && ds_pop.GetColumn(i, 'COM_CHK') != '1' ) // ASISERROR  21.04.27 항상 성립
				{ //이미 완료체크 후 체크 해체 확인버튼 누를때 (당일만 가능)

					//trace("COM_CHECK == 1 : " + comCheck + "," + ds_pop.GetColumn(i, 'COM_CHK') );

					var j = parent.ds_cond1.Addrow();

					parent.ds_cond1.SetColumn(j, "INP_DT",  F_INP);
					parent.ds_cond1.SetColumn(j, "PSPID",   ds_pop.GetColumn(i,"PSPID"));
					parent.ds_cond1.SetColumn(j, "POSID",   ds_pop.GetColumn(i,"POSID"));
					parent.ds_cond1.SetColumn(j, "GUBUN",   ds_pop.GetColumn(i,"GUBUN"));
					parent.ds_cond1.SetColumn(j, "PRONR",   ds_pop.GetColumn(i,"PRONR"));
					
					parent.ds_cond1.SetColumn(j, "TYPE",    ds_pop.GetColumn(i,"TYPE"));
					parent.ds_cond1.SetColumn(j, "VER",   	ds_pop.GetColumn(i,"VER"));

					//lhl
					parent.ds_cond1.SetColumn(j, "FDATR", "");
					parent.ds_cond1.SetColumn(j, "FNAME", "");
					parent.ds_cond1.SetColumn(j, "FPATH", "");
					parent.ds_cond1.SetColumn(j, "ORGFNAME", "");
					//

					parent.ds_cond1.SetColumn(j, "FSIZE",   0);
					parent.ds_cond1.SetColumn(j, "COM_CHK", "0");
				}
			}
		}
	} //end for

	//trace("확인버튼_end for : " + parent.ds_cond1.rowcount);

    //선택한 완료사진이 있으면 , 사진업로드 후 데이터를 저장한다.
	fn_picServer_save();

    //2019.03.10 nwtns lhl 완료체크 항목만 저장 : 완료체크 추가 또는 변경된 자료가 있을 경우
    fn_comCheck_save();

	fn_close();
}

/********************************************************************************
* 기      능   : 저장버튼 이벤트
* 설      명   : 입력분에서 공정표를 눌렀을때만 저장버튼이 보이며
*                완료체크 항목만 저장 함.
* 작 성 일 자  : 2019.03.13 nwtns lhl
********************************************************************************/
function fn_save(obj)
{
	//trace("저장 버튼== ");

	for (var i=0; i<ds_pop.GetRowCount(); i++)
	{
		ds_pop.SetColumn(i,"GUBUN",F_GUBUN);
		ds_pop.SetColumn(i,"PSPID",substr(F_POSID,0,6));
		ds_pop.SetColumn(i,"POSID",F_POSID);
	}

	if (ds_pop.FindRow("COM_CHK",1) == -1 && ds_pop.FindRow("FIX_COM_CHK",1) == -1) //완료체크가 없을때
	{
		if(ds_pop.FindRow("DAY_PROCESS", 1)==-1)
		{
			gfn_showAlert("CW10025",'공정 내역 한가지 이상 입력하세요.');
			return;
		}
	}

	//일보공정 부모데이터셋에 임시저장
    ds_detail3_n.deleteAll();
	ds_pop.Filter("DAY_PROCESS=='1'");
	ds_detail3_n.copyF(ds_pop);
	ds_pop.unFilter();

	var pro_chk = 0.0 ;
	for (var i=0; i< ds_detail3_n.rowcount; i++)  // =
	{
		if(ds_detail3_n.GetColumn(i, "PRO_CHK") <> 'X' )
		{ //ZPST0111 공정제한 체크된 항목을 제외한 공정율 합
			pro_chk = pro_chk + (ds_detail3_n.GetColumn(i, "PRO_R")) ;
		}
    }

    if (ds_detail3_n.rowcount() > 3 )
	{
		if( ( ToFloat(F_PSUM) * ToFloat(F_PCNT) * ToFloat(F_INWON) ) < ( ToFloat(ds_mh.GetColumn(0,"MH")) * (ToFloat(pro_chk)) / 100) )
		{
			gfn_showAlert("CW10025",'입력한 시간보다 당일공정율이 큽니다.');
			return;
		}
    }

	//copy data의 경우 바로 저장처리
	if (F_COPY == 'X') {
		if (!gfn_showConfirm("CW10025","저장하시겠습니까?"))
		{
			return;
		}

		ds_del.ClearData();
		ds_del.addRow();
		ds_del.SetColumn(0,"INP_DT" , F_INP );
		ds_del.SetColumn(0,"PSPID" ,substr(F_POSID,0,6));
		ds_del.SetColumn(0,"POSID" ,F_POSID );

		ds_del.SetColumn(0,"DAY_R" , grd_pop.GetCellProp("summary", 4, "text") );
		ds_del.SetColumn(0,"BEFORE_R", grd_pop.GetCellProp("summary",1, "text"));

		if (ds_detail3_n.rowcount > 0)
		{
			tit_clearActionInfo();
			tit_addSingleActionInfo("ps02:PS0207001B_D1");  // zpstW0304 DETAIL
			tit_addSingleActionInfo("ps02:PS0207001B_U1");  // ZPSTW0302 UPDATE
			tit_addMultiActionInfo("ps02:PS0207001B_I1");   // zpstw0304
			tit_callService(
			""
			, ""
			, "ds_del=ds_del ds_detail3=ds_detail3_n"
			, ""
			, ""
			, ""
			, ""
			, ""
			, true  // ""
			);
		}

	} else { //일반데이터의 경우 데이터 누적 후 저장처리
		for (var i= ds_detail_n.rowcount(); i>=0; i--) {
			if(ds_detail_n.GetColumn(i, "POSID") == F_POSID) {
				//trace("확인2_삭제_ds_detail_n : " + ds_detail_n.rowcount); //

				ds_detail_n.DeleteRow(i);
			}
		}

		ds_detail_n.AppendDataset(ds_detail3_n);

		for (var i = 0 ; i < ds_detail_n.RowCount(); i++) //집계테이블 MERGE 를 위한 담당PM, 협락사번호 입력
		{
			ds_detail_n.SetColumn(i, "LIFNR", ds_tmcd.getColumn(ds_tmcd.findRow("CODE", cb_tmcd.value), "LIFNR"));
			ds_detail_n.SetColumn(i, "TEMNO2", ds_tmcd.getColumn(ds_tmcd.findRow("CODE", cb_tmcd.value), "CODE"));
		}

		var endd = 0;
		var cRow = 0;

		for (var i=0; i<ds_list1.getRowCount(); i++)
		{
			if (ds_list1.getColumn(i, "ZZGUBUN")==F_GUBUN && ds_list1.getColumn(i, "TYPE")==F_TYPE && ds_list1.getColumn(i, "POSID")==F_POSID)
			{
				endd = parseInt(grd_pop.GetColCount()) - 2 + parseInt(grd_pop.GetColCount()) - 2;
				ds_list1.SetColumn(i, "DAY_R", grd_pop.GetCellProp("summary", 7, "text"));
				ds_list1.SetColumn(i, "BEFORE_R",grd_pop.GetCellProp("summary",1, "text"));
			}
		}
	}

	//완료체크 관련 로직

	parent.ds_cond1.ClearData();

	for (var i=0; i< ds_pop.rowcount; i++) //
	{
	    //2019.03.11 nwtns lhl  완료 체크 항목이 최초 조회했던 자료와 변경,추가 된게 있는 지 확인
		var comCheck = fn_findInitComCheck(ds_pop.GetColumn(i,"PRONR"));

		trace("receive comCheck: " + comCheck);

		if (ds_pop.GetColumn(i, 'COM_CHK') == '1') //완료체크한  항목
		{
		    if (comCheck == -1){ //최초 완료체크 항목이 아니라면 , 즉 새로 완료체크한 항목이면
				//trace("신규 데이터 저장: " + ds_pop.GetColumn(i, 'COM_CHK'));

				var j = parent.ds_cond1.Addrow();

				//trace("F_INP== " + F_INP);

				parent.ds_cond1.SetColumn(j, "INP_DT",  F_INP);
				parent.ds_cond1.SetColumn(j, "PSPID",   ds_pop.GetColumn(i,"PSPID"));
				parent.ds_cond1.SetColumn(j, "POSID",   ds_pop.GetColumn(i,"POSID"));
				parent.ds_cond1.SetColumn(j, "GUBUN",   ds_pop.GetColumn(i,"GUBUN"));
				parent.ds_cond1.SetColumn(j, "PRONR",   ds_pop.GetColumn(i,"PRONR"));
				parent.ds_cond1.SetColumn(j, "FSIZE",   0);
				parent.ds_cond1.SetColumn(j, "COM_CHK", "1");
				
				parent.ds_cond1.SetColumn(j, "TYPE",    ds_pop.GetColumn(i,"TYPE"));
				parent.ds_cond1.SetColumn(j, "VER",   	ds_pop.GetColumn(i,"VER"));

				//trace("사진업로드 공정여부: " + ds_pop.GetColumn(i,"FINISH_PIC_YN"));

				//ds_cond3- 이미지 뷰어팝업창에서 에서 담은 파일 데이터셋
				var findRow = ds_cond3.FindRow("PRONR", ds_pop.GetColumn(i,"PRONR")); //PRONR 공정번호

				//완료사진 업로드 여부 체크
				if (ds_pop.GetColumn(i, "VER") >= '005' && length(ds_pop.GetColumn(i,"FINISH_PIC")) > 0 && length(ds_cond3.GetColumn(findRow, "ORGFNAME")) == 0)
				{
					if (ds_pop.getColumn(i, "FIX_COM_CHK") != "1") //이미 등록된 사진이 없을때
					{
						gfn_showAlert(ds_pop.getColumn(i,"PROWRK") + " 완료사진이 업로드 되지 않았습니다.");
						return;
					}
				}

				if (findRow != -1)
				{
					parent.ds_cond1.SetColumn(j, "FDATR", ds_cond3.GetColumn(findRow , "FDATR"));
					parent.ds_cond1.SetColumn(j, "FNAME", ds_cond3.GetColumn(findRow, "FNAME"));
					parent.ds_cond1.SetColumn(j, "FPATH", ds_cond3.GetColumn(findRow, "FPATH"));
					parent.ds_cond1.SetColumn(j, "FSIZE", ds_cond3.GetColumn(findRow, "FSIZE"));
					parent.ds_cond1.SetColumn(j, "ORGFNAME", ds_cond3.GetColumn(findRow, "ORGFNAME"));
				}
			} else {

				if (ds_pop.GetColumn(i, 'COM_CHK') != comCheck)
				{
					//trace("변경데이터 저장: " + ds_pop.GetColumn(i, 'COM_CHK'));

					var j = parent.ds_cond1.Addrow();

					//trace("F_INP== " + F_INP);

					parent.ds_cond1.SetColumn(j, "INP_DT",  F_INP);
					parent.ds_cond1.SetColumn(j, "PSPID",   ds_pop.GetColumn(i,"PSPID"));
					parent.ds_cond1.SetColumn(j, "POSID",   ds_pop.GetColumn(i,"POSID"));
					parent.ds_cond1.SetColumn(j, "GUBUN",   ds_pop.GetColumn(i,"GUBUN"));
					parent.ds_cond1.SetColumn(j, "PRONR",   ds_pop.GetColumn(i,"PRONR"));
					parent.ds_cond1.SetColumn(j, "FSIZE",   0);
					parent.ds_cond1.SetColumn(j, "COM_CHK", "1");
					
					parent.ds_cond1.SetColumn(j, "TYPE",    ds_pop.GetColumn(i,"TYPE"));
					parent.ds_cond1.SetColumn(j, "VER",   	ds_pop.GetColumn(i,"VER"));

					//trace("사진업로드 공정여부: " + ds_pop.GetColumn(i,"FINISH_PIC_YN"));

					//parent.ds_cond1.SetColumn(j, "FINISH_PIC_YN",   ds_pop.GetColumn(i,"FINISH_PIC_YN"));

					//ds_cond3- 이미지 뷰어팝업창에서 에서 담은 파일 데이터셋
					var findRow = ds_cond3.FindRow("PRONR", ds_pop.GetColumn(i,"PRONR")); //PRONR 공정번호

					//완료사진 업로드 여부 체크
					if ( length(ds_pop.GetColumn(i,"FINISH_PIC")) > 0 && length(ds_cond3.GetColumn(findRow, "ORGFNAME")) == 0)
					{
						if (ds_pop.getColumn(i, "FIX_COM_CHK") != "1") //이미 등록된 사진이 없을때
						{
							gfn_showAlert(ds_pop.getColumn(i,"PROWRK") + " 완료사진이 업로드 되지 않았습니다.");
							return;
						}
					}

					if (findRow != -1)
					{
						parent.ds_cond1.SetColumn(j, "FDATR", ds_cond3.GetColumn(findRow , "FDATR"));
						parent.ds_cond1.SetColumn(j, "FNAME", ds_cond3.GetColumn(findRow, "FNAME"));
						parent.ds_cond1.SetColumn(j, "FPATH", ds_cond3.GetColumn(findRow, "FPATH"));
						parent.ds_cond1.SetColumn(j, "FSIZE", ds_cond3.GetColumn(findRow, "FSIZE"));
						parent.ds_cond1.SetColumn(j, "ORGFNAME", ds_cond3.GetColumn(findRow, "ORGFNAME"));
					}
				}// end if (ds_pop.GetColumn(i, 'COM_CHK') != comCheck)

				// 2019.03.20 nwtns lhl 서버의 체크값이 '1' 그대로 라면 즉 변경이 없다면
				//===========================================================================================
				else
				{
					//trace("======= fn_save()_서버의 완료 체크값이 '1' 그대로 START =========");

					if ( ds_pop.GetColumn(i,"FINISH_PIC_YN") == 'Y' )//사진 업로드 공정
					{
						//ds_cond3- 이미지 뷰어팝업창에서 에서 담은 파일 데이터셋
						var rfindRow = ds_cond3.FindRow("PRONR", ds_pop.GetColumn(i,"PRONR")); //PRONR 공정번호

						if (rfindRow != '-1')
						{
							//trace("서버의 체크값이 '1' 그대로: ORGFNAME" + ds_pop.GetColumn(i, 'ORGFNAME')  + ", 선택_ORGFNAME:" + ds_cond3.GetColumn(rfindRow, "ORGFNAME"));

							// 2019.03.20 nwtns lhl - 서버의 등록된 원본 파일명 과 선택한 파일명이 변경 되었는지 확인
							if (ds_pop.GetColumn(i, 'ORGFNAME') != ds_cond3.GetColumn(rfindRow, "ORGFNAME")) {

								var j = parent.ds_cond1.Addrow();

								parent.ds_cond1.SetColumn(j, "INP_DT",  F_INP);
								parent.ds_cond1.SetColumn(j, "PSPID",   ds_pop.GetColumn(i,"PSPID"));
								parent.ds_cond1.SetColumn(j, "POSID",   ds_pop.GetColumn(i,"POSID"));
								parent.ds_cond1.SetColumn(j, "GUBUN",   ds_pop.GetColumn(i,"GUBUN"));
								parent.ds_cond1.SetColumn(j, "PRONR",   ds_pop.GetColumn(i,"PRONR"));
								parent.ds_cond1.SetColumn(j, "COM_CHK", ds_pop.GetColumn(i,"COM_CHK"));
								
								parent.ds_cond1.SetColumn(j, "TYPE",    ds_pop.GetColumn(i,"TYPE"));
								parent.ds_cond1.SetColumn(j, "VER", 	ds_pop.GetColumn(i,"VER"));

								parent.ds_cond1.SetColumn(j, "FDATR", ds_cond3.GetColumn(rfindRow , "FDATR"));
								parent.ds_cond1.SetColumn(j, "FNAME", ds_cond3.GetColumn(rfindRow, "FNAME"));
								parent.ds_cond1.SetColumn(j, "FPATH", ds_cond3.GetColumn(rfindRow, "FPATH"));
								parent.ds_cond1.SetColumn(j, "FSIZE", ds_cond3.GetColumn(rfindRow, "FSIZE"));
								parent.ds_cond1.SetColumn(j, "ORGFNAME", ds_cond3.GetColumn(rfindRow, "ORGFNAME"));


								// 서버파일 삭제
								trace ("삭제할 파일 : Server FPATH: " + ds_pop.GetColumn(i, 'FPATH') + ", FNAME: " + ds_pop.GetColumn(i, 'FNAME'));

								if ( tit_fileDelete("PS", ds_pop.GetColumn(i, 'FNAME'), true) )
								{
									// 삭제 처리 성공
									//trace("fn_save()_서버 파일삭제 성공");
								}
							}
						}
					}

					//trace("======= fn_save()_서버의 완료 체크값이 '1' 그대로 END =========");

				}// 서버의 체크값이 '1' 그대로 라면 즉 변경이 없다면
				//===========================================================================================

			}//end else

		}// end if (ds_pop.GetColumn(i, 'COM_CHK') == '1') //완료체크
		else {

			// 당일 완료체크한 자료인 경우
			if ( ds_pop.GetColumn(i, "FLAG") == '1' && (ds_pop.GetColumn(i, "EDATE") == gfn_getCurrDate() ||  ds_pop.GetColumn(i, "EDATE") == '00000000') ){

				//  trace("당일자료 최초 : " + comCheck + ":" + ds_pop.GetColumn(i, 'COM_CHK'));
				//  trace("당일자료 완료체크 변경상태: " + ds_pop.GetColumn(i, "FIX_COM_CHK") + ":" + ds_pop.GetColumn(i, 'COM_CHK'));

				if (comCheck == '1' && ds_pop.GetColumn(i, 'COM_CHK') != '1')
				{ //이미 완료체크 후 체크 해체 확인버튼 누를때 (당일만 가능)
					var j = parent.ds_cond1.Addrow();

					parent.ds_cond1.SetColumn(j, "INP_DT",  F_INP);
					parent.ds_cond1.SetColumn(j, "PSPID",   ds_pop.GetColumn(i,"PSPID"));
					parent.ds_cond1.SetColumn(j, "POSID",   ds_pop.GetColumn(i,"POSID"));
					parent.ds_cond1.SetColumn(j, "GUBUN",   ds_pop.GetColumn(i,"GUBUN"));
					parent.ds_cond1.SetColumn(j, "PRONR",   ds_pop.GetColumn(i,"PRONR"));
					parent.ds_cond1.SetColumn(j, "FSIZE",   0);
					parent.ds_cond1.SetColumn(j, "COM_CHK", "0");
					
					parent.ds_cond1.SetColumn(j, "TYPE",    ds_pop.GetColumn(i,"TYPE"));
					parent.ds_cond1.SetColumn(j, "VER",   	ds_pop.GetColumn(i,"VER"));
				}
			}
		}
	} //end for

	//trace("확인버튼_end for : " + parent.ds_cond1.rowcount);

    //선택한 완료사진이 있으면 , 사진업로드 후 데이터를 저장한다.
	fn_picServer_save();

    //2019.03.10 nwtns lhl 완료체크 항목만 저장 : 완료체크 추가 또는 변경된 자료가 있을 경우
	fn_comCheck_save();

	fn_close();
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성
//=========================================================================================
/********************************************************************************
* 기      능   : 사진코드 ',' 기준으로 split
********************************************************************************/
function ufn_pictureSplit()
{
	for (var i=0; i< ds_pop2.rowcount(); i++) // =
	{
		if( length(ds_pop2.GetColumn(i,'QUALITY_PIC')) > 0 )
		{
			//trace( i +"::"+ "QUALITY_PIC== " +ds_pop2.GetColumn(i,'QUALITY_PIC'));
		}
    }
}

function fn_afterQuery2(errCode, errMsg) {
	// 메시지 처리
	gfn_showSearchMsg(tab00.tab2.grd_list3);
}

/********************************************************************************
* 기      능   : 저장 Callback
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
	if ( ds_error.rowcount() > 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
	}
}

/********************************************************************************
* 기      능   : 데이터셋 값 변경 시 - Flag 처리
********************************************************************************/
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	gfn_changeFlag( obj, strColumnID, nRow, "FLAG" );
}

/********************************************************************************
* 기      능   : ufn_afterSelectFile Sring ',' 짜른 데이터를 데이터셋에 중첩
********************************************************************************/
function ufn_afterSelectFile()
{
	ds_files.AppendDataset(ds_file);
}

/********************************************************************************
* 기      능   : 그리드 셀 클릭 시 이벤트
********************************************************************************/
function grd_pop_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	var arrQualityPic = "";
	var arrFinishPic  = "";

	if (nCell == 5) //TODO:: 품질사진 이미지뷰어 띄우기
	{
		if (ds_pop.GetColumn(nRow, 'QUALITY_PIC_YN') == 'Y')
		{
			//trace(ds_pop.GetColumn(nRow,'QUALITY_PIC'));
			arrQualityPic = Split(ds_pop.GetColumn(nRow,'QUALITY_PIC'),',');
			ds_files.ClearData();
			ds_cond.ClearData();
			ds_cond.AddRow();

			ds_cond.SetColumn(0, "SEQNO", arrQualityPic[0]);
			tit_clearActionInfo();
			tit_addSearchActionInfo("ps02:PS0208001C_S1");
			tit_callService(
				""
				, ""
				, "ds_cond=ds_cond"
				, "ds_file=ds_file"
				, ""
				, "ufn_afterSelectFile"
				, true);

			var arg = "GUBUN=" + quote("Q");
			arg+= " _P_FNAME=" + quote("");
			var arr = gfn_openPopupUrl("PS02::PS0208001C.xml", true, arg);
		}
	}

	if (nCell == 6) //TODO:: 사진업로드
	{
	    //사진업로드를 해야하는 공정이며, 해당 공정의 샘플 이미지 파일을 조회한다.
		if (ds_pop.GetColumn(nRow, 'FINISH_PIC_YN') == 'Y')
		{
			var gubun = "N"; //서버에도 , 당일에도 사진이 없는 상태

			_UPLOAD_NROW = nRow;
			arrFinishPic = Split(ds_pop.GetColumn(nRow,'FINISH_PIC'),',');

			ds_files.ClearData();

			for (var i = 0 ; i < Length(arrFinishPic) ; i++)
			{
				ds_cond.ClearData();
				ds_cond.AddRow();
				ds_cond.SetColumn(0, "SEQNO", arrFinishPic[i]);

				tit_clearActionInfo();
				tit_addSearchActionInfo("ps02:PS0208001C_S1");  //공정별 샘플 사진정보
				tit_callService(
					""
					, ""
					, "ds_cond=ds_cond"
					, "ds_file=ds_file"
					, ""
					, "ufn_afterSelectFile"
					, true);
			}

			var argDay= "";

			//완료사진 업로드 여부 체크
			if (length( ds_pop.GetColumn(nRow, "FNAME") ) <= 0) //서버에 등록된 사진이 없을때
			{
			    //ds_cond3- 당일 이미지 뷰어팝업창에서 에서 담은 파일 데이터셋
				var findRow = ds_cond3.FindRow("PRONR", ds_pop.GetColumn(nRow,"PRONR")); //PRONR 공정번호

				if (findRow == -1) //당일도 없다면
					gubun = "N";  //이미지 뷰어팝업창에서 샘플 이미지를 보여주고, 파일을 선택 바를 보이게 함.
			    else {   //있다면

			        if (length(ds_cond3.GetColumn(findRow, 'FNAME')) <= 0)
			        {
						gubun = "N"; //삭제처리 되었다면

						ds_cond3.deleteRow(findRow);

			        }
			        else {
						gubun = "D"; //이미지 뷰어팝업창에서 임시저장한 파일을 보이게하고, 파일선택바를 보이게  함.

						argDay = " UPLOAD_NROW=" + quote(_UPLOAD_NROW);
						argDay += " PRONR=" + quote(ds_cond3.GetColumn(findRow, 'PRONR'));
						argDay += " _P_FPATH=" + quote(ds_cond3.GetColumn(findRow, 'FPATH'));
						argDay += " _P_ORGFNAME=" + quote(ds_cond3.GetColumn(findRow, 'ORGFNAME'));
						argDay += " _P_FNAME=" + quote(ds_cond3.GetColumn(findRow, 'FNAME'));
						argDay += " _P_FSIZE=" + quote(ds_cond3.GetColumn(findRow, 'FSIZE'));
						argDay += " _P_FDATR=" + quote(ds_cond3.GetColumn(findRow, 'FDATR'));
					}
				}

			    //gubun = "F"; //이미지 뷰어팝업창에서 파일을 선택 바를 보이게 함.
			}
			else { //  있다면
			    //trace( "서버에 파일이 있음 : "  + ds_pop.GetColumn(nRow, "FNAME") );
			   // ORGFNAME

			    //=========================================================================================
			    //현재 다시 재 선택 또는 삭제 변경한게 있는지 확인 한다
			    var findRow = ds_cond3.FindRow("PRONR", ds_pop.GetColumn(nRow,"PRONR")); //PRONR 공정번호

				if (findRow == -1) { //없다면

				    //trace( " 현재 다시선택한 파일이 없음_COM_CHK : "  + ds_pop.GetColumn(nRow, 'COM_CHK'));

				    if(ds_pop.GetColumn(nRow, 'COM_CHK') == "1")
			        {
			            //trace( " 현재 다시선택한 파일이 없음");
						gubun = "S"; //이미지 뷰어팝업창에서 파일을 선택 바를 보이게 함.
					} else {
					    gubun = "N";
					}
				}
			    else { // 있다면
					//trace("서버에 있는데 현재 다시 선택 하셨습니다.  ");

					if (ds_cond3.GetColumn(findRow, 'FNAME') == "")
					{
						//trace( " 현재 다시선택한 파일을 삭제하셔서 서버에 등록된 파일을 다시 보여 줍니다.");
						//trace( " ds_cond3 count : " + ds_cond3.rowcount);

						gubun = "N";
					}
					else {

						//trace( " 현재 다시선택한 파일을 보여 줍니다.");


						gubun = "D"; //이미지 뷰어팝업창에서 임시저장한 파일을 보이게하고, 파일선택바를 보이게  함.
						argDay = "";

						argDay = " UPLOAD_NROW=" + quote(_UPLOAD_NROW);
						argDay += " PRONR=" + quote(ds_cond3.GetColumn(findRow, 'PRONR'));
						argDay += " _P_FPATH=" + quote(ds_cond3.GetColumn(findRow, 'FPATH'));
						argDay += " _P_ORGFNAME=" + quote(ds_cond3.GetColumn(findRow, 'ORGFNAME'));
						argDay += " _P_FNAME=" + quote(ds_cond3.GetColumn(findRow, 'FNAME'));
						argDay += " _P_FSIZE=" + quote(ds_cond3.GetColumn(findRow, 'FSIZE'));
						argDay += " _P_FDATR=" + quote(ds_cond3.GetColumn(findRow, 'FDATR'));
					}
				}
			}

			if ( ds_pop.GetColumn(nRow,'FLAG') != "1" ) // 완료공정 단계가 아니면
			{
			    gubun = "B";
			}

			//gubun 값에 따른 arg 정리
			var arg = "GUBUN=" + quote(gubun);

			if (gubun == 'D') { // 업로드 전 당일 선택 파일이면,
				arg+= argDay;
			} else {
				arg+= " UPLOAD_NROW=" + quote(_UPLOAD_NROW);
				arg+= " PRONR=" + quote(ds_pop.GetColumn(nRow, 'PRONR'));
				arg+= " _P_FPATH=" + quote(ds_pop.GetColumn(nRow, 'FPATH'));
				arg+= " _P_ORGFNAME=" + quote(ds_pop.GetColumn(nRow, 'ORGFNAME'));
				arg+= " _P_FNAME=" + quote(ds_pop.GetColumn(nRow, 'FNAME'));
				arg+= " _P_FSIZE=" + quote(ds_pop.GetColumn(nRow, 'FSIZE'));
				arg+= " _P_FDATR=" + quote(ds_pop.GetColumn(nRow, 'FDATR'));
		    }
		    arg += ' F_SELECTABLE=' + quote(F_SELECTABLE);

		    //trace("이미지 뷰(arg) ==" + arg);

		    //호출전 체크상태
		    var be_ComCheck = ds_pop.GetColumn(nRow, "COM_CHK");

		    //trace("사진선택 호출전_체크상태 : " + ds_pop.GetColumn(nRow, "COM_CHK"));

			var arr = gfn_openPopupUrl("PS02::PS0208001C.xml", true, arg);

			//당일 완료공정율 계산
			//trace("사진 선택 호출 후_체크상태 : " + ds_pop.GetColumn(nRow, "COM_CHK"));

			//호출 후
			if (be_ComCheck != ds_pop.GetColumn(nRow, "COM_CHK") == '1') //호출 전, 후 가 다르면
			{
				if (be_ComCheck == '1' ) { //호출전 값이 체크상태(1)
					if(ds_pop.GetColumn(nRow, "COM_CHK") == '0') // 호출 후 언체크상태면
						ufn_setTodaysVal2(nRow, 7, 1);   // 1 : 호출저 상태
				} else {
					if(ds_pop.GetColumn(nRow, "COM_CHK") == '1') // 호출 후 체크상태면
						ufn_setTodaysVal2(nRow, 7, 0);	// 0 : 호출전 상태
				}
		    }
		}
	}

	// 완료체크
	var bDayComCal = false; //완료공정체크시 하단 summary 대상 여부

	if (nCell == 7) //완료체크시
	{
		//2019.03.10 nwtns lhl
		/* 그리드 디자인 속성에 아래와 같이 제약사항을 정의함.
		1. 셀 속성(Edit(e)) : expr:iif(FLAG == '1', iif(EDATE == gfn_getCurrDate() , 'checkbox' ,iif(FIX_COM_CHK != 1, 'checkbox', 'none'))  ,'none')

		2. 완료체크 체크처리 제약사항
		1. 완료체크 공정 단계 확인 : flag  == 1
		2. 당일입력한 자료인지 확인 : EDATE == gfn_getCurrDate()
		2.1 당일자료 이면 (check, uncheck 가능) :  체크 박스표시

		3 완료사진을 업로드 해야 하는 공정인지?  : FINISH_PIC_YN  == 1 ( 사진업로드 공정 이라면)
		3.1 완료등록된 사진이 있는지 확인 확인?  : FINISH_PIC
		처리) 없다면 완료체크할 수 없게, 있으면 체크할 수 있도록 함.

		4. 당일이 아니면 조회된 상태 그대로 표시
		*/

		//데이터셋(ds_pop) 의 flag 값으로 체크 / 언체크 처리 합니다.
		ds_pop.SetColumn(nRow, "FLAG", ds_pop2.GetColumn(nRow, 'FLAG') ); //초기 조회시의 flag 값으로 다시 셋팅

		var serverEdate = ds_pop.GetColumn(nRow, 'EDATE');

		//trace("완료체크_완료체크일자 :" + serverEdate );
		//trace("완료체크_사진등록 대상 여부  확인 :" + ds_pop.GetColumn(nRow, 'FINISH_PIC_YN') );
		//trace("완료체크 공정 가능 단계 인지?:" + ds_pop.GetColumn(nRow, 'FLAG') );

		if (ds_pop.GetColumn(nRow, 'FLAG') == '0') {
			//trace("완료체크 공정 가능 단계가 아닙니다.");
		}

		if(ds_pop.GetColumn(nRow, 'FINISH_PIC_YN') == 'Y') { //완료사진을 업로드 해야되는 공정이라면

			bDayComCal = false; //당일 완료누계 계산 안함
		}
		else { // 완료 사진 업로드가 필요없는 공정

			//trace("완료 사진 업로드가 필요없는 공정 :" + ds_pop.GetColumn(nRow, 'FIX_COM_CHK')) ;
			//trace("완료 일자_EDATE :" + ds_pop.GetColumn(nRow, 'EDATE')) ;

			if (ds_pop.GetColumn(nRow, "FLAG") == '1') {

				bDayComCal = true;

				//trace("합산_전: " + ds_pop.GetColumn(nRow, "COM_CHK"));

				// 당일 완료체크한 자료인 경우
				if ( ds_pop.GetColumn(nRow, "EDATE") == gfn_getCurrDate() || ds_pop.GetColumn(nRow, "EDATE") == '00000000' ) {

					//trace("완료 일자_EDATE 가 당일") ;
				}
				else {
					//trace("완료 일자_EDATE 가 당일이 아님") ;
					//bDayComCal = false;
				}
			}
		}
	} // end if nCell

	//trace("F_ACTIVE:" + F_ACTIVE + ":" + "F_CHK:" + F_CHK);

	//일보공정항목 체크시 누계 값 처리 : 2019.03.12 nwtns lhl
	if ( (F_CHK == 'N' && F_COPY == 'X') || (F_CHK == 'Y' && F_ACTIVE == "Y") ) { // 입력 분 또는 미입력 분에서 작업시간을 체크를 했다면

		if (F_CHK == 'N' && nCell == 4){ //입력분에 일보공정 체크시 라면
		
			// 안전승인일자 체크 시작 2021.04.08
			var chksafe = parseInt(ds_pop.GetColumn(nRow, 'CHKSAFE'));			
				
			if( chksafe > 0 ) {				
				gfn_alert("안전조치 항목이 승인되어야 이후 공정을 진행할 수 있습니다. 담당PM에게 문의 바랍니다.");
			}			
			// 안전승인일자 체크 끝		
		
			var curCol = grd_pop.GetCellProp("body",nCell,"COLID");

			//trace("======= 입력분에 일보공정 체크 ======== " ) ;

			//trace("curCol2 : " + ds_pop.GetColumn(nRow, curCol));

			if ( nX == 'key')
			{
				ufn_setTodaysVal(nRow, nCell, ds_pop.GetColumn(nRow, curCol), nX);
			}
			else
			{
				ufn_setTodaysVal(nRow, nCell, ds_pop.GetColumn(nRow, curCol));
			}
		}
		else {
		    //trace("======= 미입력분 / F_COPY 에 일보공정 체크 ======== " ) ;

			if ( (nCell == 4 && F_ACTIVE == 'Y')  && ( (nCell == 4 && F_CHK == "Y") or (nCell == 4 && F_COPY == "X")) )
			{
			
				// 안전승인일자 체크 시작 2021.04.08
				var chksafe = parseInt(ds_pop.GetColumn(nRow, 'CHKSAFE'));			
					
				if( chksafe > 0 ) {				
					gfn_alert("안전조치 항목이 승인되어야 이후 공정을 진행할 수 있습니다. 담당PM에게 문의 바랍니다.");
				}			
				// 안전승인일자 체크 끝
			
				var curCol = grd_pop.GetCellProp("body",nCell,"COLID");

				//trace("curCol : " + curCol);

				//trace("curCol2 : " + ds_pop.GetColumn(nRow, curCol));

				if ( nX == 'key')
				{
					ufn_setTodaysVal(nRow, nCell, ds_pop.GetColumn(nRow, curCol), nX);
				}
				else
				{
					ufn_setTodaysVal(nRow, nCell, ds_pop.GetColumn(nRow, curCol));
				}
			}
		}
	}

	//2019.03.14 nwtns lhl 당일분  완료 공정율 합산
	if(bDayComCal) {

		//var curCol = grd_pop.GetCellProp("body",nCell,"COLID");

		//trace("합산: " + curCol + ":" + ds_pop.GetColumn(nRow, curCol) );

		//완료항목 체크시 당일공정율 합계 계산
		if ( nX == 'key')
		{
			if (ds_pop.GetColumn(nRow, "COM_CHK") == '1')
				ufn_setTodaysVal2(nRow, nCell, 1, nX);   // 0: 호출후  상태
			else //0 또는 ''
			    ufn_setTodaysVal2(nRow, nCell, 0, nX);   // 1: 호출후  상태

			//ufn_setTodaysVal2(nRow, nCell, ds_pop.GetColumn(nRow, curCol), nX);
		}
		else
		{
			if (ds_pop.GetColumn(nRow, "COM_CHK") == '1')
				ufn_setTodaysVal2(nRow, nCell, 1);   // 0: 호출후  상태
			else//0 또는 ''
			    ufn_setTodaysVal2(nRow, nCell, 0);   // 1: 호출후  상태

			//ufn_setTodaysVal2(nRow, nCell, ds_pop.GetColumn(nRow, curCol));
		}
    }
}

function grd_pop_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,nLLParam,nHLParam)
{
	var lv_value;

	//일보공정체크
	if ((nChar == 32 && obj.CurrentCell == 4 && F_CHK == "Y") or (nChar == 32 && obj.CurrentCell == 4 && F_COPY == "X"))
    {
        grd_pop_OnCellClick(obj, obj.CurrentRow, obj.CurrentCell, 'key');
	}

	//2019.03.14 nwtns 완료체크 항목 추가
	if (nChar == 32 && obj.CurrentCell == 7) { //  or (nChar == 32 && obj.CurrentCell == 7 && F_COPY == "X") ) {
       //2019.03.12 nwtns lhl  체크박스 체크값 확인 후 처리하도록 수정
 	   grd_pop_OnCellClick(obj, obj.CurrentRow, obj.CurrentCell, 'key');
	}
}

/********************************************************************************
* 기      능   : 당일 공정률 계산(일보공정 체크항목)
********************************************************************************/
function ufn_setTodaysVal(nRow, nCell, val,key) {

	//trace("val== " + val);
	//trace("key== " + key);

	var curCol = grd_pop.GetCellProp("body",nCell,"COLID");

	var pree = nCell-4+1;
	var midd = parseInt(grd_pop.GetColCount()) - 3;
	var endd = parseInt(grd_pop.GetColCount()) - 3;
	var preVal = ParseFloat(grd_pop.GetCellProp("summary", pree, "Text"));
    var curVal = ParseFloat(grd_pop.GetCellProp("summary", endd, "Text"));

	if (curCol == 'DAY_PROCESS') {

		if (val==0) {
			if ( key == 'key' )
				curVal = ParseFloat(curVal) - ParseFloat(ds_pop.GetColumn(nRow, "PRO_R"));
			else
				curVal = ParseFloat(curVal) + ParseFloat(ds_pop.GetColumn(nRow, "PRO_R"));

		} else if(val==1) {
			if ( key == 'key' ) curVal = ParseFloat(curVal) + ParseFloat(ds_pop.GetColumn(nRow, "PRO_R"));
			else curVal = ParseFloat(curVal) - ParseFloat(ds_pop.GetColumn(nRow, "PRO_R"));
		}
	}

	trace("ufn_setTodaysVal curVal== " + curVal);
/*	trace("nRow== " + nRow);
	trace(ds_pop.GetColumn(nRow, "COM_CHK"));
	trace(grd_pop.GetCellProp("body", "7", "Edit"));
	trace(grd_pop.GetCellRect(nRow, "7"));
*/
	grd_pop.SetCellProp("summary", midd, "Text", curVal );
}

/********************************************************************************
* 기      능   : 당일 공정률 계산(완료체크항목)
********************************************************************************/
function ufn_setTodaysVal2(nRow, nCell, val,key){

	//trace("nCell == " + nCell);
	//trace("ufn_setTodaysVal2 val== " + val);
	//trace("ufn_setTodaysVal2 key== " + key);
	//trace("grd_pop.GetColCount() == " + grd_pop.GetColCount());

	var curCol = grd_pop.GetCellProp("body",nCell,"COLID");

	var pree = nCell-4+1; //누계 공정율 셀 위치(4) : 7-4+1 = 4
	var midd = parseInt(grd_pop.GetColCount()); //당일 공정율의 완료공정율 셀 위치
	var endd = parseInt(grd_pop.GetColCount()); //당일 공정율의 완료공정율 셀 위치

	var preVal = ParseFloat(grd_pop.GetCellProp("summary", pree, "Text")); //누계공정율의 완료공정율 셀의 값
    var curVal = ParseFloat(grd_pop.GetCellProp("summary", endd, "Text")); //누계공정율의 완료공정율 셀의 값

/*
	trace("curVal== " + curVal);

    trace("midd== " + midd);
	trace("endd== " + endd);

	trace("preVal== " + preVal);
	trace("curVal== " + curVal);
*/
	//당일 완료공정율
	if (curCol == 'COM_CHK') {
	    //trace("COM_CHK val == " + val);

	    if (val== 0) { //
			if ( key == 'key' )
				curVal = ParseFloat(curVal) - ParseFloat(ds_pop.GetColumn(nRow, "PRO_R"));
			else
				curVal = ParseFloat(curVal) + ParseFloat(ds_pop.GetColumn(nRow, "PRO_R"));

		} else if (val==1) {

			if ( key == 'key' ) {
			    //PRO_R == 1
				curVal = ParseFloat(curVal) + ParseFloat(ds_pop.GetColumn(nRow, "PRO_R"));
			} else {
				//trace("COM_CHK PRO_R == " + ds_pop.GetColumn(nRow, "PRO_R"));

				curVal = ParseFloat(curVal) - ParseFloat(ds_pop.GetColumn(nRow, "PRO_R"));
			}
		}
	}

	grd_pop.SetCellProp("summary", midd, "Text", curVal );
}

/********************************************************************************
* 기      능   : 확인 버튼 눌렀을때
*                완료체크항목 저장시 최초 조회한 값과 변경된 값 비교
********************************************************************************/
function fn_findInitComCheck(pronr)
{
   var chkCom = -1;

//   trace("find pronr:" + pronr ) ;

   if (ds_initComChk.rowcount > 0)
   {
       for (var i = 0; i < ds_initComChk.rowcount; i++) // =
       {
			var findRow = ds_initComChk.FindRow("PRONR", pronr); //PRONR 공정번호

			if (findRow == -1) {
				return -1;
			}
			else {
				chkCom = ds_initComChk.GetColumn(i,"COM_CHK");
				//trace("return chkCom:" + chkCom ) ;

				return chkCom;
			}
       }
   }

//	trace("return chkCom:" + chkCom ) ;

	return chkCom;
}

/********************************************************************************
* 기      능   : 공정표 팝업 화면에서 확인 버튼을 눌렀을 때 완료체크 항목 저장
********************************************************************************/
function fn_comCheck_save()
{
    //trace("완료체크 항목 저장: start") ;
	//trace("완료체크 항목 수: " + parent.ds_cond1.rowcount + " 건") ;
		
	// ASISERROR  21.04.28 INS_GBN UPDATE 하지않음	
	if (parent.ds_cond1.rowcount > 0) //완료 데이터셋이 있을때 업데이트
	{
		tit_clearActionInfo();
		tit_addMultiActionInfo("ps02:PS0208001A_U4");   //zpstW0301 HEAD
		tit_callService(
			""
			, ""
			, "ds_cond1=ds_cond1"
			, ""
			, ""
			, "fn_afterUpdates"
			, ""
			, ""
			, true);

		fn_ps1205001_save();

 	}
 	//trace("완료체크 항목 저장:  end") ;
}

/********************************************************************************
* 기      능   : 완료처리 후 Callback
********************************************************************************/
function fn_afterUpdates(errCode, errMsg) {

	//trace("fn_afterUpdates == " + errCode);
	if ( errCode != 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003"  + "완료체크 공정 저장을 완료했습니다.");
	}
}

function fn_picServer_save() {
    //trace("이미지뷰 선택 사진 저장 : " + parent.ds_cond3.rowcount);

	if (parent.ds_cond3.rowcount > 0)
	{
	    for (var k = 0; k < parent.ds_cond3.rowcount; k++) // =
		{
		    //trace("KKKKK : " +  k );

		    if (k == 0) {
		        ds_file_safe.ClearData();
		    }
            ds_file_safe.AddRow();

		    var prono = parent.ds_cond3.GetColumn(k, "PRONR"); //공정번호

		    var _F_FILE_DIR = parent.ds_cond3.GetColumn(k, "FPATH");
		    var _F_FILE_NAME = parent.ds_cond3.GetColumn(k, "ORGFNAME");

		    ds_file_safe.SetColumn(k, 'FPATH', _F_FILE_DIR);
		    ds_file_safe.SetColumn(k, 'FNAME', _F_FILE_NAME);

		    //trace("fn_picServer_save_PRONR : " + prono );
		    //trace("_F_FILE_DIR : " + _F_FILE_DIR );
		    //trace("_F_FILE_NAME : " + _F_FILE_NAME );
		    
			var arr = tit_fileWrite(httpFile1
				, "PS"				//serverSaveDir
				, _F_FILE_DIR		//localFilePath
				, _F_FILE_NAME		//localFileName
				, _F_FILE_NAME		//sendFileName
				, ""	  			// time stamp를 붙이지 않을 경우 U 사용
				, ""
			);

			//서버송신 결과
			trace("이미지 서버 송신 결과 arr[0] : " + arr[0] + " arr[1] : " +  arr[1] + " arr[2] : " +  arr[2]);

			var _N_FILE_DIR = arr[1];
		    var _N_FILE_NAME = arr[2];

			if ( arr[0] == "S" ) {

				_send_file = true;

				//parent.ds_cond3.setColumn(k, "FPATH", arr[1]);
				//parent.ds_cond3.setColumn(k, "FNAME", arr[2]);
				//parent.ds_cond3.setColumn(k, "FSIZE", ToNumber(arr[3]));

				//완료 데이터 셋 정보를 업데이트
				if (parent.ds_cond1.rowcount > 0)
				{
				    var findRow = parent.ds_cond1.FindRow("PRONR", prono); //PRONR 공정번호

				    //trace("fn_picServer_save_findRow : " + findRow );

				    if (findRow == -1){
						//trace("fn_picServer_save_findRow : " + findRow );
				    }
				    else {
				        //trace("PRONR : " + prono + " , " + " _N_FPATH: " + _N_FILE_DIR + " ,_N_FNAME: " + _N_FILE_NAME );

						parent.ds_cond1.SetColumn(findRow, "FPATH",   _N_FILE_DIR);
						parent.ds_cond1.SetColumn(findRow, "FNAME",   _N_FILE_NAME);
						//parent.ds_cond1.SetColumn(findRow ,"FSIZE",   ToNumber(arr[3]);
					}
				}
			}
			else  //if ( arr[0] != "S" )
			{
			    gfn_showMsg("CW00035");
				return;
			}

		}// end for
	} //end if
}

function ufn_lastIndexOf(sParmString)
{
	var j = 0;//.위치
	var k = 0;// 결과위치
	var k = 0;//.위치 -1

	while (true)
	{
		r = pos(sParmString,".",j);

		if (r == -1)
		{
			break;
		}

		j=r+1;
	}
	k = j;

	return k;
}

function grd_pop_OnCellDBLClick (obj, nRow, nCell, nX, nY, nPivotIndex) {
	if (F_SELECTABLE == 'Y') {
		var content = ds_pop.GetColumn(nRow, 'PROWRK');
		parent.fn_set_ed_wk_desc(content);
		close();
    }
}

function fn_ps1205001_save() {

	ds_sms.ClearData();
	ds_cond1_temp.ClearData();
	
	trace('start fn_ps1205001_save parent.ds_cond1.rowcount => ' + parent.ds_cond1.rowcount);
	
	
	for (var i = 0; i < parent.ds_cond1.rowcount; i++) {
		trace(i + 'PSPID : ' + parent.ds_cond1.GetColumn(i, 'PSPID'));
		trace(i + 'INP_DT : ' + parent.ds_cond1.GetColumn(i, 'INP_DT'));
		trace(i + 'POSID : ' + parent.ds_cond1.GetColumn(i, 'POSID'));
		trace(i + 'GUBUN : ' + parent.ds_cond1.GetColumn(i, 'GUBUN'));
		trace(i + 'PRONR : ' + parent.ds_cond1.GetColumn(i, 'PRONR'));
		trace(i + 'COM_CHK : ' + parent.ds_cond1.GetColumn(i, 'COM_CHK'));
		trace(i + 'FPATH : ' + parent.ds_cond1.GetColumn(i, 'FPATH'));
		trace(i + 'ORGFNAME : ' + parent.ds_cond1.GetColumn(i, 'ORGFNAME'));
		trace(i + 'FNAME : ' + parent.ds_cond1.GetColumn(i, 'FNAME'));
		trace(i + 'FSIZE : ' + parent.ds_cond1.GetColumn(i, 'FSIZE'));
		trace(i + 'FDATR : ' + parent.ds_cond1.GetColumn(i, 'FDATR'));
		//trace(i + 'TYPE : ' + F_TYPE);
		//trace(i + 'VER : ' + F_VER);
		// 기존에 하는 방식에서 TYPE, VER 정보가 사라지는 현상이 있어 로직을 변경  조회 시 ds_cond1 에서 TYPE 을 추가 해서 값을 같이 가져온다.
		trace(i + 'TYPE : ' + parent.ds_cond1.GetColumn(i, 'TYPE'));
		trace(i + 'VER : ' + parent.ds_cond1.GetColumn(i, 'VER'));

		//parent.ds_cond1.SetColumn(i, 'TYPE', F_TYPE);
		//parent.ds_cond1.SetColumn(i, 'VER', F_VER);
		
		ds_cond1_temp.DeleteAll();
		ds_cond1_temp.AddRow();
		//ds_cond1_temp.CopyRow(ds_cond1_temp.currow, ds_cond1, ds_cond1.currow );
		
		// 위에서 for문이 도는데 데이터의 인덱스 대로 들어 가는게 아니라 첫번째 값만 들어 간다. 그래서 강제로 돌때 마다 값을 넣어줌
		ds_cond1_temp.setColumn(0, "PSPID", parent.ds_cond1.GetColumn(i, "PSPID"));
		ds_cond1_temp.setColumn(0, "INP_DT", parent.ds_cond1.GetColumn(i, "INP_DT"));
		ds_cond1_temp.setColumn(0, "POSID", parent.ds_cond1.GetColumn(i, "POSID"));
		ds_cond1_temp.setColumn(0, "GUBUN", parent.ds_cond1.GetColumn(i, "GUBUN"));
		ds_cond1_temp.setColumn(0, "PRONR", parent.ds_cond1.GetColumn(i, "PRONR"));
		ds_cond1_temp.setColumn(0, "COM_CHK", parent.ds_cond1.GetColumn(i, "COM_CHK"));
		ds_cond1_temp.setColumn(0, "FPATH", parent.ds_cond1.GetColumn(i, "FPATH"));
		ds_cond1_temp.setColumn(0, "ORGFNAME", parent.ds_cond1.GetColumn(i, "ORGFNAME"));
		ds_cond1_temp.setColumn(0, "FNAME", parent.ds_cond1.GetColumn(i, "FNAME"));
		ds_cond1_temp.setColumn(0, "FSIZE", parent.ds_cond1.GetColumn(i, "FSIZE"));
		ds_cond1_temp.setColumn(0, "FDATR", parent.ds_cond1.GetColumn(i, "FDATR"));
		ds_cond1_temp.setColumn(0, "TYPE", parent.ds_cond1.GetColumn(i, "TYPE"));
		ds_cond1_temp.setColumn(0, "VER", parent.ds_cond1.GetColumn(i, "VER"));
		
		tit_clearActionInfo();
		tit_addSearchActionInfo("ps12:PS1205001A_S4");   // 2021.04.26 PRONR 무조건 첫번째 완료체크 PRONR
		tit_callService(
			""
			, ""
			, "ds_cond=ds_cond1_temp"
			, "ds_gbn=ds_gbn"
			, ""
			, ""
			, ""
			, ""
			, true);
		
		trace('detected gbn : ' + ds_gbn.GetColumn(0, 'GBN') + ', gno_step : ' + ds_gbn.GetColumn(0, 'GNO_STEP'));
		//parent.ds_cond1.SetColumn(0, 'GBN', ds_gbn.GetColumn(0, 'GBN'));
		//parent.ds_cond1.SetColumn(0, 'GNO', ds_gbn.GetColumn(0, 'GNO'));
		//parent.ds_cond1.SetColumn(0, 'GNO_STEP', ds_gbn.GetColumn(0, 'GNO_STEP'));
		
		// 21.04.26 수정
		parent.ds_cond1.SetColumn(i, 'GBN', ds_gbn.GetColumn(0, 'GBN'));
		parent.ds_cond1.SetColumn(i, 'GNO', ds_gbn.GetColumn(0, 'GNO'));
		parent.ds_cond1.SetColumn(i, 'GNO_STEP', ds_gbn.GetColumn(0, 'GNO_STEP'));
		
		ds_cond1_temp.SetColumn(ds_cond1_temp.currow, 'GBN', ds_gbn.GetColumn(0, 'GBN'));
		ds_cond1_temp.SetColumn(ds_cond1_temp.currow, 'GNO', ds_gbn.GetColumn(0, 'GNO'));
		ds_cond1_temp.SetColumn(ds_cond1_temp.currow, 'GNO_STEP', ds_gbn.GetColumn(0, 'GNO_STEP'));		

		if (Length(parent.ds_cond1.GetColumn(i, 'FNAME')) == 0) {
			// 안전사진 삭제 처리
			if (ds_gbn.RowCount() > 0 && Length(ds_gbn.GetColumn(0, 'GBN')) > 0) {
		
				tit_clearActionInfo();
				tit_addSearchActionInfo('wb01:WB0199061A_S4');
				tit_callService(
					""
					, ""
					, "ds_cond3=ds_cond1_temp"
					, ""
					, ""
					, ""
					, ""
					, ""
					, true);
				
				if(ds_cond3.getRowCount() > 0)
				{
					tit_clearActionInfo();
					tit_addMultiActionInfo('wb01:WB0199061A_D2');
					tit_addMultiActionInfo('wb01:WB0199061A_D1');
					tit_callService(
						""
						, ""
						, "ds_cond3=ds_cond1_temp ds_list2_tmp=ds_cond1_temp"
						, ""
						, ""
						, ""
						, ""
						, ""
						, true);
				}
				
				
				var gno_step = ds_gbn.GetColumn(0, 'GNO_STEP');
				if (Length(gno_step) != '') {
					var args = '';
					if (gno_step == '1') {
						args = "STEP1_DT = '00000000', STEP1_ID = '', APPR1_DT = '00000000', APPR1_ID = '', RJCT1_DESC = ''";
					} else if (gno_step == '2') {
						args = "STEP2_DT = '00000000', STEP2_ID = '', APPR2_DT = '00000000', APPR2_ID = '', RJCT2_DESC = ''";
					} else if (gno_step == '3') {
						args = "STEP3_DT = '00000000', STEP3_ID = '', APPR3_DT = '00000000', APPR3_ID = '', RJCT3_DESC = ''";
					}
					/*
					tit_clearActionInfo();
					tit_addSingleActionInfo('ps12:PS1205001A_U4');
					tit_callService(
						""
						, ""
						, "ds_list2_tmp=ds_cond1_temp"
						, ""
						, " QUERY=" + quote( args )
						, ""
						, ""
						, ""
						, true);
						*/
				}
			}
		} else if (ds_gbn.RowCount() > 0 && Length(ds_gbn.GetColumn(0, 'GBN')) > 0) { // 안전사진 등록 처리
			tit_clearActionInfo();
			tit_addSearchActionInfo("wb01:WB0199061A_S1");			
			tit_addSearchActionInfo("ps02:PS0207004A_S2"); // 2021.06.01 근무시간, 휴일체크 : 근무시간이면 'CURRENT', 근무외시간 휴일이면 가까운 근무시간 리턴
			tit_callService(
				""
				, ""
				, "ds_cond=ds_cond1_temp"
				, "ds_list_safe=ds_list ds_reqdate=ds_reqdate"
				, ""
				, ""
				, ""
				, ""
				, true);

			if (ds_list_safe.RowCount() > 0) {
				trace('안전사진 업로드 로직 시작 i => ' + i);

				// ASISERROR   21.04.26 fn_ps1205001_checkSave() => 반환값 무조건 TRUE 
				if(fn_ps1205001_checkSave()) {
					trace('체크로직 통과 i => ' + i);

					var fileName = left(GetDate(),8)+"_"+right(GetDate(),6)+"_"+ds_list_safe.getColumn(0, "GBN")+"_"+ds_list_safe.getColumn(0, "PSPID");
					
					// ASISERROR   21.04.27 변수i는 ds_cond1의  카운트 변수이므로  ds_file_safe와 매핑 안됨
					ds_list_safe.SetColumn(0, 'FPATH', ds_file_safe.GetColumn(i, 'FPATH'));
					ds_list_safe.SetColumn(0, 'FNAME', ds_file_safe.GetColumn(i, 'FNAME'));
					
					//ds_list_safe.SetColumn(0, 'FPATH', ds_cond1_temp.GetColumn(ds_cond1_temp.currow, 'FPATH'));
					//ds_list_safe.SetColumn(0, 'FNAME', ds_cond1_temp.GetColumn(ds_cond1_temp.currow, 'FNAME'));

					
					var arr = tit_fileWrite(httpFile1
									, "QM"
									, ds_list_safe.getColumn(0, "FPATH")
									, ds_list_safe.getColumn(0, "FNAME")
									, fileName// 실제 db에 저장될 파일 이름
									, "U"	  // time stamp를 붙이지 않을 경우 U 사용
									, "");    // ds_list_safe.getColumn(i, "CS108_QAD") );//삭제할 이전 파일명

					trace("QM 이미지 서버 송신 결과 arr[0] : " + arr[0] + " arr[1] : " +  arr[1] + " arr[2] : " +  arr[2] + " arr[3] : " +  arr[3]);

					if ( arr[0] == "S" )
					{
					
						// ASISERROR   21.04.27 ds_list_safe 단건임
						for(var j=0; j < ds_list_safe.RowCount(); j++)
						{
							trace('이미지 서버 송신 결과S NEW j => ' + j);
							
							ds_list_safe.setColumn(j, "FNAME_APP", arr[2]);  // 서버파일명
							ds_list_safe.setColumn(j, "FSIZE", ToNumber(arr[3]));
							ds_list_safe.setColumn(j, "FNAME", ds_list_safe.GetColumn(j, 'GBN_NM2') + '.jpg');
							ds_list_safe.setColumn(j, "GBN",   ds_gbn.GetColumn(0, 'GBN'));

							//=======update/insert (마스터)구분=================
							ds_cond3.ClearData();
							ds_cond3.AddRow();
							ds_cond3.setColumn(0, "GBN",   ds_gbn.GetColumn(0, 'GBN'));
							ds_cond3.setColumn(0, "PSPID", ds_list_safe.GetColumn(j, "PSPID"));
							ds_cond3.setColumn(0, "POSID", ds_list_safe.GetColumn(j, "POSID"));
							ds_cond3.setColumn(0, "FNAME", ds_list_safe.GetColumn(j, "FNAME"));
							ds_cond3.setColumn(0, "SO_GBN", ds_list_safe.GetColumn(j, "SO_GBN")); // ASISERROR   21.04.27 SELECT 절에 SO_GBN 값 없음

							tit_clearActionInfo();
							tit_addSelectExActionInfo("wb01:WB0199061A_S4", "wb01:WB0199061A_I1", "wb01:WB0199061A_U1");

							tit_callService(
								""
								, ""
								, "ds_cond3=ds_cond3"
								, ""
								, ""
								, ""
								, ""
								, ""
								, true  // ""
							);

							//디테일 INSERT
							tit_clearActionInfo();
							if (ds_chk.GetColumn(0, 'CNT') == '0') {
								tit_addMultiActionInfo("wb01:WB0199061A_I2");
								tit_callService(
								  ""
								, ""
								, "ds_list_tmp=ds_list_safe" 
								, ""
								, ""
								, ""
								, ""
								, ""
								, true);
							} else {
								tit_addMultiActionInfo("ps12:PS1205001A_U5");
								tit_callService(
								  ""
								, ""
								, "ds_cond3=ds_list_safe" 
								, ""
								, ""
								, ""
								, ""
								, ""
								, true);								
							}
							
							// sms 전송 시작 
							if ( ( F_VER == "003" || F_VER == "004" || F_VER == "005" ) && ds_list_safe.GetColumn(j, 'SAFE_CK') == 'X' ) {
							
								// SMS 전송
								var tel = ds_list_safe.GetColumn( j , "PMMBPN");
								var msg = "[안전조치 사진등록] "
										+ ds_list_safe.GetColumn( j , "POSID") + " "
										+ ds_list_safe.GetColumn(j, "ZSITE_NM")+ "의 "
										+ ds_list_safe.GetColumn(j, "GBN_NM2")+ " "
										+ "사진이 등록되었습니다. 안전조치를 확인하고 승인/반려 바랍니다. ";
								
								var row = ds_sms.AddRow();
								
								var lv_reqdate = ds_reqdate.GetColumn(ds_reqdate.currow, "REQDATE");
								
								
								// PM 수신 
								ds_sms.SetColumn(row, "FLAG", "U");
								ds_sms.SetColumn(row, "TRAN_SUBJECT", "[안전조치 사진등록]");
								ds_sms.SetColumn(row, "TRAN_PHONE", tel);									
								ds_sms.SetColumn(row, "TRAN_CALLBACK", '02-3670-1213');
								ds_sms.SetColumn(row, "TRAN_STATUS", "0");
								ds_sms.SetColumn(row, "TRAN_DATE", "");
								ds_sms.SetColumn(row, "TRAN_MSG", msg);
								ds_sms.SetColumn(row, "REQDATE", lv_reqdate);
																
								// 개발자 확인용
								//row = ds_sms.AddRow();
								
								//ds_sms.SetColumn(row, "FLAG", "U");
								//ds_sms.SetColumn(row, "TRAN_SUBJECT", "[공정진행팝업]");
								//ds_sms.SetColumn(row, "TRAN_PHONE", "010-2300-1053");
								//ds_sms.SetColumn(row, "TRAN_CALLBACK", '02-3670-1213');
								//ds_sms.SetColumn(row, "TRAN_STATUS", "0");
								//ds_sms.SetColumn(row, "TRAN_DATE", "");
								//ds_sms.SetColumn(row, "TRAN_MSG", msg + " REQDATE => " + lv_reqdate);
								//ds_sms.SetColumn(row, "REQDATE", lv_reqdate);
							}									

							fn_ps1205001_afterSave();
						}
					}
					else if ( arr[0] != "S" )
					{
						gfn_showMsg("CW00035");
						return;
					}
				} // fn_ps1205001_checkSave
			} //ds_list_safe.RowCount()
		} // else if ds_gbn.RowCount() > 0 && Length(ds_gbn.GetColumn(0, 'GBN')) > 0 안전사진 등록 처리
	} // for 
	
	////====================SMS발송===============================
	if(ds_sms.GetRowCount() > 0 ) {
	
		tit_clearActionInfo();
		tit_addSaveActionInfo(
			""
			, "ps02:PS0207004A_I2"
			, ""
			, "FLAG");
		tit_callService(
			"PDA_ACT"
			, ""
			, "ds_sms=ds_sms:A"
			, ""
			, ""
			//, "fn_afterSms");				
			, "");
	}
		
	trace('end fn_ps1205001_save');
}

function fn_ps1205001_checkSave()
{
	trace('체크로직 시작 fn_ps1205001_checkSave');
	//타입,기종, 구분 확인별로 저장확인
	for(var i=0; i<ds_list_safe.GetRowCount(); i++)
	{
		ds_cond_safe.ClearData();
		ds_cond_safe.AddRow();
		ds_cond_safe.setColumn(0, "GBN", ds_list_safe.GetColumn(i, "GBN"));
		ds_cond_safe.setColumn(0, "PSPID", ds_list_safe.GetColumn(i, "PSPID"));
		ds_cond_safe.setColumn(0, "POSID", ds_list_safe.GetColumn(i, "POSID"));

		ds_cond_safe.setColumn(0, "TYPE", ds_list_safe.GetColumn(i,"TYPE"));
		ds_cond_safe.setColumn(0, "TYPE_CHK", ds_list_safe.GetColumn(i,"TYPE_CHK"));

 	    ds_cond_safe.setColumn(0, "GNO", ds_list_safe.GetColumn(i,"GNO"));
        ds_cond_safe.setColumn(0, "SAFE", ds_list_safe.GetColumn(i,"SAFE"));
        ds_cond_safe.setColumn(0, "SAFE_CK", ds_list_safe.GetColumn(i,"SAFE_CK"));

		ds_cond_safe.setColumn(0, "FNAME", ds_list_safe.GetColumn(i, "FNAME_TMP"));

//		tit_clearActionInfo();
//		tit_addSearchActionInfo("wb01:WB0199061A_S3");

//		tit_callService(
//			""
//			, ""
//			, "ds_cond3=ds_cond3"
//			, "ds_list3=ds_list3"
//			, ""
//			, ""
//			, ""
//			, ""
//			, true);

//		if( ds_list3.GetColumn(0, "CNT") > 0 )
//		{
//			trace("안전사진 업로드의 같은 호기에 동일한 파일이 존재합니다.");
//			return false;
//		}

		tit_clearActionInfo();
		tit_addSearchActionInfo("ps12:PS1205001A_S20");
		tit_callService(
			""
			, ""
			, "ds_cond3=ds_cond_safe"
			, "ds_chk=ds_chk"
			, ""
			, ""
			, ""
			, ""
			, true);


//		if(ds_chk.GetColumn(0,"CNT") = 0)
//		{
//			trace("안전사진 업로드 순서대로 입력해주세요.");
//			return false;
//		}
	}
	trace('체크로직 종료');

	return true;
}

function fn_ps1205001_afterSave() {

	//====================쪽지전송 시작===============================
	var arg = "";
	var param = "";
	var lv_mesgdesc = "";
	for(var i=0; i<ds_list_safe.GetRowCount(); i++)
	{
		arg += "'"+ds_list_safe.GetColumn(i,"POSID")+"'"+",";
	}
	if(substr(arg,length(arg)-1) == ",") arg = substr(arg,0,length(arg)-1);
	param = "  AND A.POSID_1 IN (" +arg+ ")";

	ds_cond_ms.ClearData();
	ds_cond_ms.AddRow();
	ds_cond_ms.setcolumn(0,"PSPID",ds_list_safe.GetColumn(0,"PSPID") );
	ds_cond_ms.SetColumn(0,"GUBUN",param);


	tit_clearActionInfo();
	tit_addSearchActionInfo("ps12:PS1205001A_S2");
	tit_callService(
		""
		, ""
		, "ds_cond_ms=ds_cond_ms"
		, "ds_trans=ds_trans"
		, ""
		, ""  //"fn_afterQuery"
		, "" //true
		, ""
		, true);


	lv_mesgdesc = arg + '\n' + '호기의 [' + ds_list_safe.GetColumn(0, "FNAME") + '] 파일이 입력되었습니다';
	for(var i=0; i<ds_trans.GetRowCount(); i++)
	{
		//if( ds_trans.GetColumn(i, "MESGACCP") == G_USER_ID)
		//{
		//	ds_trans.DeleteRow(i);
		//	i--;
		//}
		//else
		//{
			ds_trans.setcolumn(i, "MESGDESC", lv_mesgdesc);
		//}
	}

	tit_clearActionInfo();

	//tit_addSearchActionInfo("ps12:PS1205001A_I1");
	tit_addMultiActionInfo("ps12:PS1205001A_I1");

	tit_callService(
		""
		, ""
		, "ds_trans=ds_trans"
		, ""
		, ""
		, ""  //"fn_afterQuery"
		, "" //true
		, ""
		, true);

	//====================쪽지전송 끝===============================

	fn_ps1205001_query3();
}


/********************************************************************************
* 기      능   : 단계별 안전단계 자동 입력  //ZPSTW0207 , ZPSTW1502 인터페이스
********************************************************************************/
function fn_ps1205001_query3() {

	for(var i=0;  i<ds_list_safe.RowCount();  i++)
	{
		if ((ds_list_safe.GetColumn(i,"SAFE") = 'A' && ds_list_safe.GetColumn(i,"SAFE_CK") = 'X') || ds_list_safe.GetColumn(i,"GNO_STEP") == '1')
		{
			ds_list_safe.SetColumn(i,"STEP1","A");
			ds_list_safe.SetColumn(i,"GUBUN","A");
			ds_list_safe.SetColumn(i,"STEP1_DT",(gfn_getCurrDate()));

			// 1단계 등록자 ID
			ds_list_safe.SetColumn(i, "STEP1_ID", g_user_id);
			// 1단계 출처
			ds_list_safe.SetColumn(i, "DEVICE_GBN1", "S");
		}
		else if ((ds_list_safe.GetColumn(i,"SAFE") = 'B' && ds_list_safe.GetColumn(i,"SAFE_CK") = 'X') || ds_list_safe.GetColumn(i,"GNO_STEP") == '2')
		{
			ds_list_safe.SetColumn(i,"STEP2","A");
			ds_list_safe.SetColumn(i,"GUBUN","B");
			ds_list_safe.SetColumn(i,"STEP2_DT",(gfn_getCurrDate()));

			// 2단계 등록자 ID
			ds_list_safe.SetColumn(i, "STEP2_ID", g_user_id);
			// 2단계 출처
			ds_list_safe.SetColumn(i, "DEVICE_GBN2", "S");
		}
		else if ((ds_list_safe.GetColumn(i,"SAFE") = 'C' && ds_list_safe.GetColumn(i,"SAFE_CK") = 'X') || ds_list_safe.GetColumn(i,"GNO_STEP") == '3')
		{
			ds_list_safe.SetColumn(i,"STEP3","A");
			ds_list_safe.SetColumn(i,"GUBUN","C");
			ds_list_safe.SetColumn(i,"STEP3_DT",(gfn_getCurrDate()));

			// 3단계 등록자 ID
			ds_list_safe.SetColumn(i, "STEP3_ID", g_user_id);
			// 3단계 출처
			ds_list_safe.SetColumn(i, "DEVICE_GBN3", "S");
		}
	}

	fn_ps1205001_save2();
}

/********************************************************************************
* 기      능   : 저장  //ZPSTW1502
********************************************************************************/
function fn_ps1205001_save2()
{
	for(var i=0; i<ds_list_safe.RowCount();  i++)
	{
		tit_clearActionInfo();
		tit_addSelectExActionInfo("ps12:PS1205001A_S10", "ps12:PS1205001A_I2", "ps12:PS1205001A_U2");
		tit_callService(
			""
			, ""
			, "ds_list_tmp=ds_list_safe"
			, ""
			, ""
			, ""
			, ""
			, ""
			, true );
	}
	fn_ps1205001_query5();
}

/********************************************************************************
* 기      능   : 단계별 안전단계 자동 입력 //ZPSTW0207
********************************************************************************/
function fn_ps1205001_query5() {
	for(var i=0;  i<ds_list_safe.GetRowCount();  i++)
	{
		if( length(ds_list_safe.GetColumn(i,"GUBUN")) > 0)
		{
			tit_clearActionInfo();
			tit_addSelectExActionInfo("ps12:PS1205001A_S11", "ps12:PS1205001A_I3", "");
			tit_callService(
			""
		  , ""
		  , "ds_list_tmp=ds_list_safe"
		  , ""
		  , ""
		  , ""
		  , ""
		  , ""
		  , true );
		}
	}
}
]]></Script>
</Window>