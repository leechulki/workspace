<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="552" Id="PS0206001A" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="협력사&#32;일일&#32;작업내역(NEW)" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="PSPID" size="255" type="STRING"/>
					<colinfo id="ZZLIFNR" size="256" type="STRING"/>
					<colinfo id="SO2" size="256" type="STRING"/>
					<colinfo id="SO3" size="256" type="STRING"/>
					<colinfo id="SO4" size="256" type="STRING"/>
					<colinfo id="SO5" size="256" type="STRING"/>
					<colinfo id="INP_DT" size="256" type="STRING"/>
					<colinfo id="ZZACTSS" size="256" type="STRING"/>
					<colinfo id="SO6" size="256" type="STRING"/>
					<colinfo id="CURR_DATE" size="256" type="STRING"/>
					<colinfo id="G_USER_ID" size="256" type="STRING"/>
					<colinfo id="TMCD" size="256" type="STRING"/>
					<record>
						<CURR_DATE></CURR_DATE>
						<G_USER_ID></G_USER_ID>
						<INP_DT></INP_DT>
						<PSPID></PSPID>
						<SO2></SO2>
						<SO3></SO3>
						<SO4></SO4>
						<SO5></SO5>
						<SO6></SO6>
						<TMCD></TMCD>
						<ZZACTSS></ZZACTSS>
						<ZZLIFNR></ZZLIFNR>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_head">
				<Contents>
					<colinfo id="LIFNR" size="20" type="STRING"/>
					<colinfo id="INDIRECT" size="24" type="STRING"/>
					<colinfo id="DIRECT_EL" size="24" type="STRING"/>
					<colinfo id="DIRECT_ES" size="24" type="STRING"/>
					<colinfo id="TUIP" size="24" type="STRING"/>
					<colinfo id="MI_TUIP" size="90" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset CanRowPosChange="ds_list1_CanRowPosChange" DataSetType="Dataset" Id="ds_list1" OnColumnChanged="ds_list1_OnColumnChanged">
				<Contents>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSPEC1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSPEC2" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZSHIP1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZCOMP2" size="256" summ="default" type="STRING"/>
					<colinfo id="PMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="TMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="MI_PERNO" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON1" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON2" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON3" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON4" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON_SUM" size="256" summ="default" type="STRING"/>
					<colinfo id="PER_SUM" size="256" summ="default" type="STRING"/>
					<colinfo id="FIR_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="PRONR" size="256" summ="default" type="STRING"/>
					<colinfo id="PRO_R" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZGUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="BFTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO6" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO7" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO8" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO9" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO10" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO6_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO7_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO8_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO9_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO10_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO6_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO7_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO8_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO9_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO10_CD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zzlifnr">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<colinfo id="SORTL" size="256" type="STRING"/>
					<colinfo id="LOEVM" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset CanRowPosChange="ds_list2_CanRowPosChange" DataSetType="Dataset" Id="ds_list2" OnColumnChanged="ds_list2_OnColumnChanged">
				<Contents>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSPEC1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSPEC2" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZSHIP1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZCOMP2" size="256" summ="default" type="STRING"/>
					<colinfo id="PMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="TMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="MI_PERNO" size="256" summ="default" type="STRING"/>
					<colinfo id="PER_SUM" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON1" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON2" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON3" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON4" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON_SUM" size="256" summ="default" type="STRING"/>
					<colinfo id="FIR_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="PRONR" size="256" summ="default" type="STRING"/>
					<colinfo id="PRO_R" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="ZWORK" size="256" summ="default" type="STRING"/>
					<colinfo id="ZWERP" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZGUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="GATST" size="256" summ="default" type="STRING"/>
					<colinfo id="MRLST" size="256" summ="default" type="STRING"/>
					<colinfo id="TMPST" size="256" summ="default" type="STRING"/>
					<colinfo id="SITST" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO6" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO7" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO8" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO9" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO10" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO6_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO7_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO8_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO9_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO10_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO6_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO7_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO8_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO9_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO10_CD" size="256" summ="default" type="STRING"/>
					<record>
						<BIGO></BIGO>
						<FIR_DT></FIR_DT>
						<GATST></GATST>
						<INP_DT></INP_DT>
						<JIWON1></JIWON1>
						<JIWON2></JIWON2>
						<JIWON3></JIWON3>
						<JIWON4></JIWON4>
						<JIWON_SUM></JIWON_SUM>
						<LIFNR></LIFNR>
						<MI_PERNO></MI_PERNO>
						<MRLST></MRLST>
						<PER_SUM></PER_SUM>
						<PERNO0></PERNO0>
						<PERNO0_CD></PERNO0_CD>
						<PERNO0_MH></PERNO0_MH>
						<PERNO1></PERNO1>
						<PERNO10/>
						<PERNO10_CD/>
						<PERNO10_MH/>
						<PERNO1_CD></PERNO1_CD>
						<PERNO1_MH></PERNO1_MH>
						<PERNO2></PERNO2>
						<PERNO2_CD></PERNO2_CD>
						<PERNO2_MH></PERNO2_MH>
						<PERNO3></PERNO3>
						<PERNO3_CD></PERNO3_CD>
						<PERNO3_MH></PERNO3_MH>
						<PERNO4></PERNO4>
						<PERNO4_CD></PERNO4_CD>
						<PERNO4_MH></PERNO4_MH>
						<PERNO5></PERNO5>
						<PERNO5_CD></PERNO5_CD>
						<PERNO5_MH></PERNO5_MH>
						<PERNO6/>
						<PERNO6_CD/>
						<PERNO6_MH/>
						<PERNO7/>
						<PERNO7_CD/>
						<PERNO7_MH/>
						<PERNO8/>
						<PERNO8_CD/>
						<PERNO8_MH/>
						<PERNO9/>
						<PERNO9_CD/>
						<PERNO9_MH/>
						<PMCD></PMCD>
						<POSID></POSID>
						<PRO_R></PRO_R>
						<PRONR></PRONR>
						<PSPID></PSPID>
						<SITST></SITST>
						<TMCD></TMCD>
						<TMPST></TMPST>
						<ZSITE_NM></ZSITE_NM>
						<ZSPEC1></ZSPEC1>
						<ZSPEC2></ZSPEC2>
						<ZWERP></ZWERP>
						<ZWORK></ZWORK>
						<ZZCOMP2></ZZCOMP2>
						<ZZGUBUN></ZZGUBUN>
						<ZZSHIP1></ZZSHIP1>
						<ZZTYPE></ZZTYPE>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_pmcd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NM" size="256" type="STRING"/>
					<colinfo id="RETIF" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_tmcd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NM" size="256" type="STRING"/>
					<colinfo id="LIFNR" size="256" type="STRING"/>
					<colinfo id="DELEF" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_perno">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="RETIF" size="256" summ="default" type="STRING"/>
					<colinfo id="TEMNO" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE2" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NM2" size="256" summ="default" type="STRING"/>
					<colinfo id="POSIT" size="256" summ="default" type="STRING"/>
					<colinfo id="MH" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="DIRECT" size="256" summ="default" type="STRING"/>
					<colinfo id="TYPE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_pronr">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZGUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZTYPE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_persum">
				<Contents>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="NAME" size="256" type="STRING"/>
					<record>
						<CNT>0</CNT>
						<NAME>0명</NAME>
					</record>
					<record>
						<CNT>0.5</CNT>
						<NAME>0.5명</NAME>
					</record>
					<record>
						<CNT>1</CNT>
						<NAME>1명</NAME>
					</record>
					<record>
						<CNT>1.5</CNT>
						<NAME>1.5명</NAME>
					</record>
					<record>
						<CNT>2</CNT>
						<NAME>2명</NAME>
					</record>
					<record>
						<CNT>2.5</CNT>
						<NAME>2.5명</NAME>
					</record>
					<record>
						<CNT>3</CNT>
						<NAME>3명</NAME>
					</record>
					<record>
						<CNT>3.5</CNT>
						<NAME>3.5명</NAME>
					</record>
					<record>
						<CNT>4</CNT>
						<NAME>4명</NAME>
					</record>
					<record>
						<CNT>4</CNT>
						<NAME>4.5명</NAME>
					</record>
					<record>
						<CNT>5</CNT>
						<NAME>5명</NAME>
					</record>
					<record>
						<CNT>5.5</CNT>
						<NAME>5.5명</NAME>
					</record>
					<record>
						<CNT>6</CNT>
						<NAME>6명</NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zsafe">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NM" size="256" type="STRING"/>
					<record>
						<CODE>0</CODE>
						<CODE_NM>없음</CODE_NM>
					</record>
					<record>
						<CODE>1</CODE>
						<CODE_NM>사망</CODE_NM>
					</record>
					<record>
						<CODE>2</CODE>
						<CODE_NM>부상</CODE_NM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zinsp">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NM" size="256" type="STRING"/>
					<record>
						<CODE>0</CODE>
						<CODE_NM>양호</CODE_NM>
					</record>
					<record>
						<CODE>1</CODE>
						<CODE_NM>불량</CODE_NM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zwork">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NM" size="256" type="STRING"/>
					<record>
						<CODE>0</CODE>
						<CODE_NM>양호</CODE_NM>
					</record>
					<record>
						<CODE>1</CODE>
						<CODE_NM>불량</CODE_NM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zwerp">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NM" size="256" type="STRING"/>
					<record>
						<CODE>0</CODE>
						<CODE_NM>양호</CODE_NM>
					</record>
					<record>
						<CODE>1</CODE>
						<CODE_NM>불량</CODE_NM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_mituip">
				<Contents>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="TMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMEE" size="256" summ="default" type="STRING"/>
					<colinfo id="TUIP_CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="SAYU" size="256" summ="default" type="STRING"/>
					<colinfo id="MH" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_chk">
				<Contents>
					<colinfo id="CNT" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_sayu">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_N" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_N></CODE_N>
					</record>
					<record>
						<CODE>A</CODE>
						<CODE_N>병가/휴직</CODE_N>
					</record>
					<record>
						<CODE>B</CODE>
						<CODE_N>휴가</CODE_N>
					</record>
					<record>
						<CODE>C</CODE>
						<CODE_N>퇴사예정</CODE_N>
					</record>
					<record>
						<CODE>D</CODE>
						<CODE_N>타사설치</CODE_N>
					</record>
					<record>
						<CODE>E</CODE>
						<CODE_N>하자보수</CODE_N>
					</record>
					<record>
						<CODE>F</CODE>
						<CODE_N>교육</CODE_N>
					</record>
					<record>
						<CODE>G</CODE>
						<CODE_N>물량배정없음</CODE_N>
					</record>
					<record>
						<CODE>H</CODE>
						<CODE_N>사무실근무</CODE_N>
					</record>
					<record>
						<CODE>I</CODE>
						<CODE_N>당사타지역지원</CODE_N>
					</record>
					<record>
						<CODE>J</CODE>
						<CODE_N>착공전&#32;현장답사</CODE_N>
					</record>
					<record>
						<CODE>K</CODE>
						<CODE_N>외주작업</CODE_N>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_tuipcd">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_N" size="256" type="STRING"/>
					<record>
						<CODE>X</CODE>
						<CODE_N>투입</CODE_N>
					</record>
					<record>
						<CODE></CODE>
						<CODE_N>미투입</CODE_N>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_tmgbn">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_N" size="256" type="STRING"/>
					<record>
						<CODE>X</CODE>
						<CODE_N>팀장</CODE_N>
					</record>
					<record>
						<CODE></CODE>
						<CODE_N>사원</CODE_N>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_perno_tmp">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="LIFNR" size="256" type="STRING"/>
					<colinfo id="TMCD" size="256" type="STRING"/>
					<colinfo id="INP_DT" size="256" type="STRING"/>
					<colinfo id="MH" size="256" type="DECIMAL"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_mituip_tmp">
				<Contents>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="TMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMEE" size="256" summ="default" type="STRING"/>
					<colinfo id="TUIP_CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="SAYU" size="256" summ="default" type="STRING"/>
					<colinfo id="MH" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list1_tmp">
				<Contents>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSPEC1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSPEC2" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZSHIP1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZCOMP2" size="256" summ="default" type="STRING"/>
					<colinfo id="PMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="TMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="MI_PERNO" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON1" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON2" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON3" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON4" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON_SUM" size="256" summ="default" type="STRING"/>
					<colinfo id="PER_SUM" size="256" summ="default" type="STRING"/>
					<colinfo id="FIR_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="PRONR" size="256" summ="default" type="STRING"/>
					<colinfo id="PRO_R" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZGUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZTYPE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list2_tmp">
				<Contents>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSPEC1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSPEC2" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZSHIP1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZCOMP2" size="256" summ="default" type="STRING"/>
					<colinfo id="PMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="TMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO0_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO1_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO2_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO3_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO4_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO5_MH" size="256" summ="default" type="STRING"/>
					<colinfo id="MI_PERNO" size="256" summ="default" type="STRING"/>
					<colinfo id="PER_SUM" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON1" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON2" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON3" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON4" size="256" summ="default" type="STRING"/>
					<colinfo id="JIWON_SUM" size="256" summ="default" type="STRING"/>
					<colinfo id="FIR_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="PRONR" size="256" summ="default" type="STRING"/>
					<colinfo id="PRO_R" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="ZWORK" size="256" summ="default" type="STRING"/>
					<colinfo id="ZWERP" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZGUBUN" size="256" summ="default" type="STRING"/>
					<colinfo id="GATST" size="256" summ="default" type="STRING"/>
					<colinfo id="MRLST" size="256" summ="default" type="STRING"/>
					<colinfo id="TMPST" size="256" summ="default" type="STRING"/>
					<colinfo id="SITST" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZTYPE" size="256" summ="default" type="STRING"/>
					<record>
						<BIGO></BIGO>
						<FIR_DT></FIR_DT>
						<GATST></GATST>
						<INP_DT></INP_DT>
						<JIWON1></JIWON1>
						<JIWON2></JIWON2>
						<JIWON3></JIWON3>
						<JIWON4></JIWON4>
						<JIWON_SUM></JIWON_SUM>
						<LIFNR></LIFNR>
						<MI_PERNO></MI_PERNO>
						<MRLST></MRLST>
						<PER_SUM></PER_SUM>
						<PERNO0></PERNO0>
						<PERNO0_CD></PERNO0_CD>
						<PERNO0_MH></PERNO0_MH>
						<PERNO1></PERNO1>
						<PERNO1_CD></PERNO1_CD>
						<PERNO1_MH></PERNO1_MH>
						<PERNO2></PERNO2>
						<PERNO2_CD></PERNO2_CD>
						<PERNO2_MH></PERNO2_MH>
						<PERNO3></PERNO3>
						<PERNO3_CD></PERNO3_CD>
						<PERNO3_MH></PERNO3_MH>
						<PERNO4></PERNO4>
						<PERNO4_CD></PERNO4_CD>
						<PERNO4_MH></PERNO4_MH>
						<PERNO5></PERNO5>
						<PERNO5_CD></PERNO5_CD>
						<PERNO5_MH></PERNO5_MH>
						<PMCD></PMCD>
						<POSID></POSID>
						<PRO_R></PRO_R>
						<PRONR></PRONR>
						<PSPID></PSPID>
						<SITST></SITST>
						<TMCD></TMCD>
						<TMPST></TMPST>
						<ZSITE_NM></ZSITE_NM>
						<ZSPEC1></ZSPEC1>
						<ZSPEC2></ZSPEC2>
						<ZWERP></ZWERP>
						<ZWORK></ZWORK>
						<ZZCOMP2></ZZCOMP2>
						<ZZGUBUN></ZZGUBUN>
						<ZZSHIP1></ZZSHIP1>
						<ZZTYPE></ZZTYPE>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_perno_tmp2">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="LIFNR" size="256" type="STRING"/>
					<colinfo id="TMCD" size="256" type="STRING"/>
					<colinfo id="INP_DT" size="256" type="STRING"/>
					<colinfo id="MH" size="256" type="DECIMAL"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_mituip_tmp2">
				<Contents>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="TMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="PERNO" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMEE" size="256" summ="default" type="STRING"/>
					<colinfo id="TUIP_CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="SAYU" size="256" summ="default" type="STRING"/>
					<colinfo id="MH" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_perno_tmp3">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="LIFNR" size="256" type="STRING"/>
					<colinfo id="TMCD" size="256" type="STRING"/>
					<colinfo id="INP_DT" size="256" type="STRING"/>
					<colinfo id="MH" size="256" type="STRING"/>
					<colinfo id="P_ROW" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_perno_tmp4">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="LIFNR" size="256" type="STRING"/>
					<colinfo id="TMCD" size="256" type="STRING"/>
					<colinfo id="INP_DT" size="256" type="STRING"/>
					<colinfo id="MH" size="256" type="STRING"/>
					<colinfo id="P_ROW" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zzactss">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_p">
				<Contents>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<record>
						<INP_DT></INP_DT>
						<LIFNR></LIFNR>
					</record>
				</Contents>
			</Dataset>
			<Dataset CanRowPosChange="ds_list1_CanRowPosChange" DataSetType="Dataset" Id="ds_list_p" OnColumnChanged="ds_list1_OnColumnChanged">
				<Contents>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="MH1" size="256" summ="default" type="STRING"/>
					<colinfo id="MH2" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZSITE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZACTSS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZZACTSS_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO" size="256" summ="default" type="STRING"/>
					<colinfo id="SAYOO" size="256" summ="default" type="STRING"/>
					<colinfo id="POSIT" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMEE" size="256" summ="default" type="STRING"/>
					<colinfo id="INP_DT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="32" Height="32" Id="Shape0" Left="0" LineColor="user1" Right="978" TabOrder="1" Top="0" Type="Rectangle" Width="978"></Shape>
		<Shape BKColor="user12" Bottom="64" Height="26" Id="Shape9" Left="9" LineColor="user13" Right="967" TabOrder="2" Top="38" Type="Rectangle" Width="958"></Shape>
		<Static Align="Right" Height="24" Id="Static1" Left="10" Style="sty_lb_form_basic" TabOrder="3" Text="간접인원&#32;" Top="39" VAlign="Middle" Width="98"></Static>
		<Static Align="Right" Height="24" Id="Static2" Left="185" Style="sty_lb_form_basic" TabOrder="4" Text="직접인원(E/L)&#32;" Top="39" VAlign="Middle" Width="98"></Static>
		<Static Align="Right" Height="24" Id="Static3" Left="363" Style="sty_lb_form_basic" TabOrder="5" Text="직접인원(E/S)&#32;" Top="39" VAlign="Middle" Width="98"></Static>
		<Edit Align="RIGHT" BindDataset="ds_head" Border="Flat" Column="DIRECT_ES" Height="20" Id="ed_DIRECT_ES" Left="463" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="6" Top="41" Width="66"></Edit>
		<Edit Align="RIGHT" BindDataset="ds_head" Border="Flat" Column="DIRECT_EL" Height="20" Id="ed_DIRECT_EL" Left="285" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="7" Top="41" Width="66"></Edit>
		<Edit Align="RIGHT" BindDataset="ds_head" Border="Flat" Column="INDIRECT" Height="20" Id="ed_INDIRECT" Left="110" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="8" Top="41" Width="66"></Edit>
		<Tab Border="Flat" Font="굴림,9" Height="304" Id="Tab00" Left="8" MouseOverColor="user16" OnChanged="Tab00_OnChanged" SelColor="user15" SelectFont="굴림,9" Style="sty_tab" TabOrder="9" Top="72" Width="966">
			<Contents>
				<TabPage BorderColor="black" Height="278" Id="tab1" ImageID="tab_form_04" Left="2" TabOrder="19" Text="미입력분" Top="24" Width="962">
					<Grid AreaSelect="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list1" BkColor2="default" BoldHead="true" Border="Flat" Bottom="280" CellMoving="TRUE" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="280" Id="grd_list1" InputPanel="FALSE" Left="-2" LineColor="user20" LineType="ExHORZ" OnHeadClick="Tab00_tab1_grd_list1_OnHeadClick" Right="966" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="968">
						<contents>
							<format id="Default">
								<columns>
									<col fix="left" width="30"/>
									<col fix="left" width="20"/>
									<col fix="left" width="70"/>
									<col fix="left" width="180"/>
									<col fix="left" width="0"/>
									<col fix="left" width="0"/>
									<col width="70"/>
									<col width="70"/>
									<col width="65"/>
									<col width="65"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="89"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="70"/>
									<col width="130"/>
									<col width="85"/>
									<col width="81"/>
									<col width="106"/>
									<col width="0"/>
									<col width="222"/>
								</columns>
								<head>
									<cell bkimageid="icon_grid_sel" col="0" display="text" rowspan="2"/>
									<cell bkimageid="icon_grid_sel" col="1" display="text" rowspan="2"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" rowspan="2" text="호기"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" rowspan="2" text="현장명"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" rowspan="2" text="기종"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" rowspan="2" text="사양"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" rowspan="2" text="착공예정일"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" rowspan="2" text="준공예정일"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" rowspan="2" text="PM"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" rowspan="2" text="팀장"/>
									<cell align="center" col="10" color="user21" colspan="17" display="text" font="굴림,9" text="투입인원"/>
									<cell align="center" col="10" color="user21" display="text" font="굴림,9" row="1" text="팀장"/>
									<cell align="center" col="27" color="user21" display="text" font="굴림,9" rowspan="2" text="최초투입일"/>
									<cell align="center" col="28" color="user21" display="text" font="굴림,9" rowspan="2" text="작업공정입력"/>
									<cell align="center" col="29" color="user21" display="text" font="굴림,9" rowspan="2" text="공정율(%)"/>
									<cell align="center" col="30" color="user21" display="text" font="굴림,9" rowspan="2" text="투입일"/>
									<cell align="center" col="31" color="user21" display="text" font="굴림,9" rowspan="2" text="협력업체코드"/>
									<cell col="32" display="text"/>
									<cell align="center" col="33" color="user21" display="text" font="굴림,9" rowspan="2" text="미등록인원"/>
									<cell align="center" col="11" color="user21" display="text" font="굴림,9" row="1" text="사원1"/>
									<cell align="center" col="12" color="user21" display="text" font="굴림,9" row="1" text="사원2"/>
									<cell align="center" col="13" color="user21" display="text" font="굴림,9" row="1" text="사원3"/>
									<cell align="center" col="14" color="user21" display="text" font="굴림,9" row="1" text="사원4"/>
									<cell align="center" col="15" color="user21" display="text" font="굴림,9" row="1" text="사원5"/>
									<cell align="center" col="16" color="user21" display="text" font="굴림,9" row="1" text="사원6"/>
									<cell align="center" col="17" color="user21" display="text" font="굴림,9" row="1" text="사원7"/>
									<cell align="center" col="18" color="user21" display="text" font="굴림,9" row="1" text="사원8"/>
									<cell align="center" col="19" color="user21" display="text" font="굴림,9" row="1" text="사원9"/>
									<cell align="center" col="20" color="user21" display="text" font="굴림,9" row="1" text="사원10"/>
									<cell align="center" col="21" color="user21" display="text" font="굴림,9" row="1" text="등록&#32;인원소계"/>
									<cell align="center" col="22" color="user21" display="text" font="굴림,9" row="1" text="지원인원1"/>
									<cell align="center" col="23" color="user21" display="text" font="굴림,9" row="1" text="지원인원2"/>
									<cell align="center" col="24" color="user21" display="text" font="굴림,9" row="1" text="지원인원3"/>
									<cell align="center" col="25" color="user21" display="text" font="굴림,9" row="1" text="지원인원4"/>
									<cell align="center" col="26" color="user21" display="text" font="굴림,9" row="1" text="지원&#32;인원소계"/>
									<cell align="center" col="32" color="user21" display="text" font="굴림,9" row="1" text="구분"/>
								</head>
								<body>
									<cell align="center" col="0" display="text" expr="currow&#32;+&#32;1"/>
									<cell align="center" col="1" colid="CHECK" display="checkbox" edit="checkbox"/>
									<cell align="center" bkcolor2="user22" col="2" colid="POSID" display="text"/>
									<cell align="left" bkcolor2="user22" col="3" colid="ZSITE_NM" display="text"/>
									<cell align="center" bkcolor2="user22" col="4" colid="ZSPEC1" display="text"/>
									<cell bkcolor2="user22" col="5" colid="ZSPEC2" display="text"/>
									<cell align="center" bkcolor2="user22" col="6" colid="ZZSHIP1" display="text" Mask="####.##.##"/>
									<cell align="center" bkcolor2="user22" col="7" colid="ZZCOMP2" display="text" Mask="####.##.##"/>
									<cell align="center" bkcolor2="user22" col="8" colid="PMCD" combocol="CODE" combodataset="ds_pmcd" combotext="CODE_NM" display="combo"/>
									<cell align="center" bkcolor2="user22" col="9" colid="TMCD" combocol="CODE" combodataset="ds_tmcd" combotext="CODE_NM" display="combo"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="10" colid="PERNO0" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="11" colid="PERNO1" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="12" colid="PERNO2" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="13" colid="PERNO3" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="14" colid="PERNO4" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="15" colid="PERNO5" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="16" colid="PERNO6" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="17" colid="PERNO7" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="18" colid="PERNO8" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="19" colid="PERNO9" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="20" colid="PERNO10" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell align="center" bkcolor2="user22" bkimagealign="right" col="21" colid="PER_SUM" combodisplayrowcnt="6" display="number" Mask="##0.0"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="22" colid="JIWON1" display="text" edit="normal"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="23" colid="JIWON2" display="text" edit="normal"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="24" colid="JIWON3" display="text" edit="normal"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="25" colid="JIWON4" display="text" edit="normal"/>
									<cell align="center" bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="26" colid="JIWON_SUM" combocol="CNT" combodataset="ds_persum" combodisplayrowcnt="6" combotext="NAME" display="combo" edit="combo"/>
									<cell align="center" bkcolor2="user22" col="27" colid="FIR_DT" display="text" Mask="####.##.##"/>
									<cell align="center" bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="28" colid="PRONR" combocol="CODE" combodataset="ds_pronr" combotext="CODE_NM" display="combo" edit="combo"/>
									<cell align="right" bkcolor2="user22" col="29" colid="PRO_R" display="number" Mask="##0.00"/>
									<cell align="center" bkcolor2="user22" col="30" colid="INP_DT" display="text" Mask="####.##.##"/>
									<cell align="center" bkcolor2="user22" col="31" colid="LIFNR" display="text"/>
									<cell align="center" bkcolor2="user22" col="32" colid="ZZGUBUN" display="text"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="33" colid="MI_PERNO" display="text"/>
								</body>
								<summary>
									<cell bkcolor="user25" col="0" colspan="6" display="text"/>
									<cell bkcolor="user25" col="6" colspan="10" display="text"/>
									<cell bkcolor="user25" col="16" display="text"/>
									<cell bkcolor="user25" col="17" display="text"/>
									<cell bkcolor="user25" col="18" display="text"/>
									<cell bkcolor="user25" col="19" display="text"/>
									<cell bkcolor="user25" col="20" display="text"/>
									<cell align="right" bkcolor="user25" col="21" display="number" expr='sum(&quot;PER_SUM&quot;)' Mask="##0.0"/>
									<cell bkcolor="user25" col="22" colspan="4" display="text"/>
									<cell align="right" bkcolor="user25" col="26" color="user26" display="number" expr='sum(&quot;JIWON_SUM&quot;)' Mask="##0.0"/>
									<cell bkcolor="user25" col="27" colspan="2" display="text"/>
									<cell align="right" bkcolor="user25" col="29" color="user26" display="number" expr='sum(&quot;PRO_R&quot;)/parseInt(ds_list1.rowcount)' Mask="##0.00"/>
									<cell bkcolor="user25" col="30" colspan="4" display="text"/>
								</summary>
							</format>
						</contents>
					</Grid>
				</TabPage>
				<TabPage BorderColor="black" Height="278" Id="tab2" ImageID="tab_form_04" Left="2" TabOrder="26" Text="입력분" Top="24" Width="962">
					<Grid AreaSelect="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list2" BkColor2="default" BoldHead="true" Border="Flat" Bottom="272" CellMoving="TRUE" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="272" Id="grd_list2" InputPanel="FALSE" Left="1" LineColor="user20" LineType="ExHORZ" OnHeadClick="Tab00_tab2_grd_list2_OnHeadClick" Right="961" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="960">
						<contents>
							<format id="Default">
								<columns>
									<col fix="left" width="30"/>
									<col fix="left" width="20"/>
									<col fix="left" width="70"/>
									<col fix="left" width="180"/>
									<col fix="left" width="0"/>
									<col fix="left" width="0"/>
									<col width="70"/>
									<col width="70"/>
									<col width="65"/>
									<col width="65"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="74"/>
									<col width="82"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="70"/>
									<col width="130"/>
									<col width="60"/>
									<col width="81"/>
									<col width="106"/>
									<col width="75"/>
									<col width="92"/>
									<col width="89"/>
									<col width="89"/>
									<col width="89"/>
									<col width="75"/>
									<col width="297"/>
									<col width="0"/>
									<col width="222"/>
								</columns>
								<head>
									<cell bkimageid="icon_grid_sel" col="0" display="text" rowspan="2"/>
									<cell bkimageid="icon_grid_sel" col="1" display="text" rowspan="2"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" rowspan="2" text="호기"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" rowspan="2" text="현장명"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" rowspan="2" text="기종"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" rowspan="2" text="사양"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" rowspan="2" text="착공예정일"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" rowspan="2" text="준공예정일"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" rowspan="2" text="PM"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" rowspan="2" text="팀장"/>
									<cell align="center" col="10" color="user21" colspan="17" display="text" font="굴림,9" text="투입인원"/>
									<cell align="center" col="40" color="user21" display="text" font="굴림,9" rowspan="2" text="미등록인원"/>
									<cell align="center" col="10" color="user21" display="text" font="굴림,9" row="1" text="팀장"/>
									<cell align="center" col="27" color="user21" display="text" font="굴림,9" rowspan="2" text="최초투입일"/>
									<cell align="center" col="28" color="user21" display="text" font="굴림,9" rowspan="2" text="작업공정입력"/>
									<cell align="center" col="29" color="user21" display="text" font="굴림,9" rowspan="2" text="공정율(%)"/>
									<cell align="center" col="30" color="user21" display="text" font="굴림,9" rowspan="2" text="투입일"/>
									<cell align="center" col="31" color="user21" display="text" font="굴림,9" rowspan="2" text="협력업체코드"/>
									<cell align="center" col="32" color="user21" display="text" font="굴림,9" rowspan="2" text="보호구착용"/>
									<cell align="center" col="33" color="user21" display="text" font="굴림,9" rowspan="2" text="MRL&#32;작업발판"/>
									<cell align="center" col="34" color="user21" display="text" font="굴림,9" rowspan="2" text="출입구차폐상태"/>
									<cell align="center" col="35" color="user21" display="text" font="굴림,9" rowspan="2" text="임시카조립상태"/>
									<cell align="center" col="36" color="user21" display="text" font="굴림,9" rowspan="2" text="현장정리정돈"/>
									<cell align="center" col="37" color="user21" display="text" font="굴림,9" rowspan="2" text="근태여부"/>
									<cell align="center" col="38" color="user21" display="text" font="굴림,9" rowspan="2" text="비고"/>
									<cell col="39" display="text"/>
									<cell align="center" col="11" color="user21" display="text" font="굴림,9" row="1" text="사원1"/>
									<cell align="center" col="12" color="user21" display="text" font="굴림,9" row="1" text="사원2"/>
									<cell align="center" col="13" color="user21" display="text" font="굴림,9" row="1" text="사원3"/>
									<cell align="center" col="14" color="user21" display="text" font="굴림,9" row="1" text="사원4"/>
									<cell align="center" col="15" color="user21" display="text" font="굴림,9" row="1" text="사원5"/>
									<cell align="center" col="16" color="user21" display="text" font="굴림,9" row="1" text="사원6"/>
									<cell align="center" col="17" color="user21" display="text" font="굴림,9" row="1" text="사원7"/>
									<cell align="center" col="18" color="user21" display="text" font="굴림,9" row="1" text="사원8"/>
									<cell align="center" col="19" color="user21" display="text" font="굴림,9" row="1" text="사원9"/>
									<cell align="center" col="20" color="user21" display="text" font="굴림,9" row="1" text="사원10"/>
									<cell align="center" col="21" color="user21" display="text" font="굴림,9" row="1" text="등록&#32;인원소계"/>
									<cell align="center" col="22" color="user21" display="text" font="굴림,9" row="1" text="지원인원1"/>
									<cell align="center" col="23" color="user21" display="text" font="굴림,9" row="1" text="지원인원2"/>
									<cell align="center" col="24" color="user21" display="text" font="굴림,9" row="1" text="지원인원3"/>
									<cell align="center" col="25" color="user21" display="text" font="굴림,9" row="1" text="지원인원4"/>
									<cell align="center" col="26" color="user21" display="text" font="굴림,9" row="1" text="지원&#32;인원소계"/>
									<cell align="center" col="39" color="user21" display="text" font="굴림,9" row="1" text="구분"/>
								</head>
								<body>
									<cell align="center" col="0" display="text" expr="currow&#32;+&#32;1"/>
									<cell align="center" col="1" colid="CHECK" display="checkbox" edit="checkbox"/>
									<cell align="center" bkcolor2="user22" col="2" colid="POSID" display="text"/>
									<cell align="left" bkcolor2="user22" col="3" colid="ZSITE_NM" display="text"/>
									<cell align="center" bkcolor2="user22" col="4" colid="ZSPEC1" display="text"/>
									<cell bkcolor2="user22" col="5" colid="ZSPEC2" display="text"/>
									<cell align="center" bkcolor2="user22" col="6" colid="ZZSHIP1" display="text" Mask="####.##.##"/>
									<cell align="center" bkcolor2="user22" col="7" colid="ZZCOMP2" display="text" Mask="####.##.##"/>
									<cell align="center" bkcolor2="user22" col="8" colid="PMCD" combocol="CODE" combodataset="ds_pmcd" combotext="CODE_NM" display="combo"/>
									<cell align="center" bkcolor2="user22" col="9" colid="TMCD" combocol="CODE" combodataset="ds_tmcd" combotext="CODE_NM" display="combo"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="10" colid="PERNO0" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="11" colid="PERNO1" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="12" colid="PERNO2" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="13" colid="PERNO3" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="14" colid="PERNO4" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="15" colid="PERNO5" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="16" colid="PERNO6" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="17" colid="PERNO7" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="18" colid="PERNO8" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="19" colid="PERNO9" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="20" colid="PERNO10" combocol="CODE2" combodataset="ds_perno" combotext="CODE_NM2" display="combo" edit='expr:iif(CHECK=&apos;1&apos;,&quot;combo&quot;&#32;,&quot;none&quot;)'/>
									<cell align="center" bkcolor2="user22" bkimagealign="right" col="21" colid="PER_SUM" combocol="CNT" combodataset="ds_persum" combodisplayrowcnt="6" combotext="NAME" display="number"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="22" colid="JIWON1" display="text" edit="normal"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="23" colid="JIWON2" display="text" edit="normal"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="24" colid="JIWON3" display="text" edit="normal"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="25" colid="JIWON4" display="text" edit="normal"/>
									<cell align="center" bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="26" colid="JIWON_SUM" combocol="CNT" combodataset="ds_persum" combodisplayrowcnt="6" combotext="NAME" display="combo" edit="combo"/>
									<cell align="center" bkcolor2="user22" col="27" colid="FIR_DT" display="text" Mask="####.##.##"/>
									<cell align="center" bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="28" colid="PRONR" combocol="CODE" combodataset="ds_pronr" combotext="CODE_NM" display="combo" edit="combo"/>
									<cell align="right" bkcolor2="user22" col="29" colid="PRO_R" display="number" Mask="##0.00"/>
									<cell align="center" bkcolor2="user22" col="30" colid="INP_DT" display="text" Mask="####.##.##"/>
									<cell align="center" bkcolor2="user22" col="31" colid="LIFNR" display="text"/>
									<cell bkcolor2="user22" bkimagealign="right" col="32" colid="ZWERP" combocol="CODE" combodataset="ds_zwerp" combotext="CODE_NM" display="combo"/>
									<cell bkcolor2="user22" bkimagealign="right" col="33" colid="MRLST" combocol="CODE" combodataset="ds_zwerp" combotext="CODE_NM" display="combo"/>
									<cell bkcolor2="user22" bkimagealign="right" col="34" colid="GATST" combocol="CODE" combodataset="ds_zwerp" combotext="CODE_NM" display="combo"/>
									<cell bkcolor2="user22" bkimagealign="right" col="35" colid="TMPST" combocol="CODE" combodataset="ds_zwerp" combotext="CODE_NM" display="combo"/>
									<cell bkcolor2="user22" bkimagealign="right" col="36" colid="SITST" combocol="CODE" combodataset="ds_zwerp" combotext="CODE_NM" display="combo"/>
									<cell bkcolor2="user22" bkimagealign="right" col="37" colid="ZWORK" combocol="CODE" combodataset="ds_zwork" combotext="CODE_NM" display="combo"/>
									<cell bkcolor2="user22" bkimagealign="right" col="38" colid="BIGO" display="text"/>
									<cell align="center" bkcolor2="user22" col="39" colid="ZZGUBUN" display="text"/>
									<cell bkcolor2="user22" bkimagealign="right" bkimageid="icon_grid_edit" col="40" colid="MI_PERNO" display="text"/>
								</body>
								<summary>
									<cell align="center" bkcolor="user25" col="0" color="user26" colspan="6" display="text" domainid="com.avg"/>
									<cell bkcolor="user25" col="6" colspan="10" display="text"/>
									<cell bkcolor="user25" col="16" colspan="5" display="text"/>
									<cell align="right" bkcolor="user25" col="21" color="user26" display="number" expr='sum(&quot;PER_SUM&quot;)' Mask="##0.0"/>
									<cell align="right" bkcolor="user25" col="22" color="user26" colspan="4" display="text"/>
									<cell align="right" bkcolor="user25" col="26" color="user26" display="number" expr='sum(&quot;JIWON_SUM&quot;)' Mask="##0.0"/>
									<cell bkcolor="user25" col="27" colspan="2" display="text"/>
									<cell align="right" bkcolor="user25" col="29" color="user26" display="number" expr='sum(&quot;PRO_R&quot;)/parseInt(ds_list2.rowcount)' Mask="##0.00"/>
									<cell bkcolor="user25" col="30" color="user26" colspan="9" display="text"/>
									<cell bkcolor="user25" col="39" color="user26" display="text">
										<cell align="center" col="0" color="user26" colspan="16" display="text" domainid="com.avg" text="평균"/>
										<cell align="right" col="15" color="user26" colspan="11" display="text"/>
										<cell align="right" col="16" color="user26" colspan="11" display="text"/>
										<cell align="right" col="17" color="user26" colspan="11" display="text"/>
									</cell>
									<cell bkcolor="user25" col="40" color="user26" display="text"/>
								</summary>
							</format>
						</contents>
					</Grid>
				</TabPage>
			</Contents>
		</Tab>
		<Static Align="Right" Height="20" Id="st_lifnr" Left="216" Style="sty_lb_search" TabOrder="10" Text="설치협력사&#32;" Top="5" VAlign="Middle" Width="92"></Static>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="ZZLIFNR" DataColumn="CODE_NAME" Height="20" Id="cb_zzlifnr" InnerDataset="ds_zzlifnr" Left="310" OnChanged="cb_zzlifnr_OnChanged" Style="sty_ipt_search" TabOrder="11" Top="4" Width="169"></Combo>
		<Static Align="Right" Height="20" Id="st_inpday" Left="488" Style="sty_lb_search" TabOrder="12" Text="투입일자&#32;" Top="5" VAlign="Middle" Width="92"></Static>
		<Calendar BindDataset="ds_cond" Border="Flat" ClickedBkColor="user32" ClickedTextColor="user33" Column="INP_DT" Dateformat="yyyy.MM.dd" DayFont="돋움,9" DaySelect="Auto" DaySpacingHeight="6" DrawWeekSeparator="FALSE" EditAlign="CENTER" Font="돋움,9" HeaderBorder="NONE" HeaderFont="돋움,10,Bold" Height="20" Id="cb_inpday" Left="582" MonthPickerFormat="yyyy년&#32;MMMM" MonthPopupBorder="FLAT" SaturdayTextColor="user34" SelectedDayFont="돋움,9,Bold" Style="sty_ipt_search" SundayTextColor="user35" TabOrder="13" TextColor="user36" TitleBKColor="user37" TitleTextColor="user38" TodayColor="user39" Top="5" WeekBKColor="user40" WeekColor="user41" WeeksFont="돋움,10" Width="94"></Calendar>
		<Static Align="Right" Height="20" Id="st_tmcd" Left="680" Style="sty_lb_search" TabOrder="14" Text="설치팀장&#32;" Top="5" VAlign="Middle" Width="92"></Static>
		<Static Align="Right" Height="24" Id="Static4" Left="539" Style="sty_lb_form_basic" TabOrder="15" Text="투입인원&#32;" Top="39" VAlign="Middle" Width="98"></Static>
		<Edit Align="RIGHT" BindDataset="ds_head" Border="Flat" Column="TUIP" Height="20" Id="ed_TUIP" Left="639" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="16" Top="41" Width="66"></Edit>
		<Static Align="Right" Height="24" Id="Static5" Left="715" Style="sty_lb_form_basic" TabOrder="17" Text="미투입인원&#32;" Top="39" VAlign="Middle" Width="98"></Static>
		<Edit Align="RIGHT" BindDataset="ds_head" Border="Flat" Column="MI_TUIP" Height="20" Id="ed_MI_TUIP" Left="815" LeftMargin="4" Readonly="TRUE" RightMargin="4" Style="sty_ipt_form" TabOrder="18" Top="41" Width="66"></Edit>
		<Grid AreaSelect="TRUE" AutoFitEndLine="Hide" BindDataset="ds_mituip" BkColor2="default" BoldHead="true" Border="Flat" Bottom="512" CellMoving="TRUE" ColSelect="TRUE" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="128" Id="Grid0" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" Right="968" RowHeight="20" Style="sty_grid" TabOrder="19" TabStop="true" Top="384" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="960">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="30"/>
						<col width="70"/>
						<col width="85"/>
						<col width="95"/>
						<col width="81"/>
						<col width="139"/>
						<col width="0"/>
						<col width="352"/>
					</columns>
					<head>
						<cell bkimageid="icon_grid_sel" col="0" display="text"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="구분"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="이름"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="투입여부"/>
						<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="인원"/>
						<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="미투입사유"/>
						<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="구분"/>
						<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="비&#32;&#32;&#32;고"/>
					</head>
					<body>
						<cell align="center" col="0" display="text" expr="currow&#32;+&#32;1"/>
						<cell align="center" bkcolor2="user22" col="1" colid="GBN" combocol="CODE" combodataset="ds_tmgbn" combotext="CODE_N" display="combo"/>
						<cell bkcolor2="user22" bkimagealign="right" col="2" colid="NAMEE" display="text"/>
						<cell bkcolor2="user22" bkimagealign="right" col="3" colid="TUIP_CHK" combocol="CODE" combodataset="ds_tuipcd" combotext="CODE_N" display="combo"/>
						<cell align="right" bkcolor2="user22" bkimagealign="right" col="4" colid="MH" display="number" Mask="0.0"/>
						<cell align="center" bkcolor2="user22" bkimagealign="right" bkimageid='expr:iif(TUIP_CHK=&apos;X&apos;,&quot;&quot;,&quot;icon_grid_edit&quot;&#32;)' col="5" colid="SAYU" combocol="CODE" combodataset="ds_sayu" combotext="CODE_N" display="combo" edit='expr:iif(TUIP_CHK=&apos;X&apos;,&quot;none&quot;,&quot;combo&quot;&#32;)'/>
						<cell align="center" bkcolor2="user22" col="6" colid="ZZGUBUN" display="text"/>
						<cell bkcolor2="user22" bkimagealign="left" col="7" colid="BIGO" display="text" edit="normal" limit="100"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="TMCD" DataColumn="CODE_NM" Height="20" Id="cb_tmcd" InnerDataset="ds_tmcd" Left="774" Style="sty_ipt_search" TabOrder="20" Top="4" Width="106"></Combo>
		<Static Align="Right" Height="20" Id="st_zzactss" Left="7" Style="sty_lb_search" TabOrder="21" Text="사무소&#32;" Top="5" VAlign="Middle" Width="80"></Static>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="ZZACTSS" DataColumn="CODE_NAME" Height="20" Id="cb_zzactss" InnerDataset="ds_zzactss" Left="91" OnChanged="cb_zzactss_OnChanged" Style="sty_ipt_search" TabOrder="22" Top="5" Width="116"></Combo>
		<Static Color="user7" Font="굴림,9,Bold" Height="24" Id="Static0" Left="16" TabOrder="23" Text="미투입&#32;사유중&#32;" Top="512" VAlign="Middle" Width="85"></Static>
		<Static Color="user35" Font="굴림,10,Bold" Height="24" Id="Static6" Left="104" TabOrder="24" Text="하자보수,&#32;현장답사,&#32;당사&#32;타지역&#32;지원,&#32;&#32;외주작업,&#32;교육,&#32;사무실근무" Top="512" VAlign="Middle" Width="430"></Static>
		<Static Color="user7" Font="굴림,9,Bold" Height="24" Id="Static7" Left="536" TabOrder="25" Text="는&#32;미투입으로&#32;입력하지만" Top="512" VAlign="Middle" Width="200"></Static>
		<Static Color="user7" Font="굴림,9,Bold" Height="24" Id="Static8" Left="16" TabOrder="26" Text="투입인원으로&#32;총괄표로&#32;집계&#32;됩니다." Top="528" VAlign="Middle" Width="600"></Static>
	</Form>
	<Script><![CDATA[/*
 *****************************************************************************************
 * 기      능   : 
 * 작  성  자   : BANG GI TAE
 * 작성  일자   : 2012.04.03
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */ 
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var user_grp = "";
var args = "";
var curr_date = ""; 
var tm_cd = "";
var zzgubun = "";
var tuip_cnt = "";
var zztype= "";
//var userGroup = "";
//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) 
{
 
	// Form 로드 이벤트 맨 첫줄에 기술
	//gfn_initForm(true);
	gfn_initForm();
	
				
	user_grp = gfn_getUserGroup();
	
	var codeArr = ["PS003"];
    var dsObjArr = [ds_zzactss];
    var addTypeArr = [G_CODE_ALL];
    gfn_searchCommCode(codeArr, dsObjArr, addTypeArr);

	cb_inpday.Value = gfn_getCurrDate();
	Tab00.TabIndex = 0;
  /*  if(G_USER_ID == '2016940' || G_USER_ID == '2022702')
    {
	  btn_print.enable = true; 
	}
	else
	{
	   btn_print.enable = false; 
	}
*/	
	tit_clearActionInfo();	
	tit_addSearchActionInfo("ps02:PS0206001A_S1");		//업체 코드
	tit_addSearchActionInfo("ps02:PS0206001A_S5");      //PM 코드
	//tit_addSearchActionInfo("ps02:PS0205001A_S6");      //팀장 코드
	
	tit_addSearchActionInfo("ps02:PS0206001A_S8");      //공정 코드
	
	tit_callService(
		""
		, ""
		, "ds_cond=ds_cond"
		//, "ds_zzlifnr=ds_zzlifnr ds_pmcd=ds_pmcd ds_tmcd=ds_tmcd ds_pronr=ds_pronr"
		, "ds_zzlifnr=ds_zzlifnr ds_pmcd=ds_pmcd ds_pronr=ds_pronr"
		, ""
		, "fn_afterQueryA"
		, ""  //true
		, ""
		, true);
	
		
//	alert(user_grp);
	cb_inpday.SETFOCUS();
	gfn_showMsg("CI00007");
	//정태성DR(관리자) OR 협력사 인원 저장 버튼 활성화  -- 정태성 DR 요청 (2016.6.29)
	if( G_USER_ID = '2016940' or G_USER_ID = '2022702' or user_grp = '10')  
	{ btn_delete.enable = true ; } else{
	  btn_delete.enable = false; }	
	
	  btn_delete.enable = false;	
	
	//미투입 사유코드 필터
    //fn_changeperno_grd_cd2();
	
}

/********************************************************************************
* 기      능   : 업체별 팀장코드 함수 
********************************************************************************/
function fn_tmcd() 
{
    //gfn_initDs(ds_tmcd, true);
	tit_clearActionInfo();
	tit_addSearchActionInfo("ps02:PS0206001A_S6");      //팀장 코드
	
	tit_callService(
		""
		, ""
		, "ds_cond=ds_cond"
		, "ds_tmcd=ds_tmcd"		
		, ""
		, ""   //"fn_afterQueryA"
		, ""  //true
		, ""
		, true);
	
}

/********************************************************************************
* 기      능   : 팀장별 팀원 투입여부 그리드(sql)
********************************************************************************/
function fn_tuip()
{
	tit_clearActionInfo();
	tit_addSearchActionInfo("ps02:PS0206001A_S9");
	tit_callService(
		""
		, ""
		, "ds_cond=ds_cond"
		, "ds_chk=ds_chk"		
		, ""
		, ""   //"fn_afterQueryA"
		, ""  //true
		, ""
		, true);
		
	
	if( ds_chk.GetColumn(0, "CNT") = 0 ) //저장된 정보가 없을시
	{
		tuip_cnt = "X";
		tit_clearActionInfo();
		tit_addSearchActionInfo("ps02:PS0206001A_S10");
		tit_callService(
			""
			, ""
			, "ds_cond=ds_cond"
			, "ds_mituip=ds_mituip"		
			, ""
			, ""   //"fn_afterQueryA"
			, ""  //true
			, ""
			, true);
			
		//====투입일 입력======			
		for(var i=0; i<ds_mituip.GetRowCount(); i++) 
		{
			ds_mituip.SetColumn(i,"INP_DT",cb_inpday.Value);	
			if(ds_mituip.GetColumn(i,"TUIP_CHK") != "X")
			{
				ds_mituip.SetColumn(i,"TUIP_CHK","");	
			}
			
			if(ds_mituip.GetColumn(i,"GBN") != "X")
			{
				ds_mituip.SetColumn(i,"GBN","");	
			}
		}
			
	}
	else  //저장된 정보가 있을시
	{
		tuip_cnt = "";
		tit_clearActionInfo();
		tit_addSearchActionInfo("ps02:PS0206001A_S11");
		tit_callService(
			""
			, ""
			, "ds_cond=ds_cond"
			, "ds_mituip=ds_mituip"		
			, ""
			, ""   //"fn_afterQueryA"
			, ""  //true
			, ""
			, true);
			
//trace(ds_mituip.SaveXML());				
		//====투입일 입력======			
		for(var i=0; i<ds_mituip.GetRowCount(); i++) 
		{
			ds_mituip.SetColumn(i,"INP_DT",cb_inpday.Value);	
			
			if(ds_mituip.GetColumn(i,"TUIP_CHK") != "X")
			{
				ds_mituip.SetColumn(i,"TUIP_CHK","");	
			}
			if(ds_mituip.GetColumn(i,"GBN") != "X")
			{
				ds_mituip.SetColumn(i,"GBN","");	
			}
			
		}
		
		

		
		//ds_mituip.Filter("TUIP_CHK==1");
		ds_mituip_tmp2.ClearData();
		ds_mituip_tmp2.copyF(ds_mituip);
		//ds_list.unFilter();
		
	}
		
}


/********************************************************************************
* 기      능   : 협력업체 변경시 팀장코드 재검색
********************************************************************************/
function cb_zzlifnr_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
	fn_tmcd();
}




/********************************************************************************
* 기      능   : 조회 Callback  - 설치협력사 로그인시 협력업체코드 첫번째 선택
********************************************************************************/
function fn_afterQueryA(errCode, errMsg) 
{

	//alert(G_VEND_CODE_E);
	//alert(ds_pronr.SaveXML());	

	if( user_grp == "10")
	{
		ds_zzlifnr.filter("CODE == " + quote( G_VEND_CODE_E) );
		cb_zzlifnr.Index = 0;
		cb_zzlifnr.Enable = false;
		cb_zzactss.Index = 0;
		cb_zzactss.Enable = false;
		
		
		fn_tmcd();
		
	}
	else if ( user_grp == "40" )
	{
		cb_zzlifnr.Enable = true;
		//ds_zzlifnr.Filter("LOEVM==''");
		gfn_insertEmptyRow( ds_zzlifnr, G_CODE_ALL );
		cb_zzlifnr.value = "";
	    cb_zzactss.value = "";
		cb_zzactss.Enable = true;
	}	
	
	else if ( user_grp == "30" )  //임시로 열어줌
	{
		cb_zzlifnr.Enable = true;
		//ds_zzlifnr.Filter("LOEVM==''");
		gfn_insertEmptyRow( ds_zzlifnr, G_CODE_ALL );
		cb_zzlifnr.value = "";
   	    cb_zzactss.value = "";
		cb_zzactss.Enable = true;
	}	
	
	
	else
	{
		cb_zzlifnr.value = "";
		cb_zzlifnr.Enable = false;
 	    cb_zzactss.value = "";
		cb_zzactss.Enable = false;
		
		fn_tmcd();
	}
	

}







/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) 
{
//Alert("fn_completeInit : " + zzgubun);

}


/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) 
{
//Alert("fn_OnUnloadCompleted : " + zzgubun);
	return gfn_isFormUnload(obj);
}


/********************************************************************************
* 기      능   : hedquery 조회
********************************************************************************/
//function ufn_hedquery() 
function fn_query() 
{
	//curr_date = ToNumber(gfn_getCurrDate());
	//ds_cond.SetColumn(0,"CURR_DATE",curr_date);
	


	tit_clearActionInfo();	
	tit_addSearchActionInfo("ps02:PS0206001A_S2");
	tit_callService(
		""
		, ""
		, "ds_cond=ds_cond"
		, "ds_head=ds_head"
		, ""
		, "fn_aftersql"
		, ""  //true
		, ""
		, true);


}



//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회
********************************************************************************/
//function fn_query() 
function fn_aftersql()
{
	

	//헤더 부분 가져오기
	//ufn_hedquery();
	
	//설치협력사 조회시 협력업체 필수체크
	if(gfn_isNull(cb_zzlifnr, true, st_lifnr.value))  return;	
	//투입일 필수체크
	if(gfn_isNull(cb_inpday,  true, st_inpday.value)) return;
	
	/*
    //프로젝트 필수체크
    if(gfn_isNull(ed_pspid,   true, st_pjt.value))	  return;
    */
    
    //팀장 필수체크
    if(gfn_isNull(cb_tmcd,   true, st_tmcd.value))	  return;
    
	
	
	 
	//=================협력업체 사원정보=====================
	tit_clearActionInfo();	
	tit_addSearchActionInfo("ps02:PS0206001A_S7");  //사원 코드	
	tit_callService(
          ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_perno=ds_perno"
        , ""
        , ""  //"fn_afterQuery"  
        , ""
        , ""
        , true);


    // ======================미입력분/입력분=================    
	//gfn_initDs(ds_list1, true);	     
    
	tit_clearActionInfo();	
	//tit_addSearchActionInfo("ps02:PS0205001A_S7");  //사원 코드
	tit_addSearchActionInfo("ps02:PS0206001A_S3");  //미입력분
	tit_addSearchActionInfo("ps02:PS0206001A_S4");  //입력분
	tit_callService(
          ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_list1=ds_list1 ds_list2=ds_list2"
        , ""
        , "fn_afterQuery"  
        , ""
        , ""
        , true);

        
        
   
     //    
        
        
     for( var i=0; i<ds_list1.rowcount; i++ )   
     {  
        
        ds_list1.SetColumn(i, "INP_DT", cb_inpday.Value); 
        ds_list1.SetColumn(i, "LIFNR", cb_zzlifnr.Value);
                
     }
     if(length(ds_perno.GetColumn(row,'CODE'))<=0 )
     //=================================삭제시 사용위함===============================
     //===============================================================================
     ds_perno_tmp3.ClearData();
     var cnt = 0;
     for( var i=0; i<ds_list2.rowcount; i++ )
     {
		//if(ds_list2.GetColumn(i, "PERNO0_CD") != "")
		if(length(ds_list2.GetColumn(i, "PERNO0_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO0_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO0_MH")); 			
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
		
		//if(ds_list2.GetColumn(i, "PERNO1_CD") != "")
		if(length(ds_list2.GetColumn(i, "PERNO1_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO1_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO1_MH")); 
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
		
		//if(ds_list2.GetColumn(i, "PERNO2_CD") != "")
		if(length(ds_list2.GetColumn(i, "PERNO2_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO2_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO2_MH")); 
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
		
		//if(ds_list2.GetColumn(i, "PERNO3_CD") != "")
		if(length(ds_list2.GetColumn(i, "PERNO3_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO3_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO3_MH")); 
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
		
		//if(ds_list2.GetColumn(i, "PERNO4_CD") != "")
		if(length(ds_list2.GetColumn(i, "PERNO4_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO4_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO4_MH")); 
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
		
		//if(ds_list2.GetColumn(i, "PERNO5_CD") != "")
		if(length(ds_list2.GetColumn(i, "PERNO5_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO5_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO5_MH")); 
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
     /*	========================================사원인원수추가 ==================================================*/
        
       if(length(ds_list2.GetColumn(i, "PERNO6_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO6_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO6_MH")); 
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
		
		if(length(ds_list2.GetColumn(i, "PERNO7_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO7_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO7_MH")); 
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
		
		if(length(ds_list2.GetColumn(i, "PERNO8_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO8_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO8_MH")); 
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
		
		if(length(ds_list2.GetColumn(i, "PERNO9_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO9_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO9_MH")); 
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
		if(length(ds_list2.GetColumn(i, "PERNO10_CD")) > 0)
		{
			ds_perno_tmp3.AddRow();
			ds_perno_tmp3.SetColumn(cnt, "CODE", ds_list2.GetColumn(i, "PERNO10_CD"));
			ds_perno_tmp3.SetColumn(cnt, "LIFNR", ds_list2.GetColumn(i, "LIFNR"));
			ds_perno_tmp3.SetColumn(cnt, "TMCD", ds_list2.GetColumn(i, "TMCD"));
			ds_perno_tmp3.SetColumn(cnt, "INP_DT", ds_list2.GetColumn(i, "INP_DT"));
			ds_perno_tmp3.SetColumn(cnt, "MH", ds_list2.GetColumn(i, "PERNO10_MH")); 
			ds_perno_tmp3.SetColumn(cnt, "P_ROW", i);
			cnt++;
		}
     }
     
  
     //===============================================================================
     //===============================================================================
       
    
       
     
}

/********************************************************************************
* 기      능   : 닫기 
********************************************************************************/
function fn_close() 
{
	close();
}



//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback 
********************************************************************************/
function fn_afterQuery(errCode, errMsg) 
{
	
	//gfn_showMsg("CI00002",ds_head.RowCount()+"");
	
	//gfn_showSearchMsg(grd_list1, errCode, errMsg);
	gfn_showSearchMsg(Tab00.tab1.grd_list1, errCode, errMsg);
	

//alert("b");
	ds_list1.Reset();
//alert("c");	
	Tab00.TabIndex = 0;
	
ds_list1_CanRowPosChange();
//alert("d");		
	fn_tuip();
//alert("e");		
	
}

/********************************************************************************
* 기      능   : M/H 리턴
********************************************************************************/
function ufn_mh(row) 
{
	if(length(ds_perno.GetColumn(row,'CODE'))<=0 )
	{
		mh = 0.0;	
		return mh;
	}
	else
	{
		mh = ds_perno.GetColumn(row,'MH');		
		return mh;
	}
}

/********************************************************************************
* 기      능   : 데이터셋 값 변경 시 - Flag 처리
********************************************************************************/
function ds_list1_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	obj.fireevent = false;
	var li_per_sum ;
	var colum;
	var row;
	var mh;
	//var perno;
	switch( strColumnID ) 
	{	
		case "PERNO0":
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO4_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO5_CD") OR 
		           ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO10_CD") )				
                {	
					ds_list1.SetColumn(nRow, "PERNO0", varOldValue); 
					break;
				}
			}
			//=====================================================/
			
			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO0_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list1.SetColumn(nRow, "PERNO0_MH", mh);  			
			ds_list1.SetColumn(nRow, "PERNO0_CD", ds_perno.GetColumn(row,'CODE'));  

		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip(obj);
		    
			break;
			
		case "PERNO1":
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO4_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO5_CD") OR 
		           ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO10_CD") )	
				{
//ALERT("2");		
					ds_list1.SetColumn(nRow, "PERNO1", varOldValue); 
					break;
				}
			}
			//=====================================================/
			
			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO1_MH", ds_perno.GetColumn(row,"MH"));  
			ds_list1.SetColumn(nRow, "PERNO1_MH", mh);  	
			ds_list1.SetColumn(nRow, "PERNO1_CD", ds_perno.GetColumn(row,"CODE"));   
	
		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
			
		    fn_chg_tuip(obj);
		    
			break;
			
		case "PERNO2":
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO4_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO5_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO10_CD") )
				   
				{
//ALERT("3");		
					ds_list1.SetColumn(nRow, "PERNO2", varOldValue); 
					break;
				}
			}
			//=====================================================/			
			
			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO2_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list1.SetColumn(nRow, "PERNO2_MH", mh); 
			ds_list1.SetColumn(nRow, "PERNO2_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip(obj);
		    
			break;
			
		case "PERNO3":
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO4_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO5_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO10_CD") )
				{
//ALERT("4");		
					ds_list1.SetColumn(nRow, "PERNO3", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO3_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list1.SetColumn(nRow, "PERNO3_MH", mh); 
			ds_list1.SetColumn(nRow, "PERNO3_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip(obj);
		    
			break;
		
		case "PERNO4":
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO5_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO10_CD") )
				{
//ALERT("5");		
					ds_list1.SetColumn(nRow, "PERNO4", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO4_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list1.SetColumn(nRow, "PERNO4_MH", mh); 
			ds_list1.SetColumn(nRow, "PERNO4_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip(obj);
		    
			break;
			
		case "PERNO5":
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO4_CD") OR
     			   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO10_CD") )
				{
//ALERT("6");		
					ds_list1.SetColumn(nRow, "PERNO5", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list1.SetColumn(nRow, "PERNO5_MH", mh); 
			ds_list1.SetColumn(nRow, "PERNO5_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip(obj);
		    
			break;
	/*========================================사원인원 추가================================================*/
			case "PERNO6":
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO4_CD") OR
     			   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO5_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO10_CD") )
				{
//ALERT("6");		
					ds_list1.SetColumn(nRow, "PERNO6", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list1.SetColumn(nRow, "PERNO6_MH", mh); 
			ds_list1.SetColumn(nRow, "PERNO6_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip(obj);
		    
			break;
			
			case "PERNO7":
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO4_CD") OR
     			   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO5_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO10_CD") )
				{
//ALERT("6");		
					ds_list1.SetColumn(nRow, "PERNO7", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list1.SetColumn(nRow, "PERNO7_MH", mh); 
			ds_list1.SetColumn(nRow, "PERNO7_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip(obj);
		    
			break;
			
		    case "PERNO8":
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO4_CD") OR
     			   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO5_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO10_CD") )
				{
//ALERT("6");		
					ds_list1.SetColumn(nRow, "PERNO8", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list1.SetColumn(nRow, "PERNO8_MH", mh); 
			ds_list1.SetColumn(nRow, "PERNO8_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip(obj);
		    
			break;	
					
			case "PERNO9":
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO4_CD") OR
     			   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO5_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO8_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO10_CD") )
				{
//ALERT("6");		
					ds_list1.SetColumn(nRow, "PERNO9", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list1.SetColumn(nRow, "PERNO9_MH", mh); 
			ds_list1.SetColumn(nRow, "PERNO9_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip(obj);
		    
			break;
	
			case "PERNO10":
			
			colum = ds_list1.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO4_CD") OR
     			   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO5_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO8_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list1.GetColumn(nRow,"PERNO9_CD") )
				{
//ALERT("6");		
					ds_list1.SetColumn(nRow, "PERNO10", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list1.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list1.SetColumn(nRow, "PERNO10_MH", mh); 
			ds_list1.SetColumn(nRow, "PERNO10_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list1.GetColumn(nRow,"PERNO0_MH") + ds_list1.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO2_MH") + ds_list1.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list1.GetColumn(nRow,"PERNO4_MH") + ds_list1.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO6_MH") + ds_list1.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO8_MH") + ds_list1.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list1.GetColumn(nRow,"PERNO10_MH");
			ds_list1.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip(obj);
		    
			break;
			
		case "CHECK":
			fn_chg_tuip(obj);
		    
			break;	
			
	}
	
	obj.fireevent = true;
}

function ds_list2_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	obj.fireevent = false;
	var li_per_sum;
	var colum;
	var row;
	//var perno;	
	switch( strColumnID ) 
	{
	
		case "PERNO0":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO4_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO5_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO10_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO0", varOldValue); 
					break;
				}
			}
			//=====================================================/				

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO0_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO0_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO0_CD", ds_perno.GetColumn(row,'CODE'));  
            


		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
		                 
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip2(obj);
		    
			break;
			
		case "PERNO1":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO4_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO5_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO10_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO1", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO1_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO1_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO1_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
			
		    fn_chg_tuip2(obj);
		    
			break;
			
		case "PERNO2":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO4_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO5_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO10_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO2", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO2_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO2_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO2_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip2(obj);
		    
			break;
			
		case "PERNO3":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO4_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO5_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO10_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO3", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO3_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO3_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO3_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip2(obj);
		    
			break;
		
		case "PERNO4":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO5_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO10_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO4", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO4_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO4_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO4_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip2(obj);
		    
			break;
			
		case "PERNO5":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO4_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO10_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO5", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO5_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO5_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip2(obj);
		    
			break;
				
			case "PERNO6":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO4_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO5_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO10_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO6", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO6_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO6_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip2(obj);
		    
			break;
				
			case "PERNO7":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO4_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO5_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO8_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO10_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO7", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO7_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO7_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip2(obj);
		    
			break;	
					
		    case "PERNO8":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO4_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO5_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO9_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO10_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO8", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO8_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO8_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip2(obj);
		    
			break;		
					
			case "PERNO9":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO4_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO5_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO8_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO10_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO9", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO9_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO9_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip2(obj);
		    
			break;	
							
		    case "PERNO10":
			colum = ds_list2.GetColumn(nRow,strColumnID);
			row   = ds_perno.SearchRow("CODE2=='"+colum+"'");
			
			//=========같은행에 같은 사원입력불가==================/
			if(length(ds_perno.GetColumn(row,'CODE')) > 0 )
			{
				if(ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO0_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO1_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO2_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO3_CD") OR
				   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO4_CD") OR
       			   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO5_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO6_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO7_CD") OR
	               ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO8_CD") OR
                   ds_perno.GetColumn(row,'CODE') == ds_list2.GetColumn(nRow,"PERNO9_CD") )
				{
		
					ds_list2.SetColumn(nRow, "PERNO10", varOldValue); 
					break;
				}
			}
			//=====================================================/	

			mh = ufn_mh(row);
			//ds_list2.SetColumn(nRow, "PERNO5_MH", ds_perno.GetColumn(row,'MH'));  
			ds_list2.SetColumn(nRow, "PERNO10_MH", mh); 
			ds_list2.SetColumn(nRow, "PERNO10_CD", ds_perno.GetColumn(row,'CODE'));   
		
		    li_per_sum = ds_list2.GetColumn(nRow,"PERNO0_MH") + ds_list2.GetColumn(nRow,"PERNO1_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO2_MH") + ds_list2.GetColumn(nRow,"PERNO3_MH") + 
		                 ds_list2.GetColumn(nRow,"PERNO4_MH") + ds_list2.GetColumn(nRow,"PERNO5_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO6_MH") + ds_list2.GetColumn(nRow,"PERNO7_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO8_MH") + ds_list2.GetColumn(nRow,"PERNO9_MH") +
		                 ds_list2.GetColumn(nRow,"PERNO10_MH");
			ds_list2.SetColumn(nRow, "PER_SUM", li_per_sum);
		    		    
		    fn_chg_tuip2(obj);
		    
			break;						
	
		case "CHECK":
			fn_chg_tuip2(obj);
		    
			break;	
	
	}
	obj.fireevent = true;
}

/********************************************************************************
* 기      능   : 팀장별 팀원 투입여부 그리드2 (미입력분)
********************************************************************************/
function fn_chg_tuip(dsObj)
{
	//var dsObj = object(gridObj.bindDataset);
    var cnt = 0;
    var mh  = 0.0;
    ds_perno_tmp.ClearData();
    //ds_perno_tmp.DeleteAll();
    for(var i=0; i<dsObj.GetRowCount(); i++)
	{
		if(dsObj.GetColumn(i, "CHECK")==1)
		{
				
			//if(dsObj.GetColumn(i, "PERNO0_CD") != "")
			if(length(dsObj.GetColumn(i, "PERNO0_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO0_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO0_MH")); //MH추가
				cnt++;
			}
			//if(dsObj.GetColumn(i, "PERNO1_CD") != "")
			if(length(dsObj.GetColumn(i, "PERNO1_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO1_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO1_MH")); //MH추가
				cnt++;
			}
			//if(dsObj.GetColumn(i, "PERNO2_CD") != "")
			if(length(dsObj.GetColumn(i, "PERNO2_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO2_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO2_MH")); //MH추가
				cnt++;
			}
			//if(dsObj.GetColumn(i, "PERNO3_CD") != "")
			if(length(dsObj.GetColumn(i, "PERNO3_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO3_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO3_MH")); //MH추가
				cnt++;
			}
			//if(dsObj.GetColumn(i, "PERNO4_CD") != "")
			if(length(dsObj.GetColumn(i, "PERNO4_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO4_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO4_MH")); //MH추가
				cnt++;
			}
			//if(dsObj.GetColumn(i, "PERNO5_CD") != "")
			if(length(dsObj.GetColumn(i, "PERNO5_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO5_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO5_MH")); //MH추가
				cnt++;
			}
			if(length(dsObj.GetColumn(i, "PERNO6_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO6_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO6_MH")); //MH추가
				cnt++;
			}
			if(length(dsObj.GetColumn(i, "PERNO7_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO7_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO7_MH")); //MH추가
				cnt++;
			}
			if(length(dsObj.GetColumn(i, "PERNO8_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO8_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO8_MH")); //MH추가
				cnt++;
			}
			if(length(dsObj.GetColumn(i, "PERNO9_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO9_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO9_MH")); //MH추가
				cnt++;
			}
			if(length(dsObj.GetColumn(i, "PERNO10_CD")) > 0)
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO10_CD"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO10_MH")); //MH추가
				cnt++;
			}
		}
    }
    
    if(tuip_cnt != "X") // 입력분이 있을시
    {
		for(var i=0; i<ds_mituip_tmp2.GetRowCount(); i++) 
		{
			if( ds_mituip_tmp2.GetColumn(i, "TUIP_CHK") == "X" )
			{
				ds_perno_tmp.AddRow();
				ds_perno_tmp.SetColumn(cnt, "CODE", ds_mituip_tmp2.GetColumn(i, "PERNO"));
				ds_perno_tmp.SetColumn(cnt, "LIFNR", ds_mituip_tmp2.GetColumn(i, "LIFNR"));
				ds_perno_tmp.SetColumn(cnt, "TMCD", ds_mituip_tmp2.GetColumn(i, "TMCD"));
				ds_perno_tmp.SetColumn(cnt, "INP_DT", ds_mituip_tmp2.GetColumn(i, "INP_DT"));
				ds_perno_tmp.SetColumn(cnt, "MH", ds_mituip_tmp2.GetColumn(i, "MH")); //MH추가
				cnt++;
			}
		}
    }
    
    
//trace(ds_mituip.SaveXML());
//trace(ds_perno_tmp.SaveXML());   
//alert("xxxxx");
    
	for(var i=0; i<ds_mituip.GetRowCount(); i++) 
	{		    
	    for(var j=0; j<ds_perno_tmp.GetRowCount(); j++)
		{
			if( ds_perno_tmp.GetColumn(j, "CODE") == ds_mituip.GetColumn(i, "PERNO") )
			{
				ds_mituip.SetColumn(i, "TUIP_CHK", "X");
				ds_mituip.SetColumn(i, "SAYU", "");										
				break; 
			}
			else
			{				
				ds_mituip.SetColumn(i, "TUIP_CHK", "");				
			}						
		}	
		
		//로의 전체가 미지정일때
		if (ds_perno_tmp.GetRowCount() < 1)
		{
			ds_mituip.SetColumn(i, "TUIP_CHK", "");	
		}
				
	}
	
	//==================mh추가=====================//
	for(var i=0; i<ds_mituip.GetRowCount(); i++) 
	{	
	    mh = 0.0;	 
	    ds_mituip.SetColumn(i, "MH", mh) ;
	    for(var j=0; j<ds_perno_tmp.GetRowCount(); j++)
		{
			if( ds_perno_tmp.GetColumn(j, "CODE") == ds_mituip.GetColumn(i, "PERNO") )
			{
				mh = mh + ds_perno_tmp.GetColumn(j, "MH"); 
				ds_mituip.SetColumn(i, "MH", mh) ; 
			}
			else{	}					
		}	
				
	}
	//=================================================//
	
}

/********************************************************************************
* 기      능   : 팀장별 팀원 투입여부 그리드2 (입력분)
********************************************************************************/
function fn_chg_tuip2(dsObj)
{
	//var dsObj = object(gridObj.bindDataset);
    var cnt = 0;
    var mh  = 0.0;
    ds_perno_tmp.ClearData();
    //ds_perno_tmp.DeleteAll();
    
//trace(dsObj.SaveXML());	   
 
    for(var i=0; i<dsObj.GetRowCount(); i++)
	{

		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO0_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO0_MH")); //MH추가
		cnt++;
			
		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO1_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO1_MH")); //MH추가
		cnt++;
			
		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO2_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO2_MH")); //MH추가
		cnt++;
			
		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO3_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO3_MH")); //MH추가
		cnt++;
			
		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO4_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO4_MH")); //MH추가
		cnt++;
			
		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO5_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO5_MH")); //MH추가
		cnt++;
		
		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO6_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO6_MH")); //MH추가
		cnt++;
		
		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO7_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO7_MH")); //MH추가
		cnt++;
		
		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO8_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO8_MH")); //MH추가
		cnt++;
	
		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO9_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO9_MH")); //MH추가
		cnt++;
		
		ds_perno_tmp.AddRow();
		ds_perno_tmp.SetColumn(cnt, "CODE", dsObj.GetColumn(i, "PERNO10_CD"));
		ds_perno_tmp.SetColumn(cnt, "LIFNR", dsObj.GetColumn(i, "LIFNR"));
		ds_perno_tmp.SetColumn(cnt, "TMCD", dsObj.GetColumn(i, "TMCD"));
		ds_perno_tmp.SetColumn(cnt, "INP_DT", dsObj.GetColumn(i, "INP_DT"));
		ds_perno_tmp.SetColumn(cnt, "MH", dsObj.GetColumn(i, "PERNO10_MH")); //MH추가
		cnt++;
    }
    
        
	for(var i=0; i<ds_mituip.GetRowCount(); i++) 
	{
	    for(var j=0; j<ds_perno_tmp.GetRowCount(); j++)
		{
			if( ds_perno_tmp.GetColumn(j, "CODE") == ds_mituip.GetColumn(i, "PERNO") )
			{
				ds_mituip.SetColumn(i, "TUIP_CHK", "X");
				ds_mituip.SetColumn(i, "SAYU", "");
				break;
			}
			else
			{
				ds_mituip.SetColumn(i, "TUIP_CHK", "");
			}
		}	
	}
	
	
	//==================mh추가=====================//
	for(var i=0; i<ds_mituip.GetRowCount(); i++) 
	{	
	    mh = 0.0;
	    ds_mituip.SetColumn(i, "MH",mh) ; 
	    for(var j=0; j<ds_perno_tmp.GetRowCount(); j++)
		{
			if( ds_perno_tmp.GetColumn(j, "CODE") == ds_mituip.GetColumn(i, "PERNO") )
			{
//alert("ds_mituip = " + ds_mituip.GetColumn(i, "PERNO"));
//alert("ds_perno_tmp = " + ds_perno_tmp.GetColumn(j, "MH"));
				mh = mh + ds_perno_tmp.GetColumn(j, "MH"); 
				ds_mituip.SetColumn(i, "MH",mh) ; 
			}
			else
			{	
				
			}					
		}	


				
	}
	//=================================================//	
	
}



/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery1(errCode, errMsg) 
{
	//gfn_showSearchMsg(Tab00.tab1.grd_list1, errCode, errMsg);
}
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery2(errCode, errMsg) 
{
	/*
	gfn_showMsg("CI00002",ds_list2.RowCount()+"");
	if(ds_list3.rowcount > 0) filterList();
	*/
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/
function ufn_userfunction() 
{
}

/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() 
{

	switch (Tab00.TabIndex) 
	{
		
		case 0 :
			if( ds_list1.rowcount > 0 )
			{
//alert(ds_list1.rowcount);
				gfn_saveToExcel(Tab00.tab1.grd_list1, true );
				break;
			}
			
			
		case 1 :
			if( ds_list2.rowcount > 0 )
			{
//alert(ds_list2.rowcount);			
				gfn_saveToExcel(Tab00.tab2.grd_list2, true );
				break;
			}	
	}
	
	
}



//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 텝 선택시
********************************************************************************/
function Tab00_OnChanged(obj, nOldIndex, nNewIndex)
{

	ds_perno.unFilter();
	
	
	
	if( obj.TabIndex == 0 )
	{ 
		btn_delete.enable = false;	
		
		ds_list1_CanRowPosChange();
		
		ds_list2.Reset();
		
	}
    else if( obj.TabIndex == 1 )
    {
		btn_delete.enable = true;	
		
		ds_list2_CanRowPosChange();
		
		ds_list1.Reset();
		
		for( var i=0; i<ds_list1.rowcount; i++ )   
		{  
        
			ds_list1.SetColumn(i, "INP_DT", cb_inpday.Value); 
			ds_list1.SetColumn(i, "LIFNR", cb_zzlifnr.Value);               
		}
		
	}
	
	fn_tuip();
	
	
}
/********************************************************************************
* 기      능   : 원프로젝트 팝업
********************************************************************************/
function btn_pjt_OnClick(obj)
{

	var arg = "pjt="+quote(ed_pjt.Text);
	
	gfn_openPopup("CS9601002A",true,arg);
	
	fn_query();
//Alert("btn_pjt_OnClick : " + zzgubun);		
}


/********************************************************************************
* 기      능   : 리스트의 타이틀 클릭  
********************************************************************************/
function Tab00_tab1_grd_list1_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
   
	if ( nCell == 0 ) {
		return;
	}
	else if ( nCell == 1 ) {
		// 그리드 표시할 컬럼 선택 
		gfn_selectAllGrid(obj,nCell,nCell,true);
	} else {
		// 그리드 정렬 처리 
		gfn_sortGrid(obj,nCell);
	}
	
//Alert("Tab00_tab1_grd_list1_OnHeadClick : " + zzgubun);	
	
}	
	
	
function Tab00_tab2_grd_list2_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{

	if ( nCell == 0 ) 
	{
		return;
	}
	else if ( nCell == 1 ) {
		// 그리드 표시할 컬럼 선택 
		gfn_selectAllGrid(obj,nCell,nCell,true);
	} else {
		// 그리드 정렬 처리 
		gfn_sortGrid(obj,nCell);
	}	
	
//Alert("Tab00_tab2_grd_list2_OnHeadClick : " + zzgubun);		
}	
	
	
	
/********************************************************************************
* 기      능   : 프로젝트에서 엔터키 처리 
********************************************************************************/
function ed_pjt_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
	if(nChar == 13)
	{
		fn_query();
	}
//Alert("ed_pjt_OnKeyDown : " + zzgubun);			
	
}


/********************************************************************************
* 기      능   : tab 선택시 선택안되도록 처리(자재협력사가 선택시)
********************************************************************************/
function Tab00_OnChanging(obj,nOldIndex,nNewIndex)
{
	//if(trim(G_USER_GROUP_M) == 'M10' && (nNewIndex == 0 || nNewIndex == 3) ) return false;
}

function Tab00_tab2_grd_list2_OnCellDblClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	/*
	if(nCell == '1') gfn_openPopup("PS0101001B",true);
	else if(nCell == '7' || nCell == '9' || nCell == '10') gfn_openPopup("PS0101001C",true);
	*/
}




/********************************************************************************
* 기      능   :  그리드에서 콤보 클릭시
********************************************************************************/
function fn_changeperno_grd_cd(temno,zzgubun)
{    
//alert(ds_pronr.SaveXML());		
//alert("a");		
	ds_perno.filter("RETIF!='X' && ( TEMNO== 'T' || TEMNO==" + quote( temno) + ") && TYPE =='1' && DIRECT =='X'"  );
	
	//ds_pronr.Filter("ZZTYPE=="+ quote( zztype));
	ds_pronr.FILTER("ZZTYPE==" + quote( zzgubun));

//    ds_pronr.Filter("")
   // alert(zzgubun);
  //  alert(ds_list1.GetColumn(nRow,"PRONR"));
	
}


function ds_list1_CanRowPosChange(obj,nOldRow,nRow)
{
//alert("xx");
	tm_cd = ds_list1.getColumn(nRow, "TMCD");
	if(ds_list1.getColumn(nRow, "BFTYPE") == '' && ds_list1.getColumn(nRow, "TYPE") == '') // 공정표가 정해지지않은 경우 필터 X
	{
	  zzgubun = "X"; 
	}
	else 
	{
	  zzgubun = ds_list1.getColumn(nRow, "ZZTYPE");
	}

   //alert(zzgubun);
	fn_changeperno_grd_cd(tm_cd,zzgubun);	
}



function ds_list2_CanRowPosChange(obj,nOldRow,nRow)
{

//alert("yy");	
	if ( Tab00.TabIndex != 0 )
	{   
	    tm_cd = ds_list2.getColumn(nRow, "TMCD");
		//zzgubun = ds_list2.getColumn(nRow, "ZZGUBUN");
		zzgubun = ds_list2.getColumn(nRow, "ZZTYPE");
	}
	
	fn_changeperno_grd_cd(tm_cd,zzgubun);		
}






/********************************************************************************
* 기      능   : 저장
********************************************************************************/
function fn_save() 
{

//TRACE(ds_mituip.SaveXML());
	
    
	for(var i=0; i<ds_mituip.GetRowCount(); i++)
	{
		if(ds_mituip.GetColumn(i, "MH") > 1.0 or 
		   (ds_mituip.GetColumn(i, "MH") < 1.0  and ds_mituip.GetColumn(i, "MH") > 0.0)   )
		{
			//var arr = [parseInt(i) + 1, "M/H가 1.0을 초과"];
			//var arr = [parseInt(i) + 1, "일별 M/H가 1.0을 초과 또는 0.5 입니다"];
			//gfn_showMsg("CW00224", arr);
			var tm_txt = parseInt(i) + 1;
			tm_txt = tm_txt + '행  일별 M/H가 1.0을 초과 또는 0.5이므로' ;
			var arr = [tm_txt];
			//gfn_showMsg("CW00114", arr);
			gfn_showAlert("CW00114", arr);
			return;
		}
	
		if(ds_mituip.GetColumn(i, "TUIP_CHK") != "X")
		{
			
			// 필수 입력 항목	시
			if(length(ds_mituip.GetColumn(i, "SAYU"))<=0 )
			{
				var arr = [parseInt(i) + 1, "미투입사유"];
				//gfn_showMsg("CW00224", arr);
				gfn_showAlert("CW00224", arr);
				return;
			} 
			
			if(length(ds_mituip.GetColumn(i, "BIGO"))<=0 )
			{
				var arr = [parseInt(i) + 1, "비고는 미투입시에"];
				//gfn_showMsg("CW00224", arr);
				gfn_showAlert("CW00224", arr);
				return;
			}			
			
			
		}		
	}
	
	
	
	if( Tab00.TabIndex == 0 )  //미입력분
	{
	
	
/*=======리스트에 호기가 없을시도 저장되게 프로세스 추가=======*/
		if(ds_list1.GetRowCount() > 0)
		{ 
/*=============================================================*/
	
			// 그리드 저장 대상 로우
			if(ds_list1.FindRow("CHECK", 1)==-1)
			{
				//gfn_showMsg('CW00046');			
				gfn_showAlert("CW00046");
				return;
			}
		
			for(var i=0; i<ds_list1.GetRowCount(); i++)
			{
				if(ds_list1.GetColumn(i, "CHECK")==1)
				{
				
					// 필수 입력 항목	
					if(length(ds_list1.GetColumn(i, "PRONR"))<=0 )
					{
						var arr = [parseInt(i) + 1, "작업공정"];
						//gfn_showMsg("CW00224", arr);
						gfn_showAlert("CW00224", arr);
						return;
					} 
					
				}
			}
		
			//action = "OK";
			ds_list1.Filter("CHECK==1");
			ds_list1_tmp.copyF(ds_list1);
			ds_list1.unFilter();	
		
			 
		
			tit_clearActionInfo();
			tit_addMultiActionInfo("ps02:PS0206001A_I1");
			tit_callService(
			  ""
			, ""
			, "ds_list1_tmp=ds_list1_tmp"
			, ""
			, ""
			, "fn_afterSave" 
			, ""
			, ""
			, true);
			
			ds_list1_tmp.ClearData();
			
/*=======리스트에 호기가 없을시도 저장되게 프로세스 추가=======*/	
		}
		else
		{
			fn_afterSave(0,"svae");
		}
/*=============================================================*/
		
	}
    else if( Tab00.TabIndex == 1 )  // 입력분
    {
    
/*=======리스트에 호기가 없을시도 저장되게 프로세스 추가=======*/
		if(ds_list2.GetRowCount() > 0)
		{ 
/*=============================================================*/
    
			// 그리드 저장 대상 로우
			if(ds_list2.FindRow("CHECK", 1)==-1)
			{
				//gfn_showMsg('CW00046');
				gfn_showAlert("CW00046");
				return;
			}
			
			for(var i=0; i<ds_list2.GetRowCount(); i++)
			{
				if(ds_list2.GetColumn(i, "CHECK")==1)
				{
				
					// 필수 입력 항목	
					if(length(ds_list2.GetColumn(i, "PRONR"))<=0 )
					{
						var arr = [parseInt(i) + 1, "작업공정"];
						//gfn_showMsg("CW00224", arr);
						gfn_showAlert("CW00224", arr);
						return;
					} 
					
				}
			}
		
			//action = "OK";
			ds_list2.Filter("CHECK==1");
			ds_list2_tmp.copyF(ds_list2);
			ds_list2.unFilter();	
			
			
		
			tit_clearActionInfo();
			tit_addMultiActionInfo("ps02:PS0206001A_U1");
			tit_callService(
			  ""
			, ""
			, "ds_list2_tmp=ds_list2_tmp"
			, ""
			, ""
			, "fn_afterSave" 
			, ""
			, ""
			, true);
			
			ds_list2_tmp.ClearData();
			//fn_query();		
			
/*=======리스트에 호기가 없을시도 저장되게 프로세스 추가=======*/	
		}
		else
		{
			fn_afterSave(0,"svae");
		}
/*=============================================================*/			
			
	}
	
	
	
	
}
 

/********************************************************************************
* 기      능   : 삭제
********************************************************************************/
function fn_delete() 
{
	//var action = "";
	
    if( Tab00.TabIndex == 1 )  // 입력분
    {
		
/*=======리스트에 호기가 없을시도 저장되게 프로세스 추가=======*/	
		if(ds_list2.GetRowCount() > 0)
		{
/*=============================================================*/				
		
			// 그리드 저장 대상 로우
			if(ds_list2.FindRow("CHECK", 1)==-1)
			{
				//gfn_showMsg('CW00046');
				gfn_showAlert("CW00046");
				return;
			}
				
	
			var cnt = 0;                 //선택한 로의값이 삭제를위해
			var mh_t = 0.0;              //선택한 로의값이 삭제를위해
			var mh = 0.0;                //선택한 로의값이 삭제를위해
			ds_perno_tmp4.ClearData();   //선택한 로의값이 삭제를위해
	
	
			for(var i=0; i<ds_list2.GetRowCount(); i++)
			{
				if(ds_list2.GetColumn(i, "CHECK")==1)
				{
				
					// 삭제가 안되는 경우
					if( length(ds_list2.GetColumn(i, "GATST")) > 0 || length(ds_list2.GetColumn(i, "MRLST"))>0 || 
						length(ds_list2.GetColumn(i, "TMPST")) > 0 || length(ds_list2.GetColumn(i, "SITST"))>0 || 
						length(ds_list2.GetColumn(i, "ZWORK")) > 0 ||
						length(ds_list2.GetColumn(i, "ZWERP")) > 0 || length(ds_list2.GetColumn(i, "BIGO")) > 0  )
					{
						//var arr = [parseInt(i) + 1, "안전사고/현장안전점검/근태여부/보호구착용/비고 입력분은 삭제가 불가능 담당 PM에게 확인바람"];
						var lv_low = parseInt(i) + 1;
						var arr = lv_low + "행의 " + "안전사고/현장안전점검/근태여부/보호구착용/비고 입력분은 삭제가 불가능 담당 PM에게 확인바람";					
						//gfn_showMsg("CW00022", arr);
						gfn_showAlert("CW00022", arr);
						return;
					} 
					
					
					//=============================선택한 로의값이 삭제를위해==============================
					//var cnt = 0;
					//var mh_t = 0.0;
					//var mh = 0.0;
					//ds_perno_tmp4.ClearData();     
//trace(ds_perno_tmp3.SaveXML());					
//alert("임시");
								
					for( var j=0; j<ds_perno_tmp3.rowcount; j++ )
					{
						if(ds_perno_tmp3.GetColumn(j, "P_ROW") == i )
						{
										
							if(ds_perno_tmp4.FindRow("CODE", ds_perno_tmp3.GetColumn(j, "CODE")) == -1)
							{    						
	
								ds_perno_tmp4.AddRow();
								ds_perno_tmp4.SetColumn(cnt, "CODE", ds_perno_tmp3.GetColumn(j, "CODE"));
								ds_perno_tmp4.SetColumn(cnt, "LIFNR", ds_perno_tmp3.GetColumn(j, "LIFNR"));
								ds_perno_tmp4.SetColumn(cnt, "TMCD", ds_perno_tmp3.GetColumn(j, "TMCD"));
								ds_perno_tmp4.SetColumn(cnt, "INP_DT", ds_perno_tmp3.GetColumn(j, "INP_DT"));
								ds_perno_tmp4.SetColumn(cnt, "MH", ds_perno_tmp3.GetColumn(j, "MH")); 
								cnt++;
								
							}
							else
							{
			
								mh_t = ds_perno_tmp4.GetColumn(ds_perno_tmp4.FindRow("CODE", ds_perno_tmp3.GetColumn(j, "CODE")), "MH");
						
								mh_t = ToNumber(mh_t);
								mh = mh_t + ToNumber(ds_perno_tmp3.GetColumn(j, "MH"));
								ds_perno_tmp4.SetColumn(ds_perno_tmp4.FindRow("CODE", ds_perno_tmp3.GetColumn(j, "CODE")), "MH", mh); 
							}
						}
				
					 }
					 
					 
					//=========================================================================================
					
					
				}
			}
			ds_perno_tmp3.ClearData(); //선택한 로의값이 삭제를위해
				
			
			ds_list2.Filter("CHECK==1");
			ds_list2_tmp.copyF(ds_list2);
			ds_list2.unFilter();	
			
			
			tit_clearActionInfo();
			tit_addMultiActionInfo("ps02:PS0206001A_D1");
			tit_callService(
			  ""
			, ""
			, "ds_list2_tmp=ds_list2_tmp"
			, ""
			, ""
			, "fn_afterDelete" 
			, ""
			, ""
			, true);
			
			ds_list2_tmp.ClearData();
			//fn_query();		
		
/*=======리스트에 호기가 없을시도 저장되게 프로세스 추가=======*/	
		}
		else
		{
			tit_clearActionInfo();
			tit_addSearchActionInfo("ps02:PS0206001A_D2");      //투입리스트 삭제
			
			tit_callService(
				""
				, ""
				, "ds_cond=ds_cond"
				, "" //"ds_tmcd=ds_tmcd"		
				, ""
				, ""   //"fn_afterQueryA"
				, ""  //true
				, ""
				, true);
				
			fn_query();
		}
/*=============================================================*/		
		
	}
	
	
}



/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) 
{


//Alert("errCode : " + errCode);

	if ( errCode != 0 ) 
	{
		//gfn_showMsg("CE00001");
		gfn_showAlert("CE00001");
	} 
	else 
	{
		//gfn_showMsg("CI00003");
		gfn_showAlert("CI00003");
		
		//ds_mituip 저장

//trace(ds_mituip.SaveXML());
		for(var i=0; i<ds_mituip.GetRowCount(); i++)
		{
		
			ds_mituip_tmp.ClearData();
			ds_mituip_tmp.AddRow();
			//ds_mituip_tmp.CopyRow(0, ds_mituip, i);
			ds_mituip_tmp.setColumn(0, "LIFNR",   ds_mituip.GetColumn(i, "LIFNR"));
			ds_mituip_tmp.setColumn(0, "TMCD",   ds_mituip.GetColumn(i, "TMCD"));
			ds_mituip_tmp.setColumn(0, "INP_DT",   ds_mituip.GetColumn(i, "INP_DT"));
			ds_mituip_tmp.setColumn(0, "GBN",   ds_mituip.GetColumn(i, "GBN"));
			ds_mituip_tmp.setColumn(0, "PERNO",   ds_mituip.GetColumn(i, "PERNO"));
			ds_mituip_tmp.setColumn(0, "NAMEE",   ds_mituip.GetColumn(i, "NAMEE"));
			ds_mituip_tmp.setColumn(0, "TUIP_CHK",   ds_mituip.GetColumn(i, "TUIP_CHK"));
			ds_mituip_tmp.setColumn(0, "SAYU",   ds_mituip.GetColumn(i, "SAYU"));
			ds_mituip_tmp.setColumn(0, "MH",   ds_mituip.GetColumn(i, "MH"));
			ds_mituip_tmp.setColumn(0, "BIGO",   ds_mituip.GetColumn(i, "BIGO"));
			
			
			tit_clearActionInfo();
			tit_addSelectExActionInfo("ps02:PS0206001A_S12", "ps02:PS0206001A_I2", "ps02:PS0206001A_U2");	
			tit_callService(
				""
				, ""
				, "ds_mituip_tmp=ds_mituip_tmp"
				, ""
				, ""
				, ""
				, ""
				, ""
				, true  // ""
			);
		}
		
		
		fn_query();
	}
}

/********************************************************************************
* 기      능   : 삭제 Callback  
********************************************************************************/
function fn_afterDelete(errCode, errMsg) 
{
	if ( errCode != 0 ) 
	{
		//gfn_showMsg("CE00001");
		gfn_showAlert("CE00001");
	} 
	else 
	{
		//gfn_showMsg("CI00004");	
		gfn_showAlert("CI00004");
		
	
	
		//=============ds_mituip UPDATE===========================
		for(var i=0; i<ds_perno_tmp4.GetRowCount(); i++)
		{
			if(length(ds_perno_tmp4.GetColumn(i,'CODE')) > 0 )
			{
				ds_perno_tmp2.ClearData();
				ds_perno_tmp2.AddRow();
				//ds_perno_tmp2.CopyRow(0, ds_perno_tmp4, i);		
				ds_perno_tmp2.setColumn(0, "CODE",   ds_perno_tmp4.GetColumn(i, "CODE"));
				ds_perno_tmp2.setColumn(0, "LIFNR",   ds_perno_tmp4.GetColumn(i, "LIFNR"));
				ds_perno_tmp2.setColumn(0, "TMCD",   ds_perno_tmp4.GetColumn(i, "TMCD"));
				ds_perno_tmp2.setColumn(0, "INP_DT",   ds_perno_tmp4.GetColumn(i, "INP_DT"));
				ds_perno_tmp2.setColumn(0, "MH",   ToNumber(ds_perno_tmp4.GetColumn(i, "MH")));
		
		
				tit_clearActionInfo();
				tit_addSearchActionInfo("ps02:PS0206001A_S13");
				tit_callService(
					""
					, ""
					, "ds_perno_tmp2=ds_perno_tmp2"
					, "ds_chk=ds_chk"		
					, ""
					, ""   //"fn_afterQueryA"
					, ""  //true
					, ""
					, true);
			
//alert("a");		
				if( ds_chk.GetColumn(0, "CNT") = 0 ) //저장된 정보가 없을시
				{
					tit_clearActionInfo();
					tit_addSingleActionInfo("ps02:PS0206001A_U3");
					tit_callService(
						""
						, ""
						, "ds_perno_tmp2=ds_perno_tmp2"
						, ""
						, ""
						, ""
						, ""
						, ""
						, true);
//alert("b");						
				}
				else
				{
					tit_clearActionInfo();
					tit_addSingleActionInfo("ps02:PS0206001A_U4");
					tit_callService(
						""
						, ""
						, "ds_perno_tmp2=ds_perno_tmp2"
						, ""
						, ""
						, ""
						, ""
						, ""
						, true);
//alert("c");						
				}
			}
		
		}	
		
		ds_perno_tmp2.ClearData();
			
		//fn_query();
		//======================================================//
		fn_query();
		
		
	}
}


/*
//미투입 사유코드중 업체지원은 선택하지 못하게 함.
function fn_changeperno_grd_cd2()
{    	
//ALERT("BB");
	ds_sayu.filter("CODE!='D'");	
	
}

*/

/********************************************************************************
* 기      능   : 사무소 별 협력업체 필터 
********************************************************************************/
function cb_zzactss_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
     if(userGroup == "40" || userGroup == "30"){
     ds_cond.SetColumn(0,"ZZLIFNR",''); }

    if(ds_cond.GetColumn(0,"ZZACTSS") == '')
    {
       ds_zzlifnr.UnFilter();
    }
    else
    {
      var arr = ds_cond.GetColumn(0,"ZZACTSS");
	  ds_zzlifnr.Filter("ZZACTSS ==" +quote(arr));
    }
}

/********************************************************************************
* 기      능   : PRINT 출 력 
********************************************************************************/
function fn_print() 
{

    //설치협력사 조회시 협력업체 필수체크
	if(gfn_isNull(cb_zzlifnr, true, st_lifnr.value))  return;	
	//투입일 필수체크
	if(gfn_isNull(cb_inpday,  true, st_inpday.value)) return;
	
    ds_cond_p.ClearData();
	ds_cond_p.AddRow();
	ds_cond_p.SetColumn(0,"INP_DT",ds_cond.GetColumn(0,"INP_DT"));
	ds_cond_p.SetColumn(0,"LIFNR",ds_cond.GetColumn(0,"ZZLIFNR"));
	
	ds_list_p.ClearData();
	tit_clearActionInfo();
	tit_addSearchActionInfo("ps02:PS0206001A_S15");
	
	tit_callService(
        ""
        , ""
        , "ds_cond_p=ds_cond_p"
        , "ds_list_p=ds_list_p"
        , ""
        , "fn_afterQuery3"
        , true);
      
}

/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery3(errCode, errMsg) 
{
  	Dialog("PS02::PS0206001P.xml", "");
}
]]></Script>
</Window>