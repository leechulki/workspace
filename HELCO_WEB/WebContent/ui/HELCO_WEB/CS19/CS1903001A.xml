<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="CS1903001A" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="지사별&#32;사업장관리" ToolTipFont="Default,0" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="VKBUR" size="256" summ="default" type="STRING"/>
					<colinfo id="BUKRS" size="256" summ="default" type="STRING"/>
					<record>
						<BUKRS></BUKRS>
						<VKBUR></VKBUR>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBUR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBUR_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP_ADD" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP_TEL" size="256" summ="default" type="STRING"/>
					<colinfo id="BRANCH" size="256" summ="default" type="STRING"/>
					<colinfo id="STCD2" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_vkbur_cd">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_branch">
				<Contents>
					<colinfo id="BRANCH" size="256" summ="default" type="STRING"/>
					<colinfo id="NAME" size="256" summ="default" type="STRING"/>
					<colinfo id="STCD2" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="30" Height="30" Id="Shape0" Left="0" LineColor="user1" Right="976" TabOrder="1" Top="0" Type="Rectangle" Visible="FALSE" Width="976"></Shape>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="VKBUR" DataColumn="CODE_NAME" Height="20" Id="cb_vkbur" InnerDataset="ds_vkbur_cd" Left="101" Style="sty_ipt_search" TabOrder="3" Top="4" Visible="FALSE" Width="180"></Combo>
		<Static Align="Right" Height="20" Id="Static2" Left="18" Style="sty_lb_search" TabOrder="4" Text="계약구분&#32;" Top="5" VAlign="Middle" Visible="FALSE" Width="80"></Static>
		<Grid AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="551" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="546" Id="grd_list" InputPanel="FALSE" Left="10" LineColor="user20" LineType="ExHORZ" MinWidth="100" Right="968" RowHeight="20" Style="sty_grid" TabOrder="2" TabStop="true" Top="5" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="958">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="30"/>
						<col width="120"/>
						<col width="120"/>
						<col width="436"/>
						<col width="100"/>
						<col width="80"/>
						<col width="99"/>
					</columns>
					<head>
						<cell col="0" color="user21" display="null" font="굴림,9" text="CHK"/>
						<cell col="1" color="user21" display="text" font="굴림,9" text="사업장(부서)"/>
						<cell col="2" color="user21" display="text" font="굴림,9" text="영업그룹(팀)"/>
						<cell col="3" color="user21" display="text" font="굴림,9" text="주소"/>
						<cell col="4" color="user21" display="text" font="굴림,9" text="연락처"/>
						<cell col="5" color="user21" display="text" font="굴림,9" text="BRANCH"/>
						<cell col="6" color="user21" display="text" font="굴림,9" text="사업자등록번호"/>
					</head>
					<body>
						<cell col="0" colid="CHK" display="checkbox"/>
						<cell col="1" colid="VKBUR_NM" display="text" suppress="1"/>
						<cell col="2" colid="VKGRP_NM" display="text"/>
						<cell col="3" colid="VKGRP_ADD" display="text"/>
						<cell align="center" col="4" colid="VKGRP_TEL" display="text"/>
						<cell align="center" col="5" colid="BRANCH" combocol="BRANCH" combodataset="ds_branch" combodisplayrowcnt="10" combotext="NAME" display="text" edit="combo"/>
						<cell align="center" col="6" colid="STCD2" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) 
{
	gfn_initForm(true);
	//공통코드
	var codeArr = ["VKBUR"];	
	var dsObjArr = [ds_vkbur_cd];
	var addTypeArr = [G_CODE_ALL,G_CODE_NONE];
	gfn_searchCommCode(codeArr, dsObjArr, addTypeArr);	

	ds_cond.AddRow();
	ds_cond.SetColumn(0, "VKBUR", "%");
	ds_cond.SetColumn(0, "BUKRS", "1000");
	
	ufn_branch();
	fn_query();
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() {

		tit_clearActionInfo();
		tit_addSearchActionInfo("cs19:CS1903001A_S1");
		
		tit_callService(
			""
			, ""
			, "ds_cond=ds_cond"
			, "ds_list=ds_list"
			, ""
			, "fn_afterQuery"
			, true);
	}
}

/********************************************************************************
* 기      능   : 저장
********************************************************************************/
function fn_save() {
	// 변경 정보 
	if ( !gfn_isChangeDs(ds_list, true) ) {
		return;
	}
	
	//btn_save.Enable = false;
	tit_clearActionInfo();

	// 미발주 및 만료사유 updaet(zcst113)
	tit_addMultiActionInfo("cs19:CS1903001A_U1");
	
	trace(ds_list.SaveXml());	

	tit_callService(
        ""
        , ""
        , "ds_list=ds_list:U"
        , ""
        , ""
        , "fn_afterSave"
        , true);
}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}
/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	// Excel Export 
	gfn_saveToExcel(grd_list, true );	
}
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) 
{
	// 메시지 처리 
	gfn_showSearchMsg(grd_list);
}
/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) 
{
	if ( ds_error.rowcount() > 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
		fn_query();
	}
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/
function ufn_branch()
{
	tit_clearActionInfo();
	tit_addSearchActionInfo("cs19:CS1903001A_S2");	
	tit_callService(
          ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_branch=ds_branch"
        , ""
        , "ufn_afterBranch"
        , true);	
}
function ufn_afterBranch(errCode, errMsg) 
{
}

/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if ( nCell == 0 ) {
		// 그리드 표시할 컬럼 선택 
		gfn_selectGridCol(obj);
	} else {
		// 그리드 정렬 처리 
		gfn_sortGrid(obj,nCell);
	}
}
/********************************************************************************
* 기      능   : 데이터셋 값 변경 시 - Flag 처리 
********************************************************************************/
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if (strColumnID == "BRANCH")
	{
		var fRow = ds_branch.FindRow("BRANCH",varNewValue);
		ds_list.SetColumn(nRow, "STCD2", ds_branch.GetColumn(fRow, "STCD2"));
		ds_list.SetColumn(nRow, "CHK", "1");
	}
}]]></Script>
</Window>