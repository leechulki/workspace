<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="CS0604001A" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="문제점보고항목&#32;관리" Top="8" Ver="1.0" Width="978" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="QMC" size="256" type="STRING"/>
					<record>
						<QMC>00</QMC>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Editable="True" Id="ds_list" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="QMC" size="256" type="STRING"/>
					<colinfo id="QMR" size="256" type="STRING"/>
					<colinfo id="MIR" size="256" type="STRING"/>
					<colinfo id="CTEXT2" size="256" type="STRING"/>
					<colinfo id="DBYN" size="256" type="STRING"/>
					<colinfo id="DELFLAG" size="256" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_qmc">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_qmcin" OnColumnChanged="ufn_qmcInChange">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_maxcode">
				<Contents>
					<colinfo id="CODE" size="2" type="STRING"/>
					<colinfo id="MAXCODE" size="2" type="INT"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="30" Height="30" Id="Shape0" Left="0" LineColor="user1" Right="978" TabOrder="1" Top="0" Type="Rectangle" Width="978"></Shape>
		<Static Align="Right" Height="20" Id="Static0" Left="5" Style="sty_lb_search" TabOrder="2" Text="문제점&#32;분류&#32;" Top="5" VAlign="Middle" Width="80"></Static>
		<Combo BindDataset="ds_cond" Border="Flat" CodeColumn="CODE" Column="QMC" DataColumn="CODE_NAME" Height="20" Id="cb_qmc" INDEX="0" InnerDataset="ds_qmc" Left="86" Style="sty_ipt_search" TabOrder="3" Top="4" Width="99"></Combo>
		<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="552" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="492" Id="grd_list" InputPanel="FALSE" Left="10" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnHeadClick="grd_list_OnHeadClick" Right="968" RowHeight="20" Style="sty_grid" TabOrder="6" TabStop="true" Top="60" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="958">
			<contents>
				<format id="Default">
					<columns>
						<col width="20"/>
						<col width="40"/>
						<col width="160"/>
						<col width="120"/>
						<col width="260"/>
						<col width="342"/>
					</columns>
					<head>
						<cell align="center" bkimageid="icon_window_03" col="0" color="user21" display="text" font="굴림,9"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="NO"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="분류명"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="문제점보고코드"/>
						<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="문제점보고항목"/>
						<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="중점내용"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(decode(rowType,&quot;insert&quot;,&quot;I&quot;,&quot;update&quot;,&quot;U&quot;,&quot;delete&quot;,&quot;D&quot;,rowType))' col="0" display="text" scrollbar="horz"/>
						<cell align="center" bkcolor2="user22" col="1" display="text" expr="currow+1"/>
						<cell align="center" bkcolor2="user22" col="2" colid="CTEXT2" combocol="CODE" combodataset="ds_qmcin" combotext="CODE_NAME" display="combo" edit='expr:iif(&#32;GetRowType(currow)&#32;==&#32;&quot;insert&quot;,&#32;&quot;combo&quot;,&#32;&quot;none&quot;&#32;)&#32;' expr="ds_qmc.value"/>
						<cell align="center" bkcolor2="user22" col="3" colid="QMC" display="text" Mask="####"/>
						<cell align="left" bkcolor2="user22" col="4" colid="QMR" display="text" edit="normal"/>
						<cell align="left" bkcolor2="user22" col="5" colid="MIR" display="text" edit="normal"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Button Cursor="HAND" Height="20" Id="btn_add" ImageID="btn_icon_plus" Left="922" LeftMargin="12" OnClick="fn_insert" Style="sty_btn" TabOrder="5" Top="36" Transparent="TRUE" Width="22"></Button>
		<Button Cursor="HAND" Height="20" Id="btn_del" ImageID="btn_icon_minus" Left="946" LeftMargin="12" OnClick="fn_delete" Style="sty_btn" TabOrder="4" Top="36" Transparent="TRUE" Width="22"></Button>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initForm(true);
	//공통코드
	var codeArr = ["CS101","CS101"];
	var dsObjArr = [ds_qmc,ds_qmcin];
	var addTypeArr = [G_CODE_ALL,G_CODE_NONE];
	gfn_searchCommCode(codeArr, dsObjArr, addTypeArr);
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
	cb_qmc.value = "";	
	ufn_maxCodeInit();
}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 1
********************************************************************************/
function fn_query() {
	tit_clearActionInfo();
	tit_addSearchActionInfo("cs06:CS0604001A_S1");
	
	tit_callService(
        ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_list=ds_list"
        , ""
        , "fn_afterQuery"
        , true);
        
}
/********************************************************************************
* 기      능   : 삽입 20
********************************************************************************/
function fn_insert() {
	// 그리드에 row 추가 	
	if(cb_qmc.Value==""){
		gfn_showAlert("CW00020");
	}
	else{		
		ds_list.AddRow();			
		ds_list.SetColumn(ds_list.currow,"CTEXT2",cb_qmc.Value);		
		//ufn_maxCodePlus();
	}		
}
/********************************************************************************
* 기      능   : Delete 
********************************************************************************/
function fn_delete() {
	
	if ( ds_list.rowCount() == 0 ) {
		// 삭제할 자료 선택 
		// CW00013=처리할 자료를 먼저 선택해 주십시오.
		gfn_showMsg("CW00013");
		return;
	}
	ds_list.fireevent = false;
	if(ds_list.GetColumn(ds_list.currow,"DBYN")=="Y"){		
		if(ds_list.GetColumn(ds_list.currow,"DELFLAG")=="Y"){
			gfn_showAlert("CW00019");
		}else{        	
			ds_list.updatecontrol = false;
			ds_list.SetRowType(ds_list.currow,"Delete");
			ds_list.updatecontrol = true;	
		}
	}
	else{
		ufn_maxCodeMinus();
		ds_list.DeleteRow(ds_list.currow);
	}
	ds_list.fireevent = true;
}

/********************************************************************************
* 기      능   : 저장 
********************************************************************************/
function fn_save() {
	//tit_showDs(ds_list);
	tit_clearActionInfo();
	tit_addSaveActionInfo(
		"cs06:CS0604001A_I1"
		, "cs06:CS0604001A_U1"
		, "cs06:CS0604001A_D1"
		);

	// 저장 처리 
	tit_callService(
        ""
        , ""
        , "ds_list=ds_list:A"
        , ""
        , ""
        , "fn_afterSave");
}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}
/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	// Excel Export 
	gfn_saveToExcel(grd_list, true );
}
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
	// 메시지 처리 
	gfn_showSearchMsg(grd_list);
	ufn_maxCodeInit();	
}
/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
	if ( errCode!= 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
	}
	fn_query();
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/
function ufn_maxCodeInit() {
	//MAX code초기세팅		
	tit_clearActionInfo();	
	tit_addSearchActionInfo("cs06:CS0604001A_S2");	
	tit_callService(
        ""
        , ""
        , ""
        , "ds_maxcode=ds_maxcode"
        , ""
        , ""
        , true);    
}

function ufn_maxCodeMinus() {
	//MAX code 빼기
	var nRow = -1;
	for(var i = 0; i<=ds_maxcode.lastrow; i++){
		if(ds_maxcode.GetColumn(i,"CODE")==substr(toString(ds_list.GetColumn(ds_list.currow,"QMC")),0,2)){
			nRow = i;
			break;
		}
	}
	if(ds_list.GetColumn(ds_list.currow,"DBYN")!="Y" 
			&& toNumber(substr(toString(ds_list.GetColumn(ds_list.currow,"QMC")),2,2)) == ds_maxcode.GetColumn(nRow,"MAXCODE")){	
		ds_maxcode.SetColumn(nRow,"MAXCODE",toNumber(ds_maxcode.GetColumn(nRow,"MAXCODE"))-1);	
	}	
}

function ufn_qmcInChangeNew(varNewValue) {
	//MAX code세팅
	var nRow = -1;
	for(var i = 0; i<=ds_maxcode.lastrow; i++){
		if(ds_maxcode.GetColumn(i,"CODE")==varNewValue){
			nRow = i;
			break;
		}
	}
	if(nRow == -1){	
		ds_maxcode.AddRow();
		ds_maxcode.SetColumn(ds_maxcode.lastrow,"CODE",ds_list.GetColumn(ds_list.currow,"CTEXT2"));
		ds_maxcode.SetColumn(ds_maxcode.lastrow,"MAXCODE","00");
		nRow = ds_maxcode.lastrow;
	}
	else{		
		ds_maxcode.SetColumn(nRow,"MAXCODE",toNumber(ds_maxcode.GetColumn(nRow,"MAXCODE"))+1);	
	}	
	
	var strMax = toString(ds_maxcode.GetColumn(nRow,"MAXCODE"));
	if(strMax.length == 1){
		strMax = "0" + strMax;
	}
	ds_list.SetColumn(ds_list.currow,"QMC",ds_list.GetColumn(ds_list.currow,"CTEXT2")+strMax);
}

function ufn_qmcInChangeOld(varOldValue) {
	//MAX code세팅		
	var nRow = -1;
	for(var i = 0; i<=ds_maxcode.lastrow; i++){
		if(ds_maxcode.GetColumn(i,"CODE")==varOldValue){
			nRow = i;
			break;
		}
	}
	if(toNumber(ds_maxcode.GetColumn(nRow,"MAXCODE")) == toNumber(substr(ds_list.GetColumn(ds_list.currow,"QMC"),2,2)))	{
		ds_maxcode.SetColumn(nRow,"MAXCODE",toNumber(ds_maxcode.GetColumn(nRow,"MAXCODE"))-1);	
	}			
}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if ( nCell == 0 ) {
		// 그리드 표시할 컬럼 선택 
		gfn_selectGridCol(obj);
	} else {
		// 그리드 정렬 처리 
		gfn_sortGrid(obj,nCell);
	}
}
/********************************************************************************
* 기      능   : 데이터셋 값 변경 시 - Flag 처리 
********************************************************************************/
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if(strColumnID == "CTEXT2"){
		if(ds_list.GetColumn(ds_list.currow,"DELFLAG")!="Y"){
			gfn_changeFlag( obj, strColumnID, nRow, "FLAG" );
			ufn_qmcInChangeOld(varOldValue);		
			ufn_qmcInChangeNew(varNewValue);	
		}		
	}
}
]]></Script>
</Window>