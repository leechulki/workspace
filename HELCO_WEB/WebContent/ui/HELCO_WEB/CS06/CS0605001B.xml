<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="496" Id="CS0605001B" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="문제점보고항목별&#32;Check" Top="8" Ver="1.0" Width="608" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_list_p" OnColumnChanged="ds_list_p_OnColumnChanged">
				<Contents>
					<colinfo id="CS106_NO1" size="256" type="STRING"/>
					<colinfo id="CS106_QMC" size="256" type="STRING"/>
					<colinfo id="CS106_QMR" size="256" type="STRING"/>
					<colinfo id="CS106_MIR" size="256" type="STRING"/>
					<colinfo id="CHK" size="256" type="STRING"/>
					<colinfo id="CS106_NO2" size="256" type="STRING"/>
					<record>
						<CHK></CHK>
						<CS106_MIR></CS106_MIR>
						<CS106_NO1></CS106_NO1>
						<CS106_NO2></CS106_NO2>
						<CS106_QMC></CS106_QMC>
						<CS106_QMR></CS106_QMR>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Grid AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list_p" BkColor2="default" BoldHead="true" Border="Flat" Bottom="488" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="422" Id="Grid0" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" MinWidth="100" Right="600" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="66" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="592">
			<contents>
				<format id="Default">
					<columns>
						<col width="40"/>
						<col width="28"/>
						<col width="58"/>
						<col width="198"/>
						<col width="260"/>
					</columns>
					<head>
						<cell align="center" col="0" color="user21" display="text" font="굴림,9" text="선택"/>
						<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="NO"/>
						<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="검사개소"/>
						<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="검사항목"/>
						<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="중점내용"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" colid="CHK" display="checkbox" edit='expr:fn_changeChk(ds_list_p.getColumn(currow,&quot;CS106_QMC&quot;))'/>
						<cell align="center" bkcolor2="user22" col="1" colid="CS106_NO1" display="text" suppress="1"/>
						<cell bkcolor2="user22" col="2" colid="CS106_NO2" display="text"/>
						<cell align="left" bkcolor2="user22" col="3" colid="CS106_QMR" display="text"/>
						<cell align="left" bkcolor2="user22" col="4" colid="CS106_MIR" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Static Border="None" Color="user7" Font="굴림,9" Height="20" Id="Static17" Left="12" TabOrder="2" Text="문제점없음&#32;코드&#32;추가" Top="43" VAlign="Middle" Width="190"></Static>
		<Div Height="36" Id="div_btn" TabOrder="3" Text="Div0" Url="WB01::CommBtnForm.xml" Width="608">
			<Contents></Contents>
		</Div>
	</Form>
	<Script><![CDATA[﻿﻿﻿﻿﻿﻿/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initForm();

	fn_query();
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회
********************************************************************************/
function fn_query() {
	
	tit_clearActionInfo();
	tit_addSearchActionInfo("cs06:CS0605001B_S1");
	
	tit_callService(
        ""
        , ""
        , ""
        , "ds_list_p=ds_list"
        , ""
        , "fn_afterQuery"
        , true);
}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}
/********************************************************************************
* 기      능   : 확인  
********************************************************************************/
function fn_confirm() {
	for( i=0; i<ds_list_p.rowcount; i++)
	{
		var flg = true;
		if(ds_list_p.GetColumn(i,"CHK") == 1)
		{
			if(i == 0)
			{
				ds_list.DeleteAll();
				ds_list.AddRow();
				ds_list.SetColumn(ds_list.rowcount-1,"FLAG","I");
				ds_list.SetColumn(ds_list.rowcount-1,"CS108_PJT",ds_list_h.GetColumn(0,"CS101_PJT"));
				ds_list.SetColumn(ds_list.rowcount-1,"CS108_HNO",ds_list_h.GetColumn(0,"CS101_HNO"));
				ds_list.SetColumn(ds_list.rowcount-1,"CS108_QIC",ds_list_p.GetColumn(i,"CS106_QMC"));
				ds_list.SetColumn(ds_list.rowcount-1,"CS106_QMR",ds_list_p.GetColumn(i,"CS106_QMR"));
				ds_list.SetColumn(ds_list.rowcount-1,"CS106_MIR",ds_list_p.GetColumn(i,"CS106_MIR"));
				//fn_colProperty(ds_list_p.GetColumn(i,"CS106_QMC"));
			}
			else
			{
				for(j=0; j<ds_list.rowcount; j++)
				{
					if(ds_list.GetColumn(j,"CS108_QIC") == "0000")
						ds_list.DeleteRow(j);
					
					if(ds_list_p.GetColumn(i,"CS106_QMC") == ds_list.GetColumn(j,"CS108_QIC"))
						flg = false;
				}
				if(flg)
				{
					ds_list.AddRow();
					ds_list.SetColumn(ds_list.rowcount-1,"FLAG","I");
					ds_list.SetColumn(ds_list.rowcount-1,"CS108_PJT",ds_list_H.GetColumn(0,"CS101_PJT"));
					ds_list.SetColumn(ds_list.rowcount-1,"CS108_HNO",ds_list_H.GetColumn(0,"CS101_HNO"));
					ds_list.SetColumn(ds_list.rowcount-1,"CS108_QIC",ds_list_p.GetColumn(i,"CS106_QMC"));
					ds_list.SetColumn(ds_list.rowcount-1,"CS106_QMR",ds_list_p.GetColumn(i,"CS106_QMR"));
					ds_list.SetColumn(ds_list.rowcount-1,"CS106_MIR",ds_list_p.GetColumn(i,"CS106_MIR"));
					//fn_colProperty(ds_list_p.GetColumn(i,"CS106_QMC"));
				}	
			}	
		}
	}
	close();
}
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
	gfn_showMsg("CI00002",ds_list.RowCount()+"");
	
	ds_list_p.fireevent = false;
	for(var i=0; i<ds_list_p.rowcount; i++)
	{
		for(var j=0; j<ds_list.rowcount; j++)
		{
			if(ds_list_p.GetColumn(i,"CS106_QMC") == ds_list.GetColumn(j,"CS108_QIC"))
				ds_list_p.SetColumn(i,"CHK","1");
		}
	}
	ds_list_p.fireevent = true;
}
/********************************************************************************
* 기      능   : 데이터셋 값 변경 시 - CHECK BOX 처리 
********************************************************************************/
function ds_list_p_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	switch( strColumnID ) {
		case "CHK":
			if(nRow == 0 && ds_list_p.GetColumn(nRow,"CHK") == "1")
			{
				for(var i=1; i<ds_list_p.rowcount; i++)
				{
					ds_list_p.SetColumn(i,"CHK","0");
				}
			}
			else if(nRow != 0 && ds_list_p.GetColumn(nRow,"CHK") == "1")
			{
				ds_list_p.SetColumn(0,"CHK","0");
				
				for(var i=1; i<ds_list_p.rowcount; i++) {
					if(ds_list_p.GetColumn(nRow,"CS106_QMC") == "0100")
					{
						for(var j=1; j<ds_list_p.rowcount; j++)
						{
							if(ds_list_p.GetColumn(j,"CS106_NO1") == "01" && ds_list_p.GetColumn(j,"CS106_NO2") != "00")
								ds_list_p.SetColumn(j,"CHK","0");
						}
					}
					else if(ds_list_p.GetColumn(nRow,"CS106_QMC") == "0200")
					{
						for(var j=1; j<ds_list_p.rowcount; j++)
						{
							if(ds_list_p.GetColumn(j,"CS106_NO1") == "02" && ds_list_p.GetColumn(j,"CS106_NO2") != "00")
								ds_list_p.SetColumn(j,"CHK","0");
						}
					}
					else
					{
						if(ds_list_p.GetColumn(nRow,"CS106_NO1") == "01")
						{
							for(var j=1; j<ds_list_p.rowcount; j++)
							{
								if(ds_list_p.GetColumn(j,"CS106_QMC") == "0100")
									ds_list_p.SetColumn(j,"CHK","0");
							}
						}	
						else if(ds_list_p.GetColumn(nRow,"CS106_NO1") == "02")
						{
							for(var j=1; j<ds_list_p.rowcount; j++)
							{
								if(ds_list_p.GetColumn(j,"CS106_QMC") == "0200")
									ds_list_p.SetColumn(j,"CHK","0");
							}
						}	
					}
				} //for	
			}
		break;
	}
}
/******************************************************
*  권한에 따른 Grid 컬럼의 속성변경
* @param  
* @return  조치내용 칼럽 속성값
******************************************************/
function fn_changeChk(qmcValue){
	if( qmcValue == "0100" || qmcValue == "0200")
		return "none";
	else 
		return "checkbox";
}
]]></Script>
</Window>