<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="394" Id="PS1201007C" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" Title="결재자관리" Top="8" Ver="1.0" Width="400" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_list_c">
				<Contents>
					<colinfo id="GID" size="256" type="STRING"/>
					<colinfo id="GNM" size="256" type="STRING"/>
					<colinfo id="RANK" size="256" type="STRING"/>
					<colinfo id="DPTNM" size="256" type="STRING"/>
					<colinfo id="LIFNR" size="256" type="STRING"/>
					<colinfo id="PERNO" size="256" type="STRING"/>
					<colinfo id="CHK" size="256" type="STRING"/>
					<colinfo id="FLAG" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_c">
				<Contents>
					<colinfo id="LIFNR" size="256" type="STRING"/>
					<colinfo id="PERNO" size="256" type="STRING"/>
					<record>
						<LIFNR></LIFNR>
						<PERNO></PERNO>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list_c" BkColor2="default" BoldHead="true" Border="Flat" Bottom="386" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" FixedColSizing="TRUE" HeadBorder="Flat" HeadHeight="20" Height="342" Id="grd_list" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" OnHeadClick="grd_list_OnHeadClick" Right="392" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="44" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="384">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="18"/>
						<col fix="left" width="20"/>
						<col fix="left" width="80"/>
						<col width="100"/>
						<col width="156"/>
					</columns>
					<head>
						<cell align="center" col="0" display="checkbox" edit="checkbox" font="Default,9" text="0" TrimType="Both"/>
						<cell align="center" col="1" display="text" font="Default,9" TrimType="Both"/>
						<cell align="center" col="2" display="text" font="Default,9" text="사용자&#32;ID" TrimType="Both"/>
						<cell align="center" col="3" display="text" font="Default,9" text="사용자&#32;명" TrimType="Both"/>
						<cell align="center" col="4" display="text" font="Default,9" text="팀명" TrimType="Both"/>
					</head>
					<body>
						<cell align="left" bkcolor2="user22" col="0" colid="CHK" display="checkbox" edit="checkbox"/>
						<cell align="left" bkcolor2="user22" bkimageid='expr:gfn_getFlagBkImageID(getColumn(currow,&#32;&quot;FLAG&quot;))' col="1" display="text"/>
						<cell align="left" bkcolor2="user22" col="2" colid="GID" display="text"/>
						<cell align="left" bkcolor2="user22" col="3" colid="GNM" display="text"/>
						<cell align="left" bkcolor2="user22" col="4" colid="DPTNM" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Static Color="user5" Font="굴림,10,Bold" Height="20" Id="Static0" Left="28" TabOrder="1" Text="search&#32;user" Top="8" VAlign="Middle" Width="176"></Static>
		<Div Height="36" Id="div_btn" TabOrder="1" Text="Div0" Url="WB01::CommBtnForm.xml" Width="400">
			<Contents></Contents>
		</Div>
		<Static Height="24" Id="st_title" Left="416" TabOrder="4" Text="주소록&#32;검색" Top="64" Visible="FALSE" Width="152"></Static>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 결재자 즐겨찾기 관리 
 * 작  성  자   : 김기석K
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	// Form 로드 이벤트 맨 첫줄에 기술 
	gfn_initFormNotAuth("PS1501001F", st_title.value, "20,25,30,80");

	ds_cond_c.SetColumn(0,"PERNO",perno_c);
	ds_cond_c.SetColumn(0,"LIFNR",lifnr_c);
	
	fn_query();
}
/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {

}
/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return true;
}
//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 
********************************************************************************/
function fn_query() {
	tit_clearActionInfo();
	tit_addSearchActionInfo("ps15:PS1501002C_S1");	// 결재자 조회 
	tit_callService(
        ""
        , ""
        , "ds_cond=ds_cond_c"
        , "ds_list_c=ds_list"
        , ""
        , "fn_afterQuery"
        , true);	
}
/********************************************************************************
* 기      능   : 삭제  
********************************************************************************/
function fn_delete() {
	gfn_deleteGridRow( grd_list, ds_list_c.row, "FLAG" );
}
/********************************************************************************
* 기      능   : 저장  
********************************************************************************/
function fn_save() {
	if ( !gfn_isChangeDs(ds_list_c, true, "FLAG") ) {
		return;
	}

	tit_clearActionInfo();
	tit_addSaveActionInfo(
		"ps15:PS1501002C_I3"
		, ""
		, "ps15:PS1501002C_D1"
		, "FLAG");	// 주소록 저장 
		
	tit_addSearchActionInfo("ps15:PS1501002C_S1");	// 주소록 조회 
	
	tit_callService(
        ""
        , ""
        , "ds_list_c=ds_list_c:U"
        , "ds_list_c=ds_list"
        , ""
        , ""
        , true);	
}
/********************************************************************************
* 기      능   :  확인 
********************************************************************************/
function fn_confirm() {
	// 선택한 정보 화면 하단으로 내리기 
	var cnt = 0;
	var chkCnt = 0;//선택(체크)한 결재자 수
	
	for( var i = 0; i < ds_list_c.rowcount(); i++ ) {
		//체크로직 수정 - 2019.03.18 강민석K
		/*
		if ( ds_list_c.getColumn(i, "CHK") == "1" && ds_gyul.findRow("GID",ds_list_c.GetColumn(i,"GID")) == -1) 
		{
			chkcnt++;
			if ( chkcnt > 2 ) {
				gfn_showAlert("CW00124","2명 이하만");
				return;
			}
		}
		*/
		if ( ds_list_c.getColumn(i, "CHK") == "1") 
		{
			if(ds_gyul.GetColumn(ds_gyul.findRow("GUBUN", "3"), "GID") != ds_list_c.getColumn(i, "GID")){
				chkcnt++;
			}else{
				gfn_openMsgWin("선택한 결재자가 검토자와 중복되어\n선택할 수 없습니다.", "W", "", "");
				return;
			}
			
			if ( chkcnt > 2 ) {
				gfn_showAlert("CW00124","2명 이하만");
				return;
			}
		}
	}	
	
	for( var i = 0; i < ds_list_c.rowcount(); i++ ) {
	
		//trace("체크 여부 : " + ds_list_c.getColumn(i, "CHK"));
		//trace("" + ds_gyul.findRow("GID",ds_list_c.GetColumn(i,"GID")));
		
		//체크로직 수정 - 2019.03.18 강민석K
		//if ( ds_list_c.getColumn(i, "CHK") == "1" && ds_gyul.findRow("GID",ds_list_c.GetColumn(i,"GID")) == -1) 
		if ( ds_list_c.getColumn(i, "CHK") == "1") 
		{
			if(ds_gyul.findRow("GID",ds_list_c.GetColumn(i,"GID")) == -1){
				cnt++;
				
				if(ds_gyul.findRow("GUBUN", "3") != -1) //최종결제자가 미리 등록 되있다면
				{
					if(ds_gyul.GetLastRow() == 0)
					{
						ds_gyul.AddRow();
						ds_gyul.AddRow();
					}else
					
					if(ds_gyul.GetLastRow() == 1)
					{
						ds_gyul.ExChangeRow(ds_gyul.findRow("GUBUN", "1"),1);	
						ds_gyul.AddRow();
					}
					
					ds_gyul.ExChangeRow(ds_gyul.findRow("GUBUN", "3"),2);
				}
				
				var aRow = "";
				
				if(ds_gyul.GetLastRow() > 0)
				{
					aRow = cnt-1;
				}else{
					aRow = ds_gyul.AddRow();
				}
				//trace("aRow : " + aRow);
				//trace("GID : " + ds_list_c.GetColumn(i,"GID"));
				//trace("GNM : " + ds_list_c.GetColumn(i,"GNM"));
				//trace("RANK : " + ds_list_c.GetColumn(i,"RANK"));
				//trace("DPTNM : " + ds_list_c.GetColumn(i,"DPTNM"));
				//trace("LIFNR : " + ds_list_c.GetColumn(i,"LIFNR"));
				//trace("PERNO : " + ds_list_c.GetColumn(i,"PERNO"));
				ds_gyul.SetColumn(aRow, "GID"  , ds_list_c.GetColumn(i,"GID")   );
				ds_gyul.SetColumn(aRow, "GNM"  , ds_list_c.GetColumn(i,"GNM")   );
				ds_gyul.SetColumn(aRow, "RANK" , ds_list_c.GetColumn(i,"RANK")  );
				ds_gyul.SetColumn(aRow, "DPTNM", ds_list_c.GetColumn(i,"DPTNM") );
				ds_gyul.SetColumn(aRow, "LIFNR", ds_list_c.GetColumn(i,"LIFNR") );
				ds_gyul.SetColumn(aRow, "PERNO", ds_list_c.GetColumn(i,"PERNO") );
				
				ds_gyul.SetColumn(aRow, "GUBUN", cnt ); //최종승인자가 아닐때의 구분
			}else{
				gfn_openMsgWin("중복된 결재자가 선택되었습니다.", "W", "", "");
				return;
			}
		}
		//else ds_list_c.SetColumn(i,"CHK","0");
	}
	
	if ( cnt == 0 ) {
		gfn_showAlert("CW00046"); //정보를 먼저 선택해 주세요.
		return;
	}
	
	close();
}
/********************************************************************************
* 기      능   : 사용자 추가  
********************************************************************************/
function fn_input() {
	var arg = "lifnr_c=" + quote( lifnr_c);
	arg+= " perno_c=" + quote( perno_c);
	var arr = gfn_openPopupUrl("PS15::PS1501001G.xml", true, arg);
}
/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close(null);
}
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {
	gfn_showSearchMsg(grd_list, errCode, errMsg);
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 정의 함수  
********************************************************************************/


//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if( nCell == 0 ) {
		gfn_selectAllGrid(obj,nCell,nCell,true);
	} else if( nCell != 1 ) {
		gfn_sortGrid(obj, nCell);
	}	
}
/********************************************************************************
* 기      능   : 사용자 검색하여 주소록에 추가 
********************************************************************************/
function btn_add_OnClick(obj)
{
	fn_input();
}
]]></Script>
</Window>