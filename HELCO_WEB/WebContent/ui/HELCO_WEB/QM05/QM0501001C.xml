<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="550" Id="QM0501001C" Left="8" OnKeyDown="gfn_EnterInForm" OnLoadCompleted="fn_OnLoadCompleted" PidAttrib="7" Title="설치검사&#32;면제팀&#32;관리" Top="8" Ver="1.0" Width="918" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="DEPT" size="4" summ="default" type="STRING"/>
					<record>
						<DEPT></DEPT>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="NAME1" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="MDATE" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="EDATE" size="256" summ="default" type="STRING"/>
					<colinfo id="S_DATE" size="256" summ="default" type="STRING"/>
					<colinfo id="F_DATE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_excel" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="NAME1" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET" size="256" summ="default" type="STRING"/>
					<colinfo id="S_DATE" size="256" summ="default" type="STRING"/>
					<colinfo id="F_DATE" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="MDATE" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list2" OnColumnChanged="ds_list_OnColumnChanged">
				<Contents>
					<colinfo id="CHECK" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="NAME1" size="256" summ="default" type="STRING"/>
					<colinfo id="NAMET" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="MDATE" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="GBN" size="256" summ="default" type="STRING"/>
					<colinfo id="EDATE" size="256" summ="default" type="STRING"/>
					<colinfo id="S_DATE" size="256" summ="default" type="STRING"/>
					<colinfo id="F_DATE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Grid AreaSelect="true" AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="ds_list" BkColor2="default" BoldHead="true" Border="Flat" Bottom="544" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" Height="504" Id="grd_list" InputPanel="FALSE" Left="8" LineColor="user20" LineType="ExHORZ" OnHeadClick="grd_list_OnHeadClick" OnKillFocus="grd_list_OnKillFocus" Right="910" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="40" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="902">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="20"/>
						<col width="150"/>
						<col width="145"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="70"/>
						<col width="80"/>
						<col width="80"/>
					</columns>
					<head>
						<cell col="0" display="checkbox" edit="checkbox" rowspan="2"/>
						<cell col="1" display="text" font="굴림,9" rowspan="2" text="업체코드"/>
						<cell col="2" display="text" font="굴림,9" rowspan="2" text="업체명"/>
						<cell col="3" display="text" font="굴림,9" rowspan="2" text="팀장명"/>
						<cell col="4" display="text" font="굴림,9" rowspan="2" text="시작일"/>
						<cell col="5" display="text" font="굴림,9" rowspan="2" text="종료일"/>
						<cell col="6" display="text" font="굴림,9" rowspan="2" text="사용여부"/>
						<cell col="7" display="text" font="굴림,9" rowspan="2" text="생성일"/>
						<cell col="8" display="text" font="굴림,9" rowspan="2" text="생성자"/>
					</head>
					<body>
						<cell align="center" bkcolor2="user22" col="0" colid="CHECK" display="checkbox" edit="checkbox" limit="1"/>
						<cell align="center" col="1" colid="LIFNR" display="text" edit='expr:iif(GBN=&quot;Y&quot;,&quot;normal&quot;,&quot;none&quot;)'/>
						<cell align="center" col="2" colid="NAME1" display="text" edit='expr:iif(GBN=&quot;Y&quot;,&quot;normal&quot;,&quot;none&quot;)'/>
						<cell align="center" col="3" colid="NAMET" display="text" edit='expr:iif(GBN=&quot;Y&quot;,&quot;normal&quot;,&quot;none&quot;)'/>
						<cell align="center" col="4" colid="S_DATE" display="date" edit="date"/>
						<cell align="center" col="5" colid="F_DATE" display="date" edit="date"/>
						<cell align="center" col="6" colid="CHK" display="text" edit="normal"/>
						<cell align="center" col="7" colid="MDATE" display="text" Mask="####.##.##"/>
						<cell align="center" col="8" colid="ERNAM" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Button Cursor="HAND" Height="20" Id="btn_add" ImageID="btn_icon_plus" Left="850" LeftMargin="12" OnClick="add_OnClick" Style="sty_btn" TabOrder="3" Top="14" Transparent="TRUE" Width="22"></Button>
		<Button Cursor="HAND" Height="20" Id="btn_del" ImageID="btn_icon_minus" Left="881" LeftMargin="12" OnClick="del_OnClick" Style="sty_btn" TabOrder="2" Top="14" Transparent="TRUE" Width="22"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_import" ImageID="btn_sub_05" Left="752" LeftMargin="12" OnClick="btn_import_OnClick" Style="sty_btn" TabOrder="4" Text="엑셀&#32;Import" Top="14" Transparent="TRUE" Width="88"></Button>
		<Static Font="휴먼고딕,9" Height="24" Id="Static5" Left="16" TabOrder="5" Text="면제팀&#32;여부&#32;:&#32;&#32;X&#32;-&#32;사용&#32;&#32;&apos;&apos;&#32;미사용" Top="16" Width="250"></Static>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
#include "LIB::commons.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var F_TIMEOUT = 0;
//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
function fn_OnLoadCompleted(obj) {
	gfn_initForm();
	
	http.Sync = true;

	http.Sync = false;
     // HTTP TIMEOUT 설정
    F_TIMEOUT = HTTP.TimeOut;
	fn_query();
}

/********************************************************************************
* 기      능   : 항목(내역)정보 조회 (최초 화면 로딩 시에만 적용)
********************************************************************************/
function fn_afterItemQuery(errCode, errMsg) {

}

/********************************************************************************
* 기      능   : form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) {
	return gfn_isFormUnload(obj);
}

/********************************************************************************
* 기      능   : 공통코드가 조회된 후의 Callback 함수 
********************************************************************************/
function fn_completeInit(sCode, sDsObj, sCodeType) {
	//
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 
********************************************************************************/
function fn_query() {

	http.Sync = true;

	
	tit_clearActionInfo();
	tit_addSearchActionInfo("qm05:QM0501001C_S1");
	tit_callService(
          ""
        , ""
        , "ds_cond=ds_cond"
        , "ds_list=ds_list"
        , ""
        , "fn_afterCrdatQuery"
        , true);



		// HTTP SESSION TIMEOUT을 변경
		//http.TimeOut = 1800;
	
}

/********************************************************************************
* 기      능   : 닫기  
********************************************************************************/
function fn_close() {
	close();
}

//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 실적처리 일자 조회 (현장 정보 성능 향상을 위한 처리) call back
********************************************************************************/
function fn_afterCrdatQuery(errCode, errMsg) {
    // HTTP TIMEOUT 설정
   http.TimeOut = F_TIMEOUT;
}

/********************************************************************************
* 기      능   : 상세조건 조회 call back
********************************************************************************/
function fn_afterDetailCondQuery(errCode, errMsg) {

}

/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(errCode, errMsg) {

}

/********************************************************************************
* 기      능   : 액셀  
********************************************************************************/
function fn_excel() {
	if (ds_list.GetRowCount() > 0)
		gfn_exportExcel(grd_list, "QM0501001C" );
}

//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
//row추가
function add_OnClick(obj)
{
	gfn_addGridRow(grd_list, -1, "FLAG"); 
	ds_list.SetColumn(ds_list.currow, "GBN", 'Y');
}
//row 삭제
function del_OnClick(obj)
{
	gfn_deleteGridRow( grd_list, ds_list.row, "FLAG" );
}


/*********************************************************************************
* 기      능   : 저장 
********************************************************************************/
function fn_save() {

  if(ds_list.FindRow("CHECK", 1)==-1){
		gfn_showMsg('CW00046');
		return;
   }
  for(var i=0; i<ds_list.GetRowCount(); i++)
    {		
	 if(ds_list.GetColumn(i, "CHECK")==1){
		// 필수 입력 항목	
		if(length(Trim(ds_list.GetColumn(i, "LIFNR"))) <= 0 ) //|| length(ds_list.GetColumn(i, "WBS")) <> 9)
		{
			var arr = [parseInt(i) + 1, "업체코드"];
			gfn_showMsg("CW00224", arr);
			return;
		} 
		if(length(Trim(ds_list.GetColumn(i, "NAMET"))) <= 0 ) //|| length(ds_list.GetColumn(i, "WBS")) <> 9)
		{
			var arr = [parseInt(i) + 1, "PM이름"];
			gfn_showMsg("CW00224", arr);
			return;
		}
	}
  }
	
	
  if(!gfn_showConfirm( "CI00014", "해당 데이터" )) return;	
	
	ds_list.Filter("CHECK==1");
	ds_list2.copyF(ds_list);
	ds_list.unFilter();
	
    tit_clearActionInfo();
    tit_addSelectExActionInfo("qm05:QM0501001C_S2", "qm05:QM0501001C_I1",  "qm05:QM0501001C_U1");
    tit_callService(
		  ""	
		, ""
		, "ds_list=ds_list2"
		, ""
		, ""
		, "fn_afterSave"
		, ""
		, ""
		, true  // ""
    );


}

/********************************************************************************
* 기      능   : 저장 Callback  
********************************************************************************/
function fn_afterSave(errCode, errMsg) {
	if ( errCode!= 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
	}
   fn_query();
}
/********************************************************************************
* 기      능   :  절감금액 계산
********************************************************************************/
function ds_list_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
      
}

function grd_list_OnKillFocus(obj)
{
	//fn_ds_list_OnColumnChanged();
}

/********************************************************************************
* 기      능   : Delete 
********************************************************************************/
/********************************************************************************
* 기      능   : 삭제 
********************************************************************************/
function fn_delete() 
{
 
  
  if(ds_list.FindRow("CHECK", 1)==-1){
	 gfn_showMsg('CW00046');
	 return;
   }
   
  if(!gfn_showConfirm( "CI00015", "해당 데이터" )) return;	

  	ds_list.Filter("CHECK==1");
	ds_list2.copyF(ds_list);
	ds_list.unFilter();
	
	tit_clearActionInfo();			
	tit_addMultiActionInfo("qm05:QM0501001C_D1");
	tit_callService(
		""
		, ""
		, "ds_list=ds_list2"
		, ""
		, ""
		, "fn_afterDelete"
		, true);	
}

/********************************************************************************
* 기      능   : 삭제 Callback  
********************************************************************************/
function fn_afterDelete(errCode, errMsg) {
	if ( errCode!= 0 ) {
		gfn_showMsg("CE00001");
	} else {
		gfn_showMsg("CI00003");
	}	
   fn_query();
}
/********************************************************************************
* 기      능   : 엑셀 Import
********************************************************************************/
function btn_import_OnClick(obj)
{
	
	ds_list_excel.ClearData();
	fn_createWait("",this);
	ufn_ExcelToGrid(grd_list, "ds_list_excel");

	fn_afterExcelImport(ds_list, ds_list_excel);

	fn_destroyWait();
}


/********************************************************************************
* 기      능   : 엑셀 자료가 import가 완료된 시점
********************************************************************************/
function fn_afterExcelImport(dsTarget, dsSource)
{
     dsTarget.ClearData();

	// 정보 확인 반영
	for (var i = 0; i < dsSource.GetRowCount(); i++)	{
		var vRow = dsTarget.AddRow();
                    dsTarget.SetColumn(vRow, "CHECK", '1'); 
					dsTarget.SetColumn(vRow, "LIFNR",   dsSource.GetColumn(i, "LIFNR")); //업체코드
					dsTarget.SetColumn(vRow, "NAME1",   dsSource.GetColumn(i, "NAME1"));//업체명
					dsTarget.SetColumn(vRow, "NAMET",    dsSource.GetColumn(i, "NAMET")); //PM이름
					dsTarget.SetColumn(vRow, "S_DATE",    dsSource.GetColumn(i, "S_DATE")); //시작일
					dsTarget.SetColumn(vRow, "F_DATE",    dsSource.GetColumn(i, "F_DATE")); //종료일
					
					dsTarget.SetColumn(vRow, "CHK",    dsSource.GetColumn(i, "CHK")); //사용여부				
				
			     	dsTarget.SetColumn(vRow, "GBN", 'Y'); //수정 플레그
		

		}

}
/*********************************************************************
* Function : 엑셀파일을 DataGrid로 업로드
* Argument : objGrid	- 엑셀업로드 대상이 되는 그리드
*            strDsName	- 그리드에 매핑된 데이타셋 이름
* Return   : 
**********************************************************************/
function ufn_ExcelToGrid(objGrid, strDsName){
	//Dialog 생성
	if(!IsValid(object("_fdgCommon"))){
		Create( "FileDialog" , "_fdgCommon");
	}
	_fdgCommon.Type = "Open";
	_fdgCommon.Filter = "Excel 통합문서 (*.xlsx)|*.xlsx|Excel 97-2003 통합문서 (*.xls)|*.xls|";

	//실패시 컴포넌트 제거
	if(!_fdgCommon.Open()){
		Destroy("_fdgCommon");
	}
	
	objGrid.redraw = false;
	var IRtn = ext_ExcelImportByIndex(_fdgCommon.FilePath +"\\"+_fdgCommon.FileName,0,strDsName,1, 1, 0, 3,,);
	objGrid.redraw = true;
	Destroy("_fdgCommon");
}

/********************************************************************************
* 기      능   : 그리드 헤더 클릭시 정렬 처리 
********************************************************************************/
function grd_list_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{ 
     if ( nCell == 0 ) {
		// 그리드 표시할 컬럼 선택 
		gfn_selectAllGrid(obj,nCell,nCell,true);
	} else {
		// 그리드 정렬 처리 
		//gfn_sortGrid(obj,nCell);
  }
}]]></Script>
</Window>