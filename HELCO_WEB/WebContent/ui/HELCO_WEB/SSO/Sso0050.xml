<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="562" Id="Form" Left="8" OnLoadCompleted="fn_OnLoadCompleted" OnUnloadCompleted="fn_OnUnloadCompleted" PidAttrib="7" scroll="false" Title="계약변경&#32;요청" Top="8" Ver="1.0" Width="976" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_output_ZSDS0063" OnLoadCompleted="ds_output_ZSDS0063_OnLoadCompleted">
				<Contents>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="AUART" size="256" summ="default" type="STRING"/>
					<colinfo id="SPART" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBUR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBURT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZKUNNR" size="256" summ="default" type="STRING"/>
					<colinfo id="ZKUNNRT" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNRG" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNRG_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNWE" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNWE_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNZ1" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNZ2" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNZ3" size="256" summ="default" type="STRING"/>
					<colinfo id="TELF1" size="256" summ="default" type="STRING"/>
					<colinfo id="BSTNK" size="256" summ="default" type="STRING"/>
					<colinfo id="BRAN1" size="256" summ="default" type="STRING"/>
					<colinfo id="BSTDK" size="256" summ="default" type="STRING"/>
					<colinfo id="ZQNTY" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="STRING"/>
					<colinfo id="WAVWR" size="256" summ="default" type="STRING"/>
					<colinfo id="COMMI" size="256" summ="default" type="STRING"/>
					<colinfo id="VDATU" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTERM" size="256" summ="default" type="STRING"/>
					<colinfo id="INCO1" size="256" summ="default" type="STRING"/>
					<colinfo id="INCO2" size="256" summ="default" type="STRING"/>
					<colinfo id="WWBLD" size="256" summ="default" type="STRING"/>
					<colinfo id="REPMO" size="256" summ="default" type="STRING"/>
					<colinfo id="GUAMO" size="256" summ="default" type="STRING"/>
					<colinfo id="ZAPDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="STADA" size="256" summ="default" type="STRING"/>
					<colinfo id="WORMO" size="256" summ="default" type="STRING"/>
					<colinfo id="REGION" size="256" summ="default" type="STRING"/>
					<colinfo id="HIGH_G" size="256" summ="default" type="STRING"/>
					<colinfo id="ADMITNO" size="256" summ="default" type="STRING"/>
					<colinfo id="CHEOR" size="256" summ="default" type="STRING"/>
					<colinfo id="COMPL_DA" size="256" summ="default" type="STRING"/>
					<colinfo id="FINAL_DA" size="256" summ="default" type="STRING"/>
					<colinfo id="ENFOR" size="256" summ="default" type="STRING"/>
					<colinfo id="TURNKEY" size="256" summ="default" type="STRING"/>
					<colinfo id="KISCON" size="256" summ="default" type="STRING"/>
					<colinfo id="HEL_REG" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR2" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNR3" size="256" summ="default" type="STRING"/>
					<colinfo id="LIFNRCHK" size="256" summ="default" type="STRING"/>
					<colinfo id="REG_NO" size="256" summ="default" type="STRING"/>
					<colinfo id="REG_PE" size="256" summ="default" type="STRING"/>
					<colinfo id="EMAIL" size="256" summ="default" type="STRING"/>
					<colinfo id="SOCNO" size="256" summ="default" type="STRING"/>
					<colinfo id="CORNO" size="256" summ="default" type="STRING"/>
					<colinfo id="COMNO" size="256" summ="default" type="STRING"/>
					<colinfo id="SEP_MON" size="256" summ="default" type="STRING"/>
					<colinfo id="CDATE" size="256" summ="default" type="STRING"/>
					<colinfo id="WWBLDT" size="256" summ="default" type="STRING"/>
					<colinfo id="CONTR_DA" size="256" summ="default" type="STRING"/>
					<colinfo id="SHCHK" size="256" summ="default" type="STRING"/>
					<colinfo id="ABGRU_TP" size="256" summ="default" type="STRING"/>
					<record>
						<ABGRU_TP></ABGRU_TP>
						<ADMITNO></ADMITNO>
						<AUART></AUART>
						<BRAN1></BRAN1>
						<BSTDK></BSTDK>
						<BSTNK></BSTNK>
						<CDATE></CDATE>
						<CHEOR></CHEOR>
						<COMMI></COMMI>
						<COMNO></COMNO>
						<COMPL_DA></COMPL_DA>
						<CONTR_DA></CONTR_DA>
						<CORNO></CORNO>
						<EMAIL></EMAIL>
						<ENFOR></ENFOR>
						<FINAL_DA></FINAL_DA>
						<GUAMO></GUAMO>
						<HEL_REG></HEL_REG>
						<HIGH_G></HIGH_G>
						<INCO1></INCO1>
						<INCO2></INCO2>
						<KISCON></KISCON>
						<KUNRG></KUNRG>
						<KUNRG_NM></KUNRG_NM>
						<KUNWE></KUNWE>
						<KUNWE_NM></KUNWE_NM>
						<KUNZ1></KUNZ1>
						<KUNZ2></KUNZ2>
						<KUNZ3></KUNZ3>
						<LIFNR></LIFNR>
						<LIFNR2></LIFNR2>
						<LIFNR3></LIFNR3>
						<LIFNRCHK></LIFNRCHK>
						<NETWR></NETWR>
						<PSPID></PSPID>
						<REG_NO></REG_NO>
						<REG_PE></REG_PE>
						<REGION></REGION>
						<REPMO></REPMO>
						<SEP_MON></SEP_MON>
						<SEQ></SEQ>
						<SHCHK></SHCHK>
						<SOCNO></SOCNO>
						<SPART></SPART>
						<STADA></STADA>
						<TELF1></TELF1>
						<TURNKEY></TURNKEY>
						<VBELN></VBELN>
						<VDATU></VDATU>
						<VKBUR></VKBUR>
						<VKBURT></VKBURT>
						<WAERK></WAERK>
						<WAVWR></WAVWR>
						<WORMO></WORMO>
						<WWBLD></WWBLD>
						<WWBLDT></WWBLDT>
						<ZAPDAT></ZAPDAT>
						<ZKUNNR></ZKUNNR>
						<ZKUNNRT></ZKUNNRT>
						<ZQNTY></ZQNTY>
						<ZTERM></ZTERM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_output_ZSDT0090" OnColumnChanged="ds_output_ZSDT0090_OnColumnChanged" OnLoadCompleted="ds_output_ZSDT0090_OnLoadCompleted">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="ZQNTY" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="INT"/>
					<colinfo id="WAVWR" size="256" summ="default" type="INT"/>
					<colinfo id="COMMI" size="256" summ="default" type="STRING"/>
					<colinfo id="VDATU" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="CHNETWR" size="256" summ="default" type="INT"/>
					<colinfo id="CHWAVWR" size="256" summ="default" type="INT"/>
					<colinfo id="CHCOMMI" size="256" summ="default" type="STRING"/>
					<colinfo id="CHVDATU" size="256" summ="default" type="STRING"/>
					<colinfo id="CHWAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="FINL" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERZET" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="AEDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="AEZET" size="256" summ="default" type="STRING"/>
					<colinfo id="AENAM" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO1" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO2" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO3" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO4" size="256" summ="default" type="STRING"/>
					<colinfo id="BIGO5" size="256" summ="default" type="STRING"/>
					<colinfo id="CHRES" size="256" summ="default" type="STRING"/>
					<colinfo id="REDEP" size="256" summ="default" type="STRING"/>
					<colinfo id="CHRES_A" size="256" summ="default" type="STRING"/>
					<colinfo id="REDEP_A" size="256" summ="default" type="STRING"/>
					<colinfo id="CHRES_B" size="256" summ="default" type="STRING"/>
					<colinfo id="REDEP_B" size="256" summ="default" type="STRING"/>
					<colinfo id="CHRES_C" size="256" summ="default" type="STRING"/>
					<colinfo id="REDEP_C" size="256" summ="default" type="STRING"/>
					<colinfo id="CHRES_D" size="256" summ="default" type="STRING"/>
					<colinfo id="REDEP_D" size="256" summ="default" type="STRING"/>
					<colinfo id="CHRES_E" size="256" summ="default" type="STRING"/>
					<colinfo id="REDEP_E" size="256" summ="default" type="STRING"/>
					<colinfo id="SHCHK" size="256" summ="default" type="STRING"/>
					<colinfo id="CHSHCHk" size="256" summ="default" type="STRING"/>
					<colinfo id="UCH_DUTY" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_output_ZSDT0091" OnLoadCompleted="ds_output_ZSDT0091_OnLoadCompleted">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="AUART" size="256" summ="default" type="STRING"/>
					<colinfo id="KZWI4" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="STRING"/>
					<colinfo id="WAVWR" size="256" summ="default" type="STRING"/>
					<colinfo id="EDATU" size="256" summ="default" type="STRING"/>
					<colinfo id="REPMO" size="256" summ="default" type="STRING"/>
					<colinfo id="GUAMO" size="256" summ="default" type="STRING"/>
					<colinfo id="WORMO" size="256" summ="default" type="STRING"/>
					<colinfo id="CHNETWR" size="256" summ="default" type="STRING"/>
					<colinfo id="CHWAVWR" size="256" summ="default" type="STRING"/>
					<colinfo id="CHEDATU" size="256" summ="default" type="STRING"/>
					<colinfo id="CHREPMO" size="256" summ="default" type="STRING"/>
					<colinfo id="CHGUAMO" size="256" summ="default" type="STRING"/>
					<colinfo id="CHWORMO" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="CHCK" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI_CANC" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERZET" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="AEDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="AEZET" size="256" summ="default" type="STRING"/>
					<colinfo id="AENAM" size="256" summ="default" type="STRING"/>
					<colinfo id="STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="CLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC_STAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ARKTX" size="256" summ="default" type="STRING"/>
					<colinfo id="ABGRU" size="256" summ="default" type="STRING"/>
					<colinfo id="INCRTF_TP" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_output_ZSDT0092" OnLoadCompleted="ds_output_ZSDT0092_OnLoadCompleted">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="FKDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="MLBEZ" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTERM" size="256" summ="default" type="STRING"/>
					<colinfo id="FKSAF" size="256" summ="default" type="INT"/>
					<colinfo id="FPLTR" size="256" summ="default" type="STRING"/>
					<colinfo id="MSTXT" size="256" summ="default" type="STRING"/>
					<colinfo id="FAKWR" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERZET" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="AEDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="AEZET" size="256" summ="default" type="STRING"/>
					<colinfo id="AENAM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_output_ZSDT0093" OnLoadCompleted="ds_output_ZSDT0093_OnLoadCompleted">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="CHFKDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CHMLBEZ" size="256" summ="default" type="STRING"/>
					<colinfo id="CHZTERM" size="256" summ="default" type="STRING"/>
					<colinfo id="CHFKSAF" size="256" summ="default" type="INT"/>
					<colinfo id="FPLTR" size="256" summ="default" type="STRING"/>
					<colinfo id="CHMSTXT" size="256" summ="default" type="STRING"/>
					<colinfo id="CHFAKWR" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERZET" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="AEDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="AEZET" size="256" summ="default" type="STRING"/>
					<colinfo id="AENAM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_output_ZSDT0094_original">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="NAM_CHAR" size="256" summ="default" type="STRING"/>
					<colinfo id="ATBEZ" size="256" summ="default" type="STRING"/>
					<colinfo id="CHAR_VALUE" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="INT"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERZET" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="AEDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="AEZET" size="256" summ="default" type="STRING"/>
					<colinfo id="AENAM" size="256" summ="default" type="STRING"/>
					<colinfo id="CNGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="CHAR_VALUEMD" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
					<colinfo id="ZPRDGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDCD" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SNDSYS" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_output_ZSDT0094_change">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="NAM_CHAR" size="256" summ="default" type="STRING"/>
					<colinfo id="ATBEZ" size="256" summ="default" type="STRING"/>
					<colinfo id="CHAR_VALUE" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="INT"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERZET" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="AEDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="AEZET" size="256" summ="default" type="STRING"/>
					<colinfo id="AENAM" size="256" summ="default" type="STRING"/>
					<colinfo id="CNGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="CHAR_VALUEMD" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
					<colinfo id="ZPRDGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDCD" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SNDSYS" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_char">
				<Contents>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="24" summ="default" type="STRING"/>
					<colinfo id="POSID" size="24" summ="default" type="STRING"/>
					<colinfo id="GJAHR" size="256" summ="default" type="STRING"/>
					<colinfo id="POPER" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKBUR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP" size="256" summ="default" type="STRING"/>
					<colinfo id="AUART" size="256" summ="default" type="STRING"/>
					<colinfo id="KTGRM" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="STRING"/>
					<colinfo id="REGIO" size="256" summ="default" type="STRING"/>
					<colinfo id="LZONE" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="10" summ="default" type="STRING"/>
					<colinfo id="ATNAM" size="30" summ="default" type="STRING"/>
					<colinfo id="ATBEZ" size="30" summ="default" type="STRING"/>
					<colinfo id="VALUE" size="30" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="30" summ="default" type="STRING"/>
					<colinfo id="WAERS" size="5" summ="default" type="STRING"/>
					<colinfo id="MESSG" size="20" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
					<colinfo id="UCH_DUTY" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_t304">
				<Contents>
					<colinfo id="PRDM01" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDM02" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDM03" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDM04" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDM05" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDA01" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDL01" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDL02" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDL03" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDL04" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDL05" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE01" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE02" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE03" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE04" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE05" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE06" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE07" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE08" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE09" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE10" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE11" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE12" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE13" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE14" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDE15" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDI01" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDI02" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDI03" size="15" summ="default" type="STRING"/>
					<colinfo id="PRDI04" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMM01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMM02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMM03" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMM04" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMM05" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMA01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMA02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQML01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQML02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQML03" size="15" summ="default" type="STRING"/>
					<colinfo id="EQML04" size="15" summ="default" type="STRING"/>
					<colinfo id="EQML05" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME03" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME04" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME05" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME06" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME07" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME08" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME09" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME10" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME11" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME12" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME13" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME14" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME15" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME51" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME52" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME53" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME54" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME55" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME56" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME57" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME58" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME59" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME60" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME61" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME62" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME63" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME64" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME65" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME66" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME67" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME68" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME69" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME70" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME71" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME72" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME73" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME74" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME75" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME76" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME77" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME78" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME79" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME80" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME81" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME82" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME83" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME84" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME85" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME86" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME87" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME88" size="15" summ="default" type="STRING"/>
					<colinfo id="EQME89" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMI01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMI02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMI03" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO01" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO02" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO03" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO04" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO05" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO06" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO07" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO08" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO09" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO10" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO11" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO12" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO13" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO14" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO15" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO16" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO17" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO18" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO19" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO20" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO21" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO22" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO23" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO24" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO25" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO26" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO27" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO28" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO29" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO30" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO31" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO32" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO33" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO34" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO35" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO36" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO37" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO38" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO39" size="15" summ="default" type="STRING"/>
					<colinfo id="EQMO40" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM01" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM02" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM03" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM04" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM05" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSM07" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM08" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM09" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM10" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM11" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM12" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM13" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM14" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM15" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM17" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM18" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM19" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM20" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSM06" size="256" summ="default" type="STRING"/>
					<colinfo id="CTSA01" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSL01" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSL02" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSL03" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSL04" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSL05" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSE01" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSE02" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSE03" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSE04" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSE05" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSI01" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSI02" size="15" summ="default" type="STRING"/>
					<colinfo id="CTSI03" size="15" summ="default" type="STRING"/>
					<colinfo id="ADDT01" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP01" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP02" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP03" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP04" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP05" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP06" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP07" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP08" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP09" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP10" size="15" summ="default" type="STRING"/>
					<colinfo id="FDSP11" size="15" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="ZKUNNR_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRP_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="GSNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="BUYR_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="DELDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="SPART" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS01" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS02" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS03" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS04" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS05" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS06" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS07" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS08" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS09" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS10" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME90" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME91" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME92" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME93" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME94" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME95" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME96" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME97" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME98" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME99" size="256" summ="default" type="STRING"/>
					<colinfo id="LAND1" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_output_sayang">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="NAM_CHAR" size="256" summ="default" type="STRING"/>
					<colinfo id="ATBEZ" size="256" summ="default" type="STRING"/>
					<colinfo id="CHAR_VALUE" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="STRING"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="CNGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="CHAR_VALUEMD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_check">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="3" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PSPID" size="24" type="STRING"/>
					<colinfo id="POSID" size="24" type="STRING"/>
					<colinfo id="ATYPE" size="30" type="STRING"/>
					<colinfo id="GUBUN" size="1" type="STRING"/>
					<colinfo id="BLSEQ" size="6" type="STRING"/>
					<colinfo id="BLNUM" size="10" type="STRING"/>
					<colinfo id="BLNAM" size="50" type="STRING"/>
					<colinfo id="MESSG" size="50" type="STRING"/>
					<colinfo id="STATE" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_vbeln">
				<Contents>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="WWBLD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_print_sayang">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="AUART" size="256" summ="default" type="STRING"/>
					<colinfo id="KZWI4" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="STRING"/>
					<colinfo id="WAVWR" size="256" summ="default" type="STRING"/>
					<colinfo id="EDATU" size="256" summ="default" type="STRING"/>
					<colinfo id="REPMO" size="256" summ="default" type="STRING"/>
					<colinfo id="GUAMO" size="256" summ="default" type="STRING"/>
					<colinfo id="WORMO" size="256" summ="default" type="STRING"/>
					<colinfo id="CHNETWR" size="256" summ="default" type="STRING"/>
					<colinfo id="CHWAVWR" size="256" summ="default" type="STRING"/>
					<colinfo id="CHEDATU" size="256" summ="default" type="STRING"/>
					<colinfo id="CHREPMO" size="256" summ="default" type="STRING"/>
					<colinfo id="CHGUAMO" size="256" summ="default" type="STRING"/>
					<colinfo id="CHWORMO" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="CHCK" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI_CANC" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="CLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC_STAT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_print_sayang_chg">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="AUART" size="256" summ="default" type="STRING"/>
					<colinfo id="KZWI4" size="256" summ="default" type="STRING"/>
					<colinfo id="NETWR" size="256" summ="default" type="STRING"/>
					<colinfo id="WAVWR" size="256" summ="default" type="STRING"/>
					<colinfo id="EDATU" size="256" summ="default" type="STRING"/>
					<colinfo id="REPMO" size="256" summ="default" type="STRING"/>
					<colinfo id="GUAMO" size="256" summ="default" type="STRING"/>
					<colinfo id="WORMO" size="256" summ="default" type="STRING"/>
					<colinfo id="CHNETWR" size="256" summ="default" type="STRING"/>
					<colinfo id="CHWAVWR" size="256" summ="default" type="STRING"/>
					<colinfo id="CHEDATU" size="256" summ="default" type="STRING"/>
					<colinfo id="CHREPMO" size="256" summ="default" type="STRING"/>
					<colinfo id="CHGUAMO" size="256" summ="default" type="STRING"/>
					<colinfo id="CHWORMO" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="CHCK" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI_CANC" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="CLASS" size="256" summ="default" type="STRING"/>
					<colinfo id="SPEC_STAT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_exchange">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="KURST" size="256" summ="default" type="STRING"/>
					<colinfo id="FCURR" size="256" summ="default" type="STRING"/>
					<colinfo id="TCURR" size="256" summ="default" type="STRING"/>
					<colinfo id="GDATU" size="256" summ="default" type="STRING"/>
					<colinfo id="UKURS" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="FINL" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCKGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZFLG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_finl">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME>원가의뢰전</CODE_NAME>
					</record>
					<record>
						<CODE>R</CODE>
						<CODE_NAME>원가의뢰</CODE_NAME>
					</record>
					<record>
						<CODE>S</CODE>
						<CODE_NAME>산출완료</CODE_NAME>
					</record>
					<record>
						<CODE>X</CODE>
						<CODE_NAME>승인완료</CODE_NAME>
					</record>
					<record>
						<CODE>D</CODE>
						<CODE_NAME>결재진행중</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_error">
				<Contents>
					<colinfo id="IDX" size="256" type="STRING"/>
					<colinfo id="ERRMSG" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_duty_block">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
					<record>
						<CODE></CODE>
						<CODE_NAME>ALL</CODE_NAME>
					</record>
					<record>
						<CODE>00</CODE>
						<CODE_NAME>0)&#32;기본&#32;LAYOUT</CODE_NAME>
					</record>
					<record>
						<CODE>01</CODE>
						<CODE_NAME>1)&#32;카&#32;자중</CODE_NAME>
					</record>
					<record>
						<CODE>02</CODE>
						<CODE_NAME>2)&#32;TM&#32;&amp;&#32;3)&#32;로핑</CODE_NAME>
					</record>
					<record>
						<CODE>04</CODE>
						<CODE_NAME>4)&#32;TM&#32;모터&#32;&amp;&#32;5)&#32;TM&#32;인버터</CODE_NAME>
					</record>
					<record>
						<CODE>06</CODE>
						<CODE_NAME>6)&#32;TM&#32;MAIN&#32;SHEAVE&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>08</CODE>
						<CODE_NAME>8)&#32;TM&#32;RPM</CODE_NAME>
					</record>
					<record>
						<CODE>09</CODE>
						<CODE_NAME>9)&#32;DEF&#32;SHEAVE&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>10</CODE>
						<CODE_NAME>10)&#32;TM&#32;WRAP</CODE_NAME>
					</record>
					<record>
						<CODE>11</CODE>
						<CODE_NAME>11)&#32;ROPE&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>12</CODE>
						<CODE_NAME>12)&#32;ROPE&#32;본수</CODE_NAME>
					</record>
					<record>
						<CODE>13</CODE>
						<CODE_NAME>13)&#32;COMPEN&#32;CHAIN&#32;수량</CODE_NAME>
					</record>
					<record>
						<CODE>14</CODE>
						<CODE_NAME>14)&#32;COMPEN&#32;CHAIN&#32;직경</CODE_NAME>
					</record>
					<record>
						<CODE>15</CODE>
						<CODE_NAME>15)&#32;SAFETY</CODE_NAME>
					</record>
					<record>
						<CODE>16</CODE>
						<CODE_NAME>16)&#32;CAR&#32;RAIL</CODE_NAME>
					</record>
					<record>
						<CODE>17</CODE>
						<CODE_NAME>17)&#32;CWT&#32;RAIL</CODE_NAME>
					</record>
					<record>
						<CODE>18</CODE>
						<CODE_NAME>18)&#32;GOVERNOR</CODE_NAME>
					</record>
					<record>
						<CODE>19</CODE>
						<CODE_NAME>19)&#32;CAR&#32;GUIDE&#32;SHOE</CODE_NAME>
					</record>
					<record>
						<CODE>20</CODE>
						<CODE_NAME>20)&#32;CWT&#32;GUIDE&#32;SHOE</CODE_NAME>
					</record>
					<record>
						<CODE>21</CODE>
						<CODE_NAME>21)&#32;CAR&#32;BUFFER</CODE_NAME>
					</record>
					<record>
						<CODE>22</CODE>
						<CODE_NAME>22)&#32;CWT.&#32;BUFFER</CODE_NAME>
					</record>
					<record>
						<CODE>23</CODE>
						<CODE_NAME>23)&#32;SUSPEN&#32;SHEAVE&#32;DIA</CODE_NAME>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template_add">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="INT"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="HOGI" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_template">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="CHK" size="1" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ZTPLNO" size="256" type="STRING"/>
					<colinfo id="ZTPLSEQ" size="256" type="STRING"/>
					<colinfo id="PRH" size="256" type="STRING"/>
					<colinfo id="PRHNAME" size="256" type="STRING"/>
					<colinfo id="PRD" size="256" type="STRING"/>
					<colinfo id="ZRMK" size="256" type="STRING"/>
					<colinfo id="MCLASS" size="256" type="STRING"/>
					<colinfo id="ZTPLNM" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="PRSEQ" size="256" type="INT"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="HOGI" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_report">
				<Contents>
					<colinfo id="ZKUNNR" size="256" summ="default" type="STRING"/>
					<colinfo id="VKGRT" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="GSNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="KUNNR" size="256" summ="default" type="STRING"/>
					<colinfo id="SPART" size="256" summ="default" type="STRING"/>
					<colinfo id="MODEL" size="256" summ="default" type="STRING"/>
					<colinfo id="DELDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="PR" size="256" summ="default" type="STRING"/>
					<colinfo id="EQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CT" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP" size="256" summ="default" type="STRING"/>
					<colinfo id="ZUAM" size="256" summ="default" type="STRING"/>
					<colinfo id="ADDT" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ATYP" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_AUSE" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_AOPEN" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ASPD" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_AFQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ASTQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ACD2" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ATT" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ADTA" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_FDNCMQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_FDWUQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_FDSMDQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_FDSMSQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ADRV" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BMDL" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BCL" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BFR" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BFS" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BWM" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BWHG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BMOPB" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BSOPB" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BHOPB" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BCDM" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BCDHG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BCPI" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM1" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM1Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM1M" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM1HG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPI1" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM2" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM2Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM2M" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM2HG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPI2" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM3" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM3Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM3M" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM3HG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPI3" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM4" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM4Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM4M" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CJM4HG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPI4" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHD1" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHD1HG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHD1Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHD2" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHD2HG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHD2Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHD3" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHD3HG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHD3Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPBM1" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPBM1Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPBM2" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPBM2Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPBT" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPBTQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPBB" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHPBBQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHIPM1" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHIPM1Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHIPM2" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHIPM2Q" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHIPT" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHIPTQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHIPB" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CHIPBQ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_COB" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ECCH" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ECJJ" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ECHH" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_EHO" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_EHTRH" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_EHP" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_EHTH" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ETM" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ETMM" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ECSF" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ECRL" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ECWRL" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS01" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP01" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS02" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP02" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS03" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP03" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS04" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP04" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS05" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP05" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS06" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP06" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS07" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP07" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS08" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP08" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS09" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP09" size="256" summ="default" type="STRING"/>
					<colinfo id="FDS10" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP10" size="256" summ="default" type="STRING"/>
					<colinfo id="FDSP11" size="256" summ="default" type="STRING"/>
					<colinfo id="EQML03" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME01" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME88" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME04" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME06" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME86" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME83" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME84" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME85" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO07" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME55" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME56" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME59" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME60" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME61" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME62" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME63" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME65" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME66" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME67" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME73" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME75" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME76" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME77" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME78" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME79" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME80" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME81" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME82" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME87" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_AWID" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ADEG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ARISE" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_AFLAT" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ASPE" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_AMOT" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ASTC" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_AGCOL" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_AHCOL" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_AIODK" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ASKTPN" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ASUBW" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BBRU" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_BMP" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_CUSL" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_DSOF" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_DGR" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_DBARR" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ALOCA" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERK" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_AMAN" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ECW" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ECWAD" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME89" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME51" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO01" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO02" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO03" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO15" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO04" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO05" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO06" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO08" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO09" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO10" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO11" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO12" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO13" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO14" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO16" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO17" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO18" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO19" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO20" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME11" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME12" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME57" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME58" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME64" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME69" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME70" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME71" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME72" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME74" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME52" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME10" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ALENG" size="256" summ="default" type="STRING"/>
					<colinfo id="EL_ARIS" size="256" summ="default" type="STRING"/>
					<colinfo id="REGION" size="256" summ="default" type="STRING"/>
					<colinfo id="CT06" size="256" summ="default" type="STRING"/>
					<colinfo id="CTTXT" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME91" size="256" summ="default" type="STRING"/>
					<colinfo id="CT09" size="256" summ="default" type="STRING"/>
					<colinfo id="CTTXT9" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME93" size="256" summ="default" type="STRING"/>
					<colinfo id="CT10" size="256" summ="default" type="STRING"/>
					<colinfo id="CTTXT10" size="256" summ="default" type="STRING"/>
					<colinfo id="OS_BDTXT" size="256" summ="default" type="STRING"/>
					<colinfo id="OS_BDAMT" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO24" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO25" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO26" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO27" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO28" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO29" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO30" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO31" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO32" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO33" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO34" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO35" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO36" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO37" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO38" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO39" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMO40" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME92" size="256" summ="default" type="STRING"/>
					<colinfo id="EQME54" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMM02" size="256" summ="default" type="STRING"/>
					<colinfo id="EQMM04" size="256" summ="default" type="STRING"/>
					<colinfo id="CT08" size="256" summ="default" type="STRING"/>
					<colinfo id="CTTXT8" size="256" summ="default" type="STRING"/>
					<colinfo id="CT07" size="256" summ="default" type="STRING"/>
					<colinfo id="CTTXT7" size="256" summ="default" type="STRING"/>
					<colinfo id="CT11" size="256" summ="default" type="STRING"/>
					<colinfo id="CTTXT11" size="256" summ="default" type="STRING"/>
					<colinfo id="CT12" size="256" summ="default" type="STRING"/>
					<colinfo id="CTTXT12" size="256" summ="default" type="STRING"/>
					<colinfo id="CT13" size="256" summ="default" type="STRING"/>
					<colinfo id="CTTXT13" size="256" summ="default" type="STRING"/>
					<colinfo id="CT14" size="256" summ="default" type="STRING"/>
					<colinfo id="CTTXT14" size="256" summ="default" type="STRING"/>
					<colinfo id="CT15" size="256" summ="default" type="STRING"/>
					<colinfo id="CTTXT15" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_block">
				<Contents>
					<colinfo id="NO" size="256" type="STRING"/>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="3" type="STRING"/>
					<colinfo id="QTSEQ" size="3" type="STRING"/>
					<colinfo id="BLSEQ" size="256" type="STRING"/>
					<colinfo id="BDMNG" size="256" type="STRING"/>
					<colinfo id="SALES" size="256" type="STRING"/>
					<colinfo id="MESSG" size="100" type="STRING"/>
					<colinfo id="ZCTOTAL" size="256" type="STRING"/>
					<colinfo id="BLOCKNAME" size="256" type="STRING"/>
					<colinfo id="MAKTX" size="256" type="STRING"/>
					<colinfo id="POSID" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_print">
				<Contents>
					<colinfo id="FR_SO" size="10" type="STRING"/>
					<colinfo id="TO_SO" size="10" type="STRING"/>
					<colinfo id="FR_PO" size="6" type="STRING"/>
					<colinfo id="TO_PO" size="6" type="STRING"/>
					<colinfo id="CHK" size="256" type="STRING"/>
					<record>
						<CHK></CHK>
						<FR_PO></FR_PO>
						<FR_SO></FR_SO>
						<TO_PO></TO_PO>
						<TO_SO></TO_SO>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_A">
				<Contents>
					<colinfo id="NAM_CHAR" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="CHAR_VALUE" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_B">
				<Contents>
					<colinfo id="NAM_CHAR" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="CHAR_VALUE" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_C">
				<Contents>
					<colinfo id="NAM_CHAR" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="CHAR_VALUE" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_D">
				<Contents>
					<colinfo id="NAM_CHAR" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="CHAR_VALUE" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_E">
				<Contents>
					<colinfo id="NAM_CHAR" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="CHAR_VALUE" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_F">
				<Contents>
					<colinfo id="NAM_CHAR" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="CHAR_VALUE" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_G">
				<Contents>
					<colinfo id="VBELN" size="256" type="STRING"/>
					<colinfo id="POSNR" size="256" type="STRING"/>
					<colinfo id="MATNR" size="256" type="STRING"/>
					<colinfo id="HOGI" size="256" type="STRING"/>
					<colinfo id="ARKTX" size="256" type="STRING"/>
					<colinfo id="VDATU" size="256" type="STRING"/>
					<colinfo id="KUNNRT" size="256" type="STRING"/>
					<colinfo id="BSTKD" size="256" type="STRING"/>
					<colinfo id="TELEP" size="256" type="STRING"/>
					<colinfo id="KUNNRTZ2" size="256" type="STRING"/>
					<colinfo id="KUNNRTZ3" size="256" type="STRING"/>
					<colinfo id="DATUM" size="256" type="STRING"/>
					<colinfo id="UZEIT" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_check_all">
				<Contents>
					<colinfo id="FLAG" size="1" type="STRING"/>
					<colinfo id="MANDT" size="3" type="STRING"/>
					<colinfo id="QTNUM" size="256" type="STRING"/>
					<colinfo id="QTSER" size="256" type="STRING"/>
					<colinfo id="QTSEQ" size="256" type="STRING"/>
					<colinfo id="PSPID" size="24" type="STRING"/>
					<colinfo id="POSID" size="24" type="STRING"/>
					<colinfo id="ATYPE" size="30" type="STRING"/>
					<colinfo id="GUBUN" size="1" type="STRING"/>
					<colinfo id="BLSEQ" size="6" type="STRING"/>
					<colinfo id="BLNUM" size="10" type="STRING"/>
					<colinfo id="BLNAM" size="50" type="STRING"/>
					<colinfo id="MESSG" size="50" type="STRING"/>
					<colinfo id="STATE" size="1" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_acapa">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="ATINN" size="256" type="STRING"/>
					<colinfo id="ATZHL" size="256" type="STRING"/>
					<colinfo id="ATWRT" size="256" type="STRING"/>
					<colinfo id="ZACAPA" size="256" type="STRING"/>
					<colinfo id="SPRAS" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_zregn3">
				<Contents>
					<colinfo id="CLASS1" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="ATNAM" size="256" type="STRING"/>
					<colinfo id="ATBEZ" size="256" type="STRING"/>
					<colinfo id="ATINN" size="256" type="STRING"/>
					<colinfo id="ATZHL" size="256" type="STRING"/>
					<colinfo id="ATWRT" size="256" type="STRING"/>
					<colinfo id="ATWTB" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond_atnam">
				<Contents>
					<colinfo id="MANDT" size="256" type="STRING"/>
					<colinfo id="KLART" size="256" type="STRING"/>
					<colinfo id="CLASS1" size="256" type="STRING"/>
					<colinfo id="ATKLA" size="256" type="STRING"/>
					<colinfo id="ATNAM" size="256" type="STRING"/>
					<colinfo id="WHERE" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_check2">
				<Contents>
					<colinfo id="FLAG" size="1" summ="default" type="STRING"/>
					<colinfo id="MANDT" size="3" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="24" summ="default" type="STRING"/>
					<colinfo id="POSID" size="24" summ="default" type="STRING"/>
					<colinfo id="ATYPE" size="30" summ="default" type="STRING"/>
					<colinfo id="GUBUN" size="1" summ="default" type="STRING"/>
					<colinfo id="BLSEQ" size="6" summ="default" type="STRING"/>
					<colinfo id="BLNUM" size="10" summ="default" type="STRING"/>
					<colinfo id="BLNAM" size="50" summ="default" type="STRING"/>
					<colinfo id="MESSG" size="50" summ="default" type="STRING"/>
					<colinfo id="STATE" size="1" summ="default" type="STRING"/>
					<colinfo id="ZQUTY" size="256" summ="default" type="STRING"/>
					<colinfo id="ZAMNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ZTOTL" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cond2">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_chres">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_redep">
				<Contents>
					<colinfo id="CODE" size="256" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_log">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="LOGMSG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_loglist">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="PRCSYS" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="LOGMSG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_recad_da">
				<Contents>
					<colinfo id="RECAD_DA" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_vbeln2">
				<Contents>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_routing">
				<Contents>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEM_NO" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="JTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="ILDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="VALUE_B" size="256" summ="default" type="STRING"/>
					<colinfo id="VALUE" size="256" summ="default" type="STRING"/>
					<colinfo id="S_RQ_USER" size="256" summ="default" type="STRING"/>
					<colinfo id="S_RQ_DAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CNG_USEDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CRDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="CRTIM" size="256" summ="default" type="STRING"/>
					<colinfo id="CRNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="UPDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="UPNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="UPTIM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_rout_status">
				<Contents>
					<colinfo id="STATUS" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_updated_char">
				<Contents>
					<colinfo id="POSID" size="256" summ="default" type="STRING"/>
					<colinfo id="ATNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWRTB" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWRT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_129">
				<Contents>
					<colinfo id="vbeln" size="256" summ="default" type="STRING"/>
					<colinfo id="kbetr" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="kbetr2" size="256" summ="default" type="DECIMAL"/>
					<colinfo id="area" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_order">
				<Contents>
					<colinfo id="ordno" size="256" summ="default" type="STRING"/>
					<colinfo id="ordseq" size="256" summ="default" type="INT"/>
					<colinfo id="orditem" size="256" summ="default" type="INT"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_date_commi">
				<Contents>
					<colinfo id="DATE_TP" size="256" summ="default" type="STRING"/>
					<colinfo id="BSDATE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_tab3_sayang">
				<Contents>
					<colinfo id="btn_cost" size="256" summ="default" type="STRING"/>
					<colinfo id="btn_duty" size="256" summ="default" type="STRING"/>
					<colinfo id="btn_template" size="256" summ="default" type="STRING"/>
					<colinfo id="btn_depend" size="256" summ="default" type="STRING"/>
					<colinfo id="cb_block" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid_Editable" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid_OnCellClick" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid_SetCellProp" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid0_Editable" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid0_OnCellClick" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid0_SetCellProp" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid1_Editable" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid1_OnCellClick" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid1_SetCellProp" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid2_Editable" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid2_OnCellClick" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid2_SetCellProp" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid3_Editable" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid3_OnCellClick" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid3_SetCellProp" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid4_Editable" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid4_OnCellClick" size="256" summ="default" type="STRING"/>
					<colinfo id="Grid4_SetCellProp" size="256" summ="default" type="STRING"/>
					<record>
						<btn_cost></btn_cost>
						<btn_depend></btn_depend>
						<btn_duty></btn_duty>
						<btn_template></btn_template>
						<cb_block></cb_block>
						<Grid0_Editable></Grid0_Editable>
						<Grid0_OnCellClick></Grid0_OnCellClick>
						<Grid0_SetCellProp></Grid0_SetCellProp>
						<Grid1_Editable></Grid1_Editable>
						<Grid1_OnCellClick></Grid1_OnCellClick>
						<Grid1_SetCellProp></Grid1_SetCellProp>
						<Grid2_Editable></Grid2_Editable>
						<Grid2_OnCellClick></Grid2_OnCellClick>
						<Grid2_SetCellProp></Grid2_SetCellProp>
						<Grid3_Editable></Grid3_Editable>
						<Grid3_OnCellClick></Grid3_OnCellClick>
						<Grid3_SetCellProp></Grid3_SetCellProp>
						<Grid_Editable></Grid_Editable>
						<Grid_OnCellClick></Grid_OnCellClick>
						<Grid_SetCellProp></Grid_SetCellProp>
						<Grid4_Editable></Grid4_Editable>
						<Grid4_OnCellClick></Grid4_OnCellClick>
						<Grid4_SetCellProp></Grid4_SetCellProp>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list_abrand">
				<Contents>
					<colinfo id="CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="CODE_NAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_ds_header">
				<Contents>
					<colinfo id="SYSID" size="256" summ="default" type="STRING"/>
					<colinfo id="CALLSYS" size="256" summ="default" type="STRING"/>
					<colinfo id="ZFLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="AUART" size="256" summ="default" type="STRING"/>
					<colinfo id="START_IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="END_IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="USER_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="LAND" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_ds_template">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_out_ds_template">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="PRH" size="256" summ="default" type="STRING"/>
					<colinfo id="PRD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_ds_log">
				<Contents>
					<colinfo id="IDX" size="256" summ="default" type="STRING"/>
					<colinfo id="PRCSYS" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="PRHNAME" size="256" summ="default" type="STRING"/>
					<colinfo id="LOGMSG" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="plm_out_ds_header">
				<Contents>
					<colinfo id="HEAD" size="256" summ="default" type="STRING"/>
					<colinfo id="TIT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_brnd_hogi_del">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="ZPRDGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDCD" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_jqpr">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="JQPRNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="REMARKHOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="REMARKROW" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERZET" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="AEDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="AEZET" size="256" summ="default" type="STRING"/>
					<colinfo id="AENAM" size="256" summ="default" type="STRING"/>
					<colinfo id="WAERS" size="256" summ="default" type="STRING"/>
					<colinfo id="IWBTRORG" size="256" summ="default" type="STRING"/>
					<colinfo id="FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_rad_sts">
				<Contents>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="FLOORYSNO" size="256" summ="default" type="STRING"/>
					<colinfo id="LAYOUTYSNO" size="256" summ="default" type="STRING"/>
					<colinfo id="APPLYYSNO" size="256" summ="default" type="STRING"/>
					<colinfo id="SAVEYSNO" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_samevbeln">
				<Contents>
					<colinfo id="QTNUM" size="256" summ="default" type="STRING"/>
					<colinfo id="QTSER" size="256" summ="default" type="STRING"/>
					<colinfo id="QTDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="GSNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="VBELN" size="256" summ="default" type="STRING"/>
					<colinfo id="ZKUNNR" size="256" summ="default" type="STRING"/>
					<colinfo id="ZKUNNR_NM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_output_ZSDT0094_change_estimate">
				<Contents>
					<colinfo id="MANDT" size="256" summ="default" type="STRING"/>
					<colinfo id="PSPID" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="POSNR" size="256" summ="default" type="STRING"/>
					<colinfo id="HOGI" size="256" summ="default" type="STRING"/>
					<colinfo id="NAM_CHAR" size="256" summ="default" type="STRING"/>
					<colinfo id="ATBEZ" size="256" summ="default" type="STRING"/>
					<colinfo id="CHAR_VALUE" size="256" summ="default" type="STRING"/>
					<colinfo id="ATWTB" size="256" summ="default" type="INT"/>
					<colinfo id="CNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="ERZET" size="256" summ="default" type="STRING"/>
					<colinfo id="ERNAM" size="256" summ="default" type="STRING"/>
					<colinfo id="AEDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="AEZET" size="256" summ="default" type="STRING"/>
					<colinfo id="AENAM" size="256" summ="default" type="STRING"/>
					<colinfo id="CNGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="ATKLA" size="256" summ="default" type="STRING"/>
					<colinfo id="CHAR_VALUEMD" size="256" summ="default" type="STRING"/>
					<colinfo id="MATNR" size="256" summ="default" type="STRING"/>
					<colinfo id="PCNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="DISPTP" size="256" summ="default" type="STRING"/>
					<colinfo id="MODITP" size="256" summ="default" type="STRING"/>
					<colinfo id="ZPRDGBN" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDCD" size="256" summ="default" type="STRING"/>
					<colinfo id="BRNDSEQ" size="256" summ="default" type="STRING"/>
					<colinfo id="SNDSYS" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="123" Height="48" Id="Shape1" Left="502" LineColor="user1" Right="972" TabOrder="38" Top="75" Type="Rectangle" Width="470"></Shape>
		<Shape BKColor="user0" Bottom="70" Height="70" Id="Shape2" Left="248" LineColor="user1" Right="972" TabOrder="8" Top="0" Type="Rectangle" Width="724"></Shape>
		<Static Align="Right" Height="20" Id="Static1" Left="256" Style="sty_lb_search" TabOrder="0" Text="납품처&#32;" Top="24" VAlign="Middle" Width="80"></Static>
		<Static Align="Right" Height="20" Id="Static0" Left="256" Style="sty_lb_search" TabOrder="3" Text="지급처&#32;" Top="2" VAlign="Middle" Width="80"></Static>
		<Static Align="Right" Height="20" Id="Static3" Left="632" Style="sty_lb_search" TabOrder="4" Text="수주일&#32;" Top="48" VAlign="Middle" Width="80"></Static>
		<Shape BKColor="user0" Bottom="123" Height="48" Id="Shape0" Left="12" LineColor="user1" Right="490" TabOrder="5" Top="75" Type="Rectangle" UserData="fix" Width="478"></Shape>
		<Button Appearance="FLAT" ButtonStyle="TRUE" Color="user5" Cursor="HAND" Height="22" Id="btn_query" ImageID="btn_comm_query_k" Left="176" LeftMargin="20" OnClick="fn_OnClick_btn" TabOrder="6" Text="조회" Top="11" Width="52"></Button>
		<Edit BKColor="user27" Border="Flat" Height="20" Id="ed_pspId" Left="72" LeftMargin="4" MaxLength="6" OnCharChanged="ed_pspId_OnCharChanged" OnFocus="ufn_OnFocus" OnKeyDown="ed_pspId_OnKeyDown" RightMargin="4" Style="sty_ipt_form" TabOrder="0" Top="12" UpperOnly="TRUE" Width="94"></Edit>
		<Edit BindDataset="ds_output_ZSDS0063" BKColor="yellow" Border="Flat" Column="SEQ" Height="20" Id="ed_seq" Left="72" LeftMargin="4" MaxLength="3" Number="TRUE" OnFocus="ufn_OnFocus" OnKeyDown="ed_seq_OnKeyDown" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="1" Top="34" Width="30"></Edit>
		<Static Height="19" Id="st_projectGb" Left="108" TabOrder="7" Text="&#32;" Top="39" Width="60"></Static>
		<Static Align="Right" Height="20" Id="Static6" Left="256" Style="sty_lb_search" TabOrder="9" Text="현장명&#32;" Top="46" VAlign="Middle" Width="80"></Static>
		<Edit BindDataset="ds_output_ZSDS0063" BKColor="user5" Border="Flat" Column="KUNRG" Enable="FALSE" Height="20" Id="ed_kunrg" Left="339" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="10" Top="2" Width="94"></Edit>
		<Edit BindDataset="ds_output_ZSDS0063" BKColor="user5" Border="Flat" Column="KUNWE" Enable="FALSE" Height="20" Id="ed_kunwe" Left="339" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="11" Top="24" Width="94"></Edit>
		<Edit BindDataset="ds_output_ZSDS0063" BKColor="user5" Border="Flat" Column="BSTNK" Enable="FALSE" Height="20" Id="ed_bstnk" Left="339" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="12" Top="48" Width="286"></Edit>
		<Static BindDataset="ds_output_ZSDS0063" Column="KUNRG_NM" Height="19" Id="Static7" Left="440" TabOrder="13" Text="&#32;" Top="4" VAlign="Middle" Width="164"></Static>
		<Static BindDataset="ds_output_ZSDS0063" Column="KUNWE_NM" Height="19" Id="Static8" Left="440" TabOrder="14" Text="&#32;" Top="24" VAlign="Middle" Width="172"></Static>
		<Static Height="19" Id="Static4" Left="12" TabOrder="15" Text="프로젝트" Top="15" VAlign="Middle" Width="60"></Static>
		<Static Height="19" Id="Static2" Left="12" TabOrder="16" Text="변경차수" Top="40" VAlign="Middle" Width="60"></Static>
		<Edit BKColor="user27" Border="Flat" Column="I_FR_SO" Height="1" Id="Edit4" Left="11" LeftMargin="4" OnFocus="ufn_OnFocus" OnKeyDown="ed_so_OnKeyDown" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="17" Top="31" Width="110"></Edit>
		<Static Align="Center" BKColor="yellow" Border="SunkenEdge" Height="18" Id="Static9" Left="21" TabOrder="18" Text="현&#32;행" Top="87" VAlign="Middle" Width="53"></Static>
		<Static Align="Right" Height="20" Id="Static10" Left="92" Style="sty_lb_search" TabOrder="19" Text="금&#32;액&#32;" Top="78" VAlign="Middle" Width="50"></Static>
		<Static Align="Right" Height="20" Id="Static11" Left="268" Style="sty_lb_search" TabOrder="20" Text="원&#32;가&#32;" Top="78" VAlign="Middle" Width="50"></Static>
		<Static Align="Right" Height="20" Id="Static12" Left="268" Style="sty_lb_search" TabOrder="21" Text="수수료&#32;" Top="100" VAlign="Middle" Width="50"></Static>
		<Static Align="Right" Height="20" Id="Static13" Left="577" Style="sty_lb_search" TabOrder="23" Text="금&#32;액&#32;" Top="78" VAlign="Middle" Width="50"></Static>
		<Static Align="Right" Height="20" Id="Static14" Left="753" Style="sty_lb_search" TabOrder="24" Text="원&#32;가&#32;" Top="78" VAlign="Middle" Width="50"></Static>
		<Static Align="Right" Height="20" Id="Static15" Left="753" Style="sty_lb_search" TabOrder="25" Text="수수료&#32;" Top="100" VAlign="Middle" Width="50"></Static>
		<Static Align="Center" BKColor="yellow" Border="SunkenEdge" Height="18" Id="Static16" Left="514" TabOrder="22" Text="변&#32;경" Top="87" VAlign="Middle" Width="53"></Static>
		<Edit BindDataset="ds_output_ZSDS0063" BKColor="user5" Border="Flat" Column="BSTDK" Enable="FALSE" Height="20" Id="ed_bstdk" Left="720" LeftMargin="4" OnChanged="ed_bstdk_OnChanged" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="27" Top="48" Width="75"></Edit>
		<MaskEdit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" BorderColor="user13" Column="NETWR" Enable="FALSE" Height="20" Id="ed_netwr" Left="145" TabOrder="28" Top="78" Value="MaskEdit0" Width="118"></MaskEdit>
		<MaskEdit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" BorderColor="user13" Column="WAVWR" Enable="FALSE" Height="20" Id="ed_wavwr" Left="321" TabOrder="29" Top="78" Value="MaskEdit0" Width="118"></MaskEdit>
		<MaskEdit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" BorderColor="user13" Column="COMMI" Enable="FALSE" Height="20" Id="ed_commi" Left="321" TabOrder="30" Top="100" Value="MaskEdit0" Width="118"></MaskEdit>
		<MaskEdit BKColor="user5" Border="Flat" BorderColor="user13" Enable="FALSE" Height="20" Id="ed_wavwrRate" Left="441" Mask="##0.#" MaxLength="4" TabOrder="31" Top="78" Width="45"></MaskEdit>
		<MaskEdit BKColor="user5" Border="Flat" BorderColor="user13" Enable="FALSE" Height="20" Id="ed_commiRate" Left="441" Mask="##0.#" MaxLength="4" TabOrder="32" Top="100" Value="MaskEdit0" Width="45"></MaskEdit>
		<MaskEdit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" BorderColor="user13" Column="CHNETWR" Enable="FALSE" Height="20" Id="ed_chNetwr" Left="629" TabOrder="33" Top="78" Value="MaskEdit0" Width="118"></MaskEdit>
		<MaskEdit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" BorderColor="user13" Column="CHWAVWR" Enable="FALSE" Height="20" Id="ed_chWavwr" Left="808" TabOrder="34" Top="78" Value="MaskEdit0" Width="118"></MaskEdit>
		<MaskEdit BKColor="user5" Border="Flat" BorderColor="user13" Enable="FALSE" Height="20" Id="ed_chWavwrRate" Left="928" Mask="##0.#" MaxLength="4" TabOrder="36" Top="78" Value="MaskEdit0" Width="43"></MaskEdit>
		<MaskEdit BKColor="user5" Border="Flat" BorderColor="user13" Enable="FALSE" Height="20" Id="ed_chCommiRate" Left="928" Mask="##0.#" MaxLength="4" TabOrder="37" Top="100" Value="MaskEdit0" Width="43"></MaskEdit>
		<MaskEdit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" BorderColor="user13" Column="CHCOMMI" Enable="FALSE" Height="20" Id="ed_chCommi" Left="808" TabOrder="35" Top="100" Value="MaskEdit0" Width="118"></MaskEdit>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_rewrite" ImageID="btn_sub_06" Left="874" OnClick="fn_rewrite" Style="sty_btn" TabOrder="39" Text="사양SAP반영" Top="4" Width="95"></Button>
		<Static Height="19" Id="st_finl" Left="180" TabOrder="40" Text="&#32;" Top="40" Width="60"></Static>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_finl_R" ImageID="btn_sub_04" Left="798" OnClick="btn_finl_R_OnClick" Style="sty_btn" TabOrder="41" Text="&#32;원가의뢰" Top="4" Width="71"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_finl_S" ImageID="btn_sub_04" Left="722" OnClick="btn_finl_S_OnClick" Style="sty_btn" TabOrder="42" Text="&#32;산출완료" Top="4" Visible="FALSE" Width="71"></Button>
		<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_draft" ImageID="btn_sub_04" Left="646" OnClick="btn_draft_OnClick" Style="sty_btn" TabOrder="43" Text="&#32;기안" Top="4" Width="71"></Button>
		<Edit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" Column="AEDAT" Enable="FALSE" Height="20" Id="Edit0" Left="880" LeftMargin="4" OnChanged="ed_bstdk_OnChanged" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="45" Top="48" Width="75"></Edit>
		<Static Align="Right" Height="20" Id="Static5" Left="800" Style="sty_lb_search" TabOrder="44" Text="변경일" Top="48" VAlign="Middle" Width="80"></Static>
		<Checkbox BindDataset="ds_output_ZSDT0090" BKColor="user0" Column="UCH_DUTY" Height="21" Id="chk_uch_duty" Left="952" OnClick="chk_uch_duty_OnClick" TabOrder="47" Top="24" Value="FALSE" Visible="FALSE" Width="16"></Checkbox>
		<Static Height="20" Id="Static17" Left="876" TabOrder="48" Text="제한조건체크" Top="25" VAlign="Middle" Visible="FALSE" Width="78"></Static>
		<Tab Border="Flat" FixedImage="FALSE" Font="굴림,9" Height="429" Id="Tab00" Left="12" MouseOverColor="user16" OnChanging="Tab00_OnChanging" OnSize="fn_resize" SelColor="user15" SelectFont="굴림,9" Style="sty_tab" TabIndex="2" TabOrder="26" Top="128" Width="964">
			<Contents>
				<TabPage BorderColor="black" Height="404" Id="tab1" ImageEdgeWidth="2" ImageID="tab_main" Left="2" scroll="true" TabOrder="19" Text="&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;헤더&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;" Top="23" Width="960">
					<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="273" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="168" Id="Grid" InputPanel="FALSE" Left="10" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnHeadClick="Grid_OnHeadClick" Right="477" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="105" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="467">
						<contents>
							<format id="Default">
								<columns>
									<col width="30"/>
									<col width="0"/>
									<col width="0"/>
									<col width="80"/>
									<col width="0"/>
									<col width="100"/>
									<col width="60"/>
									<col width="50"/>
									<col width="101"/>
									<col width="45"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="청구계획일"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="종별구분"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="종별구분"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="지급조건"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="청구상태"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="청구금액"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="통화"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox" edit="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid='expr:fn_getFlagBkImageID(GetColumn(currow,&#32;&quot;STATUS&quot;))' col="2"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="FKDAT" displaymaskchar="Y"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="MLBEZ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" colid="MSTXT" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="ZTERM" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="FKSAF" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="FAKWR" display="number"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="9" colid="WAERK" display="text"/>
								</body>
								<summary>
									<cell align="center" bkcolor="user25" col="0" colspan="8" display="text" text="합계"/>
									<cell align="right" bkcolor="user25" col="8" display="number" expr="SUM(&apos;FAKWR&apos;)"/>
									<cell bkcolor="user25" col="9" display="text"/>
								</summary>
							</format>
						</contents>
					</Grid>
					<Image Height="19" Id="Image0" ImageID="form_bl_title_sub" Left="8" TabOrder="2" Top="82" Width="11"></Image>
					<Static Color="user6" Font="굴림,9,Bold" Height="20" Id="Static19" Left="21" TabOrder="3" Text="현행&#32;청구계획" Top="84" VAlign="Middle" Width="102"></Static>
					<Static Height="19" Id="Static4" Left="12" TabOrder="4" Text="계약&#32;납기일" Top="5" VAlign="Middle" Width="68"></Static>
					<Static Height="19" Id="Static2" Left="12" TabOrder="5" Text="계약&#32;통화" Top="52" VAlign="Middle" Width="60"></Static>
					<Static Align="Right" Height="20" Id="Static0" Left="88" Style="sty_lb_search" TabOrder="6" Text="현행&#32;" Top="3" VAlign="Middle" Width="50"></Static>
					<Static Align="Right" Height="20" Id="Static1" Left="88" Style="sty_lb_search" TabOrder="7" Text="현행&#32;" Top="51" VAlign="Middle" Width="50"></Static>
					<Edit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" Column="WAERK" Enable="FALSE" Height="20" Id="ed_waerk" Left="141" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="8" Top="51" Width="38"></Edit>
					<Static Align="Right" Height="20" Id="Static3" Left="242" Style="sty_lb_search" TabOrder="10" Text="변경&#32;" Top="51" VAlign="Middle" Width="50"></Static>
					<Edit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" Column="CHWAERK" Height="20" Id="ed_chwaerk" Left="298" LeftMargin="4" OnChanged="Tab00_tab1_ed_chwaerk_OnChanged" OnCharChanged="Tab00_tab1_ed_chwaerk_OnCharChanged" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="11" Top="49" Width="38"></Edit>
					<Static Align="Right" Height="20" Id="Static5" Left="242" Style="sty_lb_search" TabOrder="9" Text="변경&#32;" Top="3" VAlign="Middle" Width="50"></Static>
					<Image Height="19" Id="Image1" ImageID="form_bl_title_sub" Left="8" TabOrder="12" Top="274" Width="11"></Image>
					<Static Color="user6" Font="굴림,9,Bold" Height="20" Id="Static6" Left="21" TabOrder="13" Text="변경사유" Top="276" VAlign="Middle" Width="102"></Static>
					<Static Align="Right" Height="20" Id="Static8" Left="680" Style="sty_lb_search" TabOrder="14" Text="차이금액&#32;" Top="78" VAlign="Middle" Width="58"></Static>
					<Image Height="19" Id="Image2" ImageID="form_bl_title_sub" Left="484" TabOrder="15" Top="82" Width="11"></Image>
					<Static Color="user6" Font="굴림,9,Bold" Height="20" Id="Static9" Left="497" TabOrder="16" Text="변경&#32;청구계획" Top="84" VAlign="Middle" Width="102"></Static>
					<Button ButtonStyle="TRUE" Color="black" Cursor="HAND" Height="22" Id="btn_addRow" ImageID="btn_sub_02" Left="860" OnClick="btn_addRow_OnClick" Style="sty_btn" TabOrder="17" Text="+" Top="78" Visible="FALSE" Width="52"></Button>
					<Button ButtonStyle="TRUE" Color="black" Cursor="HAND" Height="22" Id="btn_delRow" ImageID="btn_sub_02" Left="908" OnClick="btn_delRow_OnClick" Style="sty_btn" TabOrder="18" Text="-" Top="78" Visible="FALSE" Width="47"></Button>
					<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="273" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="168" Id="Grid0" InputPanel="FALSE" Left="482" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellClick="Tab00_change_OnCellClick" OnCellPosChanged="Tab00_change_OnCellPosChanged" OnHeadClick="Grid_OnHeadClick" OnKillFocus="Tab00_change_OnKillFocus" Right="957" RowHeight="20" Style="sty_grid" TabOrder="19" TabStop="true" Top="105" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="475">
						<contents>
							<format id="Default">
								<columns>
									<col width="30"/>
									<col width="0"/>
									<col width="30"/>
									<col width="80"/>
									<col width="0"/>
									<col width="90"/>
									<col width="60"/>
									<col width="50"/>
									<col width="90"/>
									<col width="45"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="청구계획일"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="종별구분"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="종별구분"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="지급조건"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="청구상태"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="청구금액"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="통화"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox" edit="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid='expr:fn_getFlagBkImageID(GetColumn(currow,&#32;&quot;STATUS&quot;))' col="2" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="CHFKDAT" display="text" displaymaskchar="Y" edit="normal" Mask="@@@@-@@-@@"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" combocol="CODE" combotext="CODE" display="text" edit="normal"/>
									<cell align="center" bkcolor="MENU" celltype="head" col="5" colid="CHMLBEZ" combocol="CODE" combodataset="ds_mlbez" combodisplayrowcnt="15" combotext="CODE_NAME" display="combo" edit="combo"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="CHZTERM" combocol="CODE" combodisplayrowcnt="15" combotext="CODE" display="text" edit="normal"/>
									<cell align="center" bkcolor="MENU" celltype="head" col="7" colid="CHFKSAF" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="CHFAKWR" display="number" edit="normal"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="9" colid="WAERK" display="text"/>
								</body>
								<summary>
									<cell align="center" bkcolor="user25" col="0" colspan="8" display="text" text="합계"/>
									<cell align="right" bkcolor="user25" col="8" display="number" expr="SUM(&apos;CHFAKWR&apos;)"/>
									<cell bkcolor="user25" col="9" display="text"/>
								</summary>
							</format>
						</contents>
					</Grid>
					<Edit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" Column="CHVDATU" Height="20" Id="ed_chvdatu" ImeMode="none" Left="295" LeftMargin="4" MaxLength="20" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="20" Top="3" Width="94"></Edit>
					<Edit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" Column="VDATU" Enable="FALSE" Height="20" Id="ed_vdatu" Left="141" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="21" Top="3" Width="94"></Edit>
					<MaskEdit BKColor="user5" Border="Flat" BorderColor="user13" Color="user8" Height="20" Id="ed_lackPay" Left="741" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Readonly="TRUE" TabOrder="22" Top="78" Width="118"></MaskEdit>
					<Edit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" Column="BIGO1" Height="20" Id="ed_bigo1" Left="10" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="23" Top="297" Width="944"></Edit>
					<Edit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" Column="BIGO2" Height="20" Id="ed_bigo2" Left="10" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="24" Top="318" Width="944"></Edit>
					<Edit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" Column="BIGO3" Height="20" Id="ed_bigo3" Left="10" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="25" Top="339" Width="944"></Edit>
					<Edit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" Column="BIGO4" Height="20" Id="ed_bigo4" Left="10" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="26" Top="360" Width="944"></Edit>
					<Edit BindDataset="ds_output_ZSDT0090" BKColor="user5" Border="Flat" Column="BIGO5" Enable="FALSE" Height="20" Id="ed_bigo5" Left="10" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="27" Top="381" Width="944"></Edit>
					<Static Align="Right" Height="20" Id="Static7" Left="394" Style="sty_lb_search" TabOrder="29" Text="변경사유" Top="27" VAlign="Middle" Width="76"></Static>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="CHRES_A" DataColumn="CODE_NAME" Height="20" Id="cb_chres" InnerDataset="ds_chres" Left="474" Style="sty_ipt_form" TabOrder="28" Top="27" Width="80"></Combo>
					<Static Align="Right" Height="20" Id="Static10" Left="394" Style="sty_lb_search" TabOrder="31" Text="원인부서" Top="51" VAlign="Middle" Width="76"></Static>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="REDEP_A" DataColumn="CODE_NAME" Height="20" Id="cb_redep" InnerDataset="ds_redep" Left="474" Style="sty_ipt_form" TabOrder="30" Top="51" Width="80"></Combo>
					<Static Align="Right" Height="20" Id="Static11" Left="394" Style="sty_lb_search" TabOrder="32" Text="변경특성" Top="3" VAlign="Middle" Width="76"></Static>
					<Static Align="Right" Height="20" Id="Static12" Left="474" Style="sty_lb_search" TabOrder="33" Text="기본의장" Top="3" VAlign="Middle" Width="78"></Static>
					<Static Align="Right" Height="20" Id="Static13" Left="554" Style="sty_lb_search" TabOrder="36" Text="카내의장" Top="3" VAlign="Middle" Width="78"></Static>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="CHRES_B" DataColumn="CODE_NAME" Height="20" Id="Combo0" InnerDataset="ds_chres" Left="554" Style="sty_ipt_form" TabOrder="34" Top="27" Width="80"></Combo>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="REDEP_B" DataColumn="CODE_NAME" Height="20" Id="Combo1" InnerDataset="ds_redep" Left="554" Style="sty_ipt_form" TabOrder="35" Top="51" Width="80"></Combo>
					<Static Align="Right" Height="20" Id="Static14" Left="634" Style="sty_lb_search" TabOrder="39" Text="카외의장" Top="3" VAlign="Middle" Width="78"></Static>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="CHRES_C" DataColumn="CODE_NAME" Height="20" Id="Combo2" InnerDataset="ds_chres" Left="634" Style="sty_ipt_form" TabOrder="37" Top="27" Width="80"></Combo>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="REDEP_C" DataColumn="CODE_NAME" Height="20" Id="Combo3" InnerDataset="ds_redep" Left="634" Style="sty_ipt_form" TabOrder="38" Top="51" Width="80"></Combo>
					<Static Align="Right" Height="20" Id="Static15" Left="714" Style="sty_lb_search" TabOrder="42" Text="OPTION" Top="3" VAlign="Middle" Width="78"></Static>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="CHRES_D" DataColumn="CODE_NAME" Height="20" Id="Combo4" InnerDataset="ds_chres" Left="714" Style="sty_ipt_form" TabOrder="40" Top="27" Width="80"></Combo>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="REDEP_D" DataColumn="CODE_NAME" Height="20" Id="Combo5" InnerDataset="ds_redep" Left="714" Style="sty_ipt_form" TabOrder="41" Top="51" Width="80"></Combo>
					<Static Align="Right" Height="20" Id="Static16" Left="794" Style="sty_lb_search" TabOrder="45" Text="LAYOUT" Top="3" VAlign="Middle" Width="78"></Static>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="CHRES_E" DataColumn="CODE_NAME" Height="20" Id="Combo6" InnerDataset="ds_chres" Left="794" Style="sty_ipt_form" TabOrder="43" Top="27" Width="80"></Combo>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="REDEP_E" DataColumn="CODE_NAME" Height="20" Id="Combo7" InnerDataset="ds_redep" Left="794" Style="sty_ipt_form" TabOrder="44" Top="51" Width="80"></Combo>
					<Static Align="Right" Height="20" Id="Static17" Left="874" Style="sty_lb_search" TabOrder="48" Text="계약정보" Top="3" VAlign="Middle" Width="78"></Static>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="CHRES" DataColumn="CODE_NAME" Height="20" Id="Combo8" InnerDataset="ds_chres" Left="874" Style="sty_ipt_form" TabOrder="46" Top="27" Width="80"></Combo>
					<Combo BindDataset="ds_output_ZSDT0090" Border="Flat" CodeColumn="CODE" Column="REDEP" DataColumn="CODE_NAME" Height="20" Id="Combo9" InnerDataset="ds_redep" Left="874" Style="sty_ipt_form" TabOrder="47" Top="51" Width="80"></Combo>
					<Static Height="19" Id="Static18" Left="10" TabOrder="49" Text="상해검수여부" Top="28" VAlign="Middle" Width="70"></Static>
					<Static Align="Right" Height="20" Id="Static20" Left="88" Style="sty_lb_search" TabOrder="50" Text="현행&#32;" Top="27" VAlign="Middle" Width="50"></Static>
					<Static Align="Right" Height="20" Id="Static21" Left="242" Style="sty_lb_search" TabOrder="51" Text="변경&#32;" Top="27" VAlign="Middle" Width="50"></Static>
					<Checkbox BindDataset="ds_output_ZSDT0090" Color="user5" Column="SHCHK" Enable="FALSE" Height="21" Id="chk_shchk" Left="156" TabOrder="52" Top="28" TrueValue="X" Value="FALSE" Width="38"></Checkbox>
					<Checkbox BindDataset="ds_output_ZSDT0090" Column="CHSHCHk" Height="21" Id="chk_chshchk" Left="306" TabOrder="53" Top="28" TrueValue="X" Value="FALSE" Width="38"></Checkbox>
				</TabPage>
				<TabPage BorderColor="black" Height="404" Id="tab2" ImageEdgeWidth="2" ImageID="tab_main" Left="2" scroll="true" TabOrder="12" Text="&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;호기&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;" Top="23" Width="960">
					<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="241" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="208" Id="Grid" InputPanel="FALSE" Left="2" LineColor="user20" LineType="ExHORZ" OnCellClick="Tab00_tab2_Grid_OnCellClick" OnCellPosChanged="Tab00_tab2_Grid_OnCellPosChanged" OnHeadClick="Grid_OnHeadClick" Right="954" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="33" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix2" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="952">
						<contents>
							<format id="Default">
								<columns>
									<col width="30"/>
									<col width="0"/>
									<col width="30"/>
									<col width="59"/>
									<col width="78"/>
									<col width="91"/>
									<col width="160"/>
									<col width="78"/>
									<col width="94"/>
									<col width="85"/>
									<col width="55"/>
									<col width="91"/>
									<col width="69"/>
									<col width="55"/>
									<col width="67"/>
									<col width="82"/>
									<col width="81"/>
									<col width="40"/>
									<col width="67"/>
									<col width="81"/>
									<col width="94"/>
									<col width="68"/>
									<col width="68"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="변경구분"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="호기"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="브랜드"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="SPEC"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="자재"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="금액"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="원가"/>
									<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="호기취소"/>
									<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="취소사유"/>
									<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="납기일"/>
									<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="무상보수"/>
									<cell align="center" col="14" color="user21" display="text" font="굴림,9" text="공사용사용"/>
									<cell align="center" col="15" color="user21" display="text" font="굴림,9" text="변경금액"/>
									<cell align="center" col="16" color="user21" display="text" font="굴림,9" text="변경원가"/>
									<cell align="center" col="17" color="user21" display="text" font="굴림,9" text="출력"/>
									<cell align="center" col="18" color="user21" display="text" font="굴림,9" text="변경납기일"/>
									<cell align="center" col="19" color="user21" display="text" font="굴림,9" text="변경무상보수"/>
									<cell align="center" col="20" color="user21" display="text" font="굴림,9" text="변경공사용사용"/>
									<cell align="center" col="21" color="user21" display="text" font="굴림,9" text="개별인증비용"/>
									<cell align="center" col="22" color="user21" display="text" font="굴림,9" text="통화"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox" edit="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid="expr:fn_getFlagBkImageID(GetColumn(currow,&apos;STATUS&apos;))" col="2" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="CHCK" display="checkbox" expr="decode(CHCK,&apos;X&apos;,1,0)"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="HOGI" display="text" limit="10"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" colid="BRNDCD" combocol="CODE" combodataset="ds_list_abrand" combotext="CODE_NAME" display="combo"/>
									<cell align="left" bkcolor="user0" bkcolor2="user22" col="6" colid="ARKTX" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="MATNR" display="combo"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="NETWR" display="number"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="9" colid="WAVWR" display="number"/>
									<cell align="center" bkcolor="expr:decode(HOGI_CANC,&apos;C&apos;,&apos;#EEEBE6&apos;,&apos;default&apos;)" bkcolor2="expr:decode(HOGI_CANC,&apos;C&apos;,&apos;#FAFAFA&apos;,&apos;default&apos;)" col="10" colid="HOGI_CANC" display="expr:decode(HOGI_CANC,&apos;C&apos;,&#32;&apos;text&apos;&#32;,&apos;button&apos;)" edit="expr:decode(HOGI_CANC,&apos;C&apos;,&#32;&apos;none&apos;&#32;,&apos;text&apos;)" expr="decode(HOGI_CANC,&apos;C&apos;,&#32;&apos;취소&apos;&#32;,&apos;미취소&apos;)"/>
									<cell align="center" bkcolor="expr:decode(HOGI_CANC,&apos;C&apos;,&apos;default&apos;,&#32;&apos;#EEEBE6&apos;)" bkcolor2="expr:decode(HOGI_CANC,&apos;C&apos;,&apos;default&apos;,&#32;&apos;#FAFAFA&apos;)" col="11" colid="ABGRU" combocol="CODE" combodataset="ds_abgru" combotext="CODE_NAME" display="expr:decode(HOGI_CANC,&apos;C&apos;,&#32;&apos;combo&apos;&#32;,&apos;none&apos;)" edit="expr:decode(HOGI_CANC,&apos;C&apos;,&#32;&apos;combo&apos;&#32;,&apos;none&apos;)"/>
									<cell align="left" bkcolor="user0" bkcolor2="user22" col="12" colid="EDATU" display="date" expr="Replace(EDATU,&#32;&apos;-&apos;,&#32;&apos;&apos;)"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="13" colid="REPMO" display="text" limit="2"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="14" colid="WORMO" display="text" limit="2"/>
									<cell align="right" bkcolor="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;#EEEBE6&apos;,&apos;default&apos;)" bkcolor2="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;#FAFAFA&apos;,&apos;default&apos;)" col="15" colid="CHNETWR" display="number" edit="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;none&apos;,&apos;normal&apos;)"/>
									<cell align="right" bkcolor="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;#EEEBE6&apos;,&apos;default&apos;)" bkcolor2="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;#FAFAFA&apos;,&apos;default&apos;)" col="16" colid="CHWAVWR" display="number" edit="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;none&apos;,&apos;normal&apos;)"/>
									<cell align="center" bkcolor="user12" bkcolor2="user22" col="17" display="text" expandchar="출력" expandshow='expr:iif(MATNR==&quot;T-1000&quot;&#32;||&#32;MATNR==&quot;Y-1000&quot;,false,true)' expandsize="40"/>
									<cell align="center" bkcolor="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;#EEEBE6&apos;,&apos;default&apos;)" bkcolor2="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;#FAFAFA&apos;,&apos;default&apos;)" col="18" colid="CHEDATU" display="date" edit="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;none&apos;,&apos;normal&apos;)" expr="replace(CHEDATU,&#32;&apos;-&apos;,&#32;&apos;&apos;)"/>
									<cell align="center" bkcolor="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;#EEEBE6&apos;,&apos;default&apos;)" bkcolor2="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;#FAFAFA&apos;,&apos;default&apos;)" col="19" colid="CHREPMO" display="text" edit="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;none&apos;,&apos;normal&apos;)" limit="2"/>
									<cell align="center" bkcolor="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;#EEEBE6&apos;,&apos;default&apos;)" bkcolor2="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;#FAFAFA&apos;,&apos;default&apos;)" col="20" colid="CHWORMO" display="text" edit="expr:decode(HOGI_CANC,&apos;X&apos;,&apos;none&apos;,&apos;normal&apos;)" limit="2"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="21" colid="INCRTF_TP" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="22" colid="WAERK" display="text"/>
								</body>
								<summary>
									<cell align="center" bkcolor="user25" col="0" colspan="8" display="text" text="합계"/>
									<cell align="right" bkcolor="user25" col="8" display="number" expr="sum(&apos;NETWR&apos;)"/>
									<cell align="right" bkcolor="user25" col="9" display="number" expr="sum(&apos;WAVWR&apos;)"/>
									<cell bkcolor="user25" col="10" colspan="5" display="text"/>
									<cell align="right" bkcolor="user25" col="15" display="number" expr="sum(&apos;CHNETWR&apos;)"/>
									<cell align="right" bkcolor="user25" col="16" display="number" expr="sum(&apos;CHWAVWR&apos;)"/>
									<cell bkcolor="user25" col="17" display="text"/>
									<cell bkcolor="user25" col="18" colspan="5" display="text"/>
								</summary>
							</format>
						</contents>
					</Grid>
					<Edit BKColor="user5" Border="Flat" Enable="FALSE" Height="20" Id="ed_hogi" Left="44" LeftMargin="4" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" RightMargin="4" Style="sty_ipt_form" TabOrder="4" Top="246" Width="90"></Edit>
					<Static Color="user6" Font="굴림,9,Bold" Height="20" Id="Static19" Left="19" TabOrder="3" Text="현행&#32;청구계획" Top="268" VAlign="Middle" Width="102"></Static>
					<Image Height="19" Id="Image0" ImageID="form_bl_title_sub" Left="6" TabOrder="2" Top="266" Width="11"></Image>
					<Image Height="19" Id="Image2" ImageID="form_bl_title_sub" Left="472" TabOrder="5" Top="266" Width="11"></Image>
					<Static Color="user6" Font="굴림,9,Bold" Height="20" Id="Static9" Left="485" TabOrder="6" Text="변경&#32;청구계획" Top="268" VAlign="Middle" Width="102"></Static>
					<Button ButtonStyle="TRUE" Color="black" Cursor="HAND" Height="22" Id="btn_addRow" ImageID="btn_sub_02" Left="862" OnClick="btn_addRow_OnClick" Style="sty_btn" TabOrder="7" Text="+" Top="262" Visible="FALSE" Width="52"></Button>
					<Button ButtonStyle="TRUE" Color="black" Cursor="HAND" Height="22" Id="btn_delRow" ImageID="btn_sub_02" Left="910" OnClick="btn_delRow_OnClick" Style="sty_btn" TabOrder="8" Text="-" Top="262" Visible="FALSE" Width="47"></Button>
					<Button ButtonStyle="TRUE" Color="black" Height="20" Id="btn_hogi" ImageID="btn_sub_09" Left="312" OnClick="Tab00_tab2_btn_hogi_OnClick" Style="sty_btn" TabOrder="9" Text="호기&#32;청구계획&#32;조회&#32;" Top="246" Width="136"></Button>
					<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="400" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="112" Id="Grid0" InputPanel="FALSE" Left="4" LineColor="user20" LineType="ExHORZ" OnHeadClick="Grid_OnHeadClick" Right="472" RowHeight="20" Style="sty_grid" TabOrder="10" TabStop="true" Top="288" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="468">
						<contents>
							<format id="Default">
								<columns>
									<col width="30"/>
									<col width="0"/>
									<col width="0"/>
									<col width="70"/>
									<col width="0"/>
									<col width="100"/>
									<col width="60"/>
									<col width="50"/>
									<col width="100"/>
									<col width="45"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="청구계획일"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="종별구분"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="종별구분"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="지급조건"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="청구상태"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="청구금액"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="통화"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox" edit="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid='expr:fn_getFlagBkImageID(GetColumn(currow,&#32;&quot;STATUS&quot;))' col="2"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="FKDAT" displaymaskchar="Y"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="MLBEZ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" colid="MSTXT" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="ZTERM" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="FKSAF" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="FAKWR" display="number"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="9" colid="WAERK" display="text"/>
								</body>
								<summary>
									<cell align="center" bkcolor="user25" col="0" colspan="8" display="text" text="합계"/>
									<cell align="right" bkcolor="user25" col="8" display="number" expr="SUM(&apos;FAKWR&apos;)"/>
									<cell bkcolor="user25" col="9" display="text"/>
								</summary>
							</format>
						</contents>
					</Grid>
					<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="400" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="112" Id="Grid1" InputPanel="FALSE" Left="477" LineColor="user20" LineType="ExHORZ" OnCellClick="Tab00_change_OnCellClick" OnCellPosChanged="Tab00_change_OnCellPosChanged" OnHeadClick="Grid_OnHeadClick" OnKillFocus="Tab00_change_OnKillFocus" Right="956" RowHeight="20" Style="sty_grid" TabOrder="11" TabStop="true" Top="288" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="479">
						<contents>
							<format id="Default">
								<columns>
									<col width="30"/>
									<col width="0"/>
									<col width="30"/>
									<col width="70"/>
									<col width="0"/>
									<col width="90"/>
									<col width="60"/>
									<col width="50"/>
									<col width="95"/>
									<col width="40"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="청구계획일"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="종별구분"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="종별구분"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="지급조건"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="청구상태"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="청구금액"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="통화"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox" edit="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid="expr:fn_getFlagBkImageID(GetColumn(currow,&apos;STATUS&apos;))" col="2"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="CHFKDAT" display="text" displaymaskchar="Y" edit="normal" Mask="@@@@-@@-@@"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="CHMLBEZ" combocol="CODE" combotext="CODE" display="text" edit="normal"/>
									<cell align="center" bkcolor="MENU" celltype="head" col="5" colid="CHMLBEZ" combocol="CODE" combodataset="ds_mlbez" combotext="CODE_NAME" display="combo" edit="combo"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="CHZTERM" combocol="CODE" combotext="CODE" display="text" edit="normal"/>
									<cell align="center" bkcolor="MENU" celltype="head" col="7" colid="CHFKSAF" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="CHFAKWR" display="number" edit="normal"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="9" colid="WAERK" display="text"/>
								</body>
								<summary>
									<cell align="center" bkcolor="user25" col="0" colspan="8" display="text" text="합계"/>
									<cell align="right" bkcolor="user25" col="8" display="number" expr="SUM(&apos;CHFAKWR&apos;)"/>
									<cell bkcolor="user25" col="9" display="text"/>
								</summary>
							</format>
						</contents>
					</Grid>
					<Button ButtonStyle="TRUE" Color="black" Enable="FALSE" Height="20" Id="btn_HogiApp" ImageID="btn_sub_06" Left="8" OnClick="btn_hogiCanc" Style="sty_btn" TabOrder="12" Text="전체&#32;[취소]" Top="6" Width="96"></Button>
					<Button ButtonStyle="TRUE" Color="black" Enable="FALSE" Height="20" Id="btn_HogiCanc" ImageID="btn_sub_07" Left="112" OnClick="btn_hogiCanc" Style="sty_btn" TabOrder="13" Text="전체&#32;[미취소]" Top="6" Width="109"></Button>
					<Edit BKColor="user5" Border="Flat" Enable="FALSE" Height="20" Id="ed_posnr" Left="212" LeftMargin="4" RightMargin="4" Style="sty_ipt_form" TabOrder="14" Top="246" Width="90"></Edit>
					<Button ButtonStyle="TRUE" Color="black" Cursor="HAND" Height="22" Id="btn_pnAddRow" ImageID="btn_sub_02" Left="860" OnClick="btn_pnAddRow_OnClick" Style="sty_btn" TabOrder="15" Text="+" Top="6" Visible="FALSE" Width="52"></Button>
					<Button ButtonStyle="TRUE" Color="black" Cursor="HAND" Height="22" Id="btn_pnDelRow" ImageID="btn_sub_02" Left="910" OnClick="btn_pnDelRow_OnClick" Style="sty_btn" TabOrder="16" Text="-" Top="6" Visible="FALSE" Width="47"></Button>
					<Static Align="Right" Height="20" Id="Static8" Left="674" Style="sty_lb_search" TabOrder="17" Text="부족금액&#32;" Top="262" VAlign="Middle" Width="58"></Static>
					<MaskEdit BKColor="user5" Border="Flat" BorderColor="user13" Color="user8" Height="20" Id="ed_HogilackPay" Left="735" OnFocus="ufn_OnFocus" OnKillFocus="ufn_OnKillFocus" Readonly="TRUE" TabOrder="18" Top="262" Width="118"></MaskEdit>
					<Static Height="19" Id="st_hogiBtnEnableWhy" Left="476" TabOrder="19" Top="245" VAlign="Middle" Width="356"></Static>
					<Button ButtonStyle="TRUE" Height="20" Id="btn_copy" ImageID="btn_sub_05" Left="227" OnClick="Tab00_tab2_Button0_OnClick" Style="sty_btn" TabOrder="20" Text="사양&#32;복사" Top="6" Width="86"></Button>
					<Static Height="19" Id="Static2" Left="12" TabOrder="21" Text="호기" Top="247" VAlign="Middle" Width="28"></Static>
					<Static Height="19" Id="Static0" Left="156" TabOrder="22" Text="판매품목" Top="247" VAlign="Middle" Width="60"></Static>
					<Button ButtonStyle="TRUE" Height="20" Id="btn_part" ImageID="btn_sub_05" Left="315" OnClick="Tab00_tab2_btn_part_OnClick" Style="sty_btn" TabOrder="23" Text="부분원가" Top="6" Width="86"></Button>
					<Button ButtonStyle="TRUE" Color="black" Cursor="HAND" Height="22" Id="Button1" ImageID="btn_sub_09" Left="724" OnClick="fn_hogiSpecPrint" Style="sty_btn" TabOrder="24" Text="&#32;호기별&#32;사양서&#32;출력" Top="6" Width="132"></Button>
					<Button ButtonStyle="TRUE" Color="black" Cursor="HAND" Height="22" Id="btn_costsumall" ImageID="btn_sub_07" Left="612" OnClick="btn_costsumall_onclick" Style="sty_btn" TabOrder="25" Text="&#32;전체&#32;원가합계" Top="6" Width="108"></Button>
					<Button ButtonStyle="TRUE" Height="20" Id="btn_mv_hogi" ImageID="btn_sub_05" Left="403" OnClick="btn_mv_hogi_OnClick" Style="sty_btn" TabOrder="26" Text="호기변경" Top="6" Width="86"></Button>
					<Button ButtonStyle="TRUE" Height="20" Id="btn_distribution" ImageID="btn_sub_05" Left="491" OnClick="btn_distribution_OnClick" Style="sty_btn" TabOrder="27" Text="정가배분" Top="6" Visible="FALSE" Width="86"></Button>
				</TabPage>
				<TabPage BorderColor="black" Height="404" Id="tab3" ImageEdgeWidth="2" ImageID="tab_main" Left="2" scroll="true" TabOrder="12" Text="&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;사양&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;" Top="23" Width="960">
					<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="385" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="336" Id="Grid" InputPanel="FALSE" Left="2" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellClick="Tab00_tab3_Grid_OnCellClick" OnHeadClick="Grid_OnHeadClick" OnKeyDown="Grid_OnKeyDown" OnMouseOver="Grid_OnMouseOver" Right="452" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="49" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="0"/>
									<col width="0"/>
									<col width="30"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="170"/>
									<col width="60"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="MANDT"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="PSPID"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="SEQ"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="POSNR"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="HOGI"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="NAM_CHAR"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="ATBEZ"/>
									<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="값"/>
									<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="ATWTB"/>
									<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="ERDAT"/>
									<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="ERNAM"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid="expr:fn_getFlagBkImageID(GetColumn(currow,&apos;STATUS&apos;))" col="2" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="MANDT" display="text" displaymaskchar="Y"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="PSPID" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" colid="SEQ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="POSNR" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="HOGI" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="NAM_CHAR" display="text"/>
									<cell align="left" bkcolor="user0" bkcolor2="user22" col="9" colid="ATBEZ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" checklength="Byte" col="10" colid="CHAR_VALUE" display="expr:decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(CNT,&apos;0&apos;,decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;),&apos;none&apos;)" limit="30"/>
									<cell align="left" bkcolor="expr:decode(CNT,&apos;0&apos;,&apos;white&apos;,&apos;#EEEBE6&apos;)" col="11" colid="ATWTB" display="expr:decode(CNT,&apos;0&apos;,&#32;decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)&#32;,&apos;none&apos;)" edit="expr:decode(CNT,&apos;0&apos;,&apos;normal&apos;,&apos;none&apos;)" limit="30"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="12" colid="ERDAT" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="13" colid="ERNAM" display="text"/>
								</body>
							</format>
						</contents>
					</Grid>
					<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="385" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="336" Id="Grid0" InputPanel="FALSE" Left="450" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellClick="Tab00_tab3_Grid_OnCellClick" OnHeadClick="Grid_OnHeadClick" OnKeyDown="Grid_OnKeyDown" OnMouseOver="Grid_OnMouseOver" Right="900" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="49" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="0"/>
									<col width="0"/>
									<col width="30"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="170"/>
									<col width="60"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="MANDT"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="PSPID"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="SEQ"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="POSNR"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="HOGI"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="NAM_CHAR"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="ATBEZ"/>
									<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="값"/>
									<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="ATWTB"/>
									<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="ERDAT"/>
									<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="ERNAM"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid="expr:fn_getFlagBkImageID(GetColumn(currow,&apos;STATUS&apos;))" col="2" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="MANDT" display="text" displaymaskchar="Y"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="PSPID" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" colid="SEQ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="POSNR" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="HOGI" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="NAM_CHAR" display="text"/>
									<cell align="left" bkcolor="user0" bkcolor2="user22" col="9" colid="ATBEZ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" checklength="Byte" col="10" colid="CHAR_VALUE" display="expr:decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(CNT,&apos;0&apos;,decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;),&apos;none&apos;)" limit="30"/>
									<cell align="left" bkcolor="expr:decode(CNT,&apos;0&apos;,&apos;white&apos;,&apos;#EEEBE6&apos;)" col="11" colid="ATWTB" display="expr:decode(CNT,&apos;0&apos;,&#32;decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)&#32;,&apos;none&apos;)" edit="expr:decode(CNT,&apos;0&apos;,&apos;normal&apos;,&apos;none&apos;)" limit="30"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="12" colid="ERDAT" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="13" colid="ERNAM" display="text"/>
								</body>
							</format>
						</contents>
					</Grid>
					<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="385" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="336" Id="Grid1" InputPanel="FALSE" Left="902" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellClick="Tab00_tab3_Grid_OnCellClick" OnHeadClick="Grid_OnHeadClick" OnKeyDown="Grid_OnKeyDown" OnMouseOver="Grid_OnMouseOver" Right="1352" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="49" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="0"/>
									<col width="0"/>
									<col width="30"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="170"/>
									<col width="60"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="MANDT"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="PSPID"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="SEQ"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="POSNR"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="HOGI"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="NAM_CHAR"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="ATBEZ"/>
									<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="값"/>
									<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="ATWTB"/>
									<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="ERDAT"/>
									<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="ERNAM"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid="expr:fn_getFlagBkImageID(GetColumn(currow,&apos;STATUS&apos;))" col="2" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="MANDT" display="text" displaymaskchar="Y"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="PSPID" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" colid="SEQ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="POSNR" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="HOGI" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="NAM_CHAR" display="text"/>
									<cell align="left" bkcolor="user0" bkcolor2="user22" col="9" colid="ATBEZ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" checklength="Byte" col="10" colid="CHAR_VALUE" display="expr:decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(CNT,&apos;0&apos;,decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;),&apos;none&apos;)" limit="30"/>
									<cell align="left" bkcolor="expr:decode(CNT,&apos;0&apos;,&apos;white&apos;,&apos;#EEEBE6&apos;)" col="11" colid="ATWTB" display="expr:decode(CNT,&apos;0&apos;,&#32;decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)&#32;,&apos;none&apos;)" edit="expr:decode(CNT,&apos;0&apos;,&apos;normal&apos;,&apos;none&apos;)" limit="30"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="12" colid="ERDAT" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="13" colid="ERNAM" display="text"/>
								</body>
							</format>
						</contents>
					</Grid>
					<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="385" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="336" Id="Grid2" InputPanel="FALSE" Left="1352" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellClick="Tab00_tab3_Grid_OnCellClick" OnHeadClick="Grid_OnHeadClick" OnKeyDown="Grid_OnKeyDown" OnMouseOver="Grid_OnMouseOver" Right="1802" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="49" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="0"/>
									<col width="0"/>
									<col width="30"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="170"/>
									<col width="60"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="MANDT"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="PSPID"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="SEQ"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="POSNR"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="HOGI"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="NAM_CHAR"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="ATBEZ"/>
									<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="값"/>
									<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="ATWTB"/>
									<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="ERDAT"/>
									<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="ERNAM"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid="expr:fn_getFlagBkImageID(GetColumn(currow,&apos;STATUS&apos;))" col="2" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="MANDT" display="text" displaymaskchar="Y"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="PSPID" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" colid="SEQ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="POSNR" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="HOGI" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="NAM_CHAR" display="text"/>
									<cell align="left" bkcolor="user0" bkcolor2="user22" col="9" colid="ATBEZ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" checklength="Byte" col="10" colid="CHAR_VALUE" display="expr:decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(CNT,&apos;0&apos;,decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;),&apos;none&apos;)" limit="30"/>
									<cell align="left" bkcolor="expr:decode(CNT,&apos;0&apos;,&apos;white&apos;,&apos;#EEEBE6&apos;)" col="11" colid="ATWTB" display="expr:decode(CNT,&apos;0&apos;,&#32;decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)&#32;,&apos;none&apos;)" edit="expr:decode(CNT,&apos;0&apos;,&apos;normal&apos;,&apos;none&apos;)" limit="30"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="12" colid="ERDAT" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="13" colid="ERNAM" display="text"/>
								</body>
							</format>
						</contents>
					</Grid>
					<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="385" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="336" Id="Grid3" InputPanel="FALSE" Left="1802" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellClick="Tab00_tab3_Grid_OnCellClick" OnHeadClick="Grid_OnHeadClick" OnKeyDown="Grid_OnKeyDown" OnMouseOver="Grid_OnMouseOver" Right="2252" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="49" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="0"/>
									<col width="0"/>
									<col width="30"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="170"/>
									<col width="60"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="MANDT"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="PSPID"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="SEQ"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="POSNR"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="HOGI"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="NAM_CHAR"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="ATBEZ"/>
									<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="값"/>
									<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="ATWTB"/>
									<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="ERDAT"/>
									<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="ERNAM"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid="expr:fn_getFlagBkImageID(GetColumn(currow,&apos;STATUS&apos;))" col="2" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="MANDT" display="text" displaymaskchar="Y"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="PSPID" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" colid="SEQ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="POSNR" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="HOGI" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="NAM_CHAR" display="text"/>
									<cell align="left" bkcolor="user0" bkcolor2="user22" col="9" colid="ATBEZ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" checklength="Byte" col="10" colid="CHAR_VALUE" display="expr:decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(CNT,&apos;0&apos;,decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;),&apos;none&apos;)" limit="30"/>
									<cell align="left" bkcolor="expr:decode(CNT,&apos;0&apos;,&apos;white&apos;,&apos;#EEEBE6&apos;)" col="11" colid="ATWTB" display="expr:decode(CNT,&apos;0&apos;,&#32;decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)&#32;,&apos;none&apos;)" edit="expr:decode(CNT,&apos;0&apos;,&apos;normal&apos;,&apos;none&apos;)" limit="30"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="12" colid="ERDAT" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="13" colid="ERNAM" display="text"/>
								</body>
							</format>
						</contents>
					</Grid>
					<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="385" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="336" Id="Grid4" InputPanel="FALSE" Left="2252" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellClick="Tab00_tab3_Grid_OnCellClick" OnHeadClick="Grid_OnHeadClick" OnKeyDown="Grid_OnKeyDown" OnMouseOver="Grid_OnMouseOver" Right="2702" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="49" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="0"/>
									<col width="0"/>
									<col width="30"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="170"/>
									<col width="60"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="MANDT"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="PSPID"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="SEQ"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="POSNR"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="HOGI"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="NAM_CHAR"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="ATBEZ"/>
									<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="값"/>
									<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="ATWTB"/>
									<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="ERDAT"/>
									<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="ERNAM"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid="expr:fn_getFlagBkImageID(GetColumn(currow,&apos;STATUS&apos;))" col="2" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="MANDT" display="text" displaymaskchar="Y"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="PSPID" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" colid="SEQ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="POSNR" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="HOGI" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="NAM_CHAR" display="text"/>
									<cell align="left" bkcolor="user0" bkcolor2="user22" col="9" colid="ATBEZ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" checklength="Byte" col="10" colid="CHAR_VALUE" display="expr:decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(CNT,&apos;0&apos;,decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;),&apos;none&apos;)" limit="30"/>
									<cell align="left" bkcolor="expr:decode(CNT,&apos;0&apos;,&apos;white&apos;,&apos;#EEEBE6&apos;)" col="11" colid="ATWTB" display="expr:decode(CNT,&apos;0&apos;,&#32;decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)&#32;,&apos;none&apos;)" edit="expr:decode(CNT,&apos;0&apos;,&apos;normal&apos;,&apos;none&apos;)" limit="30"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="12" colid="ERDAT" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="13" colid="ERNAM" display="text"/>
								</body>
							</format>
						</contents>
					</Grid>
					<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BkColor2="default" BoldHead="true" Border="Flat" Bottom="385" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="336" Id="Grid5" InputPanel="FALSE" Left="2702" LineColor="user20" LineType="ExHORZ" MinWidth="100" OnCellClick="Tab00_tab3_Grid_OnCellClick" OnHeadClick="Grid_OnHeadClick" OnKeyDown="Grid_OnKeyDown" OnMouseOver="Grid_OnMouseOver" Right="3152" RowHeight="20" Style="sty_grid" TabOrder="1" TabStop="true" Top="49" TopSummary="TRUE" UseDBuff="true" UsePopupMenu="true" UserData="fix" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="450">
						<contents>
							<format id="Default">
								<columns>
									<col width="0"/>
									<col width="0"/>
									<col width="30"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
									<col width="170"/>
									<col width="60"/>
									<col width="0"/>
									<col width="0"/>
									<col width="0"/>
								</columns>
								<head>
									<cell align="center" bkimageid="icon_grid_sel" col="0" color="user21" display="text" font="굴림,9"/>
									<cell align="center" col="1" color="user21" display="text" font="굴림,9" text="선택"/>
									<cell align="center" col="2" color="user21" display="text" font="굴림,9" text="상태"/>
									<cell align="center" col="3" color="user21" display="text" font="굴림,9" text="MANDT"/>
									<cell align="center" col="4" color="user21" display="text" font="굴림,9" text="PSPID"/>
									<cell align="center" col="5" color="user21" display="text" font="굴림,9" text="SEQ"/>
									<cell align="center" col="6" color="user21" display="text" font="굴림,9" text="POSNR"/>
									<cell align="center" col="7" color="user21" display="text" font="굴림,9" text="HOGI"/>
									<cell align="center" col="8" color="user21" display="text" font="굴림,9" text="NAM_CHAR"/>
									<cell align="center" col="9" color="user21" display="text" font="굴림,9" text="ATBEZ"/>
									<cell align="center" col="10" color="user21" display="text" font="굴림,9" text="값"/>
									<cell align="center" col="11" color="user21" display="text" font="굴림,9" text="ATWTB"/>
									<cell align="center" col="12" color="user21" display="text" font="굴림,9" text="ERDAT"/>
									<cell align="center" col="13" color="user21" display="text" font="굴림,9" text="ERNAM"/>
								</head>
								<body>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="0" display="text" expr="CURROW+1"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="1" colid="CHK" display="checkbox"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" bkimageid="expr:fn_getFlagBkImageID(GetColumn(currow,&apos;STATUS&apos;))" col="2" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="3" colid="MANDT" display="text" displaymaskchar="Y"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="4" colid="PSPID" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="5" colid="SEQ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="6" colid="POSNR" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="7" colid="HOGI" display="text"/>
									<cell align="right" bkcolor="user0" bkcolor2="user22" col="8" colid="NAM_CHAR" display="text"/>
									<cell align="left" bkcolor="user0" bkcolor2="user22" col="9" colid="ATBEZ" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" checklength="Byte" col="10" colid="CHAR_VALUE" display="expr:decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)" edit="expr:decode(CNT,&apos;0&apos;,decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;normal&apos;),&apos;none&apos;)" limit="30"/>
									<cell align="left" bkcolor="expr:decode(CNT,&apos;0&apos;,&apos;white&apos;,&apos;#EEEBE6&apos;)" col="11" colid="ATWTB" display="expr:decode(CNT,&apos;0&apos;,&#32;decode(CNGBN,&apos;NUM&apos;,&apos;number&apos;,&apos;text&apos;)&#32;,&apos;none&apos;)" edit="expr:decode(CNT,&apos;0&apos;,&apos;normal&apos;,&apos;none&apos;)" limit="30"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="12" colid="ERDAT" display="text"/>
									<cell align="center" bkcolor="user0" bkcolor2="user22" col="13" colid="ERNAM" display="text"/>
								</body>
							</format>
						</contents>
					</Grid>
					<Button ButtonStyle="TRUE" Color="black" Height="20" Id="btn_cost" ImageID="btn_sub_04" Left="2" OnClick="Tab00_tab3_btn_cost_OnClick" Style="sty_btn" TabOrder="6" Text="원가합계" Top="1" Width="72"></Button>
					<MaskEdit BKColor="user5" Border="Flat" BorderColor="user13" Enable="FALSE" Height="20" Id="ed_cost" Left="79" TabOrder="7" Top="2" Value="MaskEdit0" Width="86"></MaskEdit>
					<Static Height="11" Id="st_posnrVal" Left="171" TabOrder="8" Top="6" Width="150"></Static>
					<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_template" ImageID="btn_sub_07" Left="250" LeftMargin="12" OnClick="btn_template_OnClick" Style="sty_btn" TabOrder="9" Text="템플릿&#32;불러오기" Top="25" Transparent="TRUE" Width="112"></Button>
					<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_depend2" ImageID="btn_sub_07" Left="360" LeftMargin="12" OnClick="fn_dependDuty2" Style="sty_btn" TabOrder="11" Text="AUTO&#32;LAYOUT" Top="25" Transparent="TRUE" Width="107"></Button>
					<Static Color="user36" Height="11" Id="Static1" Left="3" TabOrder="12" Text="사양찾기" Top="29" Width="73"></Static>
					<Edit Border="Flat" CheckLength="Byte" Height="20" Id="ed_temp" ImeMode="native" Left="55" LeftMargin="4" MaxLength="10" OnKeyDown="tab_template_div_template_ed_temp_OnKeyDown" RightMargin="4" Style="sty_ipt_form" TabOrder="13" Top="24" Width="190"></Edit>
					<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_stdLayout" ImageID="btn_sub_06" Left="468" LeftMargin="12" OnClick="fn_dependDuty2" Style="sty_btn" TabOrder="15" Text="표준LAYOUT" Top="25" Transparent="TRUE" Width="98"></Button>
					<Button ButtonStyle="TRUE" Height="20" Id="btn_dwg" ImageID="btn_sub_06" Left="565" OnClick="Tab00_tab2_btn_dwg_OnClick" Style="sty_btn" TabOrder="14" Text="표준도면생성" Top="25" Visible="FALSE" Width="95"></Button>
					<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_moveDwg" ImageID="btn_sub_06" Left="662" LeftMargin="12" OnClick="btn_moveDwg_OnClick" Style="sty_btn" TabOrder="16" Text="표준도면조회" Top="25" Transparent="TRUE" Width="113"></Button>
					<Button ButtonStyle="TRUE" Height="20" Id="btn_proj" ImageID="btn_sub_06" Left="759" OnClick="Tab00_tab2_btn_proj_OnClick" Style="sty_btn" TabOrder="17" Text="수주도면생성" Top="25" Visible="FALSE" Width="95"></Button>
					<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_floor" ImageID="btn_sub_08" Left="856" LeftMargin="12" OnClick="btn_floor_OnClick" Style="sty_btn" TabOrder="19" Text="층별사양확인" Top="25" Transparent="TRUE" Width="94"></Button>
					<Static Height="11" Id="Static0" Left="337" TabOrder="20" Text="사양&#32;리스트입니다.&#32;현재원가는&#32;" Top="7" Width="169"></Static>
					<MaskEdit BKColor="user5" Border="Flat" BorderColor="user13" Enable="FALSE" Height="20" Id="ed_hogiWAVWR" Left="513" TabOrder="21" Top="3" Value="MaskEdit0" Width="86"></MaskEdit>
					<Combo CodeColumn="CODE" Color="MENUTEXT" DataColumn="CODE_NAME" Height="20" Id="cb_block" InnerDataset="ds_duty_block" Left="600" TabOrder="22" Top="2" Width="104"></Combo>
					<Button ButtonStyle="TRUE" Cursor="HAND" Height="21" Id="btn_duty" ImageID="btn_sub_04" Left="704" LeftMargin="12" OnClick="btn_duty_OnClick" Style="sty_btn" TabOrder="23" Text="Duty&#32;Call" Top="2" Transparent="TRUE" Width="72"></Button>
					<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_depend" ImageID="btn_sub_03" Left="777" LeftMargin="12" OnClick="fn_dependDuty" Style="sty_btn" TabOrder="24" Text="종속성" Top="2" Transparent="TRUE" Width="62"></Button>
					<Button ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btn_rad_auto" ImageID="btn_sub_08" Left="837" LeftMargin="12" OnClick="tab_template_div_template_btn_rad_auto_OnClick" Style="sty_btn" TabOrder="25" Text="리모델링실측적용" Top="2" Transparent="TRUE" Width="112"></Button>
				</TabPage>
			</Contents>
		</Tab>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : NEW계약변경요청(sso0055N)
 * 작  성  자   : hsi
 * 작성  일자   : 2016.02.23
 * ----------------------------------------------------------------------------------------
 * HISTORY    :   2016.02.23 개선 hsi
 ******************************************************************************************
*/ 

#include "LIB::tit_comm_0001.js";	// Server 연결 
#include "LIB::common.js";			// 공통 Script 
#include "LIB::nsfRequest.js";	    // 공통 스크립트 
#include "LIB::common_sd.js";
#include "LIB::common_hdel.js";	   // 공통 스크립트  /* GNY 추가 */
#include "LIB::plm_webservice.js"; // 2020 박수근
#include "LIB::sayang_copy.js";    // 2020 박수근

//=========================================================================================
// 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var F_ZSDT0094_ABCDE = Array(); // 사양탭 그리드의 데이터셋을 저장할 배열
var F_PRG_CODE = "sso0055";		// 사용자 사용여부 체크용도 2013.01.22
var F_AUART      = "";
var F_ADMIT_DATE = "";
var F_NROW = "";
var F_URL = "https://portal.hdel.co.kr/SmartTalk/Line/Pages/ApprovalProcess.aspx?ApvFormID=325&ApvFormVer=1"; // 기안 URL Login_ApprovalUI
// var F_URL = "http://approval.hdel.co.kr/XMLHttpRequestPages/HEL/LoadApprovalFormPage.aspx?typ=EL30&company=hel&cdate=DISP"; //021.05.21 그룹웨어 리뉴얼
var rtn_status = '';
var F_CHG_CURR = "N";			// 통화단위 변경여부(N - No, Y - Yes) 
var F_OPT1 = "";

var adtza90;
var changeSpec;
var ls_vbpa;
var zsdt0214;
var maxSeq;

// 2020 브랜드
var F_QTNUM = "";     // 견적번호
var F_BRND_FLAG = "N";
var F_EL_ATYP   = ""; // 기종
var F_BRNDCD    = ""; // 브랜드코드
var F_BRNDNM    = ""; // 브랜드명
var F_BRNDSEQ   = ""; // 브랜드시퀀스
var F_SNDSYS    = "PLM";
var F_ISCHB     = false; // 브랜드 변경여부 플래그

// JQPR 생성인 경우
var F_isNewJqpr = false;

var el_dpexq_prd = "";
var el_dpexq1 = "";
var el_dpexq2 = "";
var el_dpexq3 = "";
var el_plm_after = false;

// 리모델링 추가
var FLOORYSNO  = "N";  // 리모델링층별사양 실행여부 
var LAYOUTYSNO = "N";  // 리모델링LAYOUT 실행여부
var APPLYYSNO  = "N";  // 실측값 견적사양 적용여부
var SAVEYSNO   = "N";  // 실측값 적용 후 저장여부 체크
var RAD_QTNUM = "";
var RAD_QTSER = "";
var RAD_QTSEQ = "";
var RAD_QSUVSN = "";
var RAD_OSUVSN = "";

// 현재 프로젝트 번호, 차수
var CUR_PSPID = "";
var CUR_SEQ = "";

// 현재진행 호기 전역변수
var CUR_ROW;

//=========================================================================================
// Form Loading 
//=========================================================================================
function fn_OnLoadCompleted(obj) 
{
	/*
	if (right(G_USER_GROUP_B, 2 ) != "50")	{
		btn_approval.Enable = false;
	}else	{
		btn_approval.Enable = true;
	}
	*/
	
	if (right(G_USER_GROUP_B, 2 ) == "10")	{
		btn_approval.Enable = false;
		btn_input.Enable = false;
		btn_delete.Enable = false;
		btn_comm_save_k.Enable = false;
		btn_draft.Enable = false;
		btn_finl_S.Enable = false;
		btn_finl_R.Enable = false;
		btn_rewrite.Enable = false;
		btn_save.Enable = false;
	}
	
	fn_FormResize(true);	
	ed_pspId.SetFocus();
	
	gfn_SetListCode(F_PRG_CODE, GC_CDGB_CHRES	, ds_chres	, tab00.tab1.cb_chres	, 0, "N", "Y"); // 변경사유
	gfn_SetListCode(F_PRG_CODE, GC_CDGB_REDEP	, ds_redep	, tab00.tab1.cb_redep	, 0, "N", "Y"); // 귀책부서 
	
	// 그리드 동적용 - 종별구분 ( componentId, comboGubun, DatasetId, 그리드id(콤보설정x) )
	fn_SetListCodeGrid( 5, "mlbez", "ds_mlbez", "Tab00.tab1.Grid0");
	fn_SetListCodeGrid( 4, "mlbez", "ds_mlbez", "Tab00.tab2.Grid1");
	
	// 그리드 동적용 - 지급조건 ( componentId, comboGubun, DatasetId, 그리드id(콤보설정x) )
	fn_SetListCodeGrid( 6, "zterm", "ds_zterm", "Tab00.tab1.Grid0");
	fn_SetListCodeGrid( 6, "zterm", "ds_zterm", "Tab00.tab2.Grid1");

	// 2020 브랜드
	// 브랜드 콤보 코드값 조회
	fn_query_abrand();
	
	// 자재번호 ( 탭안의 그리드이므로 화면에서 처리)
	Tab00.tab2.Grid.SetCellProp('Body', 7, "Display", 		"combo");
	Tab00.tab2.Grid.SetCellProp('Body', 7, "Edit", 			"expr:decode(HOGI,'',decode(STATUS,'insert','combo','update','combo','none' ),'none')");
	Tab00.tab2.Grid.SetCellProp('Body', 7, "ComboCol", 		"CODE");
	Tab00.tab2.Grid.SetCellProp('Body', 7, "ComboText", 	"CODE_NAME");
	fn_SetListCodeGrid( 7, "matnrClass", "ds_matnrClass", "Tab00.tab2.Grid");

	fn_SetListCodeGrid( 10, "abgru", "ds_abgru", "Tab00.tab2.Grid");

	fn_init_form() ;

	Tab00.tab3.btn_dwg.Visible = "true";
	Tab00.tab3.btn_proj.Visible = "true";
	
	// 2020  브랜드 소그룹 타이틀 정보 조회
	fn_findZsdt1143List();
}


/********************************************************************************
* form UnloadCompleted 
********************************************************************************/
function fn_OnUnloadCompleted(obj) 
{
	// Tab에서 해당 화면 삭제
	return gfn_isFormUnload(obj);
}


function fn_init_form() 
{
	var atinn = "";

	switch (G_MANDT) {
		case "183" : atinn = "0000000006"; break;
		default    : atinn = "0000000005"; break;
	}

	ds_acapa.ClearData();
	ds_acapa.AddRow();
	ds_acapa.SetColumn(0, "MANDT", G_MANDT);
	ds_acapa.SetColumn(0, "ATINN", atinn  );
	ds_acapa.SetColumn(0, "SPRAS", "3"    );
	nsfRequest("queryAcapa"
				, "ses0031n/searchAcapa"
				, "ds_acapa=ds_acapa"
				, "ds_acapa=ds_acapa"
				, "changeSpec="+changeSpec //+" permitted="+permitted
				, "fn_afterInitForm");
}

/********************************************************************************
* 조회 
********************************************************************************/
var fn_query_chk = false;

function fn_query() 
{
	var seq 	= ed_seq.Text;		// 차수	
	var pspId 	= ed_pspId.Text; 	// 프로젝트

	// 필수 체크 - [프로젝트]
	if ( length(pspId) <> 6 )
	{
		//"[${}] 을/를 확인하십시요."
		gfn_showAlert("CW00022", "프로젝트");
		ed_pspId.SetFocus();
		return;
	}
	
	if(!fn_query_chk) {
		fn_query_chk = true;
	} else {
		gfn_showAlert("CW10025", "조회중입니다..");
		return;
	}
	
	fn_formInit();

	var output = "ds_output_ZSDS0063=ds_output_ZSDS0063";
		output += " ds_output_ZSDT0090=ds_output_ZSDT0090";
		output += " ds_output_ZSDT0091=ds_output_ZSDT0091";
		output += " ds_output_ZSDT0092=ds_output_ZSDT0092";
		output += " ds_output_ZSDT0093=ds_output_ZSDT0093";
		output += " ds_output_ZSDT0094_original=ds_output_ZSDT0094_original";
		output += " ds_output_ZSDT0094_change=ds_output_ZSDT0094_change";
		output += " ds_vbeln=ds_vbeln";
		output += " ds_vbeln2=ds_vbeln2";
		output += " ds_recad_da=ds_recad_da";
		output += " ds_129=ds_129";
		output += " adtza90=adtza90";
		output += " ds_jqpr=ds_jqpr";
		output += " ds_date_commi=ds_date_commi";
		output += " ls_vbpa=ls_vbpa";
		output += " zsdt0214=zsdt0214";
		output += " maxSeq=maxSeq";

		// 2020 브랜드
		output += " F_QTNUM=F_QTNUM";
		output += " F_BRND_FLAG=F_BRND_FLAG";
		
		// 프로젝트 번호 중복 확인 2021.06.01.
		output += " ds_samevbeln=ds_samevbeln";
	
	// 조회시 탭위치가 [사양]일 경우
	// [호기]로 변경 시킨다.
	// [사양]탭은 [호기]탭의 데이터를 클릭시에만 데이터가 생성되므로 ====> 2012.11.30 기본탭은 헤더 탭으로...
	if ( Tab00.TabIndex == 2 ) {Tab00.TabIndex = 0;}
			
	callServiceN("query"											// srvId
				, "sso0055n/find"									// url5
				, "ds_129=ds_129 ds_date_commi = ds_date_commi"		// biz에서 받는 명, mip에서 보내는 명
				, output											// mip에서 받는 명, biz에서 보내는 명
				, "pspId="+quote(pspId)
				+" cmd=DISP seq="+quote(seq) 						// strParam
				, "fn_bfCallResult"									// CallBackFunc, CallResult 수행 전 fn_query_chk true값을 변경하기 위함
				);

}

function fn_bfCallResult(strSvcID, nErrorCode, strErrorMag) {
	fn_query_chk = false;
	//trace("ds_output_ZSDT0094_change:"+ds_output_ZSDT0094_change.SaveXML());
	callResult(strSvcID, nErrorCode, strErrorMag);

	CUR_PSPID = ed_pspId.Text; 	// 조회 시 프로젝트 번호 저장 2021.06.29.			
	CUR_SEQ = ed_seq.Text;		// 조회 시 차수 저장 2021.06.29.

	// 2020 브랜드
	if(F_BRND_FLAG == "Y") {
	    Tab00.tab2.Grid.SetCellProp("Body", 5, "edit", "expr:iif(MATNR == 'L-1000' and HOGI_CANC != 'C', 'combo', 'none')");
	}
}

/******************************************************
* 입력
*******************************************************/
function fn_input()
{
	var pspId = trim(ed_pspId.Text); 	// 프로젝트
	
	// 폼 초기화
	fn_formInit();	
	
	// 필수 체크 - [프로젝트]
	if ( length(pspId) == 0 )
	{
		//"[${}] 을/를 확인하십시요."
		gfn_showAlert("CW00022", "프로젝트");
		ed_pspId.SetFocus();
		return;
	}

	// 2013.01.22 타 사용자에 의하여 사용여부 확인 ★★★★★★
	// 해당 Key의 조합은 프로젝트 번호만 사용
	//if ( !gfn_setLock(F_PRG_CODE, pspId, G_USER_ID) )	{
	//	return;
	//}
	var output  = "ds_output_ZSDS0063=ds_output_ZSDS0063";
		output += " ds_output_ZSDT0090=ds_output_ZSDT0090";
		output += " ds_output_ZSDT0091=ds_output_ZSDT0091";
		output += " ds_output_ZSDT0092=ds_output_ZSDT0092";
		output += " ds_output_ZSDT0093=ds_output_ZSDT0093";
		output += " ds_output_ZSDT0094_original=ds_output_ZSDT0094_original";
		output += " ds_output_ZSDT0094_change=ds_output_ZSDT0094_change";
		output += " ds_vbeln=ds_vbeln";
		output += " ds_vbeln2=ds_vbeln2";
		output += " ds_recad_da=ds_recad_da";
		output += " ds_129=ds_129";
		output += " ds_date_commi=ds_date_commi";		
	
	// 조회시 탭위치가 [사양]일 경우
	// [호기]로 변경 시킨다.
	// [사양]탭은 [호기]탭의 데이터를 클릭시에만 데이터가 생성되므로 ====> 2012.11.30 기본탭은 헤더 탭으로...
	if ( Tab00.TabIndex == 2 ) {Tab00.TabIndex = 0;}

	// 서비스 호출 후 해당 Fn에서 call Back fn 호출됨
	// ds_error 등의 dataset은 사용하지 않음 (호출된 fn에서 처리)
	callServiceN("input"												// srvId
				, "sso0055n/find"										// url
				, "ds_129=ds_129 ds_date_commi = ds_date_commi"			// biz에서 받는 명, mip에서 보내는 명
				, output												// mip에서 받는 명, biz에서 보내는 명
				, "pspId="+quote(pspId)+" cmd=CRET seq=''"				// strParam
				, "fn_inputbfCallResult"													// CallBackFunc
				);
}


function fn_inputbfCallResult(strSvcID, nErrorCode, strErrorMag) {
	callResult(strSvcID, nErrorCode, strErrorMag);

	CUR_PSPID = ed_pspId.Text; 	// 입력 시 프로젝트 번호 저장 2021.06.29.			
	CUR_SEQ = ed_seq.Text; 	    // 입력 시 차수 저장 2021.06.29.		

}


/******************************************************
* 조회/입력시 초기화
*******************************************************/
function fn_formInit()
{
	// sort mark 삭제 
	gfn_clearGridSortMark(Tab00.tab1.Grid); 	// 헤더 - 현행	
	gfn_clearGridSortMark(Tab00.tab1.Grid0); 	// 헤더 - 변경
	gfn_clearGridSortMark(Tab00.tab2.Grid); 	// 호기 - 리스트
	gfn_clearGridSortMark(Tab00.tab2.Grid0);	// 호기 - 현행	
	gfn_clearGridSortMark(Tab00.tab2.Grid1); 	// 호기 - 변경
	gfn_clearGridSortMark(Tab00.tab3.Grid); 	// 사양 - A
	gfn_clearGridSortMark(Tab00.tab3.Grid0); 	// 사양 - B
	gfn_clearGridSortMark(Tab00.tab3.Grid1); 	// 사양 - C
	gfn_clearGridSortMark(Tab00.tab3.Grid2); 	// 사양 - D
	gfn_clearGridSortMark(Tab00.tab3.Grid3); 	// 사양 - E
	gfn_clearGridSortMark(Tab00.tab3.Grid4); 	// 사양 - F
	// 2020 브랜드
	gfn_clearGridSortMark(Tab00.tab3.Grid5); 	// 사양 - G

	st_finl.Text = "";

	// 화면상에 계산하여 표시되는 항목 Clear
	ed_wavwrRate.Text   = "";
	ed_commiRate.Text   = "";
	ed_chWavwrRate.Text = "";
	ed_chCommiRate.Text = "";
		
	// 출력데이타셋 초기화
	ds_output_ZSDS0063.ClearData();  			// 헤더 정보
	ds_output_ZSDT0090.ClearData();  			// 헤더 금액정보
	ds_output_ZSDT0091.ClearData();  			// 호기 리스트
	ds_output_ZSDT0092.ClearData();  			// 헤더&호기 현행청구계획
	ds_output_ZSDT0093.ClearData();  			// 헤더&호기 변경청구계획
	ds_output_ZSDT0094_original.ClearData();  	// 사양 원본리스트
	ds_output_ZSDT0094_change.ClearData();  	// 사양 변경될리스트
	
	// 동적으로 생성된 데이타셋이 존재하므로 
	// bindDataset 정보도 초기화
	Tab00.tab1.Grid.BindDataset  	= "";		// 헤더 - 현행	
	Tab00.tab1.Grid0.BindDataset 	= "";		// 헤더 - 변경
	Tab00.tab2.Grid.BindDataset 	= "";		// 호기 - 리스트
	Tab00.tab2.Grid0.BindDataset 	= "";		// 호기 - 현행	
	Tab00.tab2.Grid1.BindDataset 	= "";		// 호기 - 변경
	Tab00.tab3.Grid.BindDataset 	= "";		// 사양 - A
	Tab00.tab3.Grid0.BindDataset 	= "";		// 사양 - B
	Tab00.tab3.Grid1.BindDataset 	= "";		// 사양 - C
	Tab00.tab3.Grid2.BindDataset 	= "";		// 사양 - D
	Tab00.tab3.Grid3.BindDataset 	= "";		// 사양 - E
	Tab00.tab3.Grid4.BindDataset 	= "";		// 사양 - F
	Tab00.tab3.Grid5.BindDataset 	= ""; 		// 사양 - G 2020 브랜드
	
	Tab00.tab1.Grid.SetCellProp('Head', 8, 'BkColor', ""); 	// 
	Tab00.tab1.Grid.SetCellProp('Head', 8, 'BkColor', ""); 	// 
	
	Tab00.tab2.ed_hogi.Text 		= "";		// 호기 - 호기정보
	Tab00.tab2.ed_posnr.Text 		= "";		// 호기 - 판매문서품목
	
	Tab00.tab1.ed_lackPay.Text		= 0;		// 헤더 - 부족금액
	Tab00.tab2.ed_HogilackPay.Text	= 0;		// 호기 - 부족금액
	Tab00.tab3.cb_block.Index = 0;
	
	// 2020 브랜드 그리드 색깔, 폰트 사양 지정
	fn_gridStyle(Tab00.tab3.Grid);
	fn_gridStyle(Tab00.tab3.Grid0);
	fn_gridStyle(Tab00.tab3.Grid1);
	fn_gridStyle(Tab00.tab3.Grid2);
	fn_gridStyle(Tab00.tab3.Grid3);
	fn_gridStyle(Tab00.tab3.Grid4);
	fn_gridStyle(Tab00.tab3.Grid5);

	ds_output_ZSDT0094_change_OnLoadCompleted();
}

/******************************************************
* 삭제
*******************************************************/
function fn_delete()
{
	if(ed_pspId.Text != CUR_PSPID || ed_seq.Text != CUR_SEQ) // 삭제 전 프로젝트 번호, 차수 변경 여부 확인 2021.06.29.
	{
		ed_pspId.Text = CUR_PSPID;
		ed_seq.Text = CUR_SEQ;
	}
	
	if ( ds_output_ZSDT0090.GetRowCount() < 1 )
	{
		// [${}] 자료가 존재하지 않습니다.
		gfn_showAlert("CW00113", "삭제");
		return;
	}	
	
	// 필수 체크 - [반영여부]
	if ( ds_output_ZSDT0090.GetColumn(0, "FINL") == 'X' )
	{
		// 승인처리된 data입니다. \n\n[${}]할 수 없습니다.
		gfn_showAlert("CW10019", "삭제");
		return;
	}
	if ( ds_output_ZSDT0090.GetColumn(0, "FINL") == 'D' ) {
		gfn_showAlert("CW10025", "계약변경통보서 결재 진행 중입니다. 삭제할 수 없습니다.");
		return;
	}
	
	// [삭제]을 하시겠습니까?
	if ( !gfn_showConfirm("CI00024", "[삭제]") )
	{
		return;
	}
	
	// 통합저장함수 [삭제]로 호출
	fn_allCommit('DLET');
}

/******************************************************
* 저장
*******************************************************/
function fn_save()
{	
	if(ed_pspId.Text != CUR_PSPID || ed_seq.Text != CUR_SEQ) // 저장 전 프로젝트 번호, 차수 변경 여부 확인 2021.06.29.
	{
		ed_pspId.Text = CUR_PSPID;
		ed_seq.Text = CUR_SEQ;
	}

	var lv_nRow = 0;
	var lv_matnr = "";

    if ( ds_output_ZSDT0090.GetRowCount() < 1 )
	{
		// [${}] 자료가 존재하지 않습니다.
		gfn_showAlert("CW00113", "저장");
		return;
	}	
	
	// 필수 체크 - [반영여부]
	if ( ds_output_ZSDT0090.GetColumn(0, "FINL") == 'X' )
	{
		// 승인처리된 data입니다. \n\n[${}]할 수 없습니다.
		gfn_showAlert("CW10019", "저장");
		return;
	} else if ( ds_output_ZSDT0090.GetColumn(0, "FINL") == 'D' ) {
		gfn_showAlert("CW10025", "계약변경통보서 결재 진행 중입니다. 변경할 수 없습니다.");
		return;
	}
	
	// 필수 체크 - [변경사유]
	if ( ds_output_ZSDT0090.GetColumn(0, "CHRES")   == '' && ds_output_ZSDT0090.GetColumn(0, "CHRES_A") == '' &&
	     ds_output_ZSDT0090.GetColumn(0, "CHRES_B") == '' && ds_output_ZSDT0090.GetColumn(0, "CHRES_C") == '' &&
	     ds_output_ZSDT0090.GetColumn(0, "CHRES_D") == '' && ds_output_ZSDT0090.GetColumn(0, "CHRES_E") == '' )
	{
		gfn_showAlert("CW10025", "변경사유는 최소 하나이상 필수입니다. 문의:효율개선부 김용호 DL");
		return;
	}
	
	// 필수 체크 - [변경사유]
	if ( ds_output_ZSDT0090.GetColumn(0, "REDEP")   == '' && ds_output_ZSDT0090.GetColumn(0, "REDEP_A") == '' &&
	     ds_output_ZSDT0090.GetColumn(0, "REDEP_B") == '' && ds_output_ZSDT0090.GetColumn(0, "REDEP_C") == '' &&
	     ds_output_ZSDT0090.GetColumn(0, "REDEP_D") == '' && ds_output_ZSDT0090.GetColumn(0, "REDEP_E") == '' )
	{
		gfn_showAlert("CW10025", "원인부서는 최소 하나이상 필수입니다. 문의:효율개선부 김용호 DL");
		return;
	}
	
	// 대금청구 계획 체크 - 2016.06.18 추가 by mj.Shin 
	if ( !fn_check_billingplan() ) {
		return;
	}
		
	for ( var i = 0 ; i < ds_change_ZSDT0091.getRowCount() ; i++ )
	{
	
//-----< 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	Start 		
//		ds_change_ZSDT0091_OnColumnChanged 이후 자재번호 공란인 경우 저장시 한번 더 체크  
		lv_nRow = i + 1;
		lv_matnr = ds_change_ZSDT0091.getColumn(i, "MATNR");
		if ( lv_matnr == null || lv_matnr == "" )
		  {  gfn_showAlert("CW10025", "[ " + lv_nRow +" ]행 자재번호를 입력 하세요.");		  
		     return;
		  }
//-----> 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	End 		  
		  		
		if ( ( ds_change_ZSDT0091.getColumn(i, "CHNETWR") == null || ds_change_ZSDT0091.getColumn(i, "CHNETWR") == "0" ) && 
			 ds_change_ZSDT0091.getColumn(i, "HOGI_CANC") != "C" && Mid(ds_change_ZSDT0091.getColumn(nRow, "HOGI"), 6, 2) != "Y6"
			 ) {
			 gfn_showAlert("CW10025", "수주금액 미 입력시 호기취소 체크바랍니다.");		  
			 return;
		  }
	  
		if ( ds_output_ZSDT0090.GetColumn(0, "CHWAERK") = "KRW" &&  ds_change_ZSDT0091.getColumn(i, "CHNETWR") < "1000"
			&& ds_change_ZSDT0091.getColumn(i, "HOGI_CANC") != "C" && Mid(ds_change_ZSDT0091.getColumn(nRow, "HOGI"), 6, 2) != "Y6"
			) {
			gfn_showAlert("CW10025", "수주금액은 최소 1000원 이상 입력하시기 바랍니다");		  
			 return;
		  }
	  	  
//-----< 2018.05.11 호기 취소 시 취소사유 필수 입력(김민경SW 요청) by mj.Shin 	Start 		
		if ( ds_change_ZSDT0091.getColumn(i, "HOGI_CANC") == "C" && length(trim(ds_change_ZSDT0091.getColumn(i, "ABGRU"))) == 0 )
		  {  gfn_showAlert("CW10025", "[ " + (i+1) +" ]행 취소호기에 대한 취소사유를 입력하세요.");		  
		     return;
		  }
//-----> 2018.05.11 호기 취소 시 취소사유 필수 입력(김민경SW 요청) by mj.Shin 	End 
		  
		//무상보수  /호기취소건은 제외
		lv_matnr = ds_change_ZSDT0091.getColumn(i, "MATNR");
		var lv_char;
		var lv_char2;
		if ( (lv_matnr == "L-1000" || lv_matnr == "S-1000" || lv_matnr == "W-1000" )
		     && ds_change_ZSDT0091.getColumn(i, "HOGI_CANC") != "C" && left(F_AUART,2) != "ZT") {
			if (lv_matnr == "L-1000") {
				lv_char  = "EL_FDNCMQ";
				lv_char2 = "EL_FDWUQ";
			} else if (lv_matnr == "S-1000"){
				lv_char  = "ES_FDNCMQ";
				lv_char2 = "ES_FDWUQ";
			} else if (lv_matnr == "W-1000"){
				lv_char  = "MW_FDNCMQ";
				lv_char2 = "MW_FDWUQ";
			}
		
			ds_output_ZSDT0094_change.Filter("HOGI ==" + quote(ds_change_ZSDT0091.getColumn(i, "HOGI")) + " && NAM_CHAR ==" + quote(lv_char));
			destroy("ds_temp1");
			create("dataset", "ds_temp1");
			ds_temp1.CopyF(ds_output_ZSDT0094_change);
			ds_output_ZSDT0094_change.UnFilter();  
			var val;
			val = trim(ds_temp1.getColumn(0, "CHAR_VALUE"));
			if (val == null || val == ""){
			 val = "0";
			}
			var val2;
			if (trim( ds_change_ZSDT0091.getColumn(i, "CHREPMO")) == null || trim( ds_change_ZSDT0091.getColumn(i, "CHREPMO")) == ""){
			 val2 = "0";
			} else {
			 val2 = trim( ds_change_ZSDT0091.getColumn(i, "CHREPMO"));
			}
			for ( var j = 0; j <ds_temp1.getRowcount(); j++) {
				if ( val2 <> val ) {
					  gfn_showAlert("CW10025", ds_temp1.getColumn(j,"HOGI") + " 호기 //무상보수개월수// 사양 불일치");		  
					  return;
				}
			}
					
			//공사용			
			ds_output_ZSDT0094_change.Filter("HOGI ==" + quote(ds_change_ZSDT0091.getColumn(i, "HOGI")) + " && NAM_CHAR == " + quote(lv_char2));
			destroy("ds_temp1");
			create("dataset", "ds_temp1");
			ds_temp1.CopyF(ds_output_ZSDT0094_change);
			ds_output_ZSDT0094_change.UnFilter();  
			var val;
			val = trim(ds_temp1.getColumn(0, "CHAR_VALUE"));
			if (val == null || val == "" ){
			 val = "0";
			}
			var val2;
			if ( trim( ds_change_ZSDT0091.getColumn(i, "CHWORMO")) == null || trim( ds_change_ZSDT0091.getColumn(i, "CHWORMO")) ==""){

			 val2 = "0";
			} else {
			 val2 = trim( ds_change_ZSDT0091.getColumn(i, "CHWORMO"));
			}

			for ( var j = 0; j <ds_temp1.getRowcount(); j++) {
				if ( val2 <> val )  {
					  gfn_showAlert("CW10025", ds_temp1.getColumn(j,"HOGI") + " 호기 //공사사용개월수// 사양 불일치");		  
					  return;
				}
			}
		
        }
        
        //자재 용도 필수 체크  20160506 ksk
        if ( left(F_AUART,2) != "ZE" && left(F_AUART,2) != "ZT" && left(F_AUART,2) != "ZC"){ //해외제외
			if ( ds_change_ZSDT0091.getColumn(i, "MATNR") == "Y-1000"
				&& isNewItem(ds_change_ZSDT0091, i)	//계약변경 중 Y번호 추가한 경우만 적용
			) {
				ds_output_ZSDT0094_change.Filter("HOGI ==" + quote(ds_change_ZSDT0091.getColumn(i, "HOGI")) + " && NAM_CHAR == 'SP_AUSE' ");
				destroy("ds_temp1");
				create("dataset", "ds_temp1");
				ds_temp1.CopyF(ds_output_ZSDT0094_change);
				ds_output_ZSDT0094_change.UnFilter();  
				var val;
				val = trim(ds_temp1.getColumn(0, "CHAR_VALUE"));
				if (val == null || val == "" ) {
				  gfn_showAlert("CW10025", "SP 추가 호기 A001 추가비용(국내영업) 내역 입력 필수입니다.");		  
				  return;
				}
			}
        }
		//inspect executive rates
		if(!valid_exerats(ds_change_ZSDT0091.GetColumn(i, "HOGI"), ds_change_ZSDT0091.GetColumn(i, "CHWAVWR"), ds_change_ZSDT0091.GetColumn(i, "CHNETWR")))
			return;
	}
	
	// 사양 입력값 형식 체크
	if ( !fn_checkTemplateValue() ) {
		return;
	}
	
	// [저장]을 하시겠습니까?
	if ( !gfn_showConfirm("CI00024", "[저장]") )
	{
		return;
	}
	
	// 통합저장함수 [저장]으로 호출
	fn_allCommit('SAVE');
}
function valid_exerats(hogi, chwavwr, chnetwr) {
	return true;	//원가팀 적용요청때까지 유지.. btn_distribution.Visible true처리 필요

	var WavwrRate = round(toNumber(ed_wavwr.Value) / toNumber(ed_netwr.Value) * 100, 1);
	var upper_limitRats = WavwrRate + 20;
	var lower_limitRats = WavwrRate - 20;
	var exerats = chwavwr / chnetwr * 100; 
	
	if(exerats > upper_limitRats || exerats < lower_limitRats) {
		gfn_showAlert("CW10025", hogi + "("+round(exerats,2)+"%) - 원가팀에서 제한하고 있는 시행율("+lower_limitRats+"%"+" ~ "+upper_limitRats+"%) 구간이 아닙니다.");		
		return false;
	}

	return true;
}
/******************************************************
* 통합 저장
*******************************************************/
function fn_allCommit(flag)
{
	fn_createWait("",this); // 처리중입니다. 메시지 처리
	
	var pspId = ed_pspId.Text; 	// 프로젝트

	// 데이터셋의 모든이벤트 비활성
	ds_change_ZSDT0091.FireEvent = false;
	
	// 저장용 [호기] - 품목 리스트
	// 변경된 row에 [변경구분]값을 'X'로 처리하고, 전체리스트를 넘김
	for ( var i = 0 ; i < ds_change_ZSDT0091.getRowCount() ; i++ )
	{
		if ( length( ds_change_ZSDT0091.getColumn(i, "STATUS") ) != 0 )
		{
			ds_change_ZSDT0091.SetColumn(i, "CHCK", 'X');
			
			// date 컬럼 (서버에 전달시 '-' 붙는 형식으로 처리)
			var replaceYMD = replace( ds_change_ZSDT0091.GetColumn(i, "EDATU"), "-", "");
			var y = substr( replaceYMD, 0, 4);
			var m = substr( replaceYMD, 4, 2);
			var d = substr( replaceYMD, 6);
			ds_change_ZSDT0091.SetColumn(i, "EDATU", y+"-"+m+"-"+d );
			
			// date 컬럼 (서버에 전달시 '-' 붙는 형식으로 처리)
			var replaceYMD = replace( ds_change_ZSDT0091.GetColumn(i, "CHEDATU"), "-", "");
			
			//2021.06 jss : 변경납기일 체크
			if(length(trim(replaceYMD)) != 8){
				fn_destroyWait();
				gfn_showAlert("CW10012","변경납기일");
				Tab00.TabIndex = 1;
				gfn_SetFocusGrid(Tab00.tab2.Grid, i, gfn_getColIdx(Tab00.tab2.Grid,'CHEDATU')); 
				return;
			}
			if (gfn_chkDate(replaceYMD, "변경납기일" , true) == -1){
				fn_destroyWait();
				Tab00.TabIndex = 1;
				gfn_SetFocusGrid(Tab00.tab2.Grid, i, gfn_getColIdx(Tab00.tab2.Grid,'CHEDATU')); 
				return;
			}
			
			var y = substr( replaceYMD, 0, 4);
			var m = substr( replaceYMD, 4, 2);
			var d = substr( replaceYMD, 6);
			ds_change_ZSDT0091.SetColumn(i, "CHEDATU", y+"-"+m+"-"+d );
		}
	}
	// 데이터셋의 모든이벤트 활성
	ds_change_ZSDT0091.FireEvent = true;
	
	// 저장용 [변경청구계획]리스트는 전체리스트를 넘김
	destroy("ds_save_ZSDT0093");
	create("dataset", "ds_save_ZSDT0093");
	object("ds_save_ZSDT0093").copy(ds_output_ZSDT0093);
	object("ds_save_ZSDT0093").clearData();
	
	// 헤더변경청구계획	
	for ( var i = 0 ; i < ds_output_ZSDT0093_B1.getRowCount() ; i++ )
	{
		object("ds_save_ZSDT0093").addRow();
		// date 컬럼 (서버에 전달시 '-' 붙는 형식으로 처리)
		var replaceYMD = replace( ds_output_ZSDT0093_B1.GetColumn(i, "CHFKDAT"), "-", "");
		
		//2021.06 jss : 청구계획일 체크
		if(length(trim(replaceYMD)) != 8){
			fn_destroyWait();
			gfn_showAlert("CW10012","청구계획일");
			Tab00.TabIndex = 0;
			gfn_SetFocusGrid(Tab00.tab1.Grid0, i, gfn_getColIdx(Tab00.tab1.Grid0,'CHFKDAT')); 
			return;
		}
		if (gfn_chkDate(replaceYMD, "청구계획일" , true) == -1){
			fn_destroyWait();
			Tab00.TabIndex = 0;
			gfn_SetFocusGrid(Tab00.tab1.Grid0, i, gfn_getColIdx(Tab00.tab1.Grid0,'CHFKDAT')); 
			return;
		}
		
		var y = substr( replaceYMD, 0, 4);
		var m = substr( replaceYMD, 4, 2);
		var d = substr( replaceYMD, 6);
		ds_output_ZSDT0093_B1.SetColumn(i, "CHFKDAT", y+"-"+m+"-"+d );
		object("ds_save_ZSDT0093").copyrow(object("ds_save_ZSDT0093").row,"ds_output_ZSDT0093_B1",i);

		// 지급조건 필수 체크
		var chzterm = ds_output_ZSDT0093_B1.GetColumn(i, "CHZTERM");
		if(length(chzterm) == 0) {
			fn_destroyWait();
			gfn_showAlert("CW00208","지급조건");
			Tab00.TabIndex = 0;
			gfn_SetFocusGrid(Tab00.tab1.Grid0, i, gfn_getColIdx(Tab00.tab1.Grid0,'CHZTERM'));
			return;
        }
	}

	// 호기변경청구계획 - 2013.01.24 호기별 청구계획 전체를 보내는 것으로 수정
	destroy("ds_temp");
	Create("Dataset", "ds_temp");
	// ds_output_ZSDT0093_B2.Filter("HOGI>0"); // 2013.01.28 호기별은 HOGI가 있는 자료만 추가
	var posnr_by_H = '000000';
	ds_output_ZSDT0093_B2.Filter("POSNR <>"+quote(posnr_by_H)); //2018.06.18 호기별 청구는 품목번호가 있는 자료만 추가 
	ds_temp.CopyF(ds_output_ZSDT0093_B2);
	
	for ( var i = 0 ; i < ds_temp.getRowCount() ; i++ )
	{
		object("ds_save_ZSDT0093").addRow();
		// date 컬럼 (서버에 전달시 '-' 붙는 형식으로 처리)
		var replaceYMD = replace( ds_temp.GetColumn(i, "CHFKDAT"), "-", "");
		
		//2021.06 jss : 호기청구계획일 체크
		if(length(trim(replaceYMD)) != 8){
			fn_destroyWait();
			gfn_showAlert("CW10012",ds_temp.GetColumn(i,"HOGI")+" 호기청구계획일");
			Tab00_tab2_btn_hogi_OnClick();
			Tab00.tab2.Grid1.Editable = true;
			Tab00.TabIndex = 1;
			//gfn_SetFocusGrid(Tab00.tab2.Grid1, i, gfn_getColIdx(Tab00.tab2.Grid1,'CHFKDAT')); 
			return;
		}
		if (gfn_chkDate(replaceYMD, ds_temp.GetColumn(i,"HOGI")+" 호기청구계획일", true) == -1){
			fn_destroyWait();
			Tab00_tab2_btn_hogi_OnClick();
			Tab00.tab2.Grid1.Editable = true;
			Tab00.TabIndex = 1;
			//gfn_SetFocusGrid(Tab00.tab2.Grid1, i, gfn_getColIdx(Tab00.tab2.Grid1,'CHFKDAT')); 
			return;
		}
		
		var y = substr( replaceYMD, 0, 4);
		var m = substr( replaceYMD, 4, 2);
		var d = substr( replaceYMD, 6);
		ds_temp.SetColumn(i, "CHFKDAT", y+"-"+m+"-"+d );
		object("ds_save_ZSDT0093").copyrow(object("ds_save_ZSDT0093").row,ds_temp,i);
	}
	
	//2021.06 jss 변경납기일체크 
	var replaceYMD = replace(replace(ds_output_ZSDT0090.GetColumn(0, "CHVDATU"), "-", "")," ","");
	
	if(length(replaceYMD) == 0){
		fn_destroyWait();
		gfn_showAlert("CW10025", "변경납기일을 입력하세요.");	
		Tab00.TabIndex = 0;
		Tab00.tab1.ed_chvdatu.SetFocus(); 
		return;
	}
	if(length(replaceYMD) != 8){
		fn_destroyWait();
		gfn_showAlert("CW10012","변경납기일");
		Tab00.TabIndex = 0;
		Tab00.tab1.ed_chvdatu.SetFocus(); 
		return;
	}
	if (gfn_chkDate(replaceYMD, "변경납기일", true) == -1){
		fn_destroyWait();
		Tab00.TabIndex = 0;
		Tab00.tab1.ed_chvdatu.SetFocus(); 
		return;
	}
	ds_output_ZSDT0090.FireEvent  = false;  
	ds_output_ZSDT0090.SetColumn(0, "CHVDATU", replaceYMD);
	ds_output_ZSDT0090.FireEvent  = true; 
	
	// 2013.03.04 저장시 공통사양 재설정
	fn_aspc (); // 시방서
	fn_bclcd(); // LCD 총수량
	fn_bcpi (); // LED 총 수량
	fn_deph (); // 비상통화장치 DI-PBX 적용대수
	fn_ddvr (); // DVR 적용대수
	fn_dsv1 (); // 감시반1
	fn_dsv2 (); // 감시반2
	fn_aspd ();	// 고속현장 2013.04.03
	fn_etc();
	// 21.08.11 E/L 대수
	fn_coElqty();

	ds_routing.DeleteAll();
	ds_rout_status.DeleteAll();
	// 저장용 [사양]리스트는 전체리스트를 넘김
	destroy("ds_save_ZSDT0094");
	create("dataset", "ds_save_ZSDT0094");
	object("ds_save_ZSDT0094").copy(ds_output_ZSDT0094_change);
	object("ds_save_ZSDT0094").clearData();
	
	var ds = "";
	ds_updated_char.DeleteAll();
	for ( var a = 0 ; a < 6 ; a++ )
	{
		if ( a == 0 ){ds=ds_output_ZSDT0094_A;ds_output_ZSDT0094_A.UnFilter();}
		if ( a == 1 ){ds=ds_output_ZSDT0094_B;ds_output_ZSDT0094_B.UnFilter();}
		if ( a == 2 ){ds=ds_output_ZSDT0094_C;ds_output_ZSDT0094_C.UnFilter();}
		if ( a == 3 ){ds=ds_output_ZSDT0094_D;ds_output_ZSDT0094_D.UnFilter();}
		if ( a == 4 ){ds=ds_output_ZSDT0094_E;ds_output_ZSDT0094_E.UnFilter();}
		// 2020 브랜드
		if ( a == 5 ){ds=ds_output_ZSDT0094_F;ds_output_ZSDT0094_F.UnFilter();}

		for ( var i = 0 ; i < ds.getRowCount() ; i++ )
		{	
			removeComma(ds, i);

			object("ds_save_ZSDT0094").addRow();
			object("ds_save_ZSDT0094").copyrow(object("ds_save_ZSDT0094").row, ds, i);
		}
	}
	if(flag == 'ADMT') {
		for(var i=0; i< ds_print_sayang.GetRowCount(); i++) {
			ufn_appendUpdatedChar(ds_print_sayang.getColumn(i, "HOGI"), ds_print_sayang.getColumn(i, "NAM_CHAR"), ds_print_sayang.getColumn(i, "CHAR_VALUE"), ds_print_sayang.getColumn(i, "CHAR_VALUEMD"));
		}
	}

	checkRouting();
	if(ds_routing.GetRowCount() == 0) {
		
	} else if(ds_rout_status.GetRowCount() > 0) {
		ds_rout_status.UnFilter();
		gfn_openPopUpUrlHdel('Sso::Sso0057.xml', true, null);
		fn_query();
		Tab00.TabIndex = 0;
		return;
	}

	// 2013.01.21 저장할 때 공통 사양 추가
	destroy("ds_temp");
	create("dataset", "ds_temp");
	object("ds_temp").Copy(ds_output_ZSDT0094_change);
	for ( var i = 0 ; i < ds_temp.GetRowCount() ; i++ ) {
		var prh = ds_temp.GetColumn(i, "NAM_CHAR");
		if ( substr(prh,0,3) == "CO_" ) {
			object("ds_save_ZSDT0094").AddRow();
			object("ds_save_ZSDT0094").CopyRow(object("ds_save_ZSDT0094").row, ds_temp, i);
		}
	}
	destroy("ds_orgn_ZSDT0094");
	create("dataset", "ds_orgn_ZSDT0094");
	
	if(flag == 'SAVE') {
		F_CHG_CURR = "N";
	}

	var input = "ds_output_ZSDS0063=ds_output_ZSDS0063";
		input += " ds_output_ZSDT0090=ds_output_ZSDT0090";
		input += " ds_output_ZSDT0091=ds_change_ZSDT0091";
		input += " ds_output_ZSDT0092=ds_output_ZSDT0092";
		input += " ds_output_ZSDT0093=ds_save_ZSDT0093";
		//input += " ds_output_ZSDT0094_original=ds_output_ZSDT0094_original";
		input += " ds_output_ZSDT0094_original=ds_orgn_ZSDT0094";
		input += " ds_output_ZSDT0094_change=ds_save_ZSDT0094";
		input += " ds_vbeln=ds_vbeln";
		input += " ds_brnd_hogi_del=ds_brnd_hogi_del";
		input += " ds_jqpr=ds_jqpr";
		
	var outDs = ""; // 2013.02.26 오류 데이터셋 제거 (공통함수에서 일괄 추가됨)
	
	//idle();
	http.sync = true;
    callServiceN(flag							// srvId
				, "sso0055n/save"				// url
				, input							// biz에서 받는 명, mip에서 보내는 명
				, outDs							// mip에서 받는 명, biz에서 보내는 명
				, "pspId="+quote(pspId)
				+" cmd="+quote(flag) 
				+" seq="+quote(ed_seq.Text)		// strParam
				, ""							// CallBackFunc
				);

	// 리모델링 추가			
    SAVEYSNO = "Y";
}

/******************************************************
* 사양변경
*******************************************************/
function fn_rewrite(){

	if (fn_approvalChk()){
	
		if ( !gfn_showConfirm("CI00024", "[사양변경]") )	// [사양변경]을 하시겠습니까?
		{
			return false;
		}
		
		fn_allCommit('ADMT');
	}
}

function fn_approvalChk(){
	
	ds_error.ClearData();
	ds_loglist.ClearData();
	ds_log.ClearData();
	
	// 추가된 호기가 한개라도 있으면 사양변경 할수 없음
	// 추가된 호기의 사양이 변경이 되지 않더라도 사양변경 할수 없음.
	var hogiNoValue = 0;
	
	if(ed_commiRate == 0 && ed_chCommiRate != 0) {
		alert("수수료 재생성 시 계약관리팀 승인처리로 진행바랍니다.");
		return false;
	}
	
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCountNF() ; i++ )
	{
		if ( ds_change_ZSDT0091.GetColumn(i, "NETWR") != ds_change_ZSDT0091.GetColumn(i, "CHNETWR") )
		{
		    if (G_USER_ID != '2018144' && G_USER_ID != '2020254' && G_USER_ID != '2019329' && G_USER_ID != '2022753' && G_USER_ID != '2019329' && G_USER_ID != '2018799' &&
				G_USER_ID != '2020521' && G_USER_ID != '2020483' && G_USER_ID != '2020564' && G_USER_ID != '2013061' ) 
			{
				hogiNoValue++;
			}
		}
	}
		
	// 추가된 건수로 valid 체크
	if ( hogiNoValue > 0)
	{
		alert("수주금액 변경 또는 호기 추가시 계약관리팀 승인처리로 진행바랍니다.");
		return false;
	}
	if (( ds_output_ZSDT0090.GetColumn(0, "VDATU") <> ds_output_ZSDT0090.GetColumn(0, "CHVDATU") )
		|| ( ds_output_ZSDT0090.GetColumn(0, "SHCHK") <> ds_output_ZSDT0090.GetColumn(0, "CHSHCHK") ))
	{
	
	    if (G_USER_ID != '2018144' && G_USER_ID != '2020254' && G_USER_ID != '2019329' && G_USER_ID != '2022753' && G_USER_ID != '2019329' && G_USER_ID != '2018799' && 
			G_USER_ID != '2020521' && G_USER_ID != '2020483' && G_USER_ID != '2020564' && G_USER_ID != '2013061' ) 
		{
			alert("납기일 / 상해검수여부 변경시 계약관리팀 승인처리로 진행바랍니다.");
			return false;
		}
	}
	
	if ( ds_output_ZSDT0094_change.GetRowCountNF() < 1 )
	{
		gfn_showAlert("CW00113", "사양변경");	// [${}] 자료가 존재하지 않습니다.
		return false;
	}
	
	// 사양 변경되었으면 저장 후 사양변경하도록
	if ( ufn_isTemplateChanged() == true ) {
		var arrMsg = ["사양정보", "사양변경"];
		gfn_showAlert("CW10003", arrMsg); // 변경된 ${}이 존재하여 ${}이 불가능합니다. 변경된 정보를 저장후 다시 실행하여 주십시오.
		return false;
	}
	
	// 2013.03.04 저장시 공통사양 재설정
	fn_aspc (); // 시방서
	fn_bclcd(); // LCD 총수량
	fn_bcpi (); // LED 총 수량
	fn_deph (); // 비상통화장치 DI-PBX 적용대수
	fn_ddvr (); // DVR 적용대수
	fn_dsv1 (); // 감시반1
	fn_dsv2 (); // 감시반2
	fn_aspd ();	// 고속현장 2013.04.03
	fn_etc();
	// 21.08.11 E/L 대수
	fn_coElqty();
	
	if ( ds_output_ZSDT0090.GetColumn(0, "FINL") <> 'X' )
	{
		fn_createWait("",this);
		if ( fn_sumCostAll("spec") == false ) { // 원가합계 - (2012.01.17) 사양변경하면서 원가합계를 계산할 때는 변경된 모든 사양에 대해서 재처리한다.
			fn_destroyWait();
			return false;
		}
		fn_destroyWait();
	}
	
	// 2013.01.25 사양변경 가능 조건 추가
	var sAdmitNo = trim(ds_output_ZSDS0063.getColumn(0, "ADMITNO")); 		// 수주승인일자 (수주승인번호에 승인날짜를 보내옴)
	var nNetwr = ds_change_ZSDT0091.caseSum("HOGI_CANC!='C'", "NETWR"); // 총 수주금액
	var nChNetwr = ds_change_ZSDT0091.caseSum("HOGI_CANC!='C'", "CHNETWR"); // 총 수주금액
	var nChWavwr = ds_change_ZSDT0091.caseSum("HOGI_CANC!='C'", "CHWAVWR"); // 총 원가
	var nRate = round(toNumber(nChWavwr) / toNumber(nChNetwr) * 100.0, 2); 	// 시행율

	// [${}]호기정보의 [금액]과 [변경금액]이 다릅니다.\n\n[사양변경]을 할 수 없습니다. 
	if ( left(F_AUART,2) != "ZT" && left(F_AUART,2) != "ZE" && left(F_AUART,2) != "ZC" ) {
		
		destroy("ds_CH0093");
		create("dataset", "ds_CH0093");
		ds_CH0093.copy(ds_output_ZSDT0093);
		ds_CH0093.Filter( " POSNR == '000000'");  //헤더 
	
		destroy("ds_CH0092");
		create("dataset", "ds_CH0092");
		ds_CH0092.copy(ds_output_ZSDT0092);
		for ( var i = 0 ; i < ds_CH0093.getRowcount() ; i++ )
		{
			ds_CH0092.UnFilter();
			ds_CH0092.Filter(   " POSNR == '000000' && " 
					  + " MLBEZ ==" + quote(ds_CH0093.GetColumn(i,"CHMLBEZ")) + "&&"
					  + " ZTERM ==" + quote(ds_CH0093.GetColumn(i,"CHZTERM")) );  //헤더 
			if ( ds_CH0092.getRowcount() < 1 ) {	     
				if (changeSpec != true)
				{
					alert("청구계획 변경시 판매관리팀 승인처리로 진행바랍니다."); 				return false;
				}
			}
		}
	}

	for ( var i = 0 ; i < ds_change_ZSDT0091.getRowCount() ; i++ )
	{
		if (ds_change_ZSDT0091.GetColumn(i,"EDATU") != ds_change_ZSDT0091.GetColumn(i,"CHEDATU"))  //납기일
		{
			if  (changeSpec != true)
			{
				alert("납기일 변경시 계약관리팀 승인처리로 진행바랍니다.");
				return false;
			}
		}
		if (ds_change_ZSDT0091.GetColumn(i,"NETWR") != ds_change_ZSDT0091.GetColumn(i,"CHNETWR"))  //수주금액		   
		{
			if (changeSpec != true)
			{
				alert("수주금액 변경시 계약관리팀 승인처리로 진행바랍니다.");
				return false;
			}
		}
		if (ds_change_ZSDT0091.GetColumn(i,"REPMO") != ds_change_ZSDT0091.GetColumn(i,"CHREPMO"))  //무상보수개월수		   
		{
			if (changeSpec != true)
			{
				alert("무상보수개월수 변경시 계약관리팀 승인처리로 진행바랍니다.");
				return false;
			}
		}
		if (ds_change_ZSDT0091.GetColumn(i,"WORMO") != ds_change_ZSDT0091.GetColumn(i,"CHWORMO"))  //공사용사용개월수		   
		{
			if (changeSpec != true)
			{
				alert("공사용사용개월수 변경시 계약관리팀 승인처리로 진행바랍니다.");
				return false;
			}
		}
	}
	
		
	if ( nNetwr != nChNetwr )
	{   
		if (G_USER_ID != '2018144' && G_USER_ID != '2020254' && G_USER_ID != '2019329' && G_USER_ID != '2022753' && G_USER_ID != '2019329' && G_USER_ID != '2018799' && 
		    G_USER_ID != '2020521' && G_USER_ID != '2020483' && G_USER_ID != '2020564' && G_USER_ID != '2013061' ) {
				fn_destroyWait();
				var arr = [ds_change_ZSDT0091.getColumn(i, 'HOGI'), "변경금액", "현행금액"];	// CW10007=${}의 ${}은(는) ${}보다 작거나 같아야 합니다.
				gfn_showAlert("CW10007", arr);
				return false;
		}
	}
	
	/**************************************************************************************/    
	// 부분원가 일치화 확인  ZSDT1054D 테이블 기준으로 변경 2013.10.02 //로직추가 20160628
	http.sync = true;
	ds_cond2.ClearData();
	ds_cond2.AddRow();
	ds_cond2.SetColumn(0, "PSPID", ed_pspId.Text);
	
	nsfRequest(   ""
				, "ses0031n/searchZ309"
				, "ds_cond=ds_cond2 ds_t309=ds_check2"
				, "ds_check2=ds_t309 ds_error=ds_error"
				, ""
				, ""
	);

	ds_check2.Filter(" STATE != 'W' "); //부분원가 금액이 없는 ROW만 남도록 필터링 
	
	if ( ds_check2.RowCount() > 0 ) {
		gfn_showAlert("CW10025", "부분원가가 존재하니 확인 후 진행 바랍니다.");
		return false;
	}
	
	http.sync = false;
	
	if ( !fn_checkTemplateValue() ) {	// 사양 입력값 형식 체크
		return false; 
	}

	var pspId = ed_pspId.Text; 	// 프로젝트			
	
	ds_change_ZSDT0091.FireEvent = false;
	
	// 변경된 row가 있으면 [변경구분]컬럼에 'X'처리
	for ( var i = 0 ; i < ds_change_ZSDT0091.getRowCount() ; i++ )
	{
		if ( length( ds_change_ZSDT0091.getColumn(i, "STATUS") ) != 0 )
		{
			ds_change_ZSDT0091.SetColumn(i, "CHCK", 'X');
			
			// date 컬럼 (서버에 전달시 '-' 붙는 형식으로 처리)
			var replaceYMD = replace( ds_change_ZSDT0091.GetColumn(i, "EDATU"), "-", "");
			var y = substr( replaceYMD, 0, 4);
			var m = substr( replaceYMD, 4, 2);
			var d = substr( replaceYMD, 6);
			ds_change_ZSDT0091.SetColumn(i, "EDATU", y+"-"+m+"-"+d );
			
			// date 컬럼 (서버에 전달시 '-' 붙는 형식으로 처리)
			var replaceYMD = replace( ds_change_ZSDT0091.GetColumn(i, "CHEDATU"), "-", "");
			var y = substr( replaceYMD, 0, 4);
			var m = substr( replaceYMD, 4, 2);
			var d = substr( replaceYMD, 6);
			ds_change_ZSDT0091.SetColumn(i, "CHEDATU", y+"-"+m+"-"+d );
		}
	}
	ds_change_ZSDT0091.FireEvent = true;

    //spec = admt 와 같음(SAP RFC admt 처리시 spec 처리 됨) 20141209
    //http.Sync = true; //20160608 admt 후 save 처리되고 있음.
    //fn_allCommit('SAVE'); //2017.04.10  2번 호출구분을 java Service에 구현 by mj.Shin 
    //fn_allCommit('ADMT');
    //http.Sync = false;
    return true;
				
}

/******************************************************
* 승인
*******************************************************/
function fn_approval()
{
	if (fn_approvalChk()){
	
		if ( ds_output_ZSDT0090.GetRowCount() < 1 )
		{
			gfn_showAlert("CW00113", "승인처리");	// [${}] 자료가 존재하지 않습니다.
			return;
		}	
		
		// 필수 체크 - [반영여부]
		if ( ds_output_ZSDT0090.GetColumn(0, "FINL") == 'X' )
		{
			gfn_showAlert("CW10019", "저장");	// 승인처리된 data입니다. \n\n[${}]할 수 없습니다.
			return;
		}
		
		if ( !gfn_showConfirm("CI00024", "[승인]") )	// [승인]을 하시겠습니까?
		{
			return;
		}
	
		// 통합저장에 [승인]플래그로 호출
		fn_allCommit('ADMT');
	
	}
}

/********************************************************************************
* 기      능   : 조회 Callback  
********************************************************************************/
function fn_afterQuery(strSvcID, nErrorCode, strErrorMag)
{
	var sStada   = ds_output_ZSDS0063.GetColumn(0, "STADA");    // 견적일  - 사용하지 않는 필드를 대체하여 사용 김선호
	sStada = replace(replace(replace(sStada, "-", ""), ".", ""), "/", "");
	
	fn_destroyWait();
	// 2013.03.08 온헨드는 사양변경 불가
	if ( !ufn_existsVbeln() ) {
		btn_finl_R.Enable = false;
		btn_rewrite.Enable = false;
	}
	else
	{	// 2013.03.14 Button Control 호출
		ufn_setButtonControl();
	}

	// 프로젝트 번호 중복 확인 2021.06.01.
	if ( ds_samevbeln.GetRowCount() > 1 ) {
		gfn_openPopUpUrlHdel("SSo::Sso0050P.xml", true);
		ds_samevbeln.ClearData();
		return;
		}

	if ( ds_error.GetRowCount() > 0 ) { // 실패
		// 환율정보가 없습니다.
		if (ds_error.GetColumn(0, "ERRMSG") == "CE10007")
		{
			gfn_showAlert(ds_error.GetColumn(0, "ERRMSG"));
			gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG"), ds_error.GetColumn(0,"ERRCODE"));
			return false;
		} else {	
			gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG"));
			gfn_openMsgWin(ds_error.GetColumn(0,'ERRMSG'), 'W','A');
			return;
		}			
	} else { // 성공
		gfn_showMsg("CI00005"); //CI00005 - 처리를 완료했습니다.
	}

	if ( nErrorCode < 0 )
	{
		//  CE00001 : "처리에 실패했습니다.\n확인 후 다시 처리해 주십시오.");
		gfn_showMsg("CE00001");
	}
	else
	{
		if ( strSvcID == "query" || strSvcID == "input") { 
			//adjustChnetwrByWavwr(ds_change_ZSDT0091);
			F_AUART = trim(ds_output_ZSDS0063.GetColumn(0, "AUART"  ));			
// -----< 2018.03.26 조회 후 환율 정보 Service 호출 by mj.Shin 	Start 
			var bstdk = ds_output_ZSDS0063.GetColumn(0, "BSTDK"); // 수주일
			bstdk = replace(bstdk, "-", "");
			if ( bstdk.length == 8 && ds_output_ZSDT0090.GetColumn(0, "CHWAERK") != "KRW")
			{
				ds_exchange.ClearData();
				ds_exchange.AddRow();
				ds_exchange.SetColumn(0, "MANDT"    , G_MANDT);
				ds_exchange.SetColumn(0, "KURST"  	, "M"	 );	// 견적(Q), 계약(M)구분
				ds_exchange.SetColumn(0, "FCURR"  	, ds_output_ZSDT0090.GetColumn(0, "CHWAERK") );
				ds_exchange.SetColumn(0, "TCURR"  	, "KRW");		// 환산통화 : KRW 			
				ds_exchange.SetColumn(0, "GDATU"	, bstdk  );

				nsfRequest("queryExchange"																	// srvId
				, "sso0055n/searchExchange"														// url
				, "ds_exchange=ds_exchange ds_error=ds_error"					// biz에서 받는 명, mip에서 보내는 명
				, "ds_exchange=ds_exchange ds_error=ds_error"					// mip에서 받는 명, biz에서 보내는 명
				, ""
				, "fn_afterQuery"														// CallBackFunc
				);
								

			}		
// -----> 2018.03.26 조회 후 환율 정보 Service 호출 by mj.Shin 	End 		
			
			//alert("카 내부높이(CH), 도어 열림폭(JJ), 도어 높이(HH)가 고객 승인 사양과 동일한지 확인바랍니다.");				
			if ( right(G_USER_GROUP_B, 2 ) == "10") {
				if (right(ds_output_ZSDS0063.GetColumn(0,"ZKUNNR"),7) != G_USER_ID) {
					alert("본인 담당 이외 프로젝트 조회 불가");
				}
			}
			// 이전차수 승인처리 check 
			if ( ds_output_ZSDS0063.GetRowCount() > 0 ) {
				if(ds_output_ZSDS0063.GetColumn(0, "KUNZ1") == "INPUT" ) {
					if(ds_output_ZSDS0063.GetColumn(0, "SEQ") != "1") {
						alert("이전차수의 최종 승인처리가 되지 않았습니다. 승인처리후 차수 생성할수 있습니다.");
					}	
				} else if(ds_output_ZSDS0063.GetColumn(0, "KUNZ1") == "RESET" ) {
					alert("최종차수의 최종 승인처리가 되지 않았으므로 최종차수를 조회하였습니다.");
				} else if(ds_output_ZSDS0063.GetColumn(0, "KUNZ1") == "OK" ) {
					ds_output_ZSDS0063.SetColumn(0, "KUNZ1", "INPUT");
				}
			}
			
			// 2020.06.25 해외중계무역 건이면 DUTY 입력 제외
			if ((ds_output_ZSDS0063.GetColumn(0, "AUART") != "ZT01") && (sStada < "20150209")) {
				alert("2015.02.09전에 견적 진행되어 수주된 현장이므로 개정검사 전 DUTY로 입력하여 진행");	
			}
			
			/*if (sStada < "20150209") {
				alert("2015.02.09전에 견적 진행되어 수주된 현장이므로 개정검사 전 DUTY로 입력하여 진행");				
			}*/
			
			// 2013.03.22 SAP 입력 현장은 사양변경 불가 BY SEONHOWORLD
			if ( !ufn_existsVbeln() ) {
				alert("SAP 수주 입력현장입니다. 해당 프로그램에서 사양변경 하실수 없습니다.");
			}
			
			//JQPR 확인
			if ( ds_output_ZSDT0090.GetColumn(0, "FINL") != 'X' ) {
				if ( ds_jqpr.GetRowCount() > 0 ) {
					var createhogi = fn_hasJqpr();
					if (createhogi[1] != "") {
						alert("영업귀책 JQPR이 존재합니다. "+createhogi[1]+"에 내용을 기입하여 주세요.");
						if (createhogi[0]) {
							F_isNewJqpr = true;
							ds_change_ZSDT0091.addRow();
							ds_change_ZSDT0091.setColumn( ds_change_ZSDT0091.GetRowCount()-1, "HOGI", 
													ds_output_ZSDT0091.GetColumn(0, "PSPID")+createhogi[1] );
							ds_change_ZSDT0091.setColumn( ds_change_ZSDT0091.GetRowCount()-1, "MATNR", "Y-1000");
							F_isNewJqpr = false;
						}
					}
				}
			}
			
			// [조회]버튼처리
			ufn_enableBtn("query", true);
			
			// CI00001 : "조회를 완료했습니다"
			gfn_showMsg("CI00001", ""); 
			Tab00.tab3.ed_temp.Text = "";
			
			// ds_output_ZSDT0090
			if ( ds_output_ZSDT0090.GetRowCount() <= 0 ) {
				ed_commiRate.Text	= 0;	// 현행 수수료율
				ed_wavwrRate.Text	= 0;	// 현행 원가율
				ed_chCommiRate.Text	= 0;	// 변경 수수료율
				ed_chWavwrRate.Text	= 0;	// 변경 원가율
			}
			
			// [호기]리스트 존재시 그리드버튼 활성화 및 현행&변경 금액재산정
			
			if ( ds_output_ZSDT0091.GetRowCount() > 0 ) {
				Tab00.tab2.btn_HogiApp.Enable  = "True";
				Tab00.tab2.btn_HogiCanc.Enable = "True";
				
				// 현행 시행율
				if ( toNumber(ed_wavwr.Value) == 0 ) {
					ed_wavwrRate.Text = 0;
				} else {
					ed_wavwrRate.Text = round(toNumber(ed_wavwr.Value) / toNumber(ed_netwr.Value) * 100, 1);
				}
				// 현행 수수료율
				if ( toNumber(ed_netwr.Value) == 0 || toNumber(ed_commi.Value) == 0 ) {
					ed_commiRate.Text = 0;
				} else {
					ed_commiRate.Text = round(toNumber(ed_commi.Value) / toNumber(ed_netwr.Value) * 100, 1);
				}
				
				// 변경 시행율
				if ( toNumber(ed_chWavwr.Value) == 0 ) {
					ed_chWavwrRate.Text = 0;
				} else {
					ed_chWavwrRate.Text = round(toNumber(ed_chWavwr.Value) / toNumber(ed_chNetwr.Value) * 100, 1);
				}
				// 현행 수수료율
				if ( toNumber(ed_chNetwr.Value) == 0 || toNumber(ed_chCommi.Value) == 0 ) {
					ed_chCommiRate.Text = 0;
				} else {
					ed_chCommiRate.Text = round(toNumber(ed_chCommi.Value) / toNumber(ed_chNetwr.Value) * 100, 1);
				}

				// 율계산
				fn_rate();
			} else {
				Tab00.tab2.btn_HogiApp.Enable  = "false";
				Tab00.tab2.btn_HogiCanc.Enable = "false";
			}
			
			// [헤더]탭 변경청구내역리스트 존재시 그리드버튼 활성 여부
			//if ( ds_output_ZSDT0093.GetRowCount() > 0 ) {		//2018.06.16 헤더청구계획 존재 시 버튼 활성화 
			if ( ds_output_ZSDT0092_B1.getRowCount() > 0 && ds_output_ZSDT0093_B1.getRowCount() > 0 ) {
				Tab00.tab1.btn_addRow.visible = "True";
				Tab00.tab1.btn_delRow.Visible = "True";
			} else {
				Tab00.tab1.btn_addRow.visible = "false";
				Tab00.tab1.btn_delRow.Visible = "false";
			}
			//품목 청구계획 +/- 버튼 비활성화 
			Tab00.tab2.btn_addRow.visible = "false";
			Tab00.tab2.btn_delRow.Visible = "false";			
			
			// [사양]리스트
			if ( ds_output_ZSDT0094_change.GetRowCount() > 0 ) {
				ds_output_ZSDT0094_change_OnLoadCompleted();
			}
			
			// 국내프로젝트인지 해외프로젝트인지 여부
			st_projectGb.Text = iif(ufn_getIsLocalProject(), "국내", "해외");
			
			// 2013.01.24 호기별 청구 계획 (변경) Dataset 한번만 생성하도록 변경
			destroy("ds_output_ZSDT0093_B2");
			Create("Dataset", "ds_output_ZSDT0093_B2");
			object("ds_output_ZSDT0093_B2").copy(ds_output_ZSDT0093);
			object("ds_output_ZSDT0093_B2").AddColumn("STATUS", "STRING", 256);		
			
			
			if(strSvcID == "input") {
				for(var i=0; i < ds_change_ZSDT0091.GetRowCount(); i++) {
					ds_change_ZSDT0091.setColumn(i, "STATUS", "insert");	
				}
			}

			ufn_sayangForPrint(ed_pspId.Text, ed_seq.Text);
	
			//2018.06.12 품목 청구계획 수립 현장 -> 헤더 부족금액 초기화  by	 mj.Shin 
			if ( ds_output_ZSDT0093_B1.getRowCount() == 0 ) {
				Tab00.tab1.Grid0.SetCellProp('Head', 8, 'BkColor', 'chartreuse');
			}
			
			var abgru_tp = "";
			if ( ds_output_ZSDS0063.getColumn(0, "BSTDK") >= '2016-06-01' ) {
				abgru_tp = "10";
			} else {
				abgru_tp = "20";
			}
			ds_abgru.Filter("FILTER1 =="+quote(abgru_tp));
		
		}
		else if ( strSvcID == "queryZcobt304" ) { // 2012.01.16 원가내역서 추가
			
			fn_z304();	

			var objDs = object(Tab00.tab2.Grid.BindDataset);
			
			if ( objDs.GetRowCount() == 0 ) return;
			
			var sHogi = objDs.GetColumn(objDs.currow, "HOGI");
			var matnr = objDs.GetColumn(objDs.currow, "MATNR");
			var zprdgbn = fn_getClassCdFromMatnr(matnr);
			var arg   = "ZPRDGBN=" + quote(zprdgbn);
			
			ds_report.Filter("POSID==" + quote(sHogi));
			ds_block.Filter ("POSID==" + quote(sHogi));

			var findrow = ds_report.FindRow("POSID", sHogi);

			if (findrow == -1) {
				gfn_showAlert("CW00010");		//데이터가 없습니다.
				return false;
			}

			for ( var i = 0 ; i < ds_block.GetRowCount() ; i++ ) {
				ds_block.SetColumn(i, "NO", i+1);
			}
			
			Dialog("SSO::Sso0053.xml", arg, -1, -1, "Resize=true");
		}
		// 코드성
		else if ( strSvcID == "code" )
		{
		}
		// 삭제
		else if ( strSvcID == "DLET" )
		{
			http.sync = false; 
			ed_seq.value = ""; // 2013.03.21 삭제 후 이전 차수 정보가 남아있으면 오해의 소지가 있음
			fn_query();			// 재조회
			Tab00.TabIndex = 0;	// [호기]탭 활성화 => [헤더]탭 활성화로 변경
		}
		// 승인
		else if ( strSvcID == "ADMT" ) {
			http.sync = false; 
			gfn_showAlert("CI00005"); //CI00005 - 처리를 완료했습니다.
			ufn_completeChange();
			fn_query();			// 재조회
			Tab00.TabIndex = 0;	// [호기]탭 활성화 => [헤더]탭 활성화로 변경
		}
		// 저장
		else if ( strSvcID == "SAVE" )
		{
			http.sync = false; 
		    // 2020 브랜드
		    ds_brnd_hogi_del.ClearData();
			fn_query();			// 재조회
			Tab00.TabIndex = 0;	// [호기]탭 활성화 => [헤더]탭 활성화로 변경
		}
		// cost 
		else if ( strSvcID == "cost" )
		{
			// 부분원가 일치화 확인
			destroy("ds_check_temp");
			create("dataset", "ds_check_temp");
			ds_check_temp.copy(ds_check);
			ds_check_temp.Filter(" STATE != 'X' ");

			var sumResult = sum304();
			sumResult = convertIntoForeignCurrency(sumResult, ds_output_ZSDT0090.GetColumn(0, "CHWAERK"), ds_output_ZSDS0063.GetColumn(0, "AUART"));
			if(sumResult < 0) {
				gfn_showAlert('CE10007');	// 환율정보가 존재하지 않습니다.
				gfn_showMsgBar('CE10007', "CE00001");
				return false;
			}
			Tab00.tab3.ed_cost.Text = sumResult; // 원가합계
			
			// [변경원가]컬럼에 값 셋팅
			ds_change_ZSDT0091.setColumn(ds_change_ZSDT0091.currow, "CHWAVWR", sumResult );
			//adjustChnetwrByWavwr(ds_change_ZSDT0091);

			if (ds_check.GetRowCount() > 0) {
				if ( ds_check_temp.GetRowCount() > 0 ) {
					var pspid = ed_pspId.Text;
					var posid = Tab00.tab2.ed_hogi.Text;
					var qtnum = ds_check.GetColumn(0, "QTNUM");
					var qtseq = ds_check.GetColumn(0, "QTSEQ");
					var qtser = ds_check.GetColumn(0, "QTSER");
					var arg   = "fa_flag='cont'"
							  + " fa_pspid="+quote(pspid)
							  + " fa_posid="+quote(posid)
					;
					gfn_openPopUpUrlHdel("Ses::Ses0038.xml", true, arg);
				}
			}
			
			// 원가 산출이 끝난 자료는 표시를 해둔다.
			ds_change_ZSDT0091.SetColumn(ds_change_ZSDT0091.currow, "SPEC_STAT", "I");
		}
		// 사양변경
		else if ( strSvcID == "spec" )
		{
			// 2013.02.04 오류 처리 추가
			if ( ds_error.GetRowCount() > 0 ) { // 실패
				gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG"));
				//gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
				gfn_openMsgWin(ds_error.GetColumn(0,'ERRMSG'), 'W','A');
				return;
			}
			
			//fn_allCommit('SAVE'); //2017.04.10  2번 호출구분을 java Service에 구현 by mj.Shin 
			fn_allCommit('ADMT');
			return;
		} 
		// 사양조회
		else if ( strSvcID == 'sayang' )
		{
			// 호기리스트 추가시 사양추가
			fn_appendSayang();
		}
		else if ( strSvcID == "findSayangForPrint" )
		{
			Button1_OnClick(); // 출력실행
		}
		else if ( strSvcID == "queryExchange" ) //환율 조회
		{
			
		}
		else if ( strSvcID == "setCostState" ) // 상태 변경
		{
			if ( ds_error.GetRowCount() > 0 ) { // 실패
				gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG"));   
				//gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
				gfn_openMsgWin(ds_error.GetColumn(0,'ERRMSG'), 'W','A');
			} else { // 성공
				ds_output_ZSDT0090.SetColumn(0, "FINL", ds_cond.GetColumn(0, "FINL"));
				gfn_showMsg("CI00005"); //CI00005 - 처리를 완료했습니다.
			}
		}
		else if ( strSvcID == "queryDuty" ) { // Duty Call
			if(ds_error.rowcount > 0) {
				gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG"));   
				//gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
				gfn_openMsgWin(ds_error.GetColumn(0,'ERRMSG'), 'W','A');
			} else {
			    // 2020 브랜드 ds_template_add
				if ( ds_output_ZSDS0063.GetColumn(0, "SPART") == "30" ) return; // 물류는 사양 없음 (2012.12.12)
				var arr0094Ds = Array(6);
				arr0094Ds[0] = object("ds_output_ZSDT0094_A");
				arr0094Ds[1] = object("ds_output_ZSDT0094_B");
				arr0094Ds[2] = object("ds_output_ZSDT0094_C");
				arr0094Ds[3] = object("ds_output_ZSDT0094_D");
				arr0094Ds[4] = object("ds_output_ZSDT0094_E");
				arr0094Ds[5] = object("ds_output_ZSDT0094_F");
				
				var strFilter = "( POSNR=" + quote(ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "POSNR")) ; 
					strFilter += " && DISPTP == " + quote("X") + ")";

				// 사양그리드 redraw 설정
				var grdArry = ["Tab00.tab3.Grid", "Tab00.tab3.Grid0","Tab00.tab3.Grid1", "Tab00.tab3.Grid2","Tab00.tab3.Grid3", "Tab00.tab3.Grid4"];
				for(var i = 0; i < grdArry.length; i++) {
					eval(grdArry[i]).Redraw = false;
				}

				for ( var dsIdx = 0 ; dsIdx < arr0094Ds.length ; dsIdx++ )
				{
					var objDs = arr0094Ds[dsIdx];
					if ( !IsValidObject(objDs) ) continue;
					objDs.Filter(strFilter);
					
					for ( var i = 0 ; i < objDs.GetRowCount() ; i++ ) //2021.08.30 jss : Filter count변경
					{
						var atkla = objDs.GetColumn(i, "ATKLA");
						var prh   = objDs.GetColumn(i, "NAM_CHAR");
						var prd   = objDs.GetColumn(i, "CHAR_VALUE");
						var cnt   = objDs.GetColumn(i, "CNT");

						var nRowIdx = ds_template_add.SearchRowNF("ATKLA=="+quote(atkla)+"&&PRH=="+quote(prh));
						if ( nRowIdx > -1 )
						{	
							if(objDs.GetColumn(i, "CHAR_VALUE") != replace(ds_template_add.GetColumn(nRowIdx, "PRD"), " ", "")) {
								objDs.SetColumn(i, "STATUS", "update");
							}	
							objDs.SetColumn(i, "CHAR_VALUE", replace(ds_template_add.GetColumn(nRowIdx, "PRD"), " ", ""));
						}
					}
				}

				for(var i = 0; i < grdArry.length; i++) {
					eval(grdArry[i]).Redraw = true;
				}			    
			}

			fn_destroyWait();
		}
		// 2013.03.04 호기별 사양서 출력 추가
		else if ( strSvcID == "hogiSpecReport" ) {
			fn_destroyWait();
			// 2020 브랜드 보고서 체크 필요
			var arg = "aCnt="+quote(ds_A.GetRowCount())
					+ " bCnt="+quote(ds_B.GetRowCount())
					+ " CCnt="+quote(ds_C.GetRowCount())
					+ " DCnt="+quote(ds_D.GetRowCount())
					+ " ECnt="+quote(ds_E.GetRowCount())
					+ " FCnt="+quote(ds_F.GetRowCount())
					+ " GCnt="+quote(ds_G.GetRowCount())
					+ " ABCCnt="+quote(ds_A.GetRowCount()+ds_B.GetRowCount()+ds_C.GetRowCount());
			
			Dialog("SSO::Sso0041.xml", arg, -1, -1, "Resize=true");
		}
	}
}

function fn_afterInitForm(strSvcID, nErrorCode, strErrorMag) {
}

function ufn_sayangForPrint(pspid, seq) {
	var param = "";
	param += "pspId=" 	+ quote(pspid);
	param += " seq=" 	+ quote(seq);

	callServiceN("routingCheck"				// srvId
		, "sso0055n/sayangForPrint"					// url
		, ""										// biz에서 받는 명, mip에서 보내는 명
		, "ds_print_sayang=ds_print_sayang"			// mip에서 받는 명, biz에서 보내는 명
		, param										// strParam
		, "fn_findSayangForPrint"					// CallBackFunc
		);
}
function ufn_completeChange() {
	ds_routing.Filter('STATUS == "2"');	 //공정진행중 건만 신청
	var inDs =  'ds_routing=ds_routing';
	var outDs = 'ds_routing=ds_routing'
			 + ' ds_error=ds_error'
	;
	
	nsfRequest('completeChange', 'sso0055n/completeChange', inDs, outDs, '', 'fn_afterCompleteChange');
}
function fn_afterCompleteChange() {
}
function fn_findSayangForPrint() {
}
/******************************************************
* 율계산
*******************************************************/
function fn_rate()
{
	var sAuart   = ds_output_ZSDS0063.GetColumn(0, "AUART");    // 오더유형
	var sContrda = ds_output_ZSDS0063.GetColumn(0, "CONTR_DA"); // 수주 계약일 (VBAK-CONTR_DA)
	var sZapdat  = ds_output_ZSDS0063.GetColumn(0, "ZAPDAT");    // 견적승인일 
	var sSpart   = ds_output_ZSDS0063.GetColumn(0, "SPART"   ); // 제품군(VBAK-SPART) - 10-승강기,20-주차기,30-물류,40-PDS (제품군 10, 20 만 대리점 관리)

	// [현행] 금액, 원가 기준 수수료/수수료율 계산
	var nNetwr = toNumber(ds_change_ZSDT0091.Sum("NETWR")); // 금액 합계
	var nWavwr = toNumber(ds_change_ZSDT0091.Sum("WAVWR")); // 원가 합계	

	nWavwr = nWavwr + toNumber(ed_commi.Value);

	var nWavwrRate = 0;
	if ( nNetwr != 0 )
	{
		nWavwrRate = round(nWavwr / nNetwr * 100, 1); // 시행율 계산 ==> 원가합계,금액합계 기준
	}

	// 수수료, 수수료율 변수
	var nCommiRate = 0;
	var nCommi     = 0;
	
	// 최종 계산된 결과 반영
	ed_wavwr.Value     = nWavwr ;     // 원가
	ed_wavwrRate.Value =  nWavwrRate; // 시행율
	
	
	// 변경금액, 변경원가 기준 수수료/수수료율 계산
	var nChNetwr = toNumber(ds_change_ZSDT0091.Sum("CHNETWR"));	// 금액 합계
	var nChWavwr = toNumber(ds_change_ZSDT0091.Sum("CHWAVWR"));	// 원가 합계

	var nChWavwrRate = 0;
	if ( nChNetwr != 0 )
	{
		nChWavwrRate = round(nChWavwr / nChNetwr * 100, 1);		// 시행율 계산 ==> 원가합계,금액합계 기준
	}

//if(ds_output_zsdt0090.GetColumn(0, ds_output_ZSDT0090.GetColumn(0, "FINL")) == null) {
	// 수수료, 수수료율 변수
	var nChCommiRate = 0;
	var nChCommi 	 = 0;

	// 대리점의 경우, 수수료,수수료율 계산 및 원가,시행율 재계산
	if ( sAuart == "ZS02" || sAuart == "ZJ02" || sAuart == "ZN02") // 대리점
	{
		nChCommiRate = ZSD_GET_ZA90_VALUE(nChWavwrRate, sContrda, sSpart, sZapdat);	// 수수료율 계산 ==> 수주계약일,제품군,시행율 기준
		nChCommi	 = round(nChNetwr * nChCommiRate / 100, 0);				// 수수료   계산 ==> 금액합계,수수료율 기준

		nChWavwr	 = nChWavwr + nChCommi;						// 원가
		nChWavwrRate = 0;
		if ( nChNetwr != 0 )
		{
			nChWavwrRate = round(nChWavwr / nChNetwr * 100, 1);	// 시행율
		}
	}

	// 최종 계산된 결과 반영
	ed_chWavwr.Value 		= nChWavwr; 	// 원가
	ed_chWavwrRate.Value 	= nChWavwrRate; // 시행율
	ed_chCommiRate.Value 	= nChCommiRate; // 수수료율
	ed_chCommi.Value 		= nChCommi; 	// 수수료
//}
}

/******************************************************
* 대리점 판매 수수료 지급 기준
*   - SAP의 동명 FUNCTION을 그대로 옮겨옴, 2012.11.30
*   - Ses0031S.java 의 CalAgentP에도 동일한 로직 존재함, 2012.12.20
*   ※ 이 함수 수정시, SAP/Java 도 동일하게 수정해야 함
*"----------------------------------------------------------------------
*"*"Local interface:
*"  IMPORTING
*"     REFERENCE(ZRA0) TYPE  KONV-KBETR		비율(조건 금액 또는 백분율)
*"     REFERENCE(PRSDT) TYPE  KOMK-PRSDT	가격결정 및 환율에 대한 일자
*"     REFERENCE(SPART) TYPE  KOMK-SPART	제품군
*"  EXPORTING
*"     REFERENCE(ZA90) TYPE  KONV-KBETR		비율(조건 금액 또는 백분율)
*"----------------------------------------------------------------------
*DATA : LV_ZRA0(6) TYPE N.
*DATA : LV_OUTPUT(6) TYPE N.
*
*  대리점
*  시행율(%) 수료율(%)
*   ~ 94         7
*   ~ 98         6
*   ~ 100        5
*   = 100        4
*   ~ 105       3.5
*   ~ 107       2.5
*   ~ 110       0
*******************************************************/
function ZSD_GET_ZA90_VALUE(ZRA0, contradt, SPART, ZAPDAT) {

	var ZA90;
	var sQtdat;
	
	var zqnty = ds_change_ZSDT0091.CaseCount(
		"MATNR=="+quote("G-1000")	+
		" || MATNR=="+quote("J-1000") +
		" || MATNR=="+quote("L-1000") +
		" || MATNR=="+quote("L-2000") +
		" || MATNR=="+quote("S-1000") +
		" || MATNR=="+quote("S-2000") +
		" || MATNR=="+quote("W-1000")
	);
	
	var recadda = ds_recad_da.GetColumn(0,"RECAD_DA");//수주 승인일
	var erdat = ds_recad_da.getColumn(0,'ERDAT');//레코드 생성일

	var pspid = ds_recad_da.GetColumn(0,"PSPID");
	var vbeln = ds_vbeln2.GetColumn(0,"VBELN");
	var auart = ds_output_ZSDS0063.GetColumn(0, "AUART");//판매문서유형
	
    var kbetr2 = ds_129.GetColumn(0,'kbetr2'); //jss	
    var lv_area = ds_129.GetColumn(0,'area');    //운송지역 수수료 권역관리 2021.02.25 smj 
    
    if(auart <> 'ZS02') {
		kbetr2 = 0;	
	}
	
	//if(ds_output_ZSDT0090.GetColumn(0, "FINL") != 'X' && ds_129.GetColumn(0,'vbeln') > '') {
	//if(ds_129.GetColumn(0,'vbeln') > '') { //조회한 VBELN이 견적Header 테이블에 존재하는지 확인
	if(ds_output_ZSDT0090.GetColumn(0, "SEQ") >= maxSeq && ds_129.GetColumn(0, "vbeln") > '') {
	
		za90 = ds_129.GetColumn(0,'kbetr'); //비율(조건 금액 또는 백분율)
		za90 = za90+toNumber(kbetr2); //jss
		return za90;
	}

	ZRA0 = toNumber(ZRA0)*10;
	contradt = replace(replace(replace(contradt, "-", ""), ".", ""), "/", ""); //수주 계약일
	ZAPDAT = replace(replace(replace(ZAPDAT, "-", ""), ".", ""), "/", ""); //견적 승인일
	
	//수수료 기준일자 
	for ( var i = 0 ; i < ds_date_commi.GetRowCount(); i++) {	
		switch(ds_date_commi.GetColumn(i, "DATE_TP")) {
		case 'QTDAT':
			sQtdat = ds_date_commi.GetColumn(i, "BSDATE"); //zsdt1046-qtdat 견적일
			break;
		default:
			break;
		}			
	}
	
	if(left(auart,2) == 'ZJ') { //판매문서유형이 주차인 경우
		if(ZAPDAT < '00000000') { //견적승인일이 없다면
			ZAPDAT = contradt; //수주계약일을 넣어라.
		}
	}
	// 넘어오는 값은 백자리 실제값은 십자리 (소숫점 2자리)
	// 넘기는 값은 십자리 실제값은 일자리
	if ( SPART != '20' )	// 승강기
	{
		// 가격결정일이 200707월 이전일 경우
		if ( contradt < '20070701' )
		{
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 940 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 940 && ZRA0 <= 980 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 980 && ZRA0 < 1000 ) {
				ZA90 = 50;
			} else if ( ZRA0 == 1000 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 1000 && ZRA0 <= 1050 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 1050 && ZRA0 <= 1070 ) {
				ZA90 = 25;
			} else if ( ZRA0 > 1070 && ZRA0 <= 1100 ) {
				ZA90 = 20;
			} else if ( ZRA0 > 1100 && ZRA0 <= 1120 ) {
				ZA90 = 5;
			} else {
				ZA90 = 0;
			}
		}
		// 2008.10.27 계약분부터 적용
		else if ( contradt >= '20070701' && contradt < '20081027' )
		{
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 940 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 940 && ZRA0 <= 980 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 980 && ZRA0 < 1000 ) {
				ZA90 = 50;
			} else if ( ZRA0 == 1000 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 1000 && ZRA0 <= 1050 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 1050 && ZRA0 <= 1070 ) {
				ZA90 = 25;
			} else if ( ZRA0 > 1070 && ZRA0 <= 1100 ) {
				ZA90 = 0;
			} else {
				ZA90 = 0;
			}
		}
		// 2008.11월 계약분부터 적용
		else if ( contradt >= '20081027' && contradt < '20100421' )
		{
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 940 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 940 && ZRA0 <= 980 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 980 && ZRA0 <= 1000 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 1000 && ZRA0 <= 1020 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 1020 && ZRA0 <= 1050 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 1050 && ZRA0 <= 1070 ) {
				ZA90 = 25;
			} else if ( ZRA0 > 1070 && ZRA0 <= 1100 ) {
				ZA90 = 20;
			} else if ( ZRA0 > 1100 && ZRA0 <= 1120 ) {
				ZA90 = 5;
			} else {
				ZA90 = 0;
			}
		}
		// 2010.4월21일 계약분부터 적용
		else if ( contradt >= '20100421' && contradt < '20110531' )
		{
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 940 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 940 && ZRA0 <= 980 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 980 && ZRA0 <= 1000 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 1000 && ZRA0 <= 1020 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 1020 && ZRA0 <= 1050 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 1050 && ZRA0 <= 1070 ) {
				ZA90 = 25;
			} else if ( ZRA0 > 1070 && ZRA0 <= 1150 ) {
				ZA90 = 20;
			} else {
				ZA90 = 0;
			}
		}
		// 2011.5월31일 계약분부터 적용
		else if ( contradt >= '20110531' && contradt < '20120101' )
		{
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 840 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 840 && ZRA0 <= 880 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 880 && ZRA0 <= 900 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 900 && ZRA0 <= 920 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 920 && ZRA0 <= 950 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 950 && ZRA0 <= 970 ) {
				ZA90 = 25;
			} else if ( ZRA0 > 970 && ZRA0 <= 1050 ) {
				ZA90 = 20;
			} else {
				ZA90 = 0;
			}
		}
		// 2012.1월1일 계약분부터 적용
		else if ( contradt >= '20120101' && contradt < '20160801' )
		{
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 840 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 840 && ZRA0 <= 880 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 880 && ZRA0 <= 900 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 900 && ZRA0 <= 920 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 920 && ZRA0 <= 950 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 950 && ZRA0 <= 970 ) {
				ZA90 = 25;
			} else if ( ZRA0 > 970 && ZRA0 <= 1000 ) {
				ZA90 = 20;
			} else {
				ZA90 = 0;
			}
		}
		else if ( contradt >= '20160801' )                          //2016.08월01일 계약분부터 적용
		{
		  if ( ZRA0 <= 0 ) {
			ZA90 = 0;
		  } else if ( ZRA0  <= 840 ) {
			ZA90 = 70;
		  } else if ( ZRA0 > 840 && ZRA0  <= 880 ) {
			ZA90 = 60;
		  } else if ( ZRA0 > 880 && ZRA0  <= 900 ) {
			ZA90 = 50;
		  } else if ( ZRA0 > 900 && ZRA0  <= 920 ) {
			ZA90 = 45;
		  }	else if ( ZRA0 > 920 && ZRA0  <= 950 ) {
			ZA90 = 40;
		  } else if ( ZRA0 > 950 && ZRA0  <= 970 ) {
			ZA90 = 25;
		  } else if ( ZRA0 > 970 && ZRA0  <= 1000 ) {
			ZA90 = 20;
		  } else {
			ZA90 = 0;
		  }
		}
	}
	else
	{
		// 가격결정일이 200707월 이전일 경우
		if ( contradt < '20070701' )
		{
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 940 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 940 && ZRA0 <= 980 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 980 && ZRA0 < 1000 ) {
				ZA90 = 50;
			} else if ( ZRA0 == 1000 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 1000 && ZRA0 <= 1050 ) {
				ZA90 = 30;
			} else {
				ZA90 = 0;
			}
		}
		// 2008.10.27 계약분부터 적용
		else if ( contradt >= '20070701' && contradt < '20081027' )
		{
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 940 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 940 && ZRA0 <= 980 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 980 && ZRA0 < 1000 ) {
				ZA90 = 50;
			} else if ( ZRA0 == 1000 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 1000 && ZRA0 <= 1050 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 1050 && ZRA0 <= 1070 ) {
				ZA90 = 25;
			} else if ( ZRA0 > 1070 && ZRA0 <= 1100 ) {
				ZA90 = 0;
			} else {
				ZA90 = 0;
			}
		}
		// 2008.11월 계약분부터 적용
		else if ( contradt >= '20081027' && contradt < '20100421' )
		{
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 940 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 940 && ZRA0 <= 980 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 980 && ZRA0 <= 1000 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 1000 && ZRA0 <= 1020 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 1020 && ZRA0 <= 1050 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 1050 && ZRA0 <= 1070 ) {
				ZA90 = 25;
			} else if ( ZRA0 > 1070 && ZRA0 <= 1100 ) {
				ZA90 = 20;
			} else if ( ZRA0 > 1100 && ZRA0 <= 1120 ) {
				ZA90 = 5;
			} else {
				ZA90 = 0;
			}
		}
		// 2010.4월21일 계약분부터 적용
		else if ( contradt >= '20100421' && contradt < '20110529' )
		{
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 940 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 940 && ZRA0 <= 980 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 980 && ZRA0 <= 1000 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 1000 && ZRA0 <= 1020 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 1020 && ZRA0 <= 1050 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 1050 && ZRA0 <= 1070 ) {
				ZA90 = 25;
			} else if ( ZRA0 > 1070 && ZRA0 <= 1150 ) {
				ZA90 = 20;
			} else {
				ZA90 = 0;
			}
		}
		// 2011.5월29일 계약분부터 적용
		else if ( contradt >= '20110529' && contradt < '20130401' ) {
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 840 ) {
				ZA90 = 70;
			} else if ( ZRA0 > 840 && ZRA0 <= 880 ) {
				ZA90 = 60;
			} else if ( ZRA0 > 880 && ZRA0 <= 900 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 900 && ZRA0 <= 920 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 920 && ZRA0 <= 950 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 950 && ZRA0 <= 970 ) {
				ZA90 = 25;
			} else if ( ZRA0 > 970 && ZRA0 <= 1050 ) {
				ZA90 = 20;
			} else {
				ZA90 = 0;
			}
		}
		//2013.4월01일 계약분부터 적용
		else if ( contradt >= '20130401' && contradt < '20141001' ) {
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 870 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 870 && ZRA0 <= 900 ) {
				ZA90 = 45;
			} else if ( ZRA0 > 900 && ZRA0 <= 920 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 920 && ZRA0 <= 950 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 950 && ZRA0 <= 970 ) {
				ZA90 = 30;
			} else if ( ZRA0 > 970 && ZRA0 <= 980 ) {
				ZA90 = 15;
			} else if ( ZRA0 > 980 && ZRA0 <= 990 ) {
				ZA90 = 10;
			} else {
				ZA90 = 0;
			}
		}
		//2014.10월1일 계약분부터 적용
		else if ( contradt >= '20141001' && contradt < '20141220' ) {
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 841 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 841 && ZRA0 <= 871 ) {
				ZA90 = 45;
			} else if ( ZRA0 > 871 && ZRA0 <= 891 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 891 && ZRA0 <= 921 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 921 && ZRA0 <= 941 ) {
				ZA90 = 30;
			} else if ( ZRA0 > 941 && ZRA0 <= 951 ) {
				ZA90 = 15;
			} else if ( ZRA0 > 951 && ZRA0 <= 961 ) {
				ZA90 = 10;
			} else {
				ZA90 = 0;
			}
		}
		//2015.1월1일 계약분부터 적용  -> 공낙현 대리 요청 20141220일 계약분부터
		else if ( contradt >= '20141220' && contradt < '20160201' ) {
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 870 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 870 && ZRA0 <= 900 ) {
				ZA90 = 45;
			} else if ( ZRA0 > 900 && ZRA0 <= 920 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 920 && ZRA0 <= 950 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 950 && ZRA0 <= 970 ) {
				ZA90 = 30;
			} else if ( ZRA0 > 970 && ZRA0 <= 980 ) {
				ZA90 = 15;
			} else if ( ZRA0 > 980 && ZRA0 <= 1000 ) {
				ZA90 = 10;
			} else if ( ZRA0 > 1000 && ZRA0 <= 1030 ) {
				ZA90 = 5;
			} else {
				ZA90 = 0;
			}
		}
		//2016.2월1일 계약분부터 적용  -> 공낙현 대리 요청 20160225
		else {
			if ( ZRA0 <= 0 ) {
				ZA90 = 0;
			} else if ( ZRA0 <= 870 ) {
				ZA90 = 50;
			} else if ( ZRA0 > 870 && ZRA0 <= 900 ) {
				ZA90 = 45;
			} else if ( ZRA0 > 900 && ZRA0 <= 920 ) {
				ZA90 = 40;
			} else if ( ZRA0 > 920 && ZRA0 <= 950 ) {
				ZA90 = 35;
			} else if ( ZRA0 > 950 && ZRA0 <= 970 ) {
				ZA90 = 30;
			} else if ( ZRA0 > 970 && ZRA0 <= 980 ) {
				ZA90 = 20;
			} else if ( ZRA0 > 980 && ZRA0 <= 1000 ) {
				ZA90 = 10;
			} else if ( ZRA0 > 1000 && ZRA0 <= 1030 ) {
				ZA90 = 10;
			} else {
				ZA90 = 0;
			}
		}
	}

	var chk = 'N';	
	var higg = 'N';
	var innover = 'N';
	var neo = 'N';
	var vivaldi = 'N';
	var signature = 'N';
	var nysg1 = 0;	//New YZER & Special Signature - EL_BMDL
	var nysg2 = 0;	//New YZER & Special Signture - EL_BWC
	var nysg1902 = 0;
	var nex = 'N';

	var el_astda 	 = 'N';
	var el_astda_2nd = 'N';		// 2차 Promotion 연장 2019.08.01 ~ 2019.10.31
	//DB저장시 수수료 오류 수정 20141216
	ds_output_ZSDT0094_change.Unfilter();
	for ( var i = 0 ; i < ds_output_ZSDT0094_change.GetRowCountNF(); i++) {
		if ( ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == "STVF" )
		{		
			chk = 'Y';
		}
	    if ( ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == "EGMA" ||
	         ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == "EGDA" ||
	         ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == "EGDB" ||
	         ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == "E2A"  ||
	         ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == "E2B"  )
	    {
			higg = 'Y';
	    }
	    if ( 
	         (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == "EL_BWHG"     &&
			  ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") > " "       		)|| //B011 \CAR WALL 하이그로시(HIGH GLOS
	         (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == "EL_BWRCHG"   &&
			  ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") > " "       		)|| //B026 \CAR WALL(후면 중앙) : 하이그로시
	         (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == "EL_BWRSHG"   &&
			  ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") > " "       		)|| //B029 \CAR WALL(후면/좌우) : 하이그로시
	         (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == "EL_BWSCHG"   && 
			  ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") > " "       		)|| //B032 \CAR WALL(측면/중앙) : 하이그로시
	         (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == "EL_BWSFHG"   && 
			  ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") > " "       		)|| //B035 \CAR WALL(측면/전면) : 하이그로시
	         (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == "EL_BWSRHG"   && 
			  ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") > " "      		)|| //B038 \CAR WALL(측면/후면) : 하이그로시
	         (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == "EL_CHD1HG"   && 
			  ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") > " "       		)|| //C034 \HATCH DOOR(1) 하이그로시
	         (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == "EL_CHD2HGHG" && 
			  ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") > " "     		)||
	         (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == "EL_CHD3HG"   && 
			  ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") > " "       ) //C046 \HATCH DOOR(3) 하이그로시
			) 
	    {
			higg = 'Y';
	    }

	    if (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == 'EL_AINOV'
			&& ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == 'Y') //A020 \이노버 (INNOVER) 적용 여부
			innover = 'Y';

		if (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == 'EL_BMDL') { //B001 \표준의장(카탈로그/MODEL)
			switch(ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE")) {
			case 'NEOA': //NEO A (WHITE)
			case 'NEOB': //NEO B (GOLD)
			case 'NEOC': //NEO C (BLUE)
			case 'NEOD': //NEO D (BLACK)
			case 'NEOE': //NEO E (SILVER1)
			case 'NEOF': //NEO F (SILVER2)
				neo = 'Y';
				break;

			case 'VIPA': //VIVALDI PREMIUM GREEN
			case 'VIPB': //VIVALDI PREMIUM ROSE
			case 'VIPC': //VIVALDI PREMIUM BRONZE
			case 'VIPD': //VIVALDI PREMIUM BLACK
			case 'VISA': //VIVALDI SPRING
			case 'VISB': //VIVALDI SUMMER
			case 'VISC': //VIVALDI AUTUMN
			case 'VISD': //VIVALDI WINTER
				vivaldi = 'Y';
				break;
				
			case 'NEX_A1': //N:EX STRONG BLACK 주거용
			case 'NEX_A2': //N:EX STRONG BLACK 상가용
			case 'NEX_B1': //N:EX BRILLIANT BRONZE 주거용
			case 'NEX_B2': //N:EX BRILLIANT BRONZE 상가용
			case 'NEX_C1': //N:EX NATURES GREEN 주거용
			case 'NEX_C2': //N:EX NATURES GREEN 상가용
				nex = 'Y';
				break;
				
			default:
				break;
			}
		}

	    if (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == 'EL_BMDL' //B001 \표준의장(카탈로그/MODEL)
			&& (ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == 'NY2C' //NEW YZER 2 (CRYSTAL BLACK)
				|| ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == 'NY2E' //NEW YZER 2 (EMERALD GOLD)
				|| ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == 'NY2G' //NEW YZER 2 (GARNET BURGUNDY)
				|| ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == 'NY2T' //NEW YZER 2 (TOPAZ BRONZE)
			))
			signature = 'Y';

		if (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == 'EL_BMDL') { //B001 \표준의장(카탈로그/MODEL)
			switch(ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE")) {
			case 'NYSZ': //NYD-BRONZE
  			case 'NYSG': //NYS-GOLD
			case 'NYSS': //NYS-SILVER
			case 'NYSB': //NYS-BLACK
			case 'NYDZ': //NYD-BRONZE
			case 'NYDB': //NYD-BLACK
				nysg1 = nysg1 + 1;
				break;

			case 'NY2E': //NEW YZER 2 (EMERALD GOLD)
			case 'NY2T': //NEW YZER 2 (TOPAZ BRONZE)
			case 'NY2G': //NEW YZER 2 (GARNET BURGUNDY)
			case 'NY2C': //NEW YZER 2 (CRYSTAL BLACK)
				if(recadda < '20190201')
					nysg1 = nysg1 + 1;
				else
					nysg1902 = nysg1902 + 1;
				break;

			default:
				break;
			}
		}
		if (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == 'EL_BWC') {
			switch(ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE")) {
			case 'NYSZ':
			case 'NYSG':
			case 'NYSS':
			case 'NYSB':
			case 'NYDZ':
			case 'NYDB':
				nysg2 = nysg2 + 1;
				break;
			default:
				break;
			}
		}

		if ( contradt >= '20190501' && contradt <= '20190731' ) {
			if (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == 'EL_ASTDA') { //A037 \(국내)건축허가일(2013.9.15외)
				switch(ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE")) {
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
					el_astda = 'Y';
					break;
				default:
					break;
				}
			}
		}
		
		if ( sQtdat >= '20190801' && sQtdat <= '20191031' ) {
			if (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == 'EL_ASTDA') { //A037 \(국내)건축허가일(2013.9.15외)
				switch(ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE")) {
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
					el_astda_2nd = 'Y';
					break;
				default:
					break;
				}
			}
		}

		if ( sQtdat >= '20190801' && sQtdat <= '20190930' ) {		
			if (ds_output_ZSDT0094_change.getColumn(i,"NAM_CHAR") == 'EL_ASTDA' &&  //A037 \(국내)건축허가일(2013.9.15외)
				ds_output_ZSDT0094_change.getColumn(i,"CHAR_VALUE") == 'F' ) {
					el_astda_2nd = 'Y';
			}
		}
	}
	
	var lc_new_inst 	= 1;
    var lc_innover  	= 2;
    var lc_neo  		= 3;
    var lc_s_signature	= 4;
    var lc_remod		= 5;
    var lc_parking		= 6;
    var lc_innover18	= 7;
    var lc_neo18		= 8;
    var lc_parking18	= 9;
    var lc_s_nysg		= 10;
    var lc_vivaldi		= 11;
    var lc_s_nysg1902	= 12;
    var lc_remod_neo_vi = 13;
    var lc_nex			= 14;
	var lv_category;

	if(spart == '20')
	  lv_category = lc_parking;
	else //승강기
	  lv_category = lc_new_inst;

	if(innover == 'Y') //A020 \이노버 (INNOVER) 적용 여부
	  lv_category = lc_innover;

	if(signature == 'Y' && erdat >= '20170301' && erdat <= '20170430') //B001 \표준의장(카탈로그/MODEL) - NEW YZER 2 (CRYSTAL BLACK), NEW YZER 2 (EMERALD GOLD), NEW YZER 2 (GARNET BURGUNDY), NEW YZER 2 (TOPAZ BRONZE), 레코드 생성일
		lv_category = lc_s_signature;

	if((nysg1 == zqnty || nysg2 == zqnty) && contradt >= '20180601') //nysg1 - 1986line, zqnty - G-1000, J-1000, L-1000, L-2000, S-1000, S-2000, W-1000 카운트, nysg2 - EL_BWC인데 DB에 없음.
		lv_category = lc_s_nysg;

	if(nysg1902 == zqnty && contradt >= '20180601')
		lv_category = lc_s_nysg1902;

	if(neo == 'Y')
	  lv_category = lc_neo;

	if(vivaldi == 'Y')
	  lv_category = lc_vivaldi;

	if(nex == 'Y')
	  lv_category = lc_nex;
	  
	if(contradt >= '20180101') {
		switch(lv_category) {
			case lc_innover:
				lv_category = lc_innover18;
				break;

			case lc_neo:
				lv_category = lc_neo18;
				break;

			case lc_parking:
				lv_category = lc_parking18;
				break;

			default:
		}
	}

	if(substr(ed_pspId.Text,0,1) == 'N') {
		if(contradt >= '20200301') {
			switch (lv_category) {
				case lc_neo:
				case lc_neo18:
				case lc_vivaldi:
					lv_category = lc_remod_neo_vi;
					break;
				default:
					lv_category = lc_remod;
			}
		} else {
			lv_category = lc_remod;
		}
	}

	if(zapdat >= '20161201' || lv_category == lc_innover || lv_category == lc_neo) {
		switch(lv_category) {
		  case lc_new_inst:
			if(zra0 <= 0)
			  za90 = 0;
			else if(zra0 <= 840)
			  za90 = 70;
			else if(zra0 <= 850)
			  za90 = 60;
			else if(zra0 <= 860)
			  za90 = 58;
			else if(zra0 <= 870)
			  za90 = 56;
			else if(zra0 <= 880)
			  za90 = 54;
			else if(zra0 <= 890)
			  za90 = 52;
			else if(zra0 <= 900)
			  za90 = 50;
			else if(zra0 <= 910)
			  za90 = 48;
			else if(zra0 <= 920)
			  za90 = 46;
			else if(zra0 <= 930)
			  za90 = 44;
			else if(zra0 <= 940)
			  za90 = 42;
			else if(zra0 <= 950)
			  za90 = 40;
			else if(zra0 <= 960)
			  za90 = 35;
			else if(zra0 <= 970)
			  za90 = 35;
			else if(zra0 <= 980)
			  za90 = 30;
			else if(zra0 <= 990)
			  za90 = 30;
			else if(zra0 <= 1000)
			  za90 = 30;
			else
			  za90 = 0;
	
			break;
	
		  case lc_innover:
		  case lc_neo:
			if(zra0 <= 0)
			  za90 = 0;
			else if(zra0 <= 950)
			  za90 = 0;
			else if(zra0 <= 960)
			  za90 = 35;
			else if(zra0 <= 970)
			  za90 = 35;
			else if(zra0 <= 980)
			  za90 = 30;
			else if(zra0 <= 990)
			  za90 = 30;
			else
			  za90 = 30;
	
			break;
	
		  case lc_remod:
			if(zra0 <= 0)
			  za90 = 0;
			else if(zra0 <= 840)
			  za90 = 80;
			else if(zra0 <= 850)
			  za90 = 70;
			else if(zra0 <= 860)
			  za90 = 68;
			else if(zra0 <= 870)
			  za90 = 66;
			else if(zra0 <= 880)
			  za90 = 64;
			else if(zra0 <= 890)
			  za90 = 62;
			else if(zra0 <= 900)
			  za90 = 60;
			else if(zra0 <= 910)
			  za90 = 58;
			else if(zra0 <= 920)
			  za90 = 56;
			else if(zra0 <= 930)
			  za90 = 54;
			else if(zra0 <= 940)
			  za90 = 52;
			else if(zra0 <= 950)
			  za90 = 50;
			else if(zra0 <= 960)
			  za90 = 40;
			else if(zra0 <= 970)
			  za90 = 35;
			else if(zra0 <= 980)
			  za90 = 30;
			else if(zra0 <= 990)
			  za90 = 30;
			else if(zra0 <= 1000)
			  za90 = 30;
			else if(zra0 <= 1080)
			  za90 = 30;
			else
			  za90 = 30;
	
			break;
	
		  case lc_parking:
			if(zra0 <= 0)
			  za90 = 0;
			else if(zra0 <= 840)
			  za90 = 70;
			else if(zra0 <= 850)
			  za90 = 60;
			else if(zra0 <= 860)
			  za90 = 58;
			else if(zra0 <= 870)
			  za90 = 56;
			else if(zra0 <= 880)
			  za90 = 54;
			else if(zra0 <= 890)
			  za90 = 52;
			else if(zra0 <= 900)
			  za90 = 50;
			else if(zra0 <= 910)
			  za90 = 48;
			else if(zra0 <= 920)
			  za90 = 46;
			else if(zra0 <= 930)
			  za90 = 44;
			else if(zra0 <= 940)
			  za90 = 42;
			else if(zra0 <= 950)
			  za90 = 40;
			else if(zra0 <= 960)
			  za90 = 30;
			else if(zra0 <= 970)
			  za90 = 25;
			else if(zra0 <= 980)
			  za90 = 20;
			else if(zra0 <= 990)
			  za90 = 10;
			else if(zra0 <= 1000)
			  za90 = 10;
			else if(zra0 <= 1080)
			  za90 = 10;
			else
			  za90 = 0;
	
			break;
	
		  default:
		}
	}

	switch(lv_category) {
	  case lc_s_nysg:
		if(zra0 <= 0)
		  za90 = 0;
		else if(zra0 <= 840)
		  za90 = 70;
		else if(zra0 <= 850)
		  za90 = 60;
		else if(zra0 <= 860)
		  za90 = 58;
		else if(zra0 <= 870)
		  za90 = 56;
		else if(zra0 <= 880)
		  za90 = 54;
		else if(zra0 <= 890)
		  za90 = 52;
		else if(zra0 <= 900)
		  za90 = 50;
		else if(zra0 <= 910)
		  za90 = 48;
		else if(zra0 <= 920)
		  za90 = 46;
		else if(zra0 <= 930)
		  za90 = 44;
		else if(zra0 <= 940)
		  za90 = 42;
		else if(zra0 <= 950)
		  za90 = 40;
		else if(zra0 <= 960)
		  za90 = 35;
		else if(zra0 <= 970)
		  za90 = 35;
		else if(zra0 <= 980)
		  za90 = 30;
		else if(zra0 <= 1000)
		  za90 = 30;
		else if(zra0 <= 1030)
		  za90 = 30;
		else
		  za90 = 0;

		break;

	  case lc_s_signature:
		if(zra0 <= 0)
		  za90 = 0;
		else if(zra0 <= 840)
		  za90 = 70;
		else if(zra0 <= 850)
		  za90 = 60;
		else if(zra0 <= 860)
		  za90 = 58;
		else if(zra0 <= 870)
		  za90 = 56;
		else if(zra0 <= 880)
		  za90 = 54;
		else if(zra0 <= 890)
		  za90 = 52;
		else if(zra0 <= 900)
		  za90 = 50;
		else if(zra0 <= 910)
		  za90 = 48;
		else if(zra0 <= 920)
		  za90 = 46;
		else if(zra0 <= 930)
		  za90 = 44;
		else if(zra0 <= 940)
		  za90 = 42;
		else if(zra0 <= 950)
		  za90 = 40;
		else if(zra0 <= 960)
		  za90 = 35;
		else if(zra0 <= 970)
		  za90 = 35;
		else if(zra0 <= 980)
		  za90 = 35;
		else if(zra0 <= 990)
		  za90 = 35;
		else if(zra0 <= 1000)
		  za90 = 35;
		else
		  za90 = 30;

		break;

	  case lc_innover18:
	  case lc_neo18:
		if(zra0 <= 0)
		  za90 = 0;
		else if(zra0 <= 840)
			za90 = 56;
		else if(zra0 <= 850)
		  za90 = 54;
		else if(zra0 <= 860)
		  za90 = 52;
		else if(zra0 <= 870)
		  za90 = 50;
		else if(zra0 <= 880)
		  za90 = 48;
		else if(zra0 <= 890)
		  za90 = 46;
		else if(zra0 <= 900)
		  za90 = 44;
		else if(zra0 <= 910)
		  za90 = 42;
		else if(zra0 <= 920)
		  za90 = 40;
		else if(zra0 <= 930)
		  za90 = 35;
		else if(zra0 <= 940)
		  za90 = 35;
		else if(zra0 <= 950)
		  za90 = 35;
		else if(zra0 <= 960)
		  za90 = 35;
		else if(zra0 <= 970)
		  za90 = 35;
		else
		  za90 = 30;

		break;

	  case lc_parking18:
		if(zra0 <= 0)
		  za90 = 0;
		else if(zra0 <= 840)
		  za90 = 70;
		else if(zra0 <= 850)
		  za90 = 60;
		else if(zra0 <= 860)
		  za90 = 58;
		else if(zra0 <= 870)
		  za90 = 56;
		else if(zra0 <= 880)
		  za90 = 54;
		else if(zra0 <= 890)
		  za90 = 52;
		else if(zra0 <= 900)
		  za90 = 50;
		else if(zra0 <= 910)
		  za90 = 48;
		else if(zra0 <= 920)
		  za90 = 46;
		else if(zra0 <= 930)
		  za90 = 44;
		else if(zra0 <= 940)
		  za90 = 42;
		else if(zra0 <= 950)
		  za90 = 40;
		else if(zra0 <= 960)
		  za90 = 30;
		else if(zra0 <= 970)
		  za90 = 25;
		else if(zra0 <= 980)
		  za90 = 20;
		else if(zra0 <= 1000)
		  za90 = 15;
		else if(zra0 <= 1040)
		  za90 = 15;
		else if(zra0 <= 1080)
		  za90 = 10;
		else
		  za90 = 0;

		break;
	  default:
	}

	if(contradt >= '20181001') {
		switch(lv_category) {
			case lc_new_inst:
			case lc_innover:
			case lc_innover18:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 930)
					za90 = 44;
				else if(zra0 <= 940)
					za90 = 42;
				else if(zra0 <= 950)
					za90 = 40;
				else if(zra0 <= 960)
					za90 = 35;
				else if(zra0 <= 970)
					za90 = 35;
				else if(zra0 <= 980)
					za90 = 30;
				else if(zra0 <= 990)
					za90 = 30;
				else if(zra0 <= 1000)
					za90 = 30;
				else
					za90 = 0;
				break;
	
			case lc_s_nysg:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 930)
					za90 = 44;
				else if(zra0 <= 940)
					za90 = 42;
				else if(zra0 <= 950)
					za90 = 40;
				else if(zra0 <= 960)
					za90 = 35;
				else if(zra0 <= 970)
					za90 = 35;
				else if(zra0 <= 1030)
					za90 = 30;
				else
					za90 = 0;
				break;

			case lc_s_nysg1902:
				za90 = 0;
				break;
	
			case lc_neo:
			case lc_neo18:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 930)
					za90 = 50;
				else if(zra0 <= 940)
					za90 = 47;
				else if(zra0 <= 950)
					za90 = 45;
				else if(zra0 <= 960)
					za90 = 43;
				else if(zra0 <= 970)
					za90 = 42;
				else if(zra0 <= 980)
					za90 = 41;
				else if(zra0 <= 990)
					za90 = 39;
				else if(zra0 <= 1000)
					za90 = 37;
				else if(zra0 <= 1010)
					za90 = 33;
				else if(zra0 <= 1020)
					za90 = 32;
				else if(zra0 <= 1040)
					za90 = 31;
				else if(zra0 <= 1070)
					za90 = 30;
				else
					za90 = 0;
				break;
	
			case lc_remod:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 930)
					za90 = 54;
				else if(zra0 <= 940)
					za90 = 52;
				else if(zra0 <= 950)
					za90 = 50;
				else if(zra0 <= 960)
					za90 = 40;
				else if(zra0 <= 970)
					za90 = 35;
				else if(zra0 <= 1070)
					za90 = 30;
				else
					za90 = 0;
				break;
	
			case lc_parking:
			case lc_parking18:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 930)
					za90 = 44;
				else if(zra0 <= 940)
					za90 = 42;
				else if(zra0 <= 950)
					za90 = 40;
				else if(zra0 <= 960)
					za90 = 30;
				else if(zra0 <= 970)
					za90 = 25;
				else if(zra0 <= 980)
					za90 = 20;
				else if(zra0 <= 1040)
					za90 = 15;
				else if(zra0 <= 1070)
					za90 = 10;
				else
					za90 = 0;
				break;
	
			default:
		}
	}

	switch(lv_category) {
		case lc_vivaldi:
			if(zra0 <= 0)
				za90 = 0;
			else if(zra0 <= 930)
				za90 = 50;
			else if(zra0 <= 940)
				za90 = 47;
			else if(zra0 <= 950)
				za90 = 45;
			else if(zra0 <= 960)
				za90 = 43;
			else if(zra0 <= 970)
				za90 = 42;
			else if(zra0 <= 980)
				za90 = 41;
			else if(zra0 <= 990)
				za90 = 39;
			else if(zra0 <= 1000)
				za90 = 37;
			else if(zra0 <= 1010)
				za90 = 33;
			else if(zra0 <= 1020)
				za90 = 32;
			else if(zra0 <= 1040)
				za90 = 31;
			else if(zra0 <= 1070)
				za90 = 30;
			else
				za90 = 0;
			break;

		default:
	}

	if(el_astda == 'Y') {
		switch(lv_category) {
			case lc_new_inst:
			case lc_s_nysg:
			case lc_s_nysg1902:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 930)
					za90 = 44;
				else if(zra0 <= 940)
					za90 = 42;
				else if(zra0 <= 950)
					za90 = 40;
				else if(zra0 <= 960)
					za90 = 35;
				else if(zra0 <= 970)
					za90 = 35;
				else if(zra0 <= 1050)
					za90 = 30;
				else
					za90 = 0;
				break;

			case lc_neo:
			case lc_neo18:
			case lc_vivaldi:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 930)
					za90 = 50;
				else if(zra0 <= 940)
					za90 = 47;
				else if(zra0 <= 950)
					za90 = 45;
				else if(zra0 <= 960)
					za90 = 43;
				else if(zra0 <= 970)
					za90 = 42;
				else if(zra0 <= 980)
					za90 = 41;
				else if(zra0 <= 990)
					za90 = 39;
				else if(zra0 <= 1000)
					za90 = 37;
				else if(zra0 <= 1010)
					za90 = 37;
				else if(zra0 <= 1030)
					za90 = 35;
				else if(zra0 <= 1050)
					za90 = 33;
				else if(zra0 <= 1100)
					za90 = 30;
				else if(zra0 <= 1110)
					za90 = 25;
				else
					za90 = 0;
				break;

			default:
		}
	}

	if(el_astda_2nd == 'Y') {
		switch(lv_category) {
			case lc_new_inst:
			case lc_s_nysg:
			case lc_s_nysg1902:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 930)
					za90 = 44;
				else if(zra0 <= 940)
					za90 = 42;
				else if(zra0 <= 950)
					za90 = 40;
				else if(zra0 <= 960)
					za90 = 35;
				else if(zra0 <= 970)
					za90 = 35;
				else if(zra0 <= 1050)
					za90 = 30;
				else
					za90 = 0;
				break;

			case lc_neo:
			case lc_neo18:
			case lc_vivaldi:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 930)
					za90 = 52;
				else if(zra0 <= 940)
					za90 = 49;
				else if(zra0 <= 950)
					za90 = 47;
				else if(zra0 <= 960)
					za90 = 45;
				else if(zra0 <= 970)
					za90 = 44;
				else if(zra0 <= 980)
					za90 = 43;
				else if(zra0 <= 990)
					za90 = 41;
				else if(zra0 <= 1000)
					za90 = 39;
				else if(zra0 <= 1010)
					za90 = 39;
				else if(zra0 <= 1030)
					za90 = 37;
				else if(zra0 <= 1050)
					za90 = 35;
				else if(zra0 <= 1070)
					za90 = 32;					
				else if(zra0 <= 1090)
					za90 = 25;
				else if(zra0 <= 1110)
					za90 = 20;
				else
					za90 = 0;
				break;

			default:
		}
	}
	
	if ( contradt >= '20191001'	)
	{
		switch(lv_category) {
			case lc_new_inst:
			case lc_s_nysg:
			case lc_s_nysg1902:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 750)
					za90 = 68;
				else if(zra0 <= 800)
					za90 = 63;
				else if(zra0 <= 850)
					za90 = 58;
				else if(zra0 <= 890)
					za90 = 53;
				else if(zra0 <= 910)
					za90 = 48;
				else if(zra0 <= 930)
					za90 = 44;
				else if(zra0 <= 940)
					za90 = 42;					
				else if(zra0 <= 950)
					za90 = 40;							
				else if(zra0 <= 970)
					za90 = 35;							
				else if(zra0 <= 980)
					za90 = 34;							
				else if(zra0 <= 990)
					za90 = 33;							
				else if(zra0 <= 1000)
					za90 = 32;							
				else if(zra0 <= 1010)
					za90 = 31;							
				else if(zra0 <= 1050)
					za90 = 30;							
				else
					za90 = 0;
				break;

			case lc_neo:
			case lc_neo18:
			case lc_vivaldi:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 750)
					za90 = 80;
				else if(zra0 <= 800)
					za90 = 75;
				else if(zra0 <= 850)
					za90 = 70;
				else if(zra0 <= 890)
					za90 = 65;
				else if(zra0 <= 910)
					za90 = 60;					
				else if(zra0 <= 930)
					za90 = 56;
				else if(zra0 <= 940)
					za90 = 54;
				else if(zra0 <= 950)
					za90 = 52;
				else if(zra0 <= 960)
					za90 = 50;
				else if(zra0 <= 970)
					za90 = 48;
				else if(zra0 <= 980)
					za90 = 46;
				else if(zra0 <= 990)
					za90 = 44;
				else if(zra0 <= 1000)
					za90 = 42;
				else if(zra0 <= 1010)
					za90 = 40;
				else if(zra0 <= 1020)
					za90 = 39;
				else if(zra0 <= 1030)
					za90 = 38;
				else if(zra0 <= 1040)
					za90 = 37;							
				else if(zra0 <= 1050)
					za90 = 36;
				else if(zra0 <= 1060)
					za90 = 35;					
				else if(zra0 <= 1070)
					za90 = 34;					
				else if(zra0 <= 1080)
					za90 = 33;							
				else if(zra0 <= 1090)
					za90 = 32;
				else if(zra0 <= 1100)
					za90 = 31;					
				else if(zra0 <= 1110)
					za90 = 30;
				else
					za90 = 0;
				break;
			case lc_remod:
				if(zra0 <= 0)
					za90 = 0;
				else if(zra0 <= 750)
					za90 = 78;
				else if(zra0 <= 800)
					za90 = 73;
				else if(zra0 <= 850)
					za90 = 68;
				else if(zra0 <= 890)
					za90 = 63;
				else if(zra0 <= 910)
					za90 = 58;
				else if(zra0 <= 930)
					za90 = 54;
				else if(zra0 <= 940)
					za90 = 52;
				else if(zra0 <= 950)
					za90 = 50;
				else if(zra0 <= 960)
					za90 = 45;
				else if(zra0 <= 970)
					za90 = 40;
				else if(zra0 <= 980)
					za90 = 39;					
				else if(zra0 <= 990)
					za90 = 38;					
				else if(zra0 <= 1000)
					za90 = 37;					
				else if(zra0 <= 1010)
					za90 = 36;							
				else if(zra0 <= 1020)
					za90 = 35;							
				else if(zra0 <= 1030)
					za90 = 34;
				else if(zra0 <= 1040)
					za90 = 33;														
				else if(zra0 <= 1050)
					za90 = 32;
				else if(zra0 <= 1060)
					za90 = 31;
				else if(zra0 <= 1070)
					za90 = 30;		
				else
					za90 = 0;
				break;
				
			default:
		}
	}
	
	if ( contradt >= '20200201'	)
	{
		switch(lv_category) {
			case lc_new_inst:
			case lc_s_nysg:
			case lc_s_nysg1902:
				if ( zra0 <= 0 ) {
					ZA90 = 0;
				} else if (zra0 > 0 && zra0 <= 750 ) {
					ZA90 = 68;
				} else if (zra0 > 750 && zra0 <= 800) {
					ZA90 = 63;
				} else if (zra0 > 800 && zra0 <= 850) {
					ZA90 = 58;
				} else if (zra0 > 850 && zra0 <= 890) {
					ZA90 = 53;
				} else if (zra0 > 890 && zra0 <= 910) {
					ZA90 = 48;
				} else if (zra0 > 910 && zra0 <= 930) {
					ZA90 = 44;
				} else if (zra0 > 930 && zra0 <= 940) {
					ZA90 = 42;
				} else if (zra0 > 940 && zra0 <= 950) {
					ZA90 = 40;
				} else if (zra0 > 950 && zra0 <= 960) {
					ZA90 = 35;
				} else if (zra0 > 960 && zra0 <= 970) {
					ZA90 = 35;
				} else if (zra0 > 970 && zra0 <= 980) {
					ZA90 = 34;
				} else if (zra0 > 980 && zra0 <= 990) {
					ZA90 = 33;
				} else if (zra0 > 990 && zra0 <= 1000) {
					ZA90 = 32;
				} else if (zra0 > 1000 && zra0 <= 1010) {
					ZA90 = 31;
				} else if (zra0 > 1010 && zra0 <= 1020) {
					ZA90 = 30;
				} else if (zra0 > 1020 && zra0 <= 1030) {
					ZA90 = 30;
				} else if (zra0 > 1030 && zra0 <= 1040) {
					ZA90 = 30;
				} else if (zra0 > 1040 && zra0 <= 1050) {
					ZA90 = 30;
				} else {
					ZA90 = 0;
				}
				
				break;
			case lc_neo:
			case lc_neo18:
			case lc_vivaldi:
				if ( zra0 <= 0 ) {
					ZA90 = 0;
				} else if (zra0 > 0 && zra0 <= 750 ) {
					ZA90 = 70;
				} else if (zra0 > 750 && zra0 <= 800) {
					ZA90 = 65;
				} else if (zra0 > 800 && zra0 <= 850) {
					ZA90 = 60;
				} else if (zra0 > 850 && zra0 <= 890) {
					ZA90 = 56;
				} else if (zra0 > 890 && zra0 <= 910) {
					ZA90 = 54;
				} else if (zra0 > 910 && zra0 <= 930) {
					ZA90 = 52;
				} else if (zra0 > 930 && zra0 <= 940) {
					ZA90 = 50;
				} else if (zra0 > 940 && zra0 <= 950) {
					ZA90 = 48;
				} else if (zra0 > 950 && zra0 <= 960) {
					ZA90 = 46;
				} else if (zra0 > 960 && zra0 <= 970) {
					ZA90 = 44;
				} else if (zra0 > 970 && zra0 <= 980) {
					ZA90 = 42;
				} else if (zra0 > 980 && zra0 <= 990) {
					ZA90 = 40;
				} else if (zra0 > 990 && zra0 <= 1000) {
					ZA90 = 39;
				} else if (zra0 > 1000 && zra0 <= 1010) {
					ZA90 = 38;
				} else if (zra0 > 1010 && zra0 <= 1020) {
					ZA90 = 37;
				} else if (zra0 > 1020 && zra0 <= 1030) {
					ZA90 = 36;
				} else if (zra0 > 1030 && zra0 <= 1040) {
					ZA90 = 35;
				} else if (zra0 > 1040 && zra0 <= 1050) {
					ZA90 = 34;
				} else if (zra0 > 1050 && zra0 <= 1060) {
					ZA90 = 33;
				} else if (zra0 > 1060 && zra0 <= 1070) {
					ZA90 = 32;
				} else if (zra0 > 1070 && zra0 <= 1080) {
					ZA90 = 31;
				} else if (zra0 > 1080 && zra0 <= 1090) {
					ZA90 = 30;
				} else {
					ZA90 = 0;
				}
				
				break;
			default:
		}
	}
	
	if(contradt >= '20200301' && substr(ed_pspId.Text,0,1) == 'N') {
		
		var lv_chck = 'X';
		
		if(ls_vbpa == null || ls_vbpa == "") {
			za90 = 0;
			gfn_showAlert("CW10025", "영업사원이 입력되어있지 않습니다.\n영업사원이 없다면 수수료는 0원입니다.");
			return false;
		}
		
		if(zsdt0214 == '0') {
			lv_chck = '';
		}
		
		switch(lv_category) {
			case lc_remod:
				if ( zra0 <= 0 ) {
					za90 = 0;
				} else if (zra0 > 0 && zra0 <= 750 ) {
					ZA90 = 68;
				} else if (zra0 > 750 && zra0 <= 800) {
					ZA90 = 63;
				} else if (zra0 > 800 && zra0 <= 850) {
					ZA90 = 58;
				} else if (zra0 > 850 && zra0 <= 890) {
					ZA90 = 53;
				} else if (zra0 > 890 && zra0 <= 910) {
					ZA90 = 48;
				} else if (zra0 > 910 && zra0 <= 930) {
					ZA90 = 44;
				} else if (zra0 > 930 && zra0 <= 940) {
					ZA90 = 42;
				} else if (zra0 > 940 && zra0 <= 950) {
					ZA90 = 40;
				} else if (zra0 > 950 && zra0 <= 960) {
					ZA90 = 35;
				} else if (zra0 > 960 && zra0 <= 970) {
					ZA90 = 35;
				} else if (zra0 > 970 && zra0 <= 980) {
					ZA90 = 34;
				} else if (zra0 > 980 && zra0 <= 990) {
					ZA90 = 33;
				} else if (zra0 > 990 && zra0 <= 1000) {
					ZA90 = 32;
				} else if (zra0 > 1000 && zra0 <= 1010) {
					ZA90 = 31;
				} else if (zra0 > 1010 && zra0 <= 1020) {
					ZA90 = 30;
				} else if (zra0 > 1020 && zra0 <= 1030) {
					ZA90 = 30;
				} else if (zra0 > 1030 && zra0 <= 1040) {
					ZA90 = 30;
				} else if (zra0 > 1040 && zra0 <= 1050) {
					ZA90 = 30;
				} else {
					ZA90 = 0;
				}
				
				if(ZA90 != 0 && lv_chck != 'X') { //현대협력사가 아닐 경우
					ZA90 = ZA90 + 10;
				}
				
				break;
			case lc_remod_neo_vi:
				if ( zra0 <= 0 ) {
					za90 = 0;
				} else if (zra0 > 0 && zra0 <= 750 ) {
					ZA90 = 60;
				} else if (zra0 > 750 && zra0 <= 800) {
					ZA90 = 55;
				} else if (zra0 > 800 && zra0 <= 850) {
					ZA90 = 50;
				} else if (zra0 > 850 && zra0 <= 890) {
					ZA90 = 46;
				} else if (zra0 > 890 && zra0 <= 910) {
					ZA90 = 44;
				} else if (zra0 > 910 && zra0 <= 930) {
					ZA90 = 42;
				} else if (zra0 > 930 && zra0 <= 940) {
					ZA90 = 40;
				} else if (zra0 > 940 && zra0 <= 950) {
					ZA90 = 38;
				} else if (zra0 > 950 && zra0 <= 960) {
					ZA90 = 36;
				} else if (zra0 > 960 && zra0 <= 970) {
					ZA90 = 34;
				} else if (zra0 > 970 && zra0 <= 980) {
					ZA90 = 32;
				} else if (zra0 > 980 && zra0 <= 990) {
					ZA90 = 30;
				} else if (zra0 > 990 && zra0 <= 1000) {
					ZA90 = 28;
				} else if (zra0 > 1000 && zra0 <= 1010) {
					ZA90 = 26;
				} else if (zra0 > 1010 && zra0 <= 1020) {
					ZA90 = 25;
				} else if (zra0 > 1020 && zra0 <= 1030) {
					ZA90 = 24;
				} else if (zra0 > 1030 && zra0 <= 1040) {
					ZA90 = 23;
				} else if (zra0 > 1040 && zra0 <= 1050) {
					ZA90 = 22;
				} else if (zra0 > 1050 && zra0 <= 1060) {
					ZA90 = 21;
				} else if (zra0 > 1060 && zra0 <= 1070) {
					ZA90 = 20;
				} else {
					ZA90 = 0;
				}
				
				if(ZA90 != 0 && lv_chck != 'X') { //현대협력사가 아닐 경우
					ZA90 = ZA90 + 10;
				}
				
				break;
			default :
		}
	}

	if ( contradt >= '20210128' &&  Left(auart, 2) == "ZS" )
	{
		switch(lv_category) {
			case lc_new_inst:
			case lc_s_nysg:
			case lc_s_nysg1902:
				if ( zra0 <= 0 ) {
					ZA90 = 0;
				} else if (zra0 > 0 && zra0 <= 750 ) {
					ZA90 = 68;
				} else if (zra0 > 750 && zra0 <= 800) {
					ZA90 = 63;
				} else if (zra0 > 800 && zra0 <= 850) {
					ZA90 = 58;
				} else if (zra0 > 850 && zra0 <= 890) {
					ZA90 = 53;
				} else if (zra0 > 890 && zra0 <= 910) {
					ZA90 = 48;
				} else if (zra0 > 910 && zra0 <= 930) {
					ZA90 = 44;
				} else if (zra0 > 930 && zra0 <= 940) {
					ZA90 = 42;
				} else if (zra0 > 940 && zra0 <= 950) {
					ZA90 = 40;
				} else if (zra0 > 950 && zra0 <= 960) {
					ZA90 = 39;
				} else if (zra0 > 960 && zra0 <= 970) {
					ZA90 = 38;
				} else if (zra0 > 970 && zra0 <= 980) {
					ZA90 = 37;
				} else if (zra0 > 980 && zra0 <= 990) {
					ZA90 = 36;
				} else if (zra0 > 990 && zra0 <= 1000) {
					ZA90 = 35;
				} else if (zra0 > 1000 && zra0 <= 1010) {
					ZA90 = 34;
				} else if (zra0 > 1010 && zra0 <= 1020) {
					ZA90 = 33;
				} else if (zra0 > 1020 && zra0 <= 1030) {
					ZA90 = 32;
				} else if (zra0 > 1030 && zra0 <= 1040) {
					ZA90 = 31;
				} else if (zra0 > 1040 && zra0 <= 1050) {
					ZA90 = 30;
				} else {
					ZA90 = 0;
				}
				
				break;
			case lc_neo:
			case lc_neo18:
			case lc_vivaldi:
			case lc_nex:
				if ( zra0 <= 0 ) {
					ZA90 = 0;
				} else if (zra0 > 0 && zra0 <= 750 ) {
					ZA90 = 70;
				} else if (zra0 > 750 && zra0 <= 800) {
					ZA90 = 65;
				} else if (zra0 > 800 && zra0 <= 850) {
					ZA90 = 60;
				} else if (zra0 > 850 && zra0 <= 890) {
					ZA90 = 56;
				} else if (zra0 > 890 && zra0 <= 910) {
					ZA90 = 54;
				} else if (zra0 > 910 && zra0 <= 930) {
					ZA90 = 52;
				} else if (zra0 > 930 && zra0 <= 940) {
					ZA90 = 50;
				} else if (zra0 > 940 && zra0 <= 950) {
					ZA90 = 48;
				} else if (zra0 > 950 && zra0 <= 960) {
					ZA90 = 46;
				} else if (zra0 > 960 && zra0 <= 970) {
					ZA90 = 44;
				} else if (zra0 > 970 && zra0 <= 980) {
					ZA90 = 42;
				} else if (zra0 > 980 && zra0 <= 990) {
					ZA90 = 40;
				} else if (zra0 > 990 && zra0 <= 1000) {
					ZA90 = 39;
				} else if (zra0 > 1000 && zra0 <= 1010) {
					ZA90 = 38;
				} else if (zra0 > 1010 && zra0 <= 1020) {
					ZA90 = 37;
				} else if (zra0 > 1020 && zra0 <= 1030) {
					ZA90 = 36;
				} else if (zra0 > 1030 && zra0 <= 1040) {
					ZA90 = 35;
				} else if (zra0 > 1040 && zra0 <= 1050) {
					ZA90 = 34;
				} else if (zra0 > 1050 && zra0 <= 1060) {
					ZA90 = 33;
				} else if (zra0 > 1060 && zra0 <= 1070) {
					ZA90 = 32;
				} else if (zra0 > 1070 && zra0 <= 1080) {
					ZA90 = 31;
				} else if (zra0 > 1080 && zra0 <= 1090) {
					ZA90 = 30;
				} else {
					ZA90 = 0;
				}
				
				break;
			default:
		}
		
		//2021.02.25 smj 운송지역 수수료 권역관리		
		switch(lv_area) {
			case 'A2':
				switch(lv_category) {	
					case lc_new_inst:
					case lc_s_nysg:
					case lc_s_nysg1902:
						if (zra0 > 1050 && zra0 <= 1060) {
							ZA90 = 30;
						} else if (zra0 > 1060 && zra0 <= 1070) {
							ZA90 = 30;
						}
						break;
					case lc_neo:
					case lc_neo18:
					case lc_vivaldi:
					case lc_nex:
						if (zra0 > 1090 && zra0 <= 1100) {
							ZA90 = 30;
						} else if (zra0 > 1100 && zra0 <= 1110) {
							ZA90 = 30;					
						}
						break;
					default:
				}
				break;						
			case 'A3':
				switch(lv_category) {
					case lc_new_inst:
					case lc_s_nysg:
					case lc_s_nysg1902:
						if (zra0 > 1050 && zra0 <= 1060) {
							ZA90 = 30;
						} else if (zra0 > 1060 && zra0 <= 1070) {
							ZA90 = 30;
						}else if (zra0 > 1070 && zra0 <= 1080) {
							ZA90 = 30;
						} 
						break;								
					case lc_neo:
					case lc_neo18:
					case lc_vivaldi:
					case lc_nex:
						if (zra0 > 1090 && zra0 <= 1100) {
							ZA90 = 30;
						} else if (zra0 > 1100 && zra0 <= 1110) {
							ZA90 = 30;					
						} else if (zra0 > 1110 && zra0 <= 1120) {
							ZA90 = 30;												
						}
						break;
					default:
				}
				break;
			default:					
		}
	}
	
	//주차기 수수료
    if ( contradt >= '20210101' )
    {
        switch(lv_category) {
			case lc_parking:
			case lc_parking18:
            
                if(zra0 <= 0)
                    za90 = 0;
                else if(zra0 <= 930)
                    za90 = 45;
                else if(zra0 <= 940)
                    za90 = 40;
                else if(zra0 <= 950)
                    za90 = 35;
                else if(zra0 <= 960)
                    za90 = 30;
                else if(zra0 <= 970)
                    za90 = 25;
                else if(zra0 <= 980)
                    za90 = 22;
                else if(zra0 <= 990)
                    za90 = 20;
                else if(zra0 <= 1000)
                    za90 = 19;
                else if(zra0 <= 1010)
                    za90 = 18;
                else if(zra0 <= 1020)
                    za90 = 17;
                else if(zra0 <= 1030)
                    za90 = 16;
                else if(zra0 <= 1040)
                    za90 = 15;
                else if(zra0 <= 1050)
                    za90 = 13;
                else if(zra0 <= 1060)
                    za90 = 12;
                else if(zra0 <= 1070)
                    za90 = 10;
                else if(zra0 <= 1080)
                    za90 = 7;
                else if(zra0 <= 1090)
                    za90 = 6;
                else if(zra0 <= 1110)
                    za90 = 5;
                else
                    za90 = 0;
                break;
   
            default:
        }
    }
    
	if ( chk == "Y" && (contradt >= '20130801' AND contradt < '20150201') ) 
	{
		ZA90 = ZA90 - 5;
	}
	
	if ( higg == "Y" && (contradt >= '20130801' AND contradt < '20150201') ) 
	{
		ZA90 = ZA90 - 5;
	}
	
	if((zapdat != '' && zapdat != null) && zapdat < '20161201' && lv_category <> lc_innover && lv_category <> lc_neo && lv_category <> lc_s_signature
		&& lv_category <> lc_innover18 && lv_category <> lc_neo18 && lv_category <> lc_parking18 && lv_category <> lc_vivaldi) {
		if (substr(ed_pspId.Text,0,1) == "N"){
			ZA90 = ZA90 + 10;
		}

		if (substr(ed_pspId.Text,0,1) == "J"){   // 승강기 동시 수주 현장은 수수료 0.5% 추가 
			if (substr(pspid,0,1) == "1"){
				ZA90 = ZA90 + 5;
			}
		}
		
		if (substr(ed_pspId.Text,0,1) == "1"){   // 주차 동시 수주 현장은 수수료 0.5% 추가 
			if (substr(vbeln,0,1) == "J"){
				ZA90 = ZA90 + 5;
			}
		}
	}
	
	if ( toNumber(ed_chNetwr.Value) > 500000000 && ZA90 > 50 ) { //5억 이상 최대 5프로 지급 
		ZA90 = 50;
	}

	ZA90 = round(ZA90/10, 1);

	switch(lv_category) {
		case lc_neo:
		case lc_neo18:
		case lc_vivaldi:
			if(zra0 <= 1010) {
				za90 = za90 + toNumber(adtza90)/10;
			}
			break;
		default:
	}

	ZA90 = ZA90+toNumber(kbetr2); //jss

	return ZA90;
}
/******************************************************
* 그리드 헤더 클릭시 정렬 처리 
*******************************************************/
function Grid_OnHeadClick(obj,nCell,nX,nY,nPivotIndex) 
{
    // 2020 브랜드
    // 소그룹 타이틀 문제로 정열기능 주석 처리
    /*
	if (nCell == 0) 
	{
		// 컬럼 display 여부
		gfn_selectGridCol(obj); 
	} 
	else 
	{
		// 그리드 정렬 처리 
		gfn_sortGrid(obj, nCell);
	}
	*/
}

/******************************************************
* [헤더 - 현행 청구계획] OnLoadCompleted
*******************************************************/
function ds_output_ZSDT0092_OnLoadCompleted(obj,nErrorCode,strErrorMsg,nReason)
{
	
	// 헤더 - 현행
	destroy("ds_output_ZSDT0092_B1");
	Create("Dataset", "ds_output_ZSDT0092_B1");
	object("ds_output_ZSDT0092_B1").copy(ds_output_ZSDT0092);
	object("ds_output_ZSDT0092_B1").Filter("POSNR=='' || POSNR=='000000'"); // 판매문서품목 별 필터
	Tab00.tab1.Grid.BindDataset = "ds_output_ZSDT0092_B1";
	
	fn_Pay();	
}

/******************************************************
* 현행청구계획 계산식
*******************************************************/
function fn_Pay()
{	
	// 현행금액 - 현행청구금액
	var moneyOkYn = toNumber(ed_netwr.Value) - toNumber(ds_output_ZSDT0092_B1.sum("FAKWR"));
	
	//2018.06.12 품목 청구계획 수립 현장 -> 헤더 부족금액 초기화  by mj.Shin 
	if ( ds_output_ZSDT0092_B1.getRowCount() == 0 ) {
		moneyOkYn = 0;
	}
		
	if ( moneyOkYn == 0 )
	{
		Tab00.tab1.Grid.SetCellProp('Head', 8, 'BkColor', 'chartreuse'); 	// 차이가 없으며 녹색
	}
	else
	{
		Tab00.tab1.Grid.SetCellProp('Head', 8, 'BkColor', 'red');			// 차이가 있으면 레드
	}
	
}

/******************************************************
* ds_output_ZSDT0093_OnLoadCompleted
*******************************************************/
function ds_output_ZSDT0093_OnLoadCompleted(obj,nErrorCode,strErrorMsg,nReason)
{
	// 헤더 - 변경
	destroy("ds_output_ZSDT0093_B1");
	Create("Dataset", "ds_output_ZSDT0093_B1");
	object("ds_output_ZSDT0093_B1").copy(ds_output_ZSDT0093);
	object("ds_output_ZSDT0093_B1").AddColumn("STATUS", "STRING", 256);		// 상태필드 추가
	object("ds_output_ZSDT0093_B1").Filter("POSNR=='' || POSNR=='000000'"); // 판매문서품목 별 필터
	Tab00.tab1.Grid0.BindDataset = "ds_output_ZSDT0093_B1";
	
	if ( ds_output_ZSDT0093_B1.getRowCount() == 0 )
	{
		return;
	}
			
	// 변경청구계획 계산식
	fn_chPay();
	
	// onChange 이벤트
	ds_output_ZSDT0093_B1.OnColumnChanged = "ds_output_ZSDT0093_B1_OnColumnChanged";
}

/******************************************************
* ds_output_ZSDT0093_B1_OnColumnChanged - 헤더 변경 청구계획
*******************************************************/
function ds_output_ZSDT0093_B1_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	var contrda = ds_output_ZSDS0063.GetColumn(0, "CONTR_DA"); // 수주 계약일 (VBAK-CONTR_DA)
    
	// 청구금액
	if ( strColumnID == 'CHFAKWR' ) {
		// 변경청구계획 계산식
		fn_chPay();
	}
	
	// 종별구분
	if ( strColumnID == 'CHMLBEZ' ||  strColumnID == 'CHFKDAT' ) {
		//2017.01.31 종별구분 내역 갱신 Column index 수정 (4 ->  5) : ZSDT0093-CHMSTXT 값 보정 by mj.Shin 
		obj.setColumn(nRow, "CHMSTXT", Tab00.tab1.Grid0.GetCellText('Body',nRow,5));	// 내역
	}
	
	// 상태flag
	if ( obj.getColumn(nRow, "STATUS") != 'insert'	) {
		obj.setColumn(nRow, "STATUS", "update");
	}
}

/******************************************************
* 변경청구계획 계산식
*******************************************************/
function fn_chPay()
{		
	// 변경금액 - 변경청구금액
	var moneyOkYn = toNumber(ds_change_ZSDT0091.Sum("CHNETWR")) - toNumber(ds_output_ZSDT0093_B1.Sum("CHFAKWR"));
	
	//2018.06.12 품목 청구계획 수립 현장 -> 헤더 부족금액 초기화  by mj.Shin 
	if ( ds_output_ZSDT0093_B1.getRowCount() == 0 ) {
		moneyOkYn = 0;
	}
	
	if ( moneyOkYn == 0 )
	{
		Tab00.tab1.Grid0.SetCellProp('Head', 8, 'BkColor', 'chartreuse'); 	// 부족금액이 0이면 녹색
		Tab00.tab1.ed_lackPay.text = 0; 									// 부족금액
	}
	else
	{
		Tab00.tab1.Grid0.SetCellProp('Head', 8, 'BkColor', 'red'); 			// 부족금액이 0아니면 레드
		Tab00.tab1.ed_lackPay.text = moneyOkYn; 							// 부족금액
	}
}


/******************************************************
* Tab00_change_OnCellClick - 변경청구계획
* 클릭시 콤보리스트
*******************************************************/
function Tab00_change_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	//2021.06 jss
	var chfksaf = object(obj.BindDataset).GetColumn(nRow, "CHFKSAF");
	obj.Editable = iif(chfksaf != 'A', false, true);

	// 종별구분:4,5, 지급조건:6
	if ( nCell == 6 )
	{
		obj.SetCellProp('Body', nCell, "Display", "combo");
		obj.SetCellProp('Body', nCell, "edit", "combo");
		obj.SetCellProp('Body', nCell, "ComboText", "CODE_NAME");
	}
}

/******************************************************
* Tab00_change_OnCellPosChanged - 변경청구계획
* edit시에만 콤보리스트
*******************************************************/
function Tab00_change_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex)
{
	// (2012.11.29) 청구상태 완료(ZSDT0092-FKSAF = 'C' :기청구)인 것은 수정 불가능하도록 수정 요청
	// 청구상태 = CHFKSAF
	var chfksaf = object(obj.BindDataset).GetColumn(nRow, "CHFKSAF");
	//obj.Editable = iif(chfksaf == 'C', false, true);
	obj.Editable = iif(chfksaf != 'A', false, true);
	
	// 종별구분:4, 지급조건:6
	if ( nOldCell == 6 )
	{
		obj.SetCellProp('Body', nOldCell, "Display", "text");
		obj.SetCellProp('Body', nOldCell, "edit", "normal");
	}
	// 종별구분:4, 지급조건:6
	if ( nCell == 6 )
	{
		obj.SetCellProp('Body', nCell, "Display", "combo");
		obj.SetCellProp('Body', nCell, "edit", "combo");
		obj.SetCellProp('Body', nCell, "ComboText", "CODE_NAME");
	}
}

/******************************************************
* Tab00_change_OnCellPosChanged - 변경청구계획
* 포커스 아웃시 display - text
*******************************************************/
function Tab00_change_OnKillFocus(obj)
{
	// 종별구분:4, 지급조건:6
	obj.SetCellProp('Body', 6, "Display", "text");
	obj.SetCellProp('Body', 6, "edit", "normal");
}

/******************************************************
* [호기리스트] OnLoadCompleted 
*******************************************************/
function ds_output_ZSDT0091_OnLoadCompleted(obj,nErrorCode,strErrorMsg,nReason)
{
	// 데이타 가공용 ds 생성
	destroy("ds_change_ZSDT0091");
	create("dataset", "ds_change_ZSDT0091");
	object("ds_change_ZSDT0091").copy(ds_output_ZSDT0091);
	object("ds_change_ZSDT0091").AddColumn("STATUS", "STRING", 256); // 상태 필드 추가
 
	// 데이터건수별로 버튼 활성여부
	if ( ds_change_ZSDT0091.getRowCount() > 0 )
	{
		Tab00.tab2.btn_pnAddRow.Visible = true;
		Tab00.tab2.btn_pnDelRow.Visible = true;
	}
	else
	{
		Tab00.tab2.btn_pnAddRow.Visible = false;
		Tab00.tab2.btn_pnDelRow.Visible = false;
	}
	
	// 가공된 데이터셋으로 바인딩
	Tab00.tab2.Grid.BindDataset = "ds_change_ZSDT0091";

	// 이벤트 추가
	object("ds_change_ZSDT0091").OnRowInserted = "ds_change_ZSDT0091_OnRowInserted";
	object("ds_change_ZSDT0091").OnColumnChanged = "ds_change_ZSDT0091_OnColumnChanged";
	object("ds_change_ZSDT0091").CanColumnChange = "ds_change_ZSDT0091_CanColumnChanged";
	
	// 달러와 유로일경우에 소수점 뒤에 두자리 ".00' 표시
	ufn_setGridMaskProperty();
}

/******************************************************
* [호기리스트] 호기취소 컬럼 클릭시
*******************************************************/
function Tab00_tab2_Grid_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	// 호기
	Tab00.tab2.ed_hogi.Text = ds_change_ZSDT0091.GetColumn(nRow, "HOGI");
	
	// 판매문서품목
	Tab00.tab2.ed_posnr.Text = ds_change_ZSDT0091.GetColumn(nRow, "POSNR");
	
	// 품목의 청구계획 추가/삭제 버튼 비활성화 
	Tab00.tab2.btn_addRow.visible = "false";
	Tab00.tab2.btn_delRow.Visible = "false";
	
	if ( nCell == 17 ) { // 출력 클릭
		// 2012.01.16 호기별 원가내역서 출력을 위한 자료 조회
		// 2013.02.26 오류 데이터셋 제거 (공통함수에서 일괄 추가됨)
		if ( right(G_USER_GROUP_B, 2 ) != "10") {
		
		ds_output_ZSDT0094_change.Filter("HOGI ==" + quote(ds_change_ZSDT0091.getColumn(nRow, "HOGI")) + " && NAM_CHAR == 'EL_ABRAND'");
		destroy("ds_abrand");
		create("dataset", "ds_abrand");
		ds_abrand.CopyF(ds_output_ZSDT0094_change);
		ds_output_ZSDT0094_change.UnFilter();  
		
		callServiceN("queryZcobt304"										// srvId
			, "sso0055n/queryZcobt304"										// url
			, "ds_t304=ds_t304 ds_block=ds_block ds_abrand=ds_abrand"		// biz에서 받는 명, mip에서 보내는 명
			, "ds_t304=ds_t304 ds_block=ds_block"							// mip에서 받는 명, biz에서 보내는 명
			, "PSPID=" + quote(ds_output_ZSDT0091.GetColumn(nRow, "PSPID")) +
			  " POSID=" + quote(ds_output_ZSDT0091.GetColumn(nRow, "HOGI"))	+
			  " SEQ=" + quote(ds_output_ZSDT0091.GetColumn(nRow, "SEQ"))	// strParam
			, ""															// CallBackFunc
		);
		return;
		}
	}
	
	if ( !obj.Editable ) return;
	
	// 호기취소
	if ( nCell == 10 && ds_change_ZSDT0091.GetColumn(nRow, "HOGI_CANC") != 'C' && ds_change_ZSDT0091.GetColumn(nRow, "NETWR") !='0' && ds_change_ZSDT0091.GetColumn(nRow, "WAVWR") !='0')  //X 값을 C로 변경처리 20160419 ksk
	{

		// 2013.03.04 호기추가하고 저장하기 전인 경우 => 삭제 로직 실행
		if ( ds_change_ZSDT0091.GetColumn(nRow, "HOGI") == "" )
		{
			btn_pnDelRow_OnClick(Tab00.tab2.btn_pnDelRow);
			return;
		}
		if ( ds_change_ZSDT0091.GetColumn(nRow, "HOGI_CANC") == 'C' ) 
		{
			ds_change_ZSDT0091.setColumn(nRow, "HOGI_CANC", "");
			// (2012.12.24) 취소 버튼 눌렀을때 변경금액, 변경원가 0으로 변경요망 ==> 취소를 다시 취소시 원래 금액 복원 (저장전까지만 가능)
			ds_change_ZSDT0091.SetColumn(nRow, "CHNETWR", ds_change_ZSDT0091.GetOrgColumn(nRow, "CHNETWR"));
			ds_change_ZSDT0091.SetColumn(nRow, "CHWAVWR", ds_change_ZSDT0091.GetOrgColumn(nRow, "CHWAVWR"));
		}
		
		else
		{
			ds_change_ZSDT0091.setColumn(nRow, "HOGI_CANC", "C");
			// (2012.12.24) 취소 버튼 눌렀을때 변경금액, 변경원가 0으로 변경요망
			ds_change_ZSDT0091.SetColumn(nRow, "CHNETWR", "0");
			ds_change_ZSDT0091.SetColumn(nRow, "CHWAVWR", "0");
		}

		// 2013.03.04 호기취소시 공통사양 재설정
		fn_aspc (); // 시방서
		fn_bclcd(); // LCD 총수량
		fn_bcpi (); // LED 총 수량
		fn_deph (); // 비상통화장치 DI-PBX 적용대수
		fn_ddvr (); // DVR 적용대수
		fn_dsv1 (); // 감시반1
		fn_dsv2 (); // 감시반2
		fn_aspd ();	// 고속현장 2013.04.03
		fn_etc();
	    // 21.08.11 E/L 대수
	    fn_coElqty();
	}
	
	if ( length(Tab00.tab2.ed_hogi.Text) != 0 && length(Tab00.tab2.ed_posnr.Text) != 0 ) 
	{
		// 호기&판매문서값이 변경되면 자동조회
		//Tab00_tab2_btn_hogi_OnClick();
		Tab00.tab2.Grid0.BindDataset = "";
		Tab00.tab2.Grid1.BindDataset = "";
	}
	else
	{
		Tab00.tab2.Grid0.BindDataset = "";
		Tab00.tab2.Grid1.BindDataset = "";
	}
	
	nCellChwavwr = obj.GetBindCellIndex("body", "CHWAVWR");
	// S/P의 경우 원가를 Key In할 수 있도록 한다.
	var matnr = ds_change_ZSDT0091.GetColumn(nRow, "MATNR");
	setChwavwrEditable(obj, matnr,ds_output_ZSDS0063.GetColumn(0,'SPART'),ds_output_ZSDS0063.GetColumn(0, "AUART"));

	if ( substr(matnr,0,1) == "Y" || matnr = "L-1200" || matnr = "L-1100"	// 모든 s/p 포함 //DW,휠체어리프트 추가 2015.04.09
		|| ds_output_ZSDS0063.GetColumn(0,'SPART') == '20') {				//주차 원가 직접 수정
		//obj.SetCellProp("body", nCellChwavwr, "Edit", "expr:decode(HOGI_CANC,'C','none','number')");
	} else {
		// 견적 테이블에 존재하지 않는 경우 (SAP에만 존재하는 자료) (2012.12.19)
		// 해외) 중계 무역 프로젝트 원가입력은 견적입력 프로세스와 동일 (2012.12.19)
		if ( ufn_existsVbeln() && ds_output_ZSDS0063.GetColumn(0, "AUART") == "ZT01" )
		{
			if(ds_output_ZSDS0063.GetColumn(0, "KUNZ1") == "INPUT" ) {
				alert("생성된 자료입니다. 저장을 먼저 해주십시요.");
				return false;
			}		
			
			if (F_CHG_CURR == "Y") {
				var arrMsg = ["통화단위", "단가입력"];
				gfn_showAlert("CW10003", arrMsg); // 변경된 ${}이 존재하여 ${}이 불가능합니다. 변경된 정보를 저장후 다시 실행하여 주십시오.
				return;			
			}
		
			//obj.SetCellProp("body", nCellChwavwr, "Edit", "none");
			if ( nCell == nCellChwavwr ) {
				var arg   = "fa_mandt=" + quote(G_MANDT)
						  + " fa_pspid=" + quote(ds_output_ZSDS0063.GetColumn(0, "PSPID"))
						  + " fa_seq="   + quote(ds_output_ZSDS0063.GetColumn(0, "SEQ"  ))
						  + " fa_posid=" + quote(ds_change_ZSDT0091.GetColumn(nRow, "HOGI" ))
				;
				F_NROW = nRow;
				gfn_openPopUpUrlHdel("SES::Ses0355.xml", true, arg);
			}
		}
	}
}

/******************************************************
* [호기리스트] OnColumnChanged 
*******************************************************/
function ds_change_ZSDT0091_CanColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex) {
	switch(strColumnID)	{
		case 'CHWAVWR' :
			return validAmount(varNewValue);
			break;

		default:
			break;
	}
}

function ds_change_ZSDT0091_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
    var posnr = ds_change_ZSDT0091.getColumn(nRow, "POSNR");
    var matnr = ds_change_ZSDT0091.getColumn(nRow, "MATNR");
    var searchRow = 0 ;
    var searchRowNF = 0 ;
    var lv_Hogi = ""; 
    var lv_maktx = ds_matnrClass.getColumn(ds_matnrClass.SearchRow("CODE=='"+matnr+"'"), "CODE_NAME");
    
    if ( matnr == null || matnr == "") return; 			//2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 
			
    // 자재코드 Y-200, Y-300, Y-400 는 한건 이상 존재할 수 없다. 2016.03.25 hsi
    if(ds_change_ZSDT0091.CaseCount("MATNR==" + quote(matnr)) > 1 && (matnr == "Y-200" || matnr == "Y-300" || matnr == "Y-400" || matnr == "Y-500")) {	
		
		gfn_showAlert("CW10025", "자재 [" + lv_maktx + "] 는 한건이상 존재 할 수 없습니다.");
		ds_change_ZSDT0091.SetColumn(nRow, "MATNR", "");
		return false;
    }
    
//-----< 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	Start 
    if(ds_change_ZSDT0091.CaseCount("HOGI==" + quote(ed_pspId.Text + "Y77")) >= 1 && matnr == "Y-400") 			lv_Hogi = ed_pspId.Text + "Y77";
	else if(ds_change_ZSDT0091.CaseCount("HOGI==" + quote(ed_pspId.Text + "Y88")) >= 1 && matnr == "Y-200")		lv_Hogi = ed_pspId.Text + "Y88";
	else if(ds_change_ZSDT0091.CaseCount("HOGI==" + quote(ed_pspId.Text + "Y99")) >= 1 && matnr == "Y-300")		lv_Hogi = ed_pspId.Text + "Y99";
	else if(ds_change_ZSDT0091.CaseCount("HOGI==" + quote(ed_pspId.Text + "Y90")) >= 1 && matnr == "Y-500")		lv_Hogi = ed_pspId.Text + "Y90";
	
	if ( lv_Hogi != "" ){
		gfn_showAlert("CW10025", "호기 [" + lv_Hogi + "] 는 한건이상 존재 할 수 없습니다. 관리팀에 문의 하세요.");
		ds_change_ZSDT0091.SetColumn(nRow, "MATNR", "");
		return false; 		
	}
//-----> 2016.11.09 공통추가 개수 제한 계약관리부(홍수봉DR) 요청 by mj.Shin 	End     
        
	ed_netwr.Text = ds_change_ZSDT0091.sum("NETWR");		// 현행금액 
	ed_wavwr.Text = ds_change_ZSDT0091.sum("WAVWR");		// 현행원가
	
	ed_chNetwr.Value = ds_change_ZSDT0091.sum("CHNETWR");	// 변경금액  
	ed_chWavwr.Value = ds_change_ZSDT0091.sum("CHWAVWR");	// 변경원가  
	
	if(strColumnID == 'CHWAVWR' ) {
		//adjustChnetwrByWavwr(ds_change_ZSDT0091);
	}

	// 율계산
	fn_rate();
	
	// 변경청구계획 계산식
	fn_chPay();
	
	// 현재 row상태 변경
	if ( ds_change_ZSDT0091.getColumn(nRow, "STATUS") != "insert" ) {
		ds_change_ZSDT0091.setColumn(nRow, "STATUS", "update");
	}
	
	// [자재코드]변경시
	if ( strColumnID == 'MATNR' ) {
		// 현재 선택된 자재번호
		var selMatnr = ds_change_ZSDT0091.getColumn(nRow, "MATNR");
		
		//2013.11.28 신미정 수주승인과 관계없이 ZE, ZT인 경우 해외추가경비에 대한 S/P추가 가능
		if ( left(F_AUART,2) == "ZE" || left(F_AUART,2) == "ZT") { 
			if ( G_USER_ID != '2020521' ) {
				if ( selMatnr != "Y-1000" ) {
					obj.setColumn(nRow, "MATNR", "Y-1000");
					var arr = "해외추가비용 부문의 S/P만 추가할 수 있습니다.";
					gfn_showAlert("CW10025", arr);
					return false;
				}
			}	
		}

		// 2013.11.28 S/P 추가 할 수 있도록 보완 : 적용환율 - 최초수주 생성일 매매기준 환율
		if ( left(F_AUART,2) == "ZC" && G_USER_ID != "2020521" && G_USER_ID != "2022753" && G_USER_ID != "2019329" && G_USER_ID != "2018799") { 
			alert("부품수출은 호기를 추가할 수 없습니다. 계약관리팀 문의...");
			return false;		
		}  		
		
		// 선택한 자재코드에 해당하는 class
		var selClass = ds_matnrClass.getColumn(ds_matnrClass.SearchRow("CODE=='"+selMatnr+"'"), "FILTER1");
		
		// [자재코드]없을 시 사양을 생성할 수 없으므로 return
		if ( length(selClass) == 0 )
		{
			// class가 없는 자재코드입니다. 확인바랍니다.
			var arr = ["CLASS","자재코드"];
			gfn_showAlert("CW11002", arr);
			return;
		}

		// CLASS값 셋팅
		ds_change_ZSDT0091.setColumn(nRow, "CLASS", selClass);

		// 2020 브랜드
	    var brndcd  = "";
	    var brndseq = "";
	    var sndsys = "PDM";
	    if(selClass == "ELV_01" && F_BRND_FLAG == "Y") {
			var arg = "fa_mandt="+quote(G_MANDT)+" fa_qtnum="+quote(F_QTNUM)+" fa_gtype="+quote("")+" fa_zprdgbn="+quote(selClass)+" fa_brndcd="+quote("");
			var brndArr = gfn_openPopUpUrlHdel("COM::Coms01A.xml", true, arg);

	        object("ds_change_ZSDT0091").OnColumnChanged = "";
	        ds_change_ZSDT0091.SetColumn(nRow, "BRNDCD", "");
	        ds_change_ZSDT0091.SetColumn(nRow, "BRNDSEQ", "");
	        object("ds_change_ZSDT0091").OnColumnChanged = "ds_change_ZSDT0091_OnColumnChanged";
			
			if(brndArr == null) {
				return;
			} else {
				if(Length(brndArr) == 5) {
					F_BRNDSEQ = brndArr[0];    // 브랜드 차수
					F_BRNDCD  = brndArr[1];    // 브랜드코드
					F_BRNDNM  = brndArr[2];    // 브랜드명
					F_EL_ATYP = brndArr[3];    // 기종
					F_SNDSYS  = brndArr[4];
					brndcd  = brndArr[1]; 
					brndseq = brndArr[0];
					sndsys  = brndArr[4];

					// ITEM에 브래드값 자동 입력
					object("ds_change_ZSDT0091").OnColumnChanged = "";
					ds_change_ZSDT0091.SetColumn(nRow, "BRNDCD", F_BRNDCD);
					ds_change_ZSDT0091.SetColumn(nRow, "BRNDSEQ", F_BRNDSEQ);
					ds_change_ZSDT0091.SetColumn(nRow, "SNDSYS", F_SNDSYS);
					object("ds_change_ZSDT0091").OnColumnChanged = "ds_change_ZSDT0091_OnColumnChanged";
					
				} else {
					return;
				}
			}
	    } else {
	        object("ds_change_ZSDT0091").OnColumnChanged = "";
	        ds_change_ZSDT0091.SetColumn(nRow, "BRNDCD", "");
	        ds_change_ZSDT0091.SetColumn(nRow, "BRNDSEQ", "");
	        ds_change_ZSDT0091.SetColumn(nRow, "SNDSYS", "");
	        object("ds_change_ZSDT0091").OnColumnChanged = "ds_change_ZSDT0091_OnColumnChanged";
	    }

		// 사양부르기
		F_ISCHB = false;
		fn_sayangQuery(nRow, brndcd, brndseq);
		
	} else if ( strColumnID == 'CHREPMO' ) {
	  // 무상보수 개월수 품목에서 변경시 사양으로 자동입력 201310 김선호
	  if ( matnr == "L-1000" || matnr == "L-2000"){
	    searchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'EL_FDNCMQ' ");
	    ds_output_ZSDT0094_change.setColumnNF(searchRow,"CHAR_VALUE",varNewValue);
	    searchRowNF = ds_output_ZSDT0094_D.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'EL_FDNCMQ' ");
	    ds_output_ZSDT0094_D.setColumnNF(searchRowNF,"CHAR_VALUE",varNewValue);
	    
	  } else if ( matnr == "S-1000" ){
	    searchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'ES_FDNCMQ' ");
	    ds_output_ZSDT0094_change.setColumnNF(searchRow,"CHAR_VALUE",varNewValue);
	    searchRowNF = ds_output_ZSDT0094_C.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'ES_FDNCMQ' ");
	    ds_output_ZSDT0094_C.setColumnNF(searchRowNF,"CHAR_VALUE",varNewValue);
	    
	  }else if ( matnr == "W-1000"  ){
	    searchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'MW_FDNCMQ' ");
	    ds_output_ZSDT0094_change.setColumnNF(searchRow,"CHAR_VALUE",varNewValue);
	    searchRowNF = ds_output_ZSDT0094_C.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'MW_FDNCMQ' ");
	    ds_output_ZSDT0094_C.setColumnNF(searchRowNF,"CHAR_VALUE",varNewValue);
	    
	  }
	  
	} else if ( strColumnID == 'CHWORMO' ) {
	  // 공사용 개월수 품목에서 변경시 사양으로 자동입력 201310 김선호
	  
	  if ( matnr == "L-1000" || matnr == "L-2000"){
		searchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'EL_FDWUQ' ");
		ds_output_ZSDT0094_change.setColumnNF(searchRow,"CHAR_VALUE",varNewValue);		
		searchRowNF = ds_output_ZSDT0094_D.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'EL_FDWUQ' ");
		ds_output_ZSDT0094_D.setColumnNF(searchRowNF,"CHAR_VALUE",varNewValue);		
		
	  } else if ( matnr == "S-1000" ){
	    searchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'ES_FDWUQ' ");
	    ds_output_ZSDT0094_change.setColumnNF(searchRow,"CHAR_VALUE",varNewValue);
	    searchRowNF = ds_output_ZSDT0094_C.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'ES_FDWUQ' ");
	    ds_output_ZSDT0094_C.setColumnNF(searchRowNF,"CHAR_VALUE",varNewValue);
	    
	  } else if ( matnr == "W-1000"  ){
	    searchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'MW_FDWUQ' ");
	    ds_output_ZSDT0094_change.setColumnNF(searchRow,"CHAR_VALUE",varNewValue);
	    searchRowNF = ds_output_ZSDT0094_C.SearchRowNF("POSNR == " + quote(posnr) + " && NAM_CHAR == 'MW_FDWUQ' ");
	    ds_output_ZSDT0094_C.setColumnNF(searchRowNF,"CHAR_VALUE",varNewValue);
	    
	  } 
	} else if ( strColumnID == 'CHNETWR' ) {
	      if (( ds_change_ZSDT0091.getColumn(nRow, "CHNETWR") == null || ds_change_ZSDT0091.getColumn(nRow, "CHNETWR") == "0" ) && 
		        ds_change_ZSDT0091.getColumn(nRow, "HOGI_CANC") != "C" && ds_change_ZSDT0091.getColumn(nRow, "CHWAVWR") > 0  &&
		        Mid(ds_change_ZSDT0091.getColumn(nRow, "HOGI"), 6, 2) != "Y6")
		  { 
		    gfn_showAlert("CW10025", "수주금액 미 입력시 호기취소 체크바랍니다.");		  
		    return false;	
		  }
	} else if(strColumnID == 'BRNDCD') {
	    // 사양 변경 처리를 수행한다.
	    // 호기 취소가 아닌경우에만 수정할 수 있음
	    var brndcd = ds_change_ZSDT0091.GetColumn(nRow, "BRNDCD");
	    var brndseq = ds_change_ZSDT0091.GetColumn(nRow, "BRNDSEQ");
	    if( F_BRND_FLAG == "Y" && varNewValue != varOldValue && varNewValue != '' && varNewValue != null) {
			var arg = "fa_mandt="+quote(G_MANDT)+" fa_qtnum="+quote(F_QTNUM)+" fa_gtype="+quote("")+" fa_zprdgbn="+quote("ELV_01")+" fa_brndcd="+quote(varNewValue);
			var brndArr = gfn_openPopUpUrlHdel("COM::Coms01A.xml", true, arg);
			if(brndArr == null) {
					// 콤보박스 원래값으로 되돌리기
					object("ds_change_ZSDT0091").OnColumnChanged = "";
					ds_change_ZSDT0091.SetColumn(nRow, "BRNDCD", varOldValue);
					ds_change_ZSDT0091.SetColumn(nRow, "BRNDSEQ", oldBrndSeq);
					ds_change_ZSDT0091.SetColumn(nRow, "SNDSYS", oldSndSys);
					object("ds_change_ZSDT0091").OnColumnChanged = "ds_change_ZSDT0091_OnColumnChanged";
				return;
			} else {
				if(Length(brndArr) == 5) {
					F_BRNDSEQ = brndArr[0];    // 브랜드 차수
					F_BRNDCD  = brndArr[1];    // 브랜드코드
					F_BRNDNM  = brndArr[2];    // 브랜드명
					F_EL_ATYP = brndArr[3];    // 기종
					F_SNDSYS  = brndArr[4];    // 전송시스템
					brndcd  = brndArr[1]; 
					brndseq = brndArr[0];
					sndsys  = brndArr[4];
					var oldBrndSeq = ds_change_ZSDT0091.GetColumn(nRow, "BRNDSEQ");
					var oldSndSys = ds_change_ZSDT0091.GetColumn(nRow, "SNDSYS");

					if (gfn_showConfirm("CI00024", "브랜드 변경 시 해당 브랜드에만 적용 가능한 영업사양 및 관련 금액은 모두 초기화됩니다.") == true) {
						// ITEM에 브래드값 자동 입력
						object("ds_change_ZSDT0091").OnColumnChanged = "";
						ds_change_ZSDT0091.SetColumn(nRow, "BRNDCD", F_BRNDCD);
						ds_change_ZSDT0091.SetColumn(nRow, "BRNDSEQ", F_BRNDSEQ);
						ds_change_ZSDT0091.SetColumn(nRow, "SNDSYS", F_SNDSYS);
						object("ds_change_ZSDT0091").OnColumnChanged = "ds_change_ZSDT0091_OnColumnChanged";
						
					    // 변경원가금액 초기화
					    ds_change_ZSDT0091.SetColumn(nRow, "CHWAVWR", 0);

						// 변경금액 초기화
					    ds_change_ZSDT0091.SetColumn(nRow, "CHNETWR", 0);

						// 2020 브랜드 삭제 호기 백업
						var fil = "POSNR=='"+posnr+"'";
	                    ds_output_ZSDT0094_change.Filter(fil);
						destroy("ds_template_org");
						create("dataset", "ds_template_org");
						object("ds_template_org").copyF(ds_output_ZSDT0094_change);
						ds_output_ZSDT0094_change.UnFilter();

                        // 사양변경 시 처리
                   		F_ISCHB = true;
 
						// 사양부르기
						fn_sayangQuery(nRow, brndcd, brndseq);
						
					} else {
						// 콤보박스 원래값으로 되돌리기
						object("ds_change_ZSDT0091").OnColumnChanged = "";
						ds_change_ZSDT0091.SetColumn(nRow, "BRNDCD", varOldValue);
						ds_change_ZSDT0091.SetColumn(nRow, "BRNDSEQ", oldBrndSeq);
						ds_change_ZSDT0091.SetColumn(nRow, "SNDSYS", oldSndSys);
						object("ds_change_ZSDT0091").OnColumnChanged = "ds_change_ZSDT0091_OnColumnChanged";
					}
				} else {
					return;
				}
			}
	    }
	}
}

function validAmount(amounts) {
	if(amounts < 0) {
		gfn_showAlert("CW10025", '양수를 입력하세요.');
		return false;
	}

	return true;
}
/******************************************************
* [호기리스트] 추가된 사양 조회
*******************************************************/
function fn_sayangQuery(nRow, brndcd, brndseq)
{
	//http.Sync = true;
	var output = "ds_output_sayang=ds_output";

	var pspId = ds_change_ZSDT0091.GetColumn(nRow, "PSPID");
	var posnr = ds_change_ZSDT0091.GetColumn(nRow, "POSNR");
	var matnr = ds_change_ZSDT0091.GetColumn(nRow, "MATNR");
	var cls   = ds_change_ZSDT0091.GetColumn(nRow, "CLASS");
	
	// 2020 브랜드
	var hogi   = ds_change_ZSDT0091.GetColumn(nRow, "HOGI");

	//http.Sync = false;
	gfn_showAlert("CW10025","변경된 정보의 사양을 매핑중입니다.\n잠시만 기다려 주십시오.");
	
	callServiceN("sayang"						// srvId
				, "sso0055n/sayang"				// url
				, ""							// biz에서 받는 명, mip에서 보내는 명
				, output						// mip에서 받는 명, biz에서 보내는 명
				, "pspId="+quote(pspId)
					+" posnr="+quote(posnr) 
					+" matnr="+quote(matnr) 
					+" class="+quote(cls)
					+" brndcd="+quote(brndcd)   
					+" brndseq="+quote(brndseq)
					+" hogi="+quote(hogi)
				, ""							  // CallBackFunc
				);
}

/******************************************************
* [호기리스트] 추가된 사양 append
*******************************************************/
function fn_appendSayang()
{
	var cls   = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "CLASS");
	
	http.Sync = true;
	
	// 사양 추가시 기존에 바인딩된 사양데이타셋이 변경되지 않도록처리
	Tab00.tab3.Grid.Redraw = false;
	Tab00.tab3.Grid0.Redraw = false;
	Tab00.tab3.Grid1.Redraw = false;
	Tab00.tab3.Grid2.Redraw = false;
	Tab00.tab3.Grid3.Redraw = false;
	Tab00.tab3.Grid4.Redraw = false;
	Tab00.tab3.Grid5.Redraw = false;  // 2020 브랜드
	
	// 기존에 있는 값을 삭제후 추가한다.
	// 삭제하고자 하는 row의 판매품목
	var posnr = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "POSNR"); 
	
	// 해당row제외한 나머지로 필터링
	var fil = "POSNR!='"+posnr+"'";
	ds_output_ZSDT0094_change.Filter(fil);
	
	// 필터 된 데이타셋으로 복사할 ds 생성
	destroy("ds_sayang_temp");
	create("dataset", "ds_sayang_temp");
	object("ds_sayang_temp").copyF(ds_output_ZSDT0094_change);
	
	// 2020 브랜드
	// 브랜드, 기종 입력받은 데이터를 자동으로 입력해 준다.
	// 엘레베이터 건이고 현재 필터가 반영된 상태임
	var rowIdx = 0;
	if(cls == "ELV_01" && F_BRND_FLAG == "Y") {
	    // 브랜드 자동 입력
	    rowIdx = ds_output_sayang.FindRow("NAM_CHAR", "EL_ABRAND");
	    if(rowIdx > -1) {
	        ds_output_sayang.setColumn(rowIdx,"CHAR_VALUE", F_BRNDCD);
	    }
	    
	    // 기종 자동 입력
	    rowIdx = ds_output_sayang.FindRow("NAM_CHAR", "EL_ATYP");
	    if(rowIdx > -1) {
            ds_output_sayang.setColumn(rowIdx,"CHAR_VALUE", F_EL_ATYP);
	    }
	    
	    // 사양 변경에 따른 로직 처리 사양복사 로직 처리
	    // 사양 변경여부건 확인 필요한다.
	    if(F_ISCHB) {
	        fn_chanageBrand();
	    }
	}

	// 원본 데이타셋 clear
	ds_output_ZSDT0094_change.ClearData();
	
	// 원본데이타셋에 필터된 데이터셋으로 복사
	ds_output_ZSDT0094_change.copy(ds_sayang_temp);		
	
	// 추가된row로 조회해온 사양데이타셋을 append
	for ( var i = 0 ; i < ds_output_sayang.GetRowCount() ; i++ ) {
		
		if ( ds_output_sayang.getColumn(i,"NAM_CHAR") == "CO_QTDAT" ) {  // 계약변경 호기 추가시 견적일에 값이 없을경우 에러발생, 강제적용 20151022 김선호
			ds_output_sayang.setColumn(i,"CHAR_VALUE", ds_vbeln.QTDAT);
		}

		//2021.09.01 jss : A049 국내 광역지역,  A050 국내 운송지역(설치장소)
		if (ds_output_sayang.getColumn(i,"NAM_CHAR") == "EL_ALOCT") {
			ds_output_sayang.setColumn(i,"CHAR_VALUE", ds_vbeln.ALOCT);
		}
		
		if (ds_output_sayang.getColumn(i,"NAM_CHAR") == "EL_ADTA") {
			ds_output_sayang.setColumn(i,"CHAR_VALUE", ds_vbeln.ADTA);
		}

		ds_output_ZSDT0094_change.AddRow();
		ds_output_ZSDT0094_change.CopyRow(ds_output_ZSDT0094_change.row, ds_output_sayang, i);
		ds_output_ZSDT0094_change.setColumn(ds_output_ZSDT0094_change.row,"STATUS", "update");
	}

	// 데이타셋을 reload를 위해 onLoad호출
	ds_output_ZSDT0094_change_OnLoadCompleted();
	
	// 2013.03.04 호기추가시 공통사양 재설정
	fn_aspc (); // 시방서
	fn_bclcd(); // LCD 총수량
	fn_bcpi (); // LED 총 수량
	fn_deph (); // 비상통화장치 DI-PBX 적용대수
	fn_ddvr (); // DVR 적용대수
	fn_dsv1 (); // 감시반1
	fn_dsv2 (); // 감시반2
	fn_aspd ();	// 고속현장 2013.04.03
	fn_etc();
	// 21.08.11 E/L 대수
	fn_coElqty();
	
	// 2013.03.04 호기추가시 추가된 호기 클릭
	Tab00_tab2_Grid_OnCellClick(Tab00.tab2.Grid, ds_change_ZSDT0091.row, 0);
	
	// 사양 상태바 비활성
	//fn_progressBarWait('sayang', 'false');
	// trace("ds_output_ZSDT0094_change xml:"+ds_output_ZSDT0094_change.SaveXML());
	
	http.Sync = false;
}

/****************************************************************
* 브랜드 변경 시 from template
* input Data set ds0 ~ ds5
* 데이터셑 ID:ds_template_org
* ds_detail.SetColumn(ds_detail.row, "BRNDSEQ", arr[0]);  // 브랜드차수 F_BRNDSEQ
* ds_detail.SetColumn(ds_detail.row, "BRNDCD", arr[1]);   // 브랜드코드 F_BRNDCD
* ds_detail.SetColumn(ds_detail.row, "BRNDNM", arr[2]);   // 브랜드명
* ds_detail.SetColumn(ds_detail.row, "GTYPE", arr[3]);    // 기종
* ds_template_org, ds_template_des
***************************************************************/
function fn_chanageBrand() {
    var ds_template_org = object("ds_template_org");
    
    // 삭제 데이터셑 생성
    // ds_brnd_del
    var mandt = ds_template_org.GetColumn(0, "MANDT");
    var pspid = ds_template_org.GetColumn(0, "PSPID");
    var seq   = ds_template_org.GetColumn(0, "SEQ");
    var posnr = ds_template_org.GetColumn(0, "POSNR");
    var hogi  = ds_template_org.GetColumn(0, "HOGI");
    var matnr = ds_template_org.GetColumn(0, "MATNR");
    var zprdgbn = ds_template_org.GetColumn(0, "ZPRDGBN");   
    var newRow = 0;
    var findRow = 0;
    
    findRow = ds_brnd_hogi_del.FindRow("POSNR", posnr);
    if(findRow < -1) {
		newRow = ds_brnd_hogi_del.AddRow();
		ds_brnd_hogi_del.SetColumn(newRow, "MANDT", mandt);
		ds_brnd_hogi_del.SetColumn(newRow, "PSPID", pspid);
		ds_brnd_hogi_del.SetColumn(newRow, "SEQ", seq);
		ds_brnd_hogi_del.SetColumn(newRow, "POSNR", posnr);
		ds_brnd_hogi_del.SetColumn(newRow, "HOGI", hogi);
		ds_brnd_hogi_del.SetColumn(newRow, "MATNR", matnr);
		ds_brnd_hogi_del.SetColumn(newRow, "ZPRDGBN", zprdgbn);
		ds_brnd_hogi_del.SetColumn(newRow, "BRNDSEQ", F_BRNDSEQ);
		ds_brnd_hogi_del.SetColumn(newRow, "BRNDCD", F_BRNDCD);
    }

    // 해당 브랜드에 대한 영업특성값을 조회한다.
    fn_sayangPrdList(F_BRNDSEQ, F_BRNDCD);

	// 사양값을 복사한다. ds_template_des -> ds_output_ZSDT0094_change
	var fil = "POSNR=='"+posnr+"'";
	var namChar = "";
	var charValue = "";
	var searchRow = 0;
	var orgCharValue = "";

	var disptp;
	var moditp;
	var orgDisptp;
	var orgMditp;
    var orgCnt;
    var isCopy = false;
	for (var i = 0; i < ds_output_sayang.GetRowCount(); i++) {
		namChar = ds_output_sayang.GetColumn(i, "NAM_CHAR");
		charValue = ds_output_sayang.GetColumn(i, "CHAR_VALUE");
		disptp = ds_output_sayang.GetColumn(i, "DISPTP");
		moditp = ds_output_sayang.GetColumn(i, "MODITP");

		// 백업된 데이터에 입력값이 있으면 넣어 준다.
		// 복사 시 DISPTP(출력여붜 X값이 아니면 복사 대상에서 제외
		// 복사 대상: 복사대상이 수정가능, 공통사양이 아니고, 복사본/복사대상 모두 화면 출력 대상인 경우에 대해서만 복사를 한다.
		// 복사 시 ㅣ공통 대상 항목은 제외하고 복사를 수행한다.
		if( namChar != 'EL_ABRAND' && namChar !=  'EL_ATYP' && substr(namChar,0,3) != 'CO_') {
			searchRow = ds_template_org.SearchRow("NAM_CHAR=="+quote(namChar));
			if(searchRow > -1) {
				orgCharValue = ds_template_org.GetColumn(searchRow, "CHAR_VALUE");
				orgDisptp = ds_template_org.GetColumn(searchRow, "DISPTP");
				orgMditp  = ds_template_org.GetColumn(searchRow, "MODITP");
				orgCnt    = ds_template_org.GetColumn(searchRow, "CNT");
				if(orgCnt == "0") {
					isCopy = true;
				} else {
					isCopy = fn_isBrndPrd(F_BRNDSEQ, F_BRNDCD, namChar, orgCharValue);
				}
				if(moditp == "X" && disptp == "X" && orgDisptp == "X" && orgMditp == "X" && isCopy) {
					// 입력된 영업사양값을 변경된 브랜드 사양값에 입력 처리
					ds_output_sayang.SetColumn(i, "CHAR_VALUE", orgCharValue);
				} else {
				    // 이렇게 처리하지 않으면 초기 데이터 생성
				    ds_output_sayang.SetColumn(i, "CHAR_VALUE", "");
				}
			}
		}
	}
}

/******************************************************
* [호기리스트] 호기 삭제시 사양도삭제
*******************************************************/
function fn_deleteSayang()
{
	// 사양 추가시 기존에 바인딩된 사양데이타셋이 변경되지 않도록처리
	Tab00.tab3.Grid.Redraw  = false;
	Tab00.tab3.Grid0.Redraw = false;
	Tab00.tab3.Grid1.Redraw = false;
	Tab00.tab3.Grid2.Redraw = false;
	Tab00.tab3.Grid3.Redraw = false;
	Tab00.tab3.Grid4.Redraw = false;
	Tab00.tab3.Grid5.Redraw = false; // 2020 브랜드
	
	// 단건용 삭제 데이타
	var pspId = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "PSPID");
	var posnr = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "POSNR"); 
	var matnr = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "MATNR"); 
	var cls   = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "CLASS");
	
	var nRow = ds_change_ZSDT0091.row;
	// 선택된 row삭제
	ds_change_ZSDT0091.DeleteRow(nRow);
	
	// 호기가 있는 데이타만 추출할 ds를 생성
	destroy("ds_delete_sayang");
	create("dataset", "ds_delete_sayang");
	object("ds_delete_sayang").copy(ds_change_ZSDT0091);
	object("ds_delete_sayang").filter("HOGI!=''");
	// 추출한 데이타중 판매품목의 max값을 가져온다.
	var posnrMax = ds_delete_sayang.max("POSNR");
	
	// 추가된 신규건수가 몇개인지 체크
	var hogiNoValue = 0;
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ )
	{
		if ( ds_change_ZSDT0091.GetColumn(i, "HOGI") == '' )
		{
			hogiNoValue++;
		}
	}
	
	// 선택된 row의 판매품목을 제외한 정보를 가져오기 위한 필터 
	var fil = "POSNR!='"+posnr+"'";	
	ds_output_ZSDT0094_change.Filter(fil);
	
	// 필터링 된 정보만을 ds로 생성
	destroy("ds_sayang_temp");
	create("dataset", "ds_sayang_temp");
	object("ds_sayang_temp").copyF(ds_output_ZSDT0094_change);
	
	// 삭제후에 남은 신규건수가 0일경우
	if ( hogiNoValue == 0 )
	{
		ds_output_ZSDT0094_change.ClearData();
		ds_output_ZSDT0094_change.copy(ds_sayang_temp);	
	}
	// 삭제후에 남은 신규건수가 0이 아니면
	// 판매품목 값을 재 정렬해준다 (100단위로 순차적으로 정렬되어야 함)
	// ex) 신규건수가 3건이면 100,200,300이 생성
	//     2번째 데이터 삭제시 100,300이 남음
	//     이 데이타를 순서에 맞게 100,200으로 변경해야함.
	else
	{
		// (총건수 - 신규건수)를 총건수만큼 루프
		for ( var i = ds_change_ZSDT0091.GetRowCount()-hogiNoValue ; i < ds_change_ZSDT0091.GetRowCount() ; i ++ )
		{
			// 판매품목값을 순차적으로 재계산
			posnrMax = toNumber( "1" + posnrMax ) + 100;
			posnrMax = posnrMax.substr(1);
	
			// 추가된 row의 판매품목
			var oriPosnr = ds_change_ZSDT0091.getColumn(i, "POSNR");
			// 재계산된 판매품목
			var chePosnr = posnrMax;
			
			// 추가된 row의 판매품목값이 순차적이라면 건너뜀.
			if ( oriPosnr == chePosnr ){}
			else
			{
				// 추가된 row의 판매품목으로 필터
				var replaceFilter = "POSNR=='"+oriPosnr+"'";
				ds_output_ZSDT0094_change.Filter(replaceFilter);
				
				// 추가된 row의 판매품목으로 생성된 사양리스트의 판매품목값을
				// 사양리스트만큼 루프를 돌면서 재계산된 판매품목값으로 치환한다.
				// description)다 삭제후 새로 생성하지 않는 이유는 삭제전에 사양리스트를 수정했을경우를 대비해서임
				for ( var j = 0 ; j < ds_output_ZSDT0094_change.GetRowCount() ; j++ )
				{
					// 사양리스트의 판매품목을 재계산된 판매품목으로 치환
					ds_output_ZSDT0094_change.SetColumn(j, "POSNR", chePosnr);
				}
				// 현재 판매품목리스트의 판매품목을 재계산된 판매품목으로 치환
				ds_change_ZSDT0091.setColumn(i, "POSNR", posnrMax);
			}
		}
		
	}
	
	// 2013.03.04 호기삭제시 공통사양 재설정
	fn_aspc (); // 시방서
	fn_bclcd(); // LCD 총수량
	fn_bcpi (); // LED 총 수량
	fn_deph (); // 비상통화장치 DI-PBX 적용대수
	fn_ddvr (); // DVR 적용대수
	fn_dsv1 (); // 감시반1
	fn_dsv2 (); // 감시반2
	fn_aspd ();	// 고속현장 2013.04.03
	fn_etc();
	// 21.08.11 E/L 대수
	fn_coElqty();
	
	// new ds로 onLoad
	ds_output_ZSDT0094_change_OnLoadCompleted();
	
	// 2013.03.04 호기삭제후 바로 사양 탭 누를 경우 대비
	if ( ds_change_ZSDT0091.GetRowCount() >= nRow ) {
		Tab00_tab2_Grid_OnCellClick(Tab00.tab2.Grid, nRow-1, 0);
	}
}
/******************************************************
* [호기리스트] 전체취소, 미취소
*******************************************************/
function btn_hogiCanc(obj)
{
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i ++ )
	{
		if ( ds_change_ZSDT0091.getColumn(i, "STATUS") != 'insert' )
		{
			if ( obj.id == 'btn_HogiApp' )
			{
				ds_change_ZSDT0091.setColumn(i, "HOGI_CANC", "C");
				// (2012.12.24) 취소 버튼 눌렀을때 변경금액, 변경원가 0으로 변경요망
				ds_change_ZSDT0091.SetColumn(i, "CHNETWR", "0");
				ds_change_ZSDT0091.SetColumn(i, "CHWAVWR", "0");
			}
			else if ( obj.id == 'btn_HogiCanc' )
			{
				ds_change_ZSDT0091.setColumn(i, "HOGI_CANC", "");
				// (2012.12.24) 취소 버튼 눌렀을때 변경금액, 변경원가 0으로 변경요망 ==> 취소를 다시 취소시 원래 금액 복원 (저장전까지만 가능)
				ds_change_ZSDT0091.SetColumn(i, "CHNETWR", ds_change_ZSDT0091.GetOrgColumn(i, "CHNETWR"));
				ds_change_ZSDT0091.SetColumn(i, "CHWAVWR", ds_change_ZSDT0091.GetOrgColumn(i, "CHWAVWR"));
			}
		}//end if
	}//end for
}

/******************************************************
* [호기리스트] 행추가
*******************************************************/
function btn_pnAddRow_OnClick(obj)
{	
	// 2013.11.28 S/P 추가 할 수 있도록 보완 : 적용환율 - 최초수주 생성일 매매기준 환율
	if (G_USER_ID != "2020521" && G_USER_ID != "2020254" && G_USER_ID != "2022753" && G_USER_ID != "2019329" && G_USER_ID != "2018799"){ //이상윤 권한 20160509
		if ( left(F_AUART,2) == "ZC") { 
			alert("부품수출은 호기를 추가할 수 없습니다. 계약관리팀 문의...");
			return false;
		}	
	}

	ds_change_ZSDT0091.addRow();
}

/******************************************************
* [호기리스트] 행삭제
*******************************************************/
function btn_pnDelRow_OnClick(obj)
{
	if ( toLower(ds_change_ZSDT0091.GetRowType(ds_change_ZSDT0091.row)) != "insert" )
	{
		//기존 데이터는 삭제할 수 없습니다. \n\n신규건만 삭제할 수 있습니다.
		gfn_showAlert("CW10016", "");
		return;
	}
	else 
	{
		// [자재번호]가 없을경우 사양생성이 되지 않았으므로, 사양삭제를 하지 않음.
		if ( length(ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "MATNR")) == 0 )
		{
			var nRow = ds_change_ZSDT0091.row;
			ds_change_ZSDT0091.DeleteRow(nRow);
			
			// 2013.03.04 호기삭제시 공통사양 재설정
			fn_aspc (); // 시방서
			fn_bclcd(); // LCD 총수량
			fn_bcpi (); // LED 총 수량
			fn_deph (); // 비상통화장치 DI-PBX 적용대수
			fn_ddvr (); // DVR 적용대수
			fn_dsv1 (); // 감시반1
			fn_dsv2 (); // 감시반2
			fn_aspd ();	// 고속현장 2013.04.03
			fn_etc();
	        // 21.08.11 E/L 대수
	        fn_coElqty();

			// 2013.03.04 호기삭제후 바로 사양 탭 누를 경우 대비
			if ( ds_change_ZSDT0091.GetRowCount() >= nRow ) {
				Tab00_tab2_Grid_OnCellClick(Tab00.tab2.Grid, nRow-1, 0);
			}
		}
		else
		{
			fn_deleteSayang();
		}
	}
}

/******************************************************
* [호기리스트] OnRowInserted
*******************************************************/
function ds_change_ZSDT0091_OnRowInserted(obj,nRow,nCount)
{
	
	//posnr - 현재조회된 건중 max+100을 추가된 정보로 셋팅
	var posnrMax = toNumber( "1" + obj.max("POSNR") ) + 100;
	posnrMax = posnrMax.substr(1);
	
	// dataset의 이벤트 비활성화
	obj.fireevent = false;
	
	// 추가된 row에 셋팅
	obj.copyrow(nRow, obj, 0);

	obj.setColumn(nRow, "PSPID", ed_pspid.Text); 			// 호기
	obj.setColumn(nRow, "SEQ"  , ed_seq.Text); 				// 2013.02.26 호기 추가시 차수 추가
	obj.setColumn(nRow, "HOGI", ""); 			// 호기
	obj.setColumn(nRow, "MATNR", "" );
	obj.setColumn(nRow, "NETWR", "0"); 			// 금액
	obj.setColumn(nRow, "WAVWR", "0");			// 원가 
	obj.setColumn(nRow, "HOGI_CANC", "");		// 호기취소
	obj.setColumn(nRow, "EDATU", ds_output_ZSDS0063.GetColumn(0, "VDATU"));	// 납기일     - 2013.02.02 헤더정보 사용
	obj.setColumn(nRow, "REPMO", ds_output_ZSDS0063.GetColumn(0, "REPMO"));	// 무상보수   - 2013.02.02 헤더정보 사용
	obj.setColumn(nRow, "WORMO", ds_output_ZSDS0063.GetColumn(0, "WORMO"));	// 공사용사용 - 2013.02.02 헤더정보 사용
	obj.setColumn(nRow, "CHNETWR", "0");		// 변경금액
	obj.setColumn(nRow, "CHWAVWR", "0");		// 변경원가
	obj.setColumn(nRow, "CHEDATU", ds_output_ZSDS0063.GetColumn(0, "VDATU"));	// 납기일     - 2013.02.02 헤더정보 사용
	obj.setColumn(nRow, "CHREPMO", ds_output_ZSDS0063.GetColumn(0, "REPMO"));	// 무상보수   - 2013.02.02 헤더정보 사용
	obj.setColumn(nRow, "CHWORMO", ds_output_ZSDS0063.GetColumn(0, "WORMO"));	// 공사용사용 - 2013.02.02 헤더정보 사용
	obj.setColumn(nRow, "WAERK", ds_output_ZSDS0063.GetColumn(0, "WAERK") );		// 통화
	
/*-----< 2017.06.08 서버에서 처리하도록 조치 by mj.Shin Start   	
	var erdat = substr(G_CURR_DATE, 0, 4)+"-"+substr(G_CURR_DATE, 4, 2)+"-"+substr(G_CURR_DATE, 6);
	obj.setColumn(nRow, "ERDAT", erdat);		// 레코드 생성일
	obj.setColumn(nRow, "ERNAM", G_USER_ID);	// 오브젝트 생성자 이름
 *-----> 2017.06.08 서버에서 처리하도록 조치 by mj.Shin End   		*/

	obj.setColumn(nRow, "POSNR", posnrMax);		// 판매문서품목 max
	obj.setColumn(nRow, "CLASS", "");			// CLASS
	obj.setColumn(nRow, "ARKTX", "");			// SPEC
	obj.setColumn(nRow, "SPEC_STAT", "");		// SPEC_STAT
	
	//  2020 브랜드
	obj.setColumn(nRow, "ABGRU", "");		// 취소사유
	obj.setColumn(nRow, "BRNDCD", "");
	obj.setColumn(nRow, "BRNDSEQ", "");
	
//	obj.setColumn(nRow, "BRNDCD", "");
//	obj.setColumn(nRow, "BRNDSEQ", "");

	obj.setColumn(nRow, "STATUS", "insert");	
	
	// dataset의 이벤트 활성화
	obj.fireevent = true;
	
	// onColumnChange 이벤트를 태우기 위해 이곳에서 지정. // 2020.12.11 JQPR 호기인 경우 Y호기 생성 eunha
	//if ( left(F_AUART,2) == "ZE" && F_ADMIT_DATE != "00000000" ) { // 2013.02.20 해외 - 수주승인 이후에는 감시반,S/P만 추가할 수 있음, 2013.03.11 S/P추가	
	//if ( left(F_AUART,2) == "ZE" || left(F_AUART,2) == "ZT" || F_isNewJqpr) { 	//2013.11.28 신미정 수주승인과 관계없이 ZE, ZT인 경우 해외추가경비에 대한 S/P추가 가능
	if ( left(F_AUART,2) == "ZE" || left(F_AUART,2) == "ZT" ) { //2021.05 jss 중복생성오류로 원복
		// 아래는 ds_change_ZSDT0091_OnColumnChnaged 에서 중복 처리되며 오류 발생함
		// 그래서 주석처리  20140114 김선호 
		//obj.setColumn(nRow, "MATNR", ds_matnrClass.getColumn(10, "CODE") );	// 감시반(Y-1000)으로 고정
	}
	else {
		if(!F_isNewJqpr){  //2021.05 jss 조건추가
			obj.setColumn(nRow, "MATNR", ds_matnrClass.getColumn(2, "CODE") );	// 자재번호(L-1000)으로 고정
		}
	}
}


/******************************************************
* [호기 청구계획 조회] 클릭시
*******************************************************/
function Tab00_tab2_btn_hogi_OnClick(obj)
{
	// 판매문서품목
	if ( length(Tab00.tab2.ed_posnr.text) == 0 )
	{
		//[${}](은)는 필수 입력 사양입니다.\n확인하여 주십시오.
		gfn_showAlert("CW00221", "판매 문서 품목");
		//Tab00.tab2.ed_hogi.SetFocus(); // 판매문서품목은 히든이므로 호기번호텍스트에 포커스
		return;
	}
	
	/*
	// 호기번호
	if ( length(Tab00.tab2.ed_hogi.text) == 0 )
	{
		// 조회 할 호기정보가 없습니다.
		gfn_showAlert("CW10035", "조회할 [호기정보]");
		//alert("조회 할 호기정보가 없습니다.");
		//Tab00.tab2.ed_hogi.SetFocus(); // 판매문서품목은 히든이므로 호기번호텍스트에 포커스
		return;
	}
	*/
	
	// 호기 - 현행
	destroy("ds_output_ZSDT0092_B2");
	Create("Dataset", "ds_output_ZSDT0092_B2");
	object("ds_output_ZSDT0092_B2").copy(ds_output_ZSDT0092);
	object("ds_output_ZSDT0092_B2").Filter("POSNR=='"+Tab00.tab2.ed_posnr.text+"'"); // 판매문서품목별 필터
	Tab00.tab2.Grid0.BindDataset = "ds_output_ZSDT0092_B2";
	
	if ( ds_output_ZSDT0092_B2.getRowCount() != 0 )
	{
		// 호기 - 현행청구계획 계산식
		fn_HogiPay();	
	}
	
	// 호기 - 변경 => 2013.01.24 ds_output_ZSDT0093_B2 데이터셋 매번 생성하지않고, 필터만 거는 것으로 수정
	//destroy("ds_output_ZSDT0093_B2");
	//Create("Dataset", "ds_output_ZSDT0093_B2");
	//object("ds_output_ZSDT0093_B2").copy(ds_output_ZSDT0093);
	//object("ds_output_ZSDT0093_B2").AddColumn("STATUS", "STRING", 256);
	object("ds_output_ZSDT0093_B2").Filter("POSNR=='"+Tab00.tab2.ed_posnr.text+"'"); // 판매문서품목별 필터
	Tab00.tab2.Grid1.BindDataset = "ds_output_ZSDT0093_B2";
	
	if ( ds_output_ZSDT0093_B2.getRowCount() != 0 )
	{
		// 호기 - 변경청구계획 계산식
		fn_HogichPay();	
	}
	
	// 버튼 활성
	if ( ds_output_ZSDT0092_B1.getRowCount() == 0 && ds_output_ZSDT0093_B1.getRowCount() == 0 ) {	
		Tab00.tab2.btn_addRow.visible = "true";
		Tab00.tab2.btn_delRow.Visible = "true";
	} else {
		Tab00.tab2.btn_addRow.visible = "false";
		Tab00.tab2.btn_delRow.Visible = "false";
	}
	// onChange 이벤트
	ds_output_ZSDT0093_B2.OnColumnChanged = "ds_output_ZSDT0093_B2_OnColumnChanged";
	
}

/******************************************************
* 호기 - 현행청구계획 계산식
*******************************************************/
function fn_HogiPay()
{	
	// 현행금액 - 현행청구금액
	var moneyOkYn = toNumber( ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "NETWR") ) - toNumber(ds_output_ZSDT0092_B2.sum("FAKWR"));
	if ( moneyOkYn == 0 )
	{
		Tab00.tab2.Grid0.SetCellProp('Head', 8, 'BkColor', 'chartreuse'); 	// 차이가 없으며 녹색
	}
	else
	{
		Tab00.tab2.Grid0.SetCellProp('Head', 8, 'BkColor', 'red');			// 차이가 있으면 레드
	}
	
}
/******************************************************
* 호기 - 변경청구계획 계산식
*******************************************************/
function fn_HogichPay()
{	
	// 변경금액 - 변경청구금액
	var moneyOkYn = toNumber( ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "CHNETWR") ) - toNumber(ds_output_ZSDT0093_B2.sum("CHFAKWR"));
	
	if ( moneyOkYn == 0 )
	{
		Tab00.tab2.Grid1.SetCellProp('Head', 8, 'BkColor', 'chartreuse'); 	// 부족금액이 0이면 녹색
		Tab00.tab2.ed_HogilackPay.text = 0; 								// 부족금액
	}
	else
	{
		Tab00.tab2.Grid1.SetCellProp('Head', 8, 'BkColor', 'red'); 			// 부족금액이 0아니면 레드
		Tab00.tab2.ed_HogilackPay.text = moneyOkYn; 						// 부족금액
	}
	
}

/******************************************************
* [호기 변경 청구계획] ds_output_ZSDT0093_B2_OnColumnChanged
*******************************************************/
function ds_output_ZSDT0093_B2_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	// 청구금액
	if ( strColumnID == 'CHFAKWR' )
	{
		// 호기 - 변경청구계획 계산식
		fn_HogichPay();
	}
	// 종별구분
	if ( strColumnID == 'CHMLBEZ' )
	{	
		//2017.01.31 종별구분 내역 갱신 ZSDT0093-CHMSTXT 값 보정 by mj.Shin 
		//obj.setColumn(nRow, "CHMSTXT", Tab00.tab1.Grid0.GetCellText('Body',nRow,4));	// 내역 Org 
		obj.setColumn(nRow, "CHMSTXT", Tab00.tab2.Grid1.GetCellText('Body',nRow,5));	// 내역	
	}
	
	// 상태flag
	if ( obj.getColumn(nRow, "STATUS") != 'insert'	)
	{
		obj.setColumn(nRow, "STATUS", "update");
	}
}

/******************************************************
* [변경청구계획] 행추가
*******************************************************/
function btn_addRow_OnClick(obj)
{
	var ds;
	if ( Tab00.TabIndex == 0 )
	{
		ds = ds_output_ZSDT0093_B1;
	}
	else if ( Tab00.TabIndex == 1 )
	{
		ds = ds_output_ZSDT0093_B2;
	}
	
	ds.OnRowInserted = "ds_output_ZSDT0093_OnRowInserted";
	ds.addRow();
}
/******************************************************
* [변경청구계획] 행추가시 ds 처리
*******************************************************/
function ds_output_ZSDT0093_OnRowInserted(obj,nRow,nCount)
{	
	// dataset의 이벤트 비활성화
	obj.fireevent = false;
	// 추가된 row에 셋팅
	obj.copyrow(nRow, obj, 0);
	
	if ( obj.getRowCount() == 1 ) { // 최초 입력시, 복사할 정보가 없으므로 기본값 설정
		obj.setColumn(nRow, "MANDT", ds_output_ZSDT0090.GetColumn(0, "MANDT"));
		obj.setColumn(nRow, "VBELN", ds_output_ZSDT0090.GetColumn(0, "VBELN"));
		obj.setColumn(nRow, "PSPID", ds_output_ZSDT0090.GetColumn(0, "PSPID"));
		obj.setColumn(nRow, "SEQ"  , ds_output_ZSDT0090.GetColumn(0, "SEQ"));
		obj.setColumn(nRow, "HOGI" , ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI"));
		obj.setColumn(nRow, "POSNR", ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "POSNR"));
	}
	
	obj.setColumn(nRow, "CHFKDAT", "");			// 청구계획일
	obj.setColumn(nRow, "CHMLBEZ", "");			// 종별구분
	obj.setColumn(nRow, "CHMSTXT", "");			// 내역
	obj.setColumn(nRow, "CHZTERM", "");			// 지급조건
	obj.setColumn(nRow, "CHFKSAF", "A");		// 청구상태
	obj.setColumn(nRow, "CHFAKWR", "");			// 청구금액
	obj.setColumn(nRow, "FPLTR", "000000");		// 대금청구계획 품목 번호 
	obj.setColumn(nRow, "WAERK", ds_output_ZSDS0063.GetColumn(0, "WAERK"));		// 통화

	obj.setColumn(nRow, "STATUS", "insert");
	
	obj.fireevent = true;
}

/******************************************************
* [변경청구계획] 행삭제
* 기존행은 상태플래그 변경
* 신규행은 화면단 삭제
*******************************************************/
function btn_delRow_OnClick(obj)
{
	var ds;
	if ( Tab00.TabIndex == 0 )
	{
		ds = ds_output_ZSDT0093_B1;
	}
	else if ( Tab00.TabIndex == 1 )
	{
		ds = ds_output_ZSDT0093_B2;
	}
	
	if ( ds.row == -1 ) return;
	
	ds.setColumn(ds.row, "STATUS", "delete");
	ds.DeleteRow(ds.row);
	
	if ( ds_output_ZSDT0093_B2.getRowCount() != 0 )
	{
		// 호기 - 변경청구계획 계산식
		fn_HogichPay();	
	}
	
}


/******************************************************
* [사양] OnLoadCompleted 
*******************************************************/
function ds_output_ZSDT0094_change_OnLoadCompleted(obj,nErrorCode,strErrorMsg,nReason)
{
	var matnr = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "MATNR");
	var cla = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "CLASS");// 사양 구분값
	
	// 2013.03.04 원본 데이터셋에 STATUS 컬럼 추가
	if ( ds_output_ZSDT0094_change.GetColIndex("STATUS") == -1 ) {
		ds_output_ZSDT0094_change.addColumn("STATUS", "STRING", 256); // rowType체크용 컬럼 추가
	}
	
	Tab00.tab3.Grid.Visible  = false;	// [사양]1번째 그리드
	Tab00.tab3.Grid0.Visible = false;	// [사양]2번째 그리드
	Tab00.tab3.Grid1.Visible = false;	// [사양]3번째 그리드
	Tab00.tab3.Grid2.Visible = false;	// [사양]4번째 그리드
	Tab00.tab3.Grid3.Visible = false;	// [사양]5번째 그리드
	Tab00.tab3.Grid4.Visible = false;	// [사양]5번째 
	Tab00.tab3.Grid5.Visible = false;	// [사양]6번째 그리드-공용 특성 2020 브랜드

	ds_output_ZSDT0094_change.Sort("POSNR:A,HOGI:A,ATBEZ:A");	// 사양 정렬
	ds_output_ZSDT0094_original.Sort("POSNR:A,HOGI:A,ATBEZ:A"); // 사양 정렬

	destroy("ds_output_ZSDT0094_A");
	Create("dataset", "ds_output_ZSDT0094_A");
	var filterA = "(ATKLA=='EL_BASIC'";
	filterA += "||ATKLA=='ES_BASIC'";
	filterA += "||ATKLA=='MW_BASIC'";
	filterA += "||ATKLA=='AP_BASIC'";
	filterA += "||ATKLA=='PSD_BASIC'";
	filterA += "||Substr(NAM_CHAR,0,3)=="+quote("SV_");
	filterA += "||(Substr(NAM_CHAR,0,3)=="+quote("SP_")+"&& Substr(ATBEZ,0,1)!='Z')";  //20151021 SP 설치 사양 구분 BY SEONHOWORLD			 
	filterA += "||MATNR == 'L-1100'";  //휠체어리프트
	filterA += "||MATNR == 'L-1200' )";  //dw
	// 2020 브랜드
	// filterA += ")&&DISPTP=='X'";  //ds_output_ZSDT0094_tabInit에서 필터링 by mj.Shin 2021.02.19
	
	//ds_output_ZSDT0094_change.Filter("substr(NAM_CHAR,3,1) == 'A'");
	ds_output_ZSDT0094_change.Filter(filterA);
	object("ds_output_ZSDT0094_A").copyF(ds_output_ZSDT0094_change);

	// 2020 브랜드
	initCreateOptGroup(object("ds_output_ZSDT0094_A"));
	
	//object("ds_output_ZSDT0094_A").addColumn("STATUS", "STRING", 256); // rowType체크용 컬럼 추가
	object("ds_output_ZSDT0094_A").OnColumnChanged = "ds_output_ZSDT0094_ABCDE_OnColumnChanged";
	Tab00.tab3.Grid.OnCellPosChanged = "ds_output_ZSDT0094_ABCDE_OnCellPosChanged";
	
	destroy("ds_output_ZSDT0094_B");
	Create("dataset", "ds_output_ZSDT0094_B");
	var filterB = "(ATKLA=='EL_INSIDE'";
	filterB += "||ATKLA=='ES_EXTER'";
	filterB += "||ATKLA=='MW_EXTER'";
	filterB += "||ATKLA=='PSD_ELEC'";
	filterB += "|| (Substr(NAM_CHAR,0,3)=='SP_' && Substr(ATBEZ,0,1)=='Z') )"; //2015 김선호 sp 추가 설치 관련 // A파트로 이동 20151218
	// 2020 브랜드
	// filterB += ")&&DISPTP=='X'";  //ds_output_ZSDT0094_tabInit에서 필터링 by mj.Shin 2021.02.19
	
	//ds_output_ZSDT0094_change.Filter("substr(NAM_CHAR,3,1) == 'B'");
	ds_output_ZSDT0094_change.Filter(filterB);
	object("ds_output_ZSDT0094_B").copyF(ds_output_ZSDT0094_change);
	// 2020 브랜드
	initCreateOptGroup(object("ds_output_ZSDT0094_B"));

	//object("ds_output_ZSDT0094_B").addColumn("STATUS", "STRING", 256); // rowType체크용 컬럼 추가
	object("ds_output_ZSDT0094_B").OnColumnChanged = "ds_output_ZSDT0094_ABCDE_OnColumnChanged";
	Tab00.tab3.Grid0.OnCellPosChanged = "ds_output_ZSDT0094_ABCDE_OnCellPosChanged";
	
	destroy("ds_output_ZSDT0094_C");
	Create("dataset", "ds_output_ZSDT0094_C");
	var filterC = "(ATKLA=='EL_OUTSIDE'";
	filterC += "||ATKLA=='ES_OPTION'";
	filterC += "||ATKLA=='MW_OPTION'";
	filterC += "||ATKLA=='PSD_SASH')";
	// 2020 브랜드
	// filterC += ")&&DISPTP=='X'";  //ds_output_ZSDT0094_tabInit에서 필터링 by mj.Shin 2021.02.19
	//ds_output_ZSDT0094_change.Filter("substr(NAM_CHAR,3,1) == 'C'");
	ds_output_ZSDT0094_change.Filter(filterC);
	object("ds_output_ZSDT0094_C").copyF(ds_output_ZSDT0094_change);
	// 2020 브랜드
	initCreateOptGroup(object("ds_output_ZSDT0094_C"));

	//object("ds_output_ZSDT0094_C").addColumn("STATUS", "STRING", 256); // rowType체크용 컬럼 추가
	object("ds_output_ZSDT0094_C").OnColumnChanged = "ds_output_ZSDT0094_ABCDE_OnColumnChanged";
	Tab00.tab3.Grid1.OnCellPosChanged = "ds_output_ZSDT0094_ABCDE_OnCellPosChanged";
	
	destroy("ds_output_ZSDT0094_D");
	Create("dataset", "ds_output_ZSDT0094_D");
	var filterD = "(ATKLA=='EL_OPTION'";
	filterD += "||ATKLA=='ES_OTHERS'";
	filterD += "||ATKLA=='MW_SAFETY'";
	filterD += "||ATKLA=='PSD_STEEL')";
	// 2020 브랜드
	// filterD += ")&&DISPTP=='X'";  //ds_output_ZSDT0094_tabInit에서 필터링 by mj.Shin 2021.02.19
	//ds_output_ZSDT0094_change.Filter("substr(NAM_CHAR,3,1) == 'D'||substr(NAM_CHAR,3,1) == 'F'");
	ds_output_ZSDT0094_change.Filter(filterD);
	object("ds_output_ZSDT0094_D").copyF(ds_output_ZSDT0094_change);
	// 2020 브랜드
	initCreateOptGroup(object("ds_output_ZSDT0094_D"));
	
	//object("ds_output_ZSDT0094_D").addColumn("STATUS", "STRING", 256); // rowType체크용 컬럼 추가
	object("ds_output_ZSDT0094_D").OnColumnChanged = "ds_output_ZSDT0094_ABCDE_OnColumnChanged";
	Tab00.tab3.Grid2.OnCellPosChanged = "ds_output_ZSDT0094_ABCDE_OnCellPosChanged";
	
	destroy("ds_output_ZSDT0094_E");
	Create("dataset", "ds_output_ZSDT0094_E");
	var filterE = "(ATKLA=='EL_LAYOUT'";
	filterE += "||ATKLA=='ES_SAFETY')";
	// 2020 브랜드
	// filterE += ")&&DISPTP=='X'";  //ds_output_ZSDT0094_tabInit에서 필터링 by mj.Shin 2021.02.19
	//ds_output_ZSDT0094_change.Filter("substr(NAM_CHAR,3,1) == 'E'");
	ds_output_ZSDT0094_change.Filter(filterE);
	object("ds_output_ZSDT0094_E").copyF(ds_output_ZSDT0094_change);
	// 2020 브랜드
	initCreateOptGroup(object("ds_output_ZSDT0094_E"));

	//object("ds_output_ZSDT0094_E").addColumn("STATUS", "STRING", 256); // rowType체크용 컬럼 추가
	object("ds_output_ZSDT0094_E").OnColumnChanged = "ds_output_ZSDT0094_ABCDE_OnColumnChanged";
	Tab00.tab3.Grid3.OnCellPosChanged = "ds_output_ZSDT0094_ABCDE_OnCellPosChanged";
	
    // 2020 브랜드 입력화 OTHER
	destroy("ds_output_ZSDT0094_F");
	Create("dataset", "ds_output_ZSDT0094_F");
	var filterF = "ATKLA=='EL_OTHERS'";
	// 2020 브랜드
	// filterF += "&&DISPTP=='X'";  // ds_output_ZSDT0094_tabInit에서 필터링 by mj.Shin 2021.02.19
	ds_output_ZSDT0094_change.Filter(filterF);
	object("ds_output_ZSDT0094_F").copyF(ds_output_ZSDT0094_change);
	// 2020 브랜드
	initCreateOptGroup(object("ds_output_ZSDT0094_F"));

	//object("ds_output_ZSDT0094_F").addColumn("STATUS", "STRING", 256); // rowType체크용 컬럼 추가
	object("ds_output_ZSDT0094_F").OnColumnChanged = "ds_output_ZSDT0094_ABCDE_OnColumnChanged";
	Tab00.tab3.Grid4.OnCellPosChanged = "ds_output_ZSDT0094_ABCDE_OnCellPosChanged";

    // 2020 브랜드 입력화
	destroy("ds_output_ZSDT0094_G");
	Create("dataset", "ds_output_ZSDT0094_G");
	var filterG = "Substr(NAM_CHAR,0,3)=='CO_'";
	// 2020 브랜드
	// filterG += "&&DISPTP=='X'";  //ds_output_ZSDT0094_tabInit에서 필터링 by mj.Shin 2021.02.19
	ds_output_ZSDT0094_change.Filter(filterG);
	object("ds_output_ZSDT0094_G").copyF(ds_output_ZSDT0094_change);
	// 2020 브랜드
	initCreateOptGroup(object("ds_output_ZSDT0094_G"));

	//object("ds_output_ZSDT0094_F").addColumn("STATUS", "STRING", 256); // rowType체크용 컬럼 추가
	object("ds_output_ZSDT0094_G").OnColumnChanged = "ds_output_ZSDT0094_ABCDE_OnColumnChanged";
	Tab00.tab3.Grid5.OnCellPosChanged = "ds_output_ZSDT0094_ABCDE_OnCellPosChanged";
	
	F_ZSDT0094_ABCDE = Array();
	F_ZSDT0094_ABCDE[F_ZSDT0094_ABCDE.length] = ds_output_ZSDT0094_A;
	F_ZSDT0094_ABCDE[F_ZSDT0094_ABCDE.length] = ds_output_ZSDT0094_B;
	F_ZSDT0094_ABCDE[F_ZSDT0094_ABCDE.length] = ds_output_ZSDT0094_C;
	F_ZSDT0094_ABCDE[F_ZSDT0094_ABCDE.length] = ds_output_ZSDT0094_D;
	F_ZSDT0094_ABCDE[F_ZSDT0094_ABCDE.length] = ds_output_ZSDT0094_E;
	// 2020 브랜드
	F_ZSDT0094_ABCDE[F_ZSDT0094_ABCDE.length] = ds_output_ZSDT0094_F;
	
	// 2013.03.04 호기추가후 사양변경시 화면에 즉시 반영 안되는 문제가 있어서 추가
	Tab00.tab3.Grid.Redraw  = false; Tab00.tab3.Grid.BindDataset  = "";
	Tab00.tab3.Grid0.Redraw = false; Tab00.tab3.Grid0.BindDataset = "";
	Tab00.tab3.Grid1.Redraw = false; Tab00.tab3.Grid1.BindDataset = "";
	Tab00.tab3.Grid2.Redraw = false; Tab00.tab3.Grid2.BindDataset = "";
	Tab00.tab3.Grid3.Redraw = false; Tab00.tab3.Grid3.BindDataset = "";
	Tab00.tab3.Grid4.Redraw = false; Tab00.tab3.Grid4.BindDataset = "";
    // 2020 브랜드
	Tab00.tab3.Grid5.Redraw = false; Tab00.tab3.Grid5.BindDataset = "";

	Tab00.tab3.Grid.Redraw  = true; Tab00.tab3.Grid.BindDataset  = "ds_output_ZSDT0094_A";
	Tab00.tab3.Grid0.Redraw = true; Tab00.tab3.Grid0.BindDataset = "ds_output_ZSDT0094_B";
	Tab00.tab3.Grid1.Redraw = true; Tab00.tab3.Grid1.BindDataset = "ds_output_ZSDT0094_C";
	Tab00.tab3.Grid2.Redraw = true; Tab00.tab3.Grid2.BindDataset = "ds_output_ZSDT0094_D";
	Tab00.tab3.Grid3.Redraw = true; Tab00.tab3.Grid3.BindDataset = "ds_output_ZSDT0094_E";
	Tab00.tab3.Grid4.Redraw = true; Tab00.tab3.Grid4.BindDataset = "ds_output_ZSDT0094_F";
    // 2020 브랜드
	Tab00.tab3.Grid5.Redraw = true; Tab00.tab3.Grid5.BindDataset = "ds_output_ZSDT0094_G";

	/*
	trace("ds_output_ZSDT0094_A:"+ds_output_ZSDT0094_A.SaveXML());
	trace("ds_output_ZSDT0094_B:"+ds_output_ZSDT0094_B.SaveXML());
	trace("ds_output_ZSDT0094_C:"+ds_output_ZSDT0094_C.SaveXML());
	trace("ds_output_ZSDT0094_D:"+ds_output_ZSDT0094_D.SaveXML());
	trace("ds_output_ZSDT0094_E:"+ds_output_ZSDT0094_E.SaveXML());
	trace("ds_output_ZSDT0094_F:"+ds_output_ZSDT0094_F.SaveXML());
	trace("ds_output_ZSDT0094_G:"+ds_output_ZSDT0094_G.SaveXML());
	*/

}

/******************************************************
* [사양] 활성화시
*******************************************************/
function ds_output_ZSDT0094_tabInit(obj)
{
	Tab00.Tab3.Grid.Visible  = false;
	Tab00.Tab3.Grid0.Visible = false;
	Tab00.Tab3.Grid1.Visible = false;
	Tab00.Tab3.Grid2.Visible = false;
	Tab00.Tab3.Grid3.Visible = false;
	Tab00.Tab3.Grid4.Visible = false;
	// 2020 브랜드
	Tab00.Tab3.Grid5.Visible = false;
	
	// 사양 구분값 별로 구성된 데이타셋을
	// 호기별로 재 필터
	object("ds_output_ZSDT0094_A").filter("POSNR=='"+Tab00.tab2.ed_posnr.Text+"'" + " && DISPTP == " + quote("X"));
	object("ds_output_ZSDT0094_B").filter("POSNR=='"+Tab00.tab2.ed_posnr.Text+"'" + " && DISPTP == " + quote("X"));
	object("ds_output_ZSDT0094_C").filter("POSNR=='"+Tab00.tab2.ed_posnr.Text+"'" + " && DISPTP == " + quote("X"));
	object("ds_output_ZSDT0094_D").filter("POSNR=='"+Tab00.tab2.ed_posnr.Text+"'" + " && DISPTP == " + quote("X"));	
	object("ds_output_ZSDT0094_E").filter("POSNR=='"+Tab00.tab2.ed_posnr.Text+"'" + " && DISPTP == " + quote("X"));
	object("ds_output_ZSDT0094_F").filter("POSNR=='"+Tab00.tab2.ed_posnr.Text+"'" + " && DISPTP == " + quote("X"));	
	// 2020 브랜드
	object("ds_output_ZSDT0094_G").filter("POSNR=='"+Tab00.tab2.ed_posnr.Text+"'" + " && DISPTP == " + quote("X"));
	
	
	Tab00.tab3.st_posnrVal.Value = Tab00.tab2.ed_hogi.Text + "(판매) / " +
	                               ds_output_ZSDT0094_E.GetColumn(ds_output_ZSDT0094_E.SearchRow("NAM_CHAR = 'EL_ECN'"), "CHAR_VALUE") + "(설치)" ; // 현재선택된 호기정보
    
	var cla = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "CLASS");// 사양 구분값
	var a1 = ""; // ds명
	var a2 = ""; // ds명
	var a3 = ""; // ds명
	var a4 = ""; // ds명
	var a5 = ""; // ds명
	var a6 = ""; // ds명
	// 2020 브랜드
	var a7 = ""; // ds명
	
	var b1 = ""; // visible상태
	var b2 = ""; // visible상태
	var b3 = ""; // visible상태
	var b4 = ""; // visible상태
	var b5 = ""; // visible상태
	var b6 = ""; // visible상태
	// 2020 브랜드
	var b7 = ""; // visible상태

	var num = 0; // 그리드 몇개를 보여줘야 하는지 갯수
	var ynum  = substr(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "HOGI"),6,3);
	var matnr = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "MATNR");
	
	if ( object("ds_output_ZSDT0094_A").getRowCount() > 0 ){a1 = "ds_output_ZSDT0094_A";b1="true";num++;}
	if ( object("ds_output_ZSDT0094_B").getRowCount() > 0 ){a2 = "ds_output_ZSDT0094_B";b2="true";num++;}
	if ( object("ds_output_ZSDT0094_C").getRowCount() > 0 ){a3 = "ds_output_ZSDT0094_C";b3="true";num++;}
	if ( object("ds_output_ZSDT0094_D").getRowCount() > 0 ){a4 = "ds_output_ZSDT0094_D";b4="true";num++;}
	if ( object("ds_output_ZSDT0094_E").getRowCount() > 0 ){a5 = "ds_output_ZSDT0094_E";b5="true";num++;}
	if ( object("ds_output_ZSDT0094_F").getRowCount() > 0 ){a6 = "ds_output_ZSDT0094_F";b6="true";num++;}
	// 2020 브랜드
	if ( object("ds_output_ZSDT0094_G").getRowCount() > 0 ){a7 = "ds_output_ZSDT0094_G";b7="true";num++;}
	
	for ( var i = 0 ; i < num ; i++ )
	{
		if ( i == 0 )
		{
			Tab00.Tab3.Grid.Visible = true;
			if ( b1 == "true" )
			{
				Tab00.Tab3.Grid.BindDataset = a1;b1 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "기본의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "BASIC 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "AP_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "BASIC 특성");}
			}
			else if ( b2 == "true" )
			{
				Tab00.Tab3.Grid.BindDataset = a2;b2 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "카내의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "EXTERIOR 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "EXTERIOR 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "ELEC 특성");}
				else if ( cla == "SP_01") {
					if ( ynum == "" ) {
					    if (matnr != "Y-400" ) {
						    Tab00.Tab3.Grid0.Visible = false;
						}
					} else { 
					   if ( ynum != "Y77" ) {
						Tab00.Tab3.Grid0.Visible = false;
					   }
					}
				}
			}
			else if ( b3 == "true" )
			{
				Tab00.Tab3.Grid.BindDataset = a3;b3 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "카외의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "OPTION 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "SASH 특성");}
			}
			else if ( b4 == "true" )
			{
				Tab00.Tab3.Grid.BindDataset = a4;b4 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "OTHERS 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "SAFETY 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "STEEL 특성");}
			}
			else if ( b5 == "true" )
			{
				Tab00.Tab3.Grid.BindDataset = a5;b5 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "LAYOUT 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "SAFETY 특성");} 
			}
			else if ( b6 == "true" )  // 2020 브랜드
			{
				Tab00.Tab3.Grid.BindDataset = a6;b6 = "false";
				Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "OTHER 특성");
			}
			else if ( b7 == "true" )
			{
				Tab00.Tab3.Grid.BindDataset = a7;b7 = "false";
				Tab00.tab3.Grid.SetCellProp("head", 9, "Text", "COMMON 특성");
			}
		}
		if ( i == 1 )
		{
			Tab00.Tab3.Grid0.Visible = true;
			if ( b1 == "true" )
			{
				Tab00.Tab3.Grid0.BindDataset = a1;b1 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "기본의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "BASIC 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "AP_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "BASIC 특성");}
			}
			else if ( b2 == "true" )
			{
				Tab00.Tab3.Grid0.BindDataset = a2;b2 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "카내의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "EXTERIOR 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "EXTERIOR 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "ELEC 특성");}
			}
			else if ( b3 == "true" )
			{
				Tab00.Tab3.Grid0.BindDataset = a3;b3 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "카외의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "OPTION 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "SASH 특성");}
			}
			else if ( b4 == "true" )
			{
				Tab00.Tab3.Grid0.BindDataset = a4;b4 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "OTHERS 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "SAFETY 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "STEEL 특성");}
			}
			else if ( b5 == "true" )
			{
				Tab00.Tab3.Grid0.BindDataset = a5;b5 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "LAYOUT 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "SAFETY 특성");} 
			}
			else if ( b6 == "true" ) // 2020 브랜드
			{
				Tab00.Tab3.Grid0.BindDataset = a6;b6 = "false";
				Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "OTHER 특성");
			}
			else if ( b7 == "true" )
			{
				Tab00.Tab3.Grid0.BindDataset = a7;b7 = "false";
				Tab00.tab3.Grid0.SetCellProp("head", 9, "Text", "COMMON 특성");
			}
		}
		if ( i == 2 )
		{
			Tab00.Tab3.Grid1.Visible = true;
			if ( b1 == "true" )
			{
				Tab00.Tab3.Grid1.BindDataset = a1;b1 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "기본의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "BASIC 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "AP_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "BASIC 특성");}
			}
			else if ( b2 == "true" )
			{
				Tab00.Tab3.Grid1.BindDataset = a2;b2 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "카내의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "EXTERIOR 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "EXTERIOR 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "ELEC 특성");}
			}
			else if ( b3 == "true" )
			{
				Tab00.Tab3.Grid1.BindDataset = a3;b3 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "카외의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "OPTION 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "SASH 특성");}
			}
			else if ( b4 == "true" )
			{
				Tab00.Tab3.Grid1.BindDataset = a4;b4 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "OTHERS 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "SAFETY 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "STEEL 특성");}
			}
			else if ( b5 == "true" )
			{
				Tab00.Tab3.Grid1.BindDataset = a5;b5 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "LAYOUT 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "SAFETY 특성");} 
			}
			else if ( b6 == "true" ) // 2020 브랜드
			{
				Tab00.Tab3.Grid1.BindDataset = a6;b6 = "false";
				Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "OTHER 특성");
			}
			else if ( b7 == "true" )
			{
				Tab00.Tab3.Grid1.BindDataset = a7;b7 = "false";
				Tab00.tab3.Grid1.SetCellProp("head", 9, "Text", "COMMON 특성");
			}
		}
		if ( i == 3 )
		{
			Tab00.Tab3.Grid2.Visible = true;
			if ( b1 == "true" )
			{
				Tab00.Tab3.Grid2.BindDataset = a1;b1 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "기본의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "BASIC 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "AP_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "BASIC 특성");}
			}
			else if ( b2 == "true" )
			{
				Tab00.Tab3.Grid2.BindDataset = a2;b2 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "카내의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "EXTERIOR 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "EXTERIOR 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "ELEC 특성");}
			}
			else if ( b3 == "true" )
			{
				Tab00.Tab3.Grid2.BindDataset = a3;b3 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "카외의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "OPTION 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "SASH 특성");}
			}
			else if ( b4 == "true" )
			{
				Tab00.Tab3.Grid2.BindDataset = a4;b4 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "OTHERS 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "SAFETY 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "STEEL 특성");}
			}
			else if ( b5 == "true" )
			{
				Tab00.Tab3.Grid2.BindDataset = a5;b5 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "LAYOUT 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "SAFETY 특성");} 
			}
			else if ( b6 == "true" ) // 2020 브랜드
			{
				Tab00.Tab3.Grid2.BindDataset = a6;b6 = "false";
				Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "OTHER 특성");
			}
			else if ( b7 == "true" )
			{
				Tab00.Tab3.Grid2.BindDataset = a7;b7 = "false";
				Tab00.tab3.Grid2.SetCellProp("head", 9, "Text", "COMMON 특성");
			}
		}
		if ( i == 4 )
		{
			Tab00.Tab3.Grid3.Visible = true;
			if ( b1 == "true" )
			{
				Tab00.Tab3.Grid3.BindDataset = a1;b1 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "기본의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "BASIC 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "AP_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "BASIC 특성");}
			}
			else if ( b2 == "true" )
			{
				Tab00.Tab3.Grid3.BindDataset = a2;b2 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "카내의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "EXTERIOR 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "EXTERIOR 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "ELEC 특성");}
			}
			else if ( b3 == "true" )
			{
				Tab00.Tab3.Grid3.BindDataset = a3;b3 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "카외의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "OPTION 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "SASH 특성");}
			}
			else if ( b4 == "true" )
			{
				Tab00.Tab3.Grid3.BindDataset = a4;b4 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "OTHERS 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "SAFETY 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "STEEL 특성");}
			}
			else if ( b5 == "true" )
			{
				Tab00.Tab3.Grid3.BindDataset = a5;b5 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "LAYOUT 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "SAFETY 특성");} 
			}
			else if ( b6 == "true" ) // 2020 브랜드
			{
				Tab00.Tab3.Grid3.BindDataset = a6;b6 = "false";
				Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "OTHER 특성");
			}
			else if ( b7 == "true" )
			{
				Tab00.Tab3.Grid3.BindDataset = a7;b7 = "false";
				Tab00.tab3.Grid3.SetCellProp("head", 9, "Text", "COMMON 특성");
			}
		}
		if ( i == 5 )
		{
			Tab00.Tab3.Grid4.Visible = true;
			if ( b1 == "true" )
			{
				Tab00.Tab3.Grid4.BindDataset = a1;b1 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "기본의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "BASIC 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "AP_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "BASIC 특성");}
			}
			else if ( b2 == "true" )
			{
				Tab00.Tab3.Grid4.BindDataset = a2;b2 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "카내의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "EXTERIOR 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "EXTERIOR 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "ELEC 특성");}
			}
			else if ( b3 == "true" )
			{
				Tab00.Tab3.Grid4.BindDataset = a3;b3 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "카외의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "OPTION 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "SASH 특성");}
			}
			else if ( b4 == "true" )
			{
				Tab00.Tab3.Grid4.BindDataset = a4;b4 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "OTHERS 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "SAFETY 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "STEEL 특성");}
			}
			else if ( b5 == "true" )
			{
				Tab00.Tab3.Grid3.BindDataset = a5;b5 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "LAYOUT 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "SAFETY 특성");} 
			}
			else if ( b6 == "true" ) // 2020 브랜드
			{
				Tab00.Tab3.Grid4.BindDataset = a6;b6 = "false";
				Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "OTHER 특성");
			}
			else if ( b7 == "true" ) 
			{
				Tab00.Tab3.Grid4.BindDataset = a7;b7 = "false";
				Tab00.tab3.Grid4.SetCellProp("head", 9, "Text", "COMMON 특성");
			}
		}
		// 2020 브랜드
		if ( i == 6 )
		{
			Tab00.Tab3.Grid5.Visible = true;
			if ( b1 == "true" )
			{
				Tab00.Tab3.Grid5.BindDataset = a1;b1 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "기본의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "BASIC 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "AP_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "BASIC 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "BASIC 특성");}
			}
			else if ( b2 == "true" )
			{
				Tab00.Tab3.Grid5.BindDataset = a2;b2 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "카내의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "EXTERIOR 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "EXTERIOR 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "ELEC 특성");}
			}
			else if ( b3 == "true" )
			{
				Tab00.Tab3.Grid5.BindDataset = a3;b3 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "카외의장 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "OPTION 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "SASH 특성");}
			}
			else if ( b4 == "true" )
			{
				Tab00.Tab3.Grid5.BindDataset = a4;b4 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "OPTION 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "OTHERS 특성");} 
				else if ( cla == "MW_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "SAFETY 특성");}  
				else if ( cla == "PSD_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "STEEL 특성");}
			}
			else if ( b5 == "true" )
			{
				Tab00.Tab3.Grid3.BindDataset = a5;b5 = "false";
				if ( cla == "ELV_01" || cla == "ELV_02") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "LAYOUT 특성");} 
				else if ( cla == "ESC_01") {Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "SAFETY 특성");} 
			}
			else if ( b6 == "true" ) // 2020 브랜드
			{
				Tab00.Tab3.Grid5.BindDataset = a6;b6 = "false";
				Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "OTHER 특성");
			}
			else if ( b7 == "true" ) 
			{
				Tab00.Tab3.Grid5.BindDataset = a7;b7 = "false";
				Tab00.tab3.Grid5.SetCellProp("head", 9, "Text", "COMMON 특성");
			}
		}		
	}

	// 2013.01.24 사양탭 그리드가 6개(엘리베이터)인 사양을 보다가, 그리드가 2개(감시반)인 사양을 볼 때, 스크롤바를 맨 앞으로 강제 이동
	// 2020 브랜드
	if ( !Tab00.tab3.Grid5.Visible || !Tab00.tab3.Grid3.Visible ) {
		Tab00.tab3.SetScroll(0, 0);
	}
	
	Tab00.tab3.ResizeScroll();
}

function checkRouting() {
	var inDs =  'ds_updated_char=ds_updated_char'
			 + ' ds_routing=ds_routing'
			 + ' ds_rout_status=ds_rout_status'
	;
	var outDs = 'ds_routing=ds_routing'
			 + ' ds_rout_status=ds_rout_status'
			 + ' ds_error=ds_error'
			 + ' rtn_status=rtn_status'
	;
	http.sync = true;
	nsfRequest('checkRouting', 'sso0055n/checkRouting', inDs, outDs, '', 'fn_afterCheckRouting');
}

function fn_afterCheckRouting() {
	http.sync = false;
}
/******************************************************
* [사양]탭 데이터 변경시
*******************************************************/
var posNrow	 = 0;	// 포커스 row
var posNcell = 0;	// 포커스 cell
function ds_output_ZSDT0094_ABCDE_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	var gd = ""; // 그리드 id
	
	if ( obj.id == 'ds_output_ZSDT0094_A' ) { gd = Tab00.tab3.Grid;}
	if ( obj.id == 'ds_output_ZSDT0094_B' ) { gd = Tab00.tab3.Grid0;}
	if ( obj.id == 'ds_output_ZSDT0094_C' ) { gd = Tab00.tab3.Grid1;}
	if ( obj.id == 'ds_output_ZSDT0094_D' ) { gd = Tab00.tab3.Grid2;}
	if ( obj.id == 'ds_output_ZSDT0094_E' ) { gd = Tab00.tab3.Grid3;}
	if ( obj.id == 'ds_output_ZSDT0094_F' ) { gd = Tab00.tab3.Grid4;}
	// 2020 브랜드
	if ( obj.id == 'ds_output_ZSDT0094_G' ) { gd = Tab00.tab3.Grid5;}
	
	// 특성값 변경시
	if ( strColumnID == 'CHAR_VALUE' && ToString(varOldValue) != ToString(varNewValue) )//'ATWTB' ) // 2013.01.25 값이 변경될 경우에만 실행
	{	
		
		
		// [cnt]가 1이면 팝업, 그외는 키인
		// 값이 변경되면 [특성내역]도 동일하게 변경처리
		if ( obj.GetColumn(nRow, "CNT") == 0 )
		{
			//obj.SetColumn(nRow, "CHAR_VALUE", obj.GetColumn(nRow, "ATWTB"));
			obj.SetColumn(nRow, "ATWTB", obj.GetColumn(nRow, "CHAR_VALUE"));
		}
		
		// 변경된 컬럼은 상태플래그 처리
		obj.SetColumn(nRow, "STATUS", "update" );
		
		// 2013.05.30 설계부 요청사항 반영 START
		var vNamChar = obj.GetColumn(nRow, "NAM_CHAR");
		switch(vNamChar)	{
			case "EL_ATYP" :
			case "EL_AUSE" :
			case "EL_AMAN" :
			case "EL_ACAPA" :
			case "EL_AOPEN" :
			case "EL_ASPD" :
			case "EL_AFQ" :
			case "EL_ASTQ" :
					var vSearchERow = ds_output_ZSDT0094_E.SearchRow("NAM_CHAR == " + quote("EL_ECCH"));
					if (vSearchERow > -1)	{
						ds_output_ZSDT0094_E.SetColumn(vSearchERow, "CHAR_VALUE", "0");
					}
					break;
			default : break;
		}
		// 2013.05.30 설계부 요청사항 반영 END
		
		// 2013.01.21 화면의 사양 변경 내용을 원본 데이터셋에도 적용
		var nSrchRow = ds_output_ZSDT0094_change.SearchRowNF("HOGI==" + quote(obj.GetColumn(nRow, "HOGI")) + " && NAM_CHAR==" + quote(obj.GetColumn(nRow, "NAM_CHAR")));
		if ( nSrchRow > - 1) {
			if ( ds_output_ZSDT0094_change.GetColumnNF(nSrchRow, "CHAR_VALUE") != varNewValue ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSrchRow, "CHAR_VALUE", varNewValue);
				ds_output_ZSDT0094_change.SetColumnNF(nSrchRow, "STATUS", "update");
			}
		}
		
		var strNamChar = obj.GetColumn(nRow, "NAM_CHAR");
		if (   (strNamChar == "EL_ASPC" || strNamChar == "ES_ASPC" || strNamChar == "MW_ASPC")
			|| (strNamChar == "EL_BCLCD"|| strNamChar == "EL_CHLCD")
			|| (strNamChar == "EL_BCPI" || strNamChar == "EL_CHPI1" || strNamChar == "EL_CHPI2" || strNamChar == "EL_CHPI3" || strNamChar == "EL_CHPI4")
			|| (strNamChar == "EL_DEPH")
			|| (strNamChar == "EL_DDVR")
			|| (strNamChar == "EL_DSV1" || strNamChar=="ES_DSV1" || strNamChar == "MW_DSV1")
			|| (strNamChar == "EL_DSV2" || strNamChar=="ES_DSV2" || strNamChar == "MW_DSV2") 
			|| (strNamChar == "EL_ASPD") ) // 2013.04.03 고속현장 추가
		{
			// 2013.01.21 공통 사양 변경 적용
			fn_aspc (obj,nRow); // 시방서
			fn_bclcd(); // LCD 총수량
			fn_bcpi (); // LED 총 수량
			fn_deph (); // 비상통화장치 DI-PBX 적용대수
			fn_ddvr (); // DVR 적용대수
			fn_dsv1 (); // 감시반1
			fn_dsv2 (); // 감시반2
			fn_aspd ();	// 고속현장 2013.04.03
		}
		
		// 2013.01.25 사양변경시 0091의 변경 flag 체크
		ds_change_ZSDT0091.setColumn(ds_change_ZSDT0091.currow, "CHCK", "X");
		if ( ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.currow, "STATUS") != "insert" ) {
			ds_change_ZSDT0091.setColumn(ds_change_ZSDT0091.currow, "STATUS", "update");
			ds_change_ZSDT0091.setColumn(ds_change_ZSDT0091.currow, "SPEC_STAT", "");  //사양변경 후 저장시 상태 클리어 20160517
			if ( strNamChar == "EL_FDNCMQ" || strNamChar == "ES_FDNCMQ" || strNamChar == "MW_FDNCMQ" ) {
				ds_change_ZSDT0091.setColumn(ds_change_ZSDT0091.currow, "CHREPMO", varNewValue);
			} else if ( strNamChar == "EL_FDWUQ" || strNamChar == "ES_FDWUQ" || strNamChar == "MW_FDWUQ" ) {
				nSrchRow = ds_change_ZSDT0091.FindRowNF("HOGI", obj.GetColumn(nRow, "HOGI"));
				ds_change_ZSDT0091.setColumn(nSrchRow, "CHWORMO", varNewValue);
			}
		}
		// 리모델링 추가 리모델링실측치적용 버튼 제어
		if(strNamChar == "EL_DREUSE") {
		    var isRadYsno   = false;
			if(varNewValue == "Y" && Substr(ed_pspId.text, 0,1) == "N") {
			    isRadYsno = fn_isRadYsno();
			    if(isRadYsno) {
				    Tab00.tab3.btn_rad_auto.Enable = true;
				    // 표준LAYOUT, AUTOLAYOUT 버튼 제어
				    Tab00.tab3.btn_stdLayout.Enable = false;
				    Tab00.tab3.btn_depend2.Enable = false;
			    } else {
				    Tab00.tab3.btn_rad_auto.Enable = false;
				    // 표준LAYOUT, AUTOLAYOUT 버튼 제어
				    Tab00.tab3.btn_stdLayout.Enable = true;
				    Tab00.tab3.btn_depend2.Enable = true;
			    }
			} else {
				Tab00.tab3.btn_rad_auto.Enable = false;
				// 표준LAYOUT, AUTOLAYOUT 버튼 제어
				Tab00.tab3.btn_stdLayout.Enable = true;
				Tab00.tab3.btn_depend2.Enable = true;
			}
		}
	}
}

/******************************************************
// 그리스 포커스 변경시
******************************************************/
function ds_output_ZSDT0094_ABCDE_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex)
{
	var gd = ""; // 그리드id
	var ds = ""; // dataset id
		
	if ( obj.id == 'Grid' ) { gd = Tab00.tab3.Grid;ds = ds_output_ZSDT0094_A;}
	if ( obj.id == 'Grid0' ) { gd = Tab00.tab3.Grid0;ds = ds_output_ZSDT0094_B;}
	if ( obj.id == 'Grid1' ) { gd = Tab00.tab3.Grid1;ds = ds_output_ZSDT0094_C;}
	if ( obj.id == 'Grid2' ) { gd = Tab00.tab3.Grid2;ds = ds_output_ZSDT0094_D;}
	if ( obj.id == 'Grid3' ) { gd = Tab00.tab3.Grid3;ds = ds_output_ZSDT0094_E;}
	// 2020 브랜드
	if ( obj.id == 'Grid4' ) { gd = Tab00.tab3.Grid4;ds = ds_output_ZSDT0094_F;}
	
	ds = object(obj.BindDataset); // dataset id
	
	// 선택한 row정보중 spec_stat컬럼(사양변경유무)이 'X'일경우 이동하지 못하게 한다.
	if ( ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "SPEC_STAT") == 'X' )
	{
		// [${}]이 불가능한 호기정보입니다.
		gfn_showAlert("CW10014", "사양변경");
		Tab00.tab3.ed_cost.SetFocus();
		return;
	}
	
	if ( posNrow != 0 && posNcell != 0 )
	{
		// 특성값 컬럼=10
		if ( nOldCell == 10 )
		{
			var CHAR_VALUE = replace( ds.GetColumn(nOldRow, "CHAR_VALUE"), ',' ,''); // 특성 값
		}
	}
}

/******************************************************
* 탭 변경시
*******************************************************/
function Tab00_OnChanging(obj,nOldIndex,nNewIndex)
{
	// [사양]탭으로 이동시 row를 선택하지 않고 이동시
	if ( nNewIndex == 2 && length(Tab00.tab2.ed_posnr.Text) == 0 )
	{	    
		//호기 미선택 시, 디폴트 1호기로 이동 2013.06.17
		Tab00_tab2_Grid_OnCellClick(Tab00.tab2.Grid, 0, 0);
		
	}
	
	if ( nNewIndex == 2 && length( ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "MATNR") ) == 0 )
	{
		//선택된 [${}]정보가 없습니다.
		gfn_showAlert("CW00022", "자재번호");
		Tab00.TabIndex = nOldIndex;
		return;
	}
	
	// [사양]탭으로 이동
	else if ( nNewIndex == 2 && length(Tab00.tab2.ed_posnr.Text) != 0 )
	{
		var hogi_canc = ds_output_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "HOGI_CANC");
		// [원가합계] 초기화
		Tab00.tab3.ed_cost.Text = 0;
		
		// 리모델링 추가 리모델링실측치적용 버튼 제어
		var findRow = object("ds_output_ZSDT0094_F").FindRow("NAM_CHAR", "EL_DREUSE");
		if(findRow > -1 ) {
		    var isRadYsno   = false;
			if(object("ds_output_ZSDT0094_F").getColumn(findRow, "CHAR_VALUE") == "Y" && Substr(ed_pspId.text, 0,1) == "N") {
			    isRadYsno = fn_isRadYsno();
			    if(isRadYsno) {
					Tab00.tab3.btn_rad_auto.Enable = true;
					// 표준LAYOUT, AUTOLAYOUT 버튼 제어
					Tab00.tab3.btn_stdLayout.Enable = false;
					Tab00.tab3.btn_depend2.Enable = false;

					// 호기별 리모델링 상태 정보 정의
					var hogi = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI");
					var findRow = -1;
					findRow = ds_rad_sts.FindRow("HOGI", hogi);
					if(findRow > -1) {
						FLOORYSNO  = ds_rad_sts.GetColumn(findRow, "FLOORYSNO");
						LAYOUTYSNO = ds_rad_sts.GetColumn(findRow, "LAYOUTYSNO");
						APPLYYSNO  = ds_rad_sts.GetColumn(findRow, "APPLYYSNO");
						SAVEYSNO   = ds_rad_sts.GetColumn(findRow, "SAVEYSNO");
					}
					//trace("FLOORYSNO:"+FLOORYSNO+", LAYOUTYSNO:"+LAYOUTYSNO+", APPLYYSNO:"+APPLYYSNO+", SAVEYSNO:"+SAVEYSNO);
			    } else {
					Tab00.tab3.btn_rad_auto.Enable = false;
					// 표준LAYOUT, AUTOLAYOUT 버튼 제어
					Tab00.tab3.btn_stdLayout.Enable = true;
					Tab00.tab3.btn_depend2.Enable = true;
			    }
			} else {
				Tab00.tab3.btn_rad_auto.Enable = false;
				// 표준LAYOUT, AUTOLAYOUT 버튼 제어
				Tab00.tab3.btn_stdLayout.Enable = true;
				Tab00.tab3.btn_depend2.Enable = true;
			}
		}
				
		//호기취소일 때, 사양값 버튼 핸들링
		if(hogi_canc == "C") {
			// 탭3 (사양)
			Tab00.tab3.btn_cost.Enable = false; //원가합계 버튼
			Tab00.tab3.btn_duty.Enable     = false; //Duty Call 버튼
			Tab00.tab3.btn_template.Enable = false; //템플릿 불러오기 버튼
			Tab00.tab3.btn_depend.Enable   = false; //종속성 버튼
			Tab00.tab3.cb_block.Enable     = false; //Duty Call 왼쪽 RadioBox
			Tab00.tab3.Grid.Editable  = false; Tab00.tab3.Grid.OnCellClick  = ""; Tab00.tab3.Grid.SetCellProp ("body",10,"edit","none");
			Tab00.tab3.Grid0.Editable = false; Tab00.tab3.Grid0.OnCellClick = ""; Tab00.tab3.Grid0.SetCellProp("body",10,"edit","none");
			Tab00.tab3.Grid1.Editable = false; Tab00.tab3.Grid1.OnCellClick = ""; Tab00.tab3.Grid1.SetCellProp("body",10,"edit","none");
			Tab00.tab3.Grid2.Editable = false; Tab00.tab3.Grid2.OnCellClick = ""; Tab00.tab3.Grid2.SetCellProp("body",10,"edit","none");
			Tab00.tab3.Grid3.Editable = false; Tab00.tab3.Grid3.OnCellClick = ""; Tab00.tab3.Grid3.SetCellProp("body",10,"edit","none");
			
			// 2020 브랜드
			Tab00.tab3.Grid4.Editable = false; Tab00.tab3.Grid4.OnCellClick = ""; Tab00.tab3.Grid4.SetCellProp("body",10,"edit","none");
			
		} else {
			Tab00.tab3.btn_cost.Enable = ds_tab3_sayang.GetColumn(0, "btn_cost");
			Tab00.tab3.btn_duty.Enable     = ds_tab3_sayang.GetColumn(0, "btn_duty");
			Tab00.tab3.btn_template.Enable = ds_tab3_sayang.GetColumn(0, "btn_template");
			Tab00.tab3.btn_depend.Enable   = ds_tab3_sayang.GetColumn(0, "btn_depend");
			Tab00.tab3.cb_block.Enable     = ds_tab3_sayang.GetColumn(0, "cb_block");
			Tab00.tab3.Grid.Editable  = ds_tab3_sayang.GetColumn(0, "Grid_Editable");		Tab00.tab3.Grid.OnCellClick  = ds_tab3_sayang.GetColumn(0, "Grid_OnCellClick");		Tab00.tab3.Grid.SetCellProp("body",10,"edit",ds_tab3_sayang.GetColumn(0, "Grid_SetCellProp"));
			Tab00.tab3.Grid0.Editable  = ds_tab3_sayang.GetColumn(0, "Grid0_Editable");		Tab00.tab3.Grid0.OnCellClick  = ds_tab3_sayang.GetColumn(0, "Grid0_OnCellClick");	Tab00.tab3.Grid0.SetCellProp("body",10,"edit",ds_tab3_sayang.GetColumn(0, "Grid0_SetCellProp"));
			Tab00.tab3.Grid1.Editable  = ds_tab3_sayang.GetColumn(0, "Grid1_Editable");		Tab00.tab3.Grid1.OnCellClick  = ds_tab3_sayang.GetColumn(0, "Grid1_OnCellClick");	Tab00.tab3.Grid1.SetCellProp("body",10,"edit",ds_tab3_sayang.GetColumn(0, "Grid1_SetCellProp"));
			Tab00.tab3.Grid2.Editable  = ds_tab3_sayang.GetColumn(0, "Grid2_Editable");		Tab00.tab3.Grid2.OnCellClick  = ds_tab3_sayang.GetColumn(0, "Grid2_OnCellClick");	Tab00.tab3.Grid2.SetCellProp("body",10,"edit",ds_tab3_sayang.GetColumn(0, "Grid2_SetCellProp"));
			Tab00.tab3.Grid3.Editable  = ds_tab3_sayang.GetColumn(0, "Grid3_Editable");		Tab00.tab3.Grid3.OnCellClick  = ds_tab3_sayang.GetColumn(0, "Grid3_OnCellClick");	Tab00.tab3.Grid3.SetCellProp("body",10,"edit",ds_tab3_sayang.GetColumn(0, "Grid3_SetCellProp"));

			// 2020 브랜드
			Tab00.tab3.Grid4.Editable  = ds_tab3_sayang.GetColumn(0, "Grid4_Editable");		Tab00.tab3.Grid4.OnCellClick  = ds_tab3_sayang.GetColumn(0, "Grid4_OnCellClick");	Tab00.tab3.Grid4.SetCellProp("body",10,"edit",ds_tab3_sayang.GetColumn(0, "Grid4_SetCellProp"));
		}
		
		// 해외) 중계 무역 프로젝트는 원가합계 버튼및 원가 function 호출 없음 (2012.12.19)
		if ( ds_output_ZSDS0063.GetColumn(0, "AUART") == "ZT01" )
		{
			Tab00.tab3.btn_cost.Enable = false;
			Tab00.tab2.btn_costsumall.Enable = false; // 2013.03.20 전체원가합계 버튼의 제어는 원가합계버튼과 동일
		}
		
		// 감시반, SP는 Duty Call 버튼 없어야 함
		var matnr = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "MATNR");
		if ( matnr == "T-1000" || matnr == "Y-1000" )
		{
			Tab00.tab3.btn_duty.Enable = false;
		}
		
		// [사양] 탭 활성화시
		ds_output_ZSDT0094_tabInit('Dataset:ds_output_ZSDT0094_change');
		
		// 호기원가
		Tab00.tab3.ed_hogiWAVWR.Text = ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "WAVWR"); 
		
		
		// 선택한 row정보중 spec_stat컬럼(사양변경유무)이 'X'일경우 이벤트를 태우지 않기 위함.
		if ( ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "SPEC_STAT") == 'X' )
		{
			if ( Tab00.tab3.Grid.Visible == true ){Tab00.tab3.Grid.Editable = false;}
			if ( Tab00.tab3.Grid0.Visible == true ){Tab00.tab3.Grid0.Editable = false;}
			if ( Tab00.tab3.Grid1.Visible == true ){Tab00.tab3.Grid1.Editable = false;}
			if ( Tab00.tab3.Grid2.Visible == true ){Tab00.tab3.Grid2.Editable = false;}
			if ( Tab00.tab3.Grid3.Visible == true ){Tab00.tab3.Grid3.Editable = false;}
			if ( Tab00.tab3.Grid4.Visible == true ){Tab00.tab3.Grid4.Editable = false;}
			// 2020 브랜드
			if ( Tab00.tab3.Grid5.Visible == true ){Tab00.tab3.Grid5.Editable = false;}
			
			return;
		}
		else
		{
			if ( Tab00.tab3.Grid.Visible == true ){Tab00.tab3.Grid.Editable = true;}
			if ( Tab00.tab3.Grid0.Visible == true ){Tab00.tab3.Grid0.Editable = true;}
			if ( Tab00.tab3.Grid1.Visible == true ){Tab00.tab3.Grid1.Editable = true;}
			if ( Tab00.tab3.Grid2.Visible == true ){Tab00.tab3.Grid2.Editable = true;}
			if ( Tab00.tab3.Grid3.Visible == true ){Tab00.tab3.Grid3.Editable = true;}
			if ( Tab00.tab3.Grid4.Visible == true ){Tab00.tab3.Grid4.Editable = false;}
			// 2020 브랜드
			if ( Tab00.tab3.Grid5.Visible == true ){Tab00.tab3.Grid5.Editable = false;}
		}

		Tab00.tab3.Grid.Redraw = true;
		Tab00.tab3.Grid0.Redraw = true;
		Tab00.tab3.Grid1.Redraw = true;
		Tab00.tab3.Grid2.Redraw = true;
		Tab00.tab3.Grid3.Redraw = true;
		Tab00.tab3.Grid4.Redraw = true;
		// 2020 브랜드
		Tab00.tab3.Grid5.Redraw = true;
		
		if(el_plm_after) fn_dpex();
		
		// (2012.11.29 조건 추가) 견적TABLE에 없는 프로젝트(SAP온핸드)는 사양에서 원가FUNCTION을 호출하지 않고 바로 원가금액을 직접 입력 가능하도록 변경
		if ( ds_vbeln.GetRowCount() == 0 || length(ds_vbeln.GetColumn(0, "VBELN")) < 2 )
		{
			return;
		}
	}
	
	// 사양변경하고 다른 탭으로 이동하려고 할 경우, 원가 산출 다시 해야 함.
	if ( nOldIndex == 2 )
	{
	}
}

/****************************************************************
* [사양] 그리드 셀 오버시 툴팁
* [특성내역]과 [특성값] 컬럼이 사이즈로 인해 보이지 않으므로 마우스오버시 보이도록 처리
***************************************************************/
function Grid_OnMouseOver(obj,nPosX,nPosY,nRow,nCell,nPivotIndex)
{
	// 특성코드=9, 특성값=10
	if ( nCell == 9 || nCell == 10 )
	{
		obj.ToolTipText = obj.GetCellText('Body', nRow, nCell);
	}
}


/****************************************************************
* [사양] 그리드 특성값 클릭 시
***************************************************************/
function Tab00_tab3_Grid_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	var prd      = "";
	var zacapa   = "";
	var searchRow;	
	
	// [특성값] 클릭시
	if ( nCell == 10 )
	{
		if ( obj.BindDataset == "ds_output_ZSDT0094_G" ) { // 공통사양 - 입력 불가
			obj.editable = false;
			return;
		}
		
		// 선택한 row정보중 spec_stat컬럼(사양변경유무)이 'X'일경우 이벤트를 태우지 않기 위함.
		if ( ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "SPEC_STAT") == 'X' )
		{
			return;
		}
		
		var ds = ""; // dataset id
		if ( obj.id == 'Grid' ){ds=ds_output_ZSDT0094_A;}
		if ( obj.id == 'Grid0' ){ds=ds_output_ZSDT0094_B;}
		if ( obj.id == 'Grid1' ){ds=ds_output_ZSDT0094_C;}
		if ( obj.id == 'Grid2' ){ds=ds_output_ZSDT0094_D;}
		if ( obj.id == 'Grid3' ){ds=ds_output_ZSDT0094_E;}
		// 2020 브랜드
		if ( obj.id == 'Grid4' ){ds=ds_output_ZSDT0094_F;}

		ds = object(obj.BindDataset);
		
		/*	
		trace("ds.ID:"+ds.ID);
		trace("DISPTP:"+ds.GetColumn(nRow, "DISPTP"));
		trace("MODITP:"+ds.GetColumn(nRow, "MODITP"));
		trace("ZPRDGBN:"+ds.GetColumn(nRow, "ZPRDGBN"));
		trace("BRNDCD:"+ds.GetColumn(nRow, "BRNDCD"));
		trace("BRNDSEQ:"+ds.GetColumn(nRow, "BRNDSEQ"));
		trace("SNDSYS:"+ds.GetColumn(nRow, "SNDSYS"));
		*/

		//MODITP = "" 입력 기능 통제 
		var moditp =  ds.GetColumn(nRow, "MODITP");
		if(moditp == '') {
	        return;
		}
				
		// 특성코드가 EL_ABRAND이면 아무 동작도 하지 않는다.
		var namChar = ds.GetColumn(nRow, "NAM_CHAR");
		if(namChar == 'EL_ABRAND') {
	        return;
		}
		
		// 특성코드가 EL_ATYP이고 EL_ABRANDr값이 존재하면 아무 동작도 하지 않는다.
		if(namChar == 'EL_ATYP') {
		    var findIndex = ds.FindRow("NAM_CHAR", "EL_ABRAND");
		    if(findIndex > -1) {
		        return;
		    }
		}
		
		// [cnt]가 1이면 팝업용, 0이면 키인용
		// 2020 브랜드 사양 특성값 수정 필요
		if ( ds.getColumn(nRow, "CNT") == 1 )
		{	
			obj.editable = false;
			var arg  = "fa_brndseq=" +quote(ds.GetColumn(nRow, "BRNDSEQ")); 	// 브랜드시퀀스
			    arg += " fa_class=" +quote(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.row, "CLASS")); 	// 제품구분
				arg += " fa_brndcd=" +quote(ds.GetColumn(nRow, "BRNDCD"));									// 브랜드코드
				arg += " fa_atkla="+quote(ds.getColumn(nRow, "NAM_CHAR"));									// 영업사양특성
				arg += " popFlag="+quote("brndfind");                                                        // 팝업구분
				
			// 팝업 호출 & return 값셋팅
			var rtn = gfn_openPopupUrl("COM::Com0060.xml", true, arg);
				
			// return값이 null이 아닐경우 처리
			if ( length(rtn) != 0 )
			{
				ds.setColumn(nRow, "ATWTB", rtn[1]); 		// 사양특성 내역
				ds.setColumn(nRow, "CHAR_VALUE", rtn[0]); 	// 사양특성 값
				/* 인승에 따른 용량 셋팅 
				if(ds.getColumn(nRow, "NAM_CHAR")=="EL_AMAN" && ds.getColumn(nRow+1, "NAM_CHAR")=="EL_ACAPA"){			
					prd       = ds.GetColumn(nRow, "CHAR_VALUE"); // 인승
					searchRow = ds_acapa.SearchRow("ATWRT ==" + quote(prd));
					zacapa    = ds_acapa.GetColumn(searchRow, "ZACAPA");
					ds.setColumn(nRow+1, "ATWTB", zacapa); 		// 사양특성 내역					
					ds.SetColumn(nRow+1, "CHAR_VALUE", zacapa);		//사양값							
				}
				*/
				
				//2021.05 jss : 사양수정시 영업화면진행서순 반영
				var ds4 = ds_output_ZSDT0094_F;
				var findRow = ds4.FindRow("NAM_CHAR", "EL_YSTAT");
				if(findRow > -1 ) {
					ds4.SetColumn(findRow, "CHAR_VALUE",ds.GetColumn(nRow, "NAM_CHAR"));
					ds4.SetColumn(findRow, "STATUS", "update");
				}
			}
		}
		// Y6_ 호기일 경우 JQPR 연동
		//else if ( Mid(ds.getColumn(nRow, "HOGI"), 6, 2) == "Y6" )
		else if ( Mid(ds.getColumn(nRow, "HOGI"), 6, 3) == "Y66" )
		{
			if(obj.BindDataset == "ds_output_ZSDT0094_A"){
				obj.editable = false;
				var jqprArg  ="fa_pspid="+quote(ed_pspId.Text);
					jqprArg += " fa_charValue="+quote(ds.getColumn(nRow, "CHAR_VALUE"));
					jqprArg += " fa_atBez="+quote(ds.getColumn(nRow, "ATBEZ"));
					jqprArg += " fa_status="+quote(ds.getColumn(nRow, "STATUS"));
					
				var rtn = gfn_openPopupUrl("COM::Com0310.xml", true, jqprArg);
				
				if ( length(rtn) != 0 )
				{
						var rtn0 = split(rtn[0], ":", "webstyle");
						var rtn1 = split(rtn[1], ":", "webstyle");
						var rtn2 = split(rtn[2], ":", "webstyle");
						var rtn3 = split(rtn[3], ":", "webstyle");
						var rtn5 = split(rtn[5], ":", "webstyle");
						var rtn6 = split(rtn[6], ":", "webstyle");
						var rtn7 = split(rtn[7], ":", "webstyle");
		
						if(rtn[4] == "D"){ //삭제
							for ( var i = 0 ; i < length(rtn0) ; i ++ ){
								//trace("삭제 rtn0 : "+rtn0[i]); trace("삭제 rtn1 : "+rtn1[i]); trace("삭제 rtn2 : "+rtn2[i]); trace("삭제 rtn3 : "+rtn3[i]);
								ds.setColumn(nRow, "ATWTB", rtn1[i]);		// 사양특성 내역
								ds.setColumn(nRow, "CHAR_VALUE", "");	// 사양특성 값
								fn_remarkJqpr(ds.getColumn(nRow, "HOGI"), "", rtn0[i], rtn1[i], rtn5[i], rtn6[i], "0");
								if(ToInteger(rtn3[i]) < 0 ) fn_setJqprCost(nRow, Abs(rtn3[i]));
								else fn_setJqprCost(nRow, "-"+eval(rtn3[i]));
							}
						}else{ //확인
							for ( var i = 0 ; i < length(rtn0) ; i ++ ){
								//trace("rtn0 : "+rtn0[i]); trace("rtn1 : "+rtn1[i]); trace("rtn2 : "+rtn2[i]); trace("rtn3 : "+rtn3[i]); trace("rtn5 : "+rtn5[i]);  trace("rtn6 : "+rtn6[i]); 
								ds.setColumn(nRow, "ATWTB", rtn1[i]);		// 사양특성 내역
								ds.setColumn(nRow, "CHAR_VALUE", LEFT(rtn2[0], 30));	// 사양특성 값
								fn_remarkJqpr(ds.getColumn(nRow, "HOGI"), RIGHT(ds.getColumn(nRow, "NAM_CHAR"), 2), rtn0[i], rtn1[i], rtn5[i], rtn6[i], rtn7[i]);
								fn_setJqprCost(nRow, rtn3[i]);
							}
						}
						//trace("ds_jqpr : "+ds_jqpr.saveXml());
				}
			}else obj.editable = true;
		}
		else
		{
			obj.editable = true;
		}
		
	}
	
}


/****************************************************************
* [사양] 원가합계
***************************************************************/
function Tab00_tab3_btn_cost_OnClick(obj)
{
	ds_error.ClearData();
	if(ds_output_ZSDS0063.GetColumn(0, "KUNZ1") == "INPUT" ) {
		alert("생성된 자료입니다. 저장을 먼저 해주십시요.");
		return false;
	}

	// 2018.03.30 환율 존재 여부 확인 mj.Shin 
	if ( fn_existExchange(ds_output_ZSDT0090.GetColumn(0, "CHWAERK"), ds_output_ZSDS0063.GetColumn(0, "AUART"))  != 0  )
	{
		gfn_showAlert('CE10007');	// 환율정보가 존재하지 않습니다.
		gfn_showMsgBar('CE10007', "CE00001");
		return false;	
	}	
		
	// 2012.01.18 추가된 호기는 원가산출 불가, 저장후 재시도 메시지 뿌리기
	var hogiNoValue = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI");
	
	plm_ds_log.ClearData();
	if ( hogiNoValue == "" ) {
		gfn_showAlert("CW10025", "추가된 호기는 원가산출이 블가능합니다.\n저장 후 다시 시도해 주세요."); // CW10025=${}
		return;
	}
	// (2012.11.29 조건 추가) 견적TABLE에 없는 프로젝트(SAP온핸드)는 사양에서 원가FUNCTION을 호출하지 않고 바로 원가금액을 직접 입력 가능하도록 변경
	if ( !ufn_existsVbeln() )
	{
		return;
	}
	
	// 원가합계 초기화
	Tab00.tab3.ed_cost.Text = "";
	
	// 원가 유효성검사
	// 유효성에 실패한 라인을 빨강색으로 표시하므로 알림창을 따로 구현하지 않는다.
	if ( fn_validCost() == 0 )
	{
		return;
	}

	gfn_showAlert("CW10025","원가를 계산중입니다.\n잠시만 기다려 주십시오.");
	fn_createWait("",this); // 처리중입니다. 메시지 처리

	// 원가정산용 ds생성
	destroy("ds_cost_ZSDT0094");
	create("dataset", "ds_cost_ZSDT0094");
	object("ds_cost_ZSDT0094").copy(ds_output_ZSDT0094_change);
	object("ds_cost_ZSDT0094").clearData(); // 레코드는 필요없고 컬럼정보만 필요하므로 clear
	
	// 현재 [사양]탭에 로드된 호기별 리스트 전체를 복사
	var ds = ""; // ds구분
	for ( var a = 0 ; a < 7 ; a++ )
	{
		if ( a == 0 ){ds=ds_output_ZSDT0094_A;}
		if ( a == 1 ){ds=ds_output_ZSDT0094_B;}
		if ( a == 2 ){ds=ds_output_ZSDT0094_C;}
		if ( a == 3 ){ds=ds_output_ZSDT0094_D;}
		if ( a == 4 ){ds=ds_output_ZSDT0094_E;}
		if ( a == 5 ){ds=ds_output_ZSDT0094_F;}
		if ( a == 6 ){ds=ds_output_ZSDT0094_G;}
		
		ds.UnFilter();
		ds.Filter("POSNR == " + quote(Tab00.tab2.ed_posnr.Text));
		for ( var i = 0 ; i < ds.getRowCount() ; i++ )
		{
			// 2020 브랜드
			var namChar = ds.GetColumn(i, "NAM_CHAR");
			if(namChar != "OPT_GROUP_TITLE") {
			    object("ds_cost_ZSDT0094").addRow();
			    object("ds_cost_ZSDT0094").copyrow(object("ds_cost_ZSDT0094").row, ds, i);
			}
		}
		ds.UnFilter();
		ds.Filter("POSNR == " + quote(Tab00.tab2.ed_posnr.Text) + " && DISPTP == " + quote("X"));		
	}	
	
	var curYear  	= substr(gfn_getCurrDate(),0,4);  										// 년도
	var curMonth 	= substr(gfn_getCurrDate(),4,2); 										// 월
	var curAuart 	= ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "AUART"); 	// 오더유형
	var curMatnr 	= ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "MATNR"); 	// 자재코드
	var curChnetwr 	= ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "CHNETWR" );	// 변경금액
	var curChedatu 	= ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "CHEDATU" );	// 변경납기
	var curEdatu 	= ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "EDATU" );	// 납기
	
	// 단가
	ds_char.ClearData();
	for ( var i = 0 ; i < ds_cost_ZSDT0094.getRowCount() ; i ++ )
	{
		// 원가 산정시 숫자형 값에 , 가 들어있으면 오류 발생하므로 , 제거함
		var sValue = ds_cost_ZSDT0094.getColumn(i, "CHAR_VALUE");
		if ( ds_cost_ZSDT0094.getColumn(i, "CNGBN") == "NUM" ) {
			sValue = replace(sValue, ",", "");
		}
		if (( ds_cost_ZSDT0094.getColumn(i, "NAM_CHAR") == "CO_QTDAT") && ( sValue.length != 8 )) {
		    sValue = "00000000";			
		}
		ds_char.addrow();
		ds_char.SetColumn( i, "PSPID", ds_cost_ZSDT0094.getColumn(i, "PSPID") );		// 프로젝트번호
		ds_char.SetColumn( i, "POSID", ds_cost_ZSDT0094.getColumn(i, "HOGI") );			// 호기번호
		ds_char.SetColumn( i, "GJAHR", curYear );			
		ds_char.SetColumn( i, "POPER", curMonth );					
		ds_char.SetColumn( i, "MATNR", curMatnr );				
		ds_char.SetColumn( i, "NETWR", curChnetwr);	 // 변경금액
		ds_char.SetColumn( i, "ATNAM", ds_cost_ZSDT0094.getColumn(i, "NAM_CHAR") );		// 특성이름
		ds_char.SetColumn( i, "ATBEZ", ds_cost_ZSDT0094.getColumn(i, "ATBEZ") );		// 특성내역
		ds_char.SetColumn( i, "VALUE", sValue 									);		// 특성값
		ds_char.SetColumn( i, "ATWTB", ds_cost_ZSDT0094.getColumn(i, "ATWTB") );		// 특성값 내역
		// duty 체크용
		ds_char.SetColumn( i, "HOGI"	, ds_cost_ZSDT0094.getColumn(i, "HOGI") 	);
		ds_char.SetColumn( i, "ATKLA"	, ds_cost_ZSDT0094.getColumn(i, "ATKLA") 	);
		ds_char.SetColumn( i, "PRH"		, ds_cost_ZSDT0094.getColumn(i, "NAM_CHAR") );
		ds_char.SetColumn( i, "PRHNAME"	, ds_cost_ZSDT0094.getColumn(i, "ATBEZ") 	);
		ds_char.SetColumn( i, "PRD"		, sValue 									);
		ds_char.SetColumn( i, "UCH_DUTY", chk_uch_duty.Value);
	}

    var sndSys = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "SNDSYS");
	setDsOrder(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "PSPID"), ed_seq.text, ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "POSNR"));
    if(sndSys == "PLM") {
        // PLM 연동 처리
        fn_singlePlmDuty("CONSTRAINT");
    } else {
            http.Sync = true;
			nsfRequest("singleGenCostDuty"
						, "sso0055n/singleGenCostDuty"
						, "ds_output_char=ds_char ds_order=ds_order"
						, "plm_ds_log=ds_log ds_error=ds_error"
						, ""
						, ""
			);
            http.Sync = false;
    }

    // 만약 메시지 체크가 존재하면 return false
	if(plm_ds_log.getRowCount() > 0) {
		fn_destroyWait();
		fn_openPlmLogWin("grd_logList", ds_template, plm_ds_log, "FLAG"); // error 정보 표시
	    return false;
	}
	
	// PLM 연동 처리 원가종속성 21.08.23
	CUR_ROW = ds_change_ZSDT0091.currow;
	var isRst = fn_singlePlmDuty("ESTIMATE");
	if(!isRst) {
	    fn_destroyWait();
		return false;
	}

	// 원가종속성 데이터 연동 데이터를 추가한다.
	for ( var i = 0 ; i < ds_output_ZSDT0094_change_estimate.getRowCount(); i ++ )
	{
		var nRow = ds_char.addrow();
		ds_char.SetColumn( nRow, "PSPID", ds_output_ZSDT0094_change_estimate.getColumn(i, "PSPID") );		// 프로젝트번호
		ds_char.SetColumn( nRow, "POSID", ds_output_ZSDT0094_change_estimate.getColumn(i, "HOGI") );			// 호기번호
		ds_char.SetColumn( nRow, "GJAHR", curYear );			
		ds_char.SetColumn( nRow, "POPER", curMonth );					
		ds_char.SetColumn( nRow, "MATNR", curMatnr );				
		ds_char.SetColumn( nRow, "NETWR", curChnetwr);	 // 변경금액
		ds_char.SetColumn( nRow, "ATNAM", ds_output_ZSDT0094_change_estimate.getColumn(i, "NAM_CHAR") );		// 특성이름
		ds_char.SetColumn( nRow, "ATBEZ", "" );		// 특성내역
		ds_char.SetColumn( nRow, "VALUE", ds_output_ZSDT0094_change_estimate.getColumn(i, "CHAR_VALUE"));		// 특성값
		ds_char.SetColumn( nRow, "ATWTB", "" );		// 특성값 내역
		// duty 체크용
		ds_char.SetColumn( nRow, "HOGI"	, ds_output_ZSDT0094_change_estimate.getColumn(i, "HOGI") 	);
		ds_char.SetColumn( nRow, "ATKLA"	, ""	);
		ds_char.SetColumn( nRow, "PRH"		, ds_output_ZSDT0094_change_estimate.getColumn(i, "NAM_CHAR") );
		ds_char.SetColumn( nRow, "PRHNAME"	, "" 	);
		ds_char.SetColumn( nRow, "PRD"		, ds_output_ZSDT0094_change_estimate.getColumn(i, "CHAR_VALUE"));
		ds_char.SetColumn( nRow, "UCH_DUTY", chk_uch_duty.Value);
	}
	// trace(ds_output_ZSDT0094_change_estimate.SaveXML());
	ds_output_ZSDT0094_change_estimate.ClearData();
	
	ds_error.DeleteAll();
	var cond = "i_seq=" + quote(ed_seq.text) + " i_gjahr=" + quote(substr(curChedatu,0,4)) + " i_zdate=" + quote(curEdatu) + " i_chk=" + quote("ONE")+" i_pspId="+quote(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "PSPID"));
	//setDsOrder(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "PSPID"), ed_seq.text, ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "POSNR"));
	// 2013.03.12 callServiceN을 nsfRequest로 변경 - 오류에서 CE00001 메시지
	nsfRequest("cost"										
				, "sso0055n/singleCost"						
				, "ds_output_char=ds_char ds_order=ds_order ds_output_ZSDT0094_change_estimate=ds_output_ZSDT0094_change_estimate"
				, "ds_t304=ds_t304 ds_check=ds_check ds_error=ds_error"
				, cond
				, "fn_afterQuery"
				);
}

/****************************************************************
* [사양] 원가산정시 유효성검사
***************************************************************/
function fn_validCost()
{
	Tab00.tab3.Grid.BkSelColor = "default";
	Tab00.tab3.Grid0.BkSelColor = "default";
	Tab00.tab3.Grid1.BkSelColor = "default";
	Tab00.tab3.Grid2.BkSelColor = "default";
	Tab00.tab3.Grid3.BkSelColor = "default";
	// 2020 브랜드
	Tab00.tab3.Grid4.BkSelColor = "default";
	
	var gd = ""; // 그리드id	
	var ds = ""; // ds구분
	
	// 2020 브랜드
	for ( var a = 0 ; a < 6 ; a++ )
	{
		if ( a == 0 ){ds=ds_output_ZSDT0094_A;gd = Tab00.tab3.Grid;}
		if ( a == 1 ){ds=ds_output_ZSDT0094_B;gd = Tab00.tab3.Grid0;}
		if ( a == 2 ){ds=ds_output_ZSDT0094_C;gd = Tab00.tab3.Grid1;}
		if ( a == 3 ){ds=ds_output_ZSDT0094_D;gd = Tab00.tab3.Grid2;}
		if ( a == 4 ){ds=ds_output_ZSDT0094_E;gd = Tab00.tab3.Grid3;}
		
		// 2020 브랜드
		if ( a == 5 ){ds=ds_output_ZSDT0094_F;gd = Tab00.tab3.Grid4;}
		
		for ( var i = 0 ; i < ds.getRowCount() ; i++ )
		{
			// [cnt]가 1이면 팝업용, 그외는 키인
			// 키인일경우 [cngbn]이 num이면 숫자만 입력가능하도록 처리
			if ( ds.getColumn(i, "CNT") == 0 && ds.getColumn(i, "CNGBN") == 'NUM' )
			{
				var CHAR_VALUE = replace( ds.getColumn(i, "CHAR_VALUE"), ',', '');
			}
		}
	}
	return true;
}



/******************************************************
* 사양리스트중 변경된 정보가 있을경우
* 변경된 정보의 판매품목만을 추출하여
* 변수에 셋팅...
* [사양변경]시 판매품목리스트의 전체판매품목별 리스트가 아닌
* 변경된 판매품목의 리스트만을 서버로 보내기 위함임.
*******************************************************/
var changeHogiInfo = "";
function fn_changeHogiInfo()
{
	
	var ds = "";
	
	// 사양변경용
	destroy("ds_save_ZSDT0094");
	create("dataset", "ds_save_ZSDT0094");
	object("ds_save_ZSDT0094").copy(ds_output_ZSDT0094_change);
	object("ds_save_ZSDT0094").clearData();
	
	// 출력용 사양변경리스트
	destroy("ds_excel_ZSDT0094");
	create("dataset", "ds_excel_ZSDT0094");
	object("ds_excel_ZSDT0094").copy(ds_output_ZSDT0094_change);
	object("ds_excel_ZSDT0094").clearData();

	// 2020 브랜드 체크 필요
	for ( var filterDs = 0 ; filterDs < 7 ; filterDs++ )
	{
		if ( filterDs == 0 )
		{
			Destroy("filterDsA");
			create("dataset", "filterDsA");							// ds 생성
			object("filterDsA").copy(ds_output_ZSDT0094_A);			// 컬럼정보 수집
			object("filterDsA").UnFilter();							// 호기별 전체데이타셋을 전체호기별 데이타셋으로 만듬.
			object("ds_save_ZSDT0094").AppendDataset("filterDsA"); 	// 저장용 ds에 append
			object("ds_excel_ZSDT0094").AppendDataset("filterDsA"); // 출력용 ds에 append
			ds = filterDsA;
		}
		else if ( filterDs == 1 )
		{
			Destroy("filterDsB");
			create("dataset", "filterDsB");							// ds 생성
			object("filterDsB").copy(ds_output_ZSDT0094_B);			// 컬럼정보 수집
			object("filterDsB").UnFilter();							// 호기별 전체데이타셋을 전체호기별 데이타셋으로 만듬.
			object("ds_save_ZSDT0094").AppendDataset("filterDsB"); 	// 저장용 ds에 append 
			object("ds_excel_ZSDT0094").AppendDataset("filterDsB"); // 출력용 ds에 append
			ds = filterDsB;
		}
		else if ( filterDs == 2 )
		{
			Destroy("filterDsC");
			create("dataset", "filterDsC");							// ds 생성
			object("filterDsC").copy(ds_output_ZSDT0094_C);			// 컬럼정보 수집
			object("filterDsC").UnFilter();							// 호기별 전체데이타셋을 전체호기별 데이타셋으로 만듬.
			object("ds_save_ZSDT0094").AppendDataset("filterDsC"); 	// 저장용 ds에 append 
			object("ds_excel_ZSDT0094").AppendDataset("filterDsC"); // 출력용 ds에 append
			ds = filterDsC;
		}
		else if ( filterDs == 3 )
		{
			Destroy("filterDsD");
			create("dataset", "filterDsD");							// ds 생성
			object("filterDsD").copy(ds_output_ZSDT0094_D);			// 컬럼정보 수집
			object("filterDsD").UnFilter();							// 호기별 전체데이타셋을 전체호기별 데이타셋으로 만듬.
			object("ds_save_ZSDT0094").AppendDataset("filterDsD"); 	// 저장용 ds에 append
			object("ds_excel_ZSDT0094").AppendDataset("filterDsD"); // 출력용 ds에 append
			ds = filterDsD;
		}
		else if ( filterDs == 4 )
		{
			Destroy("filterDsE");
			create("dataset", "filterDsE");							// ds 생성
			object("filterDsE").copy(ds_output_ZSDT0094_E);			// 컬럼정보 수집
			object("filterDsE").UnFilter();							// 호기별 전체데이타셋을 전체호기별 데이타셋으로 만듬.
			object("ds_save_ZSDT0094").AppendDataset("filterDsE"); 	// 저장용 ds에 append 
			object("ds_excel_ZSDT0094").AppendDataset("filterDsE"); // 출력용 ds에 append
			ds = filterDsE;
		}
		else if ( filterDs == 5 )
		{
			Destroy("filterDsF");
			create("dataset", "filterDsF");							// ds 생성
			object("filterDsF").copy(ds_output_ZSDT0094_F);			// 컬럼정보 수집
			object("filterDsF").UnFilter();							// 호기별 전체데이타셋을 전체호기별 데이타셋으로 만듬.
			object("ds_save_ZSDT0094").AppendDataset("filterDsF"); 	// 저장용 ds에 append 
			object("ds_excel_ZSDT0094").AppendDataset("filterDsF"); // 출력용 ds에 append
			ds = filterDsF;
		}
		else if ( filterDs == 6 )
		{
			Destroy("filterDsG");
			create("dataset", "filterDsG");							// ds 생성
			object("filterDsG").copy(ds_output_ZSDT0094_F);			// 컬럼정보 수집
			object("filterDsG").UnFilter();							// 호기별 전체데이타셋을 전체호기별 데이타셋으로 만듬.
			object("ds_save_ZSDT0094").AppendDataset("filterDsG"); 	// 저장용 ds에 append 
			object("ds_excel_ZSDT0094").AppendDataset("filterDsG"); // 출력용 ds에 append
			ds = filterDsG;
		}
		
		// 변경된 정보만을 추출
		for ( var i = 0 ; i < ds_output_ZSDT0091.getRowCount() ; i ++ )
		{
			if ( ds_output_ZSDT0091.getColumn(i, "CHCK") == 'X' )
			{  
			    //matnr로 하면 변경된 사양의 호기와 같은 matnr은 모두 저장됨
				changeHogiInfo += ":"+ds_output_ZSDT0091.getColumn(i, "HOGI");
				//changeHogiInfo += ":"+ds.getColumn(i, "MATNR");
			}
		}//end for
		
	}//end for
	
	// 필터식에 맞게 [호기]생성
	var checkHogiArr = split(changeHogiInfo, ":", "webstyle");
	var hogiResult = "";
	for ( var i = 1 ; i < length(checkHogiArr) ; i ++ )
	{
		if ( i == 1 )
		{
			hogiResult += " HOGI=='";
			//hogiResult += " MATNR=='";
		}
		else 
		{
			hogiResult += " || HOGI=='";
			//hogiResult += " || MATNR=='";
		}
		hogiResult += checkHogiArr[i];
		hogiResult += "'";	
	}

	// append된 데이타셋에 변경건이 존재하는 호기별리스트만 필터링
	
	ds_save_ZSDT0094.filter(hogiResult);	
	
	// filter 를 걸어도 dataset 전송시에는 모든 data 가 전송이 됨
	// 임시 dataset 생성후 필터링된 data를 다시 copy  20130403 by 김선호 
	
	Destroy("filterDsTemp");
	create("dataset", "filterDsTemp");							// ds 생성	
	object("filterDsTemp").copyF(ds_save_ZSDT0094);
	
	ds_save_ZSDT0094.cleardata();
	ds_save_ZSDT0094.copy("filterDsTemp");	
	
	// 생성된 dataset 삭제
	Destroy("filterDsA");
	Destroy("filterDsB");
	Destroy("filterDsC");
	Destroy("filterDsD");
	Destroy("filterDsE");
	Destroy("filterDsF");
	// 2020 브랜드
	Destroy("filterDsG");
}

/******************************************************
* 사양복사
*******************************************************/
function Tab00_tab2_Button0_OnClick(obj)
{
	// 2013.03.04 변경된 내용이 있으면 저장하고 사양복사 가능
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sStatus = ds_change_ZSDT0091.GetColumn(i, "STATUS");
		if ( sStatus == "update" || sStatus == "insert" ) {
			gfn_showAlert("CW10028"); // 저장버튼을 눌러 수정/추가 작업을 먼저 완료해주세요.
			return;
		}
	}
	// [호기]탭으로 이동후 호출
	Tab00.TabIndex = 1;
	
	var arg  = "ParentTitle="+quote("")         // 타이틀지정		
	         + " fa_seq="+quote(ed_seq.Text);

	gfn_openPopupUrl("SSO::Sso0051.xml", true, arg);	
}

/******************************************************
* 출력
*******************************************************/
function fn_print()
{
    
	// 사양변경 여부 체크
	if ( ufn_getSayangUpdateFlag() )
	{
		gfn_showAlert("CW00202"); //변경된 정보가 있습니다. 저장 후 출력하여 주십시오.
		return;
	}
	
	// 호기데이터변경 여부 체크
	if ( ufn_isDataChanged() )
	{
		gfn_showAlert("CW00202"); //변경된 정보가 있습니다. 저장 후 출력하여 주십시오.
		return;
	}
	
	
	if ( ds_output_ZSDT0090.GetRowCount() < 1 )
	{
		// [${}] 자료가 존재하지 않습니다.
		gfn_showAlert("CW00113", "출력");
		return;
	}	
	
	// 자료가 존재하더라도 [판매품목리스트]가 한건도 없을 경우에는 출력되지 않음.
	if ( ds_change_ZSDT0091.GetRowCount() < 1 )
	{
		// [${}] 자료가 존재하지 않습니다.
		gfn_showAlert("CW00113", "판매품목리스트");
		return;
	}
	// 자료가 있더라도 [변경구분]컬럼에 체크된 건이 1건 이상이어야 출력가능함.
	else 
	{
	}
	
	// [출력]을 하시겠습니까?
	if ( !gfn_showConfirm("CI00024", "[출력]") )
	{
		return;
	}
    
	// 출력에서 사양부분을 위해 DB 조회
	var param = "";
		param += "pspId=" 	+ quote(ds_output_ZSDS0063.GetColumn(0, "PSPID"));
		param += " seq=" 	+ quote(ds_output_ZSDS0063.GetColumn(0, "SEQ"));

	callServiceN("findSayangForPrint"													// srvId
				, "sso0055n/sayangForPrint"												// url
				, ""																	// biz에서 받는 명, mip에서 보내는 명
				, "ds_print_sayang=ds_print_sayang"										// mip에서 받는 명, biz에서 보내는 명
				, param																	// strParam
				, ""																	// CallBackFunc
				);
	
}

// ubi로 출력
// 해외부분은 빠져있음.
// 사양리스트 건수 줄이는건 김선호대리와 협의 후 작업(2012.11.2)
function Button1_OnClick(obj)
{
	
	// 호기리스트중 [변경구분]이 x인 [호기]만 추출
	var checkPosnr = "";
	for ( var i = 0 ; i < ds_change_ZSDT0091.getRowCount(); i ++ )
	{
		if ( ds_change_ZSDT0091.getColumn(i, "CHCK") == 'X' )
		{
			checkPosnr += ","+ ds_change_ZSDT0091.getColumn(i, "POSNR");
		}
	}
	// 필터식에 맞게 [판매품목]생성
	var checkPosnrArr = split(checkPosnr, ",", "webstyle");
	var posnrResult = "";
	for ( var i = 1 ; i < length(checkPosnrArr) ; i ++ )
	{
		if ( i == 1 )
		{
			posnrResult += " POSNR=='";
		}
		else 
		{
			posnrResult += " || POSNR=='";
		}
		posnrResult += checkPosnrArr[i];
		posnrResult += "'";	
	}
	
	destroy("ds_print_ZSDT0091");
	create("dataset", "ds_print_ZSDT0091");
	ds_print_ZSDT0091.copyF(ds_change_ZSDT0091);
	
	// 생성된 필터식으로 dataset에 필터처리
	ds_print_ZSDT0091.Filter("POSNR!='' && ( "+posnrResult+")");
	
	
	ds_output_ZSDT0094_change.Filter("Length(Trim(ATWTB))!=0 && ( "+posnrResult+")");
	ds_output_ZSDT0094_original.Filter("Length(Trim(ATWTB))!=0 && ( "+posnrResult+")");
	
	var arg = "";
	ds_print_sayang_chg.Copy(ds_print_sayang);
	for ( var i = 0 ; i < ds_print_sayang_chg.GetRowCount() ; i++ )
	{
		ds_print_sayang_chg.SetColumn(i, "CHAR_VALUE", ds_print_sayang_chg.GetColumn(i, "CHAR_VALUEMD"));
	}
	
	Dialog("SSO::Sso0052.xml", arg, -1, -1, "Resize=true");
}

function Tab00_tab2_btn_part_OnClick(obj) {

	var pspid = ed_pspId.Text;
	var posid = Tab00.tab2.ed_hogi.Text;
	if ( (pspid == null || pspid == "") || (posid == null || posid == "") ) {
		return;
	}
	var arg   = "fa_flag='cont'"
			  + " fa_pspid=" + quote(pspid)
	//		  + " fa_posid=" + quote(posid)
	;
	gfn_openPopUpUrlHdel("Ses::Ses0038.xml", true, arg);
}

// 사양 변경 여부 체크
function ufn_getSayangUpdateFlag()
{
	var bUpdated = false;
	
	var arrDs = [ ds_output_ZSDT0094_A
				, ds_output_ZSDT0094_B
				, ds_output_ZSDT0094_C
				, ds_output_ZSDT0094_D
				, ds_output_ZSDT0094_E
				, ds_output_ZSDT0094_F
	];
	
	for ( var i = 0 ; i < arrDs.length ; i++ )
	{
		var objDs = arrDs[i];
		for ( var j = 0 ; j < objDs.getRowCount() ; j++ )
		{
			if ( objDs.getColumn(j, "STATUS") == "update")
			{
				bUpdated = true;
				break;
			}
		}
	}
	
	return bUpdated;
}


// 헤더 데이터셋 로드 완료시
function ds_output_ZSDS0063_OnLoadCompleted(obj,nErrorCode,strErrorMsg,nReason)
{
/* -----< 2018.03.26 조회 후 환율 정보 Service 호출 by mj.Shin 	Start 
	if ( nReason == 0 ) // Dataset이 Load되었을 때
	{
		// 2013.02.20
		F_AUART      = trim(ds_output_ZSDS0063.GetColumn(0, "AUART"  ));
		F_ADMIT_DATE = trim(ds_output_ZSDS0063.getColumn(0, "ADMITNO"));
		F_ADMIT_DATE = replace(F_ADMIT_DATE, "-", "");
		if ( F_ADMIT_DATE == null || F_ADMIT_DATE == "" ) {
			F_ADMIT_DATE = "00000000";
		}

		// 환율 조회
		var bstdk = ds_output_ZSDS0063.GetColumn(0, "BSTDK"); // 수주일
		bstdk = replace(bstdk, "-", "");
		if ( bstdk.length == 8 )
		{
			ds_exchange.ClearData();
			ds_exchange.AddRow();
			ds_exchange.SetColumn(0, "MANDT"    , G_MANDT);
			ds_exchange.SetColumn(0, "TCURRDATE", bstdk  );
			
			callServiceN("queryExchange"										// srvId
				, "sso0055n/searchExchange"										// url
				, "ds_exchange=ds_exchange ds_error=ds_error"					// biz에서 받는 명, mip에서 보내는 명
				, "ds_exchange=ds_exchange"										// mip에서 받는 명, biz에서 보내는 명
				, ""															// strParam
				, "fn_afterQuery"												// CallBackFunc
			);
		}
	}
-----> 2018.03.26 조회 후 환율 정보 Service 호출 by mj.Shin 	Start  */
}
 
// 국내프로젝트인지 해외프로젝트인지 구분
function ufn_getIsLocalProject()
{
	var bIsLocal = true;
	var pro = substr ( ed_pspId.Text, 0, 1 );
	if ( pro == 'E' || pro == 'C' || pro == 'T' )
	{
		bIsLocal = false;
	}
	return bIsLocal;
}

// [원가의뢰] 버튼 클릭 --> 원가의뢰 상태로 변경
function btn_finl_R_OnClick(obj)
{
	// 부분원가 일치화 확인  ZSDT1054D 테이블 기준으로 변경 2013.10.02
	http.sync = true;
	ds_cond2.ClearData();
	ds_cond2.AddRow();
	ds_cond2.SetColumn(0, "PSPID", ed_pspId.Text);
	
	nsfRequest(   ""
				, "ses0031n/searchZ309"
				, "ds_cond=ds_cond2 ds_t309=ds_check2"
				, "ds_check2=ds_t309 ds_error=ds_error"
				, ""
				, ""
	);
	
	ds_check2.Filter(" ZTOTL < 0.01 && STATE = 'S' "); //부분원가 금액이 없는 ROW만 남도록 필터링 
	if ( ds_check2.RowCount() < 1 ) {
		gfn_showAlert("CW10025","부분원가가 존재하지 않습니다.");
		return;
	}
	http.sync = false;
	
	// 사양 변경되었으면 저장 후 부분원가 진행 할 수 있도록 
	if ( ufn_isTemplateChanged() == true ) {
		var arrMsg = ["사양정보", "사양변경"];
		gfn_showAlert("CW10003", arrMsg); // 변경된 ${}이 존재하여 ${}이 불가능합니다. 변경된 정보를 저장후 다시 실행하여 주십시오.
		return;
	}
	
	if ( !gfn_showConfirm("CI10009") ) //원가의뢰는 설계부에 부분원가가 의뢰된 경우에만 처리가 가능합니다.\n\n진행하시겠습니까?
	{
		return;
	}
	
	ds_cond.ClearData();
	ds_cond.AddRow();
	ds_cond.SetColumn(ds_cond.row, "MANDT", ds_output_ZSDT0090.GetColumn(0, "MANDT"));
	ds_cond.SetColumn(ds_cond.row, "PSPID", ds_output_ZSDT0090.GetColumn(0, "PSPID"));
	ds_cond.SetColumn(ds_cond.row, "SEQ"  , ds_output_ZSDT0090.GetColumn(0, "SEQ")  );
	ds_cond.SetColumn(ds_cond.row, "FINL" , "R");
	
	// 2013.02.26 오류 데이터셋 제거 (공통함수에서 일괄 추가됨)
	callServiceN("setCostState"											// srvId
		, "sso0055n/setCostState"										// url
		, "ds_cond=ds_cond ds_error=ds_error"							// biz에서 받는 명, mip에서 보내는 명
		, ""															// mip에서 받는 명, biz에서 보내는 명
		, ""															// strParam
		, "fn_afterQuery"												// CallBackFunc
	);
}

// [산출완료] 버튼 --> 산출완료 상태로 변경
function btn_finl_S_OnClick(obj)
{
	if ( !gfn_showConfirm("CI00024", "[산출완료]") ) // ${} 작업을 진행 하시겠습니까?
	{
		return;
	}
	
	ds_cond.ClearData();
	ds_cond.AddRow();
	ds_cond.SetColumn(ds_cond.row, "MANDT", ds_output_ZSDT0090.GetColumn(0, "MANDT"));
	ds_cond.SetColumn(ds_cond.row, "PSPID", ds_output_ZSDT0090.GetColumn(0, "PSPID"));
	ds_cond.SetColumn(ds_cond.row, "SEQ"  , ds_output_ZSDT0090.GetColumn(0, "SEQ")  );
	ds_cond.SetColumn(ds_cond.row, "FINL" , "S");
	
	callServiceN("setCostState"											// srvId
		, "sso0055n/setCostState"										// url
		, "ds_cond=ds_cond"												// biz에서 받는 명, mip에서 보내는 명
		, ""															// mip에서 받는 명, biz에서 보내는 명
		, ""															// strParam
		, "fn_afterQuery"												// CallBackFunc
	);
}

// 데이터셋 변경시 => 상태 명칭 변경 및 버튼 제어
function ds_output_ZSDT0090_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	ufn_setFinlStateName(); // 상태에 따른 상태명칭 표시
	ufn_setButtonControl(); // 상태에 따른 원가의뢰,원가산출 버튼 제어
}

// 데이터셋 변경시 => 상태 명칭 변경 및 버튼 제어
function ds_output_ZSDT0090_OnLoadCompleted(obj,nErrorCode,strErrorMsg,nReason)
{
	ufn_setFinlStateName(); // 상태에 따른 상태명칭 표시
	ufn_setButtonControl(); // 상태에 따른 원가의뢰,원가산출 버튼 제어
}

// 상태에 따른 상태명칭 표시
function ufn_setFinlStateName()
{
	if ( ds_output_ZSDT0090.GetRowCount() > 0 )
	{
		var finl = toUpper(trim(ds_output_ZSDT0090.GetColumn(0, "FINL")));
		var rowIdx = ds_finl.FindRow("CODE", finl);
		if ( rowIdx == -1 )
		{
			st_finl.Text = ds_finl.GetColumn(0, "CODE_NAME");
		}
		else
		{
			st_finl.Text = ds_finl.GetColumn(rowIdx, "CODE_NAME");
		}
	}
}

// 상태에 따른 원가의뢰,원가산출 버튼 제어
function ufn_setButtonControl()
{
	if ( ds_output_ZSDT0090.GetRowCount() > 0 )
	{
		var finl = toUpper(trim(ds_output_ZSDT0090.GetColumn(0, "FINL")));
		switch (finl)
		{
			case ""  : // 원가의뢰 전 상태
							// 상단 버튼
							btn_finl_R.Enable = true ; btn_finl_S.Enable = true ; btn_rewrite.Enable = true ;
							// 탭1 (헤더)
							Tab00.tab1.btn_addRow.Enable = true;
							Tab00.tab1.btn_delRow.Enable = true;
							Tab00.tab1.Grid0.Editable    = true;
							// 탭2 (호기)
							Tab00.tab2.btn_copy.Enable      = true; // 사양복사
							Tab00.tab2.btn_part.Enable     = true; // 부분원가
							Tab00.tab2.btn_pnAddRow.Enable = true;
							Tab00.tab2.btn_pnDelRow.Enable = true;
							Tab00.tab2.btn_addRow.Enable   = true;
							Tab00.tab2.btn_delRow.Enable   = true;
							Tab00.tab2.Grid.Editable       = true; Tab00.tab2.Grid.OnCellClick = "Tab00_tab2_Grid_OnCellClick";
							Tab00.tab2.Grid1.Editable      = true;
							// 탭3 (사양)
							Tab00.tab3.btn_cost.Enable = true;
							Tab00.tab2.btn_costsumall.Enable = true; // 2013.03.20 전체원가합계 버튼의 제어는 원가합계버튼과 동일
							Tab00.tab3.Grid.Editable  = true; Tab00.tab3.Grid.OnCellClick  = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid.SetCellProp ("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
							Tab00.tab3.Grid0.Editable = true; Tab00.tab3.Grid0.OnCellClick = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid0.SetCellProp("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
							Tab00.tab3.Grid1.Editable = true; Tab00.tab3.Grid1.OnCellClick = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid1.SetCellProp("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
							Tab00.tab3.Grid2.Editable = true; Tab00.tab3.Grid2.OnCellClick = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid2.SetCellProp("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
							Tab00.tab3.Grid3.Editable = true; Tab00.tab3.Grid3.OnCellClick = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid3.SetCellProp("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
							// 2020 브랜드
							Tab00.tab3.Grid4.Editable = true; Tab00.tab3.Grid4.OnCellClick = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid4.SetCellProp("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");

							Tab00.tab3.btn_duty.Enable     = true;
							Tab00.tab3.btn_template.Enable = true;
							Tab00.tab3.cb_block.Enable     = true;
							Tab00.tab3.btn_depend.Enable   = true;
						break;
			case "R" : // 원가의뢰 상태
							// 상단 버튼
							btn_finl_R.Enable = false; btn_finl_S.Enable = false; btn_rewrite.Enable = false;
							// 탭1 (헤더)
							Tab00.tab1.btn_addRow.Enable = false;
							Tab00.tab1.btn_delRow.Enable = false;
							Tab00.tab1.Grid0.Editable    = false;
							// 탭2 (호기)
							Tab00.tab2.btn_copy.Enable     = true; // 사양복사
							Tab00.tab2.btn_part.Enable     = true; // 부분원가
							Tab00.tab2.btn_pnAddRow.Enable = false;
							Tab00.tab2.btn_pnDelRow.Enable = false;
							Tab00.tab2.btn_addRow.Enable   = false;
							Tab00.tab2.btn_delRow.Enable   = false;
							Tab00.tab2.Grid.Editable       = false; Tab00.tab2.Grid.OnCellClick = "Tab00_tab2_Grid_OnCellClick";
							Tab00.tab2.Grid1.Editable      = false;
							// 탭3 (사양)
							Tab00.tab3.btn_cost.Enable = false;
							Tab00.tab2.btn_costsumall.Enable = false; // 2013.03.20 전체원가합계 버튼의 제어는 원가합계버튼과 동일
							Tab00.tab3.Grid.Editable  = false; Tab00.tab3.Grid.OnCellClick  = ""; Tab00.tab3.Grid.SetCellProp ("body",10,"edit","none");
							Tab00.tab3.Grid0.Editable = false; Tab00.tab3.Grid0.OnCellClick = ""; Tab00.tab3.Grid0.SetCellProp("body",10,"edit","none");
							Tab00.tab3.Grid1.Editable = false; Tab00.tab3.Grid1.OnCellClick = ""; Tab00.tab3.Grid1.SetCellProp("body",10,"edit","none");
							Tab00.tab3.Grid2.Editable = false; Tab00.tab3.Grid2.OnCellClick = ""; Tab00.tab3.Grid2.SetCellProp("body",10,"edit","none");
							Tab00.tab3.Grid3.Editable = false; Tab00.tab3.Grid3.OnCellClick = ""; Tab00.tab3.Grid3.SetCellProp("body",10,"edit","none");
							
							//  2020 브랜드
							Tab00.tab3.Grid4.Editable = false; Tab00.tab3.Grid4.OnCellClick = ""; Tab00.tab3.Grid4.SetCellProp("body",10,"edit","none");

							Tab00.tab3.btn_duty.Enable     = false;
							Tab00.tab3.btn_template.Enable = false;
							Tab00.tab3.cb_block.Enable     = false;
							Tab00.tab3.btn_depend.Enable   = false;
						break;
			case "S" : // 산출완료 상태
							// 상단 버튼
							btn_finl_R.Enable = true ; btn_finl_S.Enable = false; btn_rewrite.Enable = true;
							// 탭1 (헤더)
							Tab00.tab1.btn_addRow.Enable = true;
							Tab00.tab1.btn_delRow.Enable = true;
							Tab00.tab1.Grid0.Editable    = true;
							// 탭2 (호기)
							Tab00.tab2.btn_copy.Enable     = true; // 사양복사
							Tab00.tab2.btn_part.Enable     = true; // 부분원가
							Tab00.tab2.btn_pnAddRow.Enable = true;
							Tab00.tab2.btn_pnDelRow.Enable = true;
							Tab00.tab2.btn_addRow.Enable   = true;
							Tab00.tab2.btn_delRow.Enable   = true;
							Tab00.tab2.Grid.Editable       = true; Tab00.tab2.Grid.OnCellClick = "Tab00_tab2_Grid_OnCellClick";
							Tab00.tab2.Grid1.Editable      = true;
							// 탭3 (사양)
							Tab00.tab3.btn_cost.Enable = true;
							Tab00.tab2.btn_costsumall.Enable = true; // 2013.03.20 전체원가합계 버튼의 제어는 원가합계버튼과 동일
							Tab00.tab3.Grid.Editable  = true; Tab00.tab3.Grid.OnCellClick  = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid.SetCellProp ("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
							Tab00.tab3.Grid0.Editable = true; Tab00.tab3.Grid0.OnCellClick = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid0.SetCellProp("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
							Tab00.tab3.Grid1.Editable = true; Tab00.tab3.Grid1.OnCellClick = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid1.SetCellProp("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
							Tab00.tab3.Grid2.Editable = true; Tab00.tab3.Grid2.OnCellClick = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid2.SetCellProp("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
							Tab00.tab3.Grid3.Editable = true; Tab00.tab3.Grid3.OnCellClick = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid3.SetCellProp("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
                            // 2020 브랜드
							Tab00.tab3.Grid4.Editable = true; Tab00.tab3.Grid4.OnCellClick = "Tab00_tab3_Grid_OnCellClick"; Tab00.tab3.Grid4.SetCellProp("body",10,"edit","expr:iif(MODITP == 'X',decode(CNT,'0',decode(CNGBN,'NUM','number','normal'),'none'),'none')");
                            
							Tab00.tab3.btn_duty.Enable     = true;
							Tab00.tab3.btn_template.Enable = true;
							Tab00.tab3.cb_block.Enable     = true;
							Tab00.tab3.btn_depend.Enable   = true;
						break;
			case "X" : // 승인완료 상태
							// 상단 버튼
							btn_finl_R.Enable = false; btn_finl_S.Enable = false; btn_rewrite.Enable = false;
							// 탭1 (헤더)
							Tab00.tab1.btn_addRow.Enable = false;
							Tab00.tab1.btn_delRow.Enable = false;
							Tab00.tab1.Grid0.Editable    = false;
							// 탭2 (호기)
							Tab00.tab2.btn_copy.Enable     = true; // 사양복사
							Tab00.tab2.btn_part.Enable     = true; // 부분원가
							Tab00.tab2.btn_pnAddRow.Enable = false;
							Tab00.tab2.btn_pnDelRow.Enable = false;
							Tab00.tab2.btn_addRow.Enable   = false;
							Tab00.tab2.btn_delRow.Enable   = false;
							Tab00.tab2.Grid.Editable       = false; Tab00.tab2.Grid.OnCellClick = "Tab00_tab2_Grid_OnCellClick";
							Tab00.tab2.Grid1.Editable      = false;
							// 탭3 (사양)
							Tab00.tab3.btn_cost.Enable = false;
							Tab00.tab2.btn_costsumall.Enable = false; // 2013.03.20 전체원가합계 버튼의 제어는 원가합계버튼과 동일
							Tab00.tab3.Grid.Editable  = false; Tab00.tab3.Grid.OnCellClick  = ""; Tab00.tab3.Grid.SetCellProp ("body",10,"edit","none");
							Tab00.tab3.Grid0.Editable = false; Tab00.tab3.Grid0.OnCellClick = ""; Tab00.tab3.Grid0.SetCellProp("body",10,"edit","none");
							Tab00.tab3.Grid1.Editable = false; Tab00.tab3.Grid1.OnCellClick = ""; Tab00.tab3.Grid1.SetCellProp("body",10,"edit","none");
							Tab00.tab3.Grid2.Editable = false; Tab00.tab3.Grid2.OnCellClick = ""; Tab00.tab3.Grid2.SetCellProp("body",10,"edit","none");
							Tab00.tab3.Grid3.Editable = false; Tab00.tab3.Grid3.OnCellClick = ""; Tab00.tab3.Grid3.SetCellProp("body",10,"edit","none");
							// 2020 브랜드
							Tab00.tab3.Grid4.Editable = false; Tab00.tab3.Grid4.OnCellClick = ""; Tab00.tab3.Grid4.SetCellProp("body",10,"edit","none");
							
							Tab00.tab3.btn_duty.Enable     = false;
							Tab00.tab3.btn_template.Enable = false;
							Tab00.tab3.cb_block.Enable     = false;
							Tab00.tab3.btn_depend.Enable   = false;
						break;
			default  :
						break;
		}
		// 2013.03.08 온헨드는 사양변경 불가
		if ( !ufn_existsVbeln() ) {
			btn_finl_R.Enable = false;
			btn_rewrite.Enable = false;
		}
		
		//호기취소시 사양값 버튼 핸들링을 위함
		ds_tab3_sayang.SetColumn(0, "btn_cost", Tab00.tab3.btn_cost.Enable);
		ds_tab3_sayang.SetColumn(0, "btn_duty", Tab00.tab3.btn_duty.Enable);
		ds_tab3_sayang.SetColumn(0, "btn_template", Tab00.tab3.btn_template.Enable);
		ds_tab3_sayang.SetColumn(0, "btn_depend", Tab00.tab3.btn_depend.Enable);
		ds_tab3_sayang.SetColumn(0, "cb_block", Tab00.tab3.cb_block.Enable);
		ds_tab3_sayang.SetColumn(0, "Grid_Editable", Tab00.tab3.Grid.Editable);		ds_tab3_sayang.SetColumn(0, "Grid_OnCellClick", Tab00.tab3.Grid.OnCellClick);		ds_tab3_sayang.SetColumn(0, "Grid_SetCellProp", Tab00.tab3.Grid.GetCellProp("body", 10, "edit"));
		ds_tab3_sayang.SetColumn(0, "Grid0_Editable", Tab00.tab3.Grid0.Editable);	ds_tab3_sayang.SetColumn(0, "Grid0_OnCellClick", Tab00.tab3.Grid0.OnCellClick);		ds_tab3_sayang.SetColumn(0, "Grid0_SetCellProp", Tab00.tab3.Grid0.GetCellProp("body", 10, "edit"));
		ds_tab3_sayang.SetColumn(0, "Grid1_Editable", Tab00.tab3.Grid1.Editable);	ds_tab3_sayang.SetColumn(0, "Grid1_OnCellClick", Tab00.tab3.Grid1.OnCellClick);		ds_tab3_sayang.SetColumn(0, "Grid1_SetCellProp", Tab00.tab3.Grid1.GetCellProp("body", 10, "edit"));
		ds_tab3_sayang.SetColumn(0, "Grid2_Editable", Tab00.tab3.Grid2.Editable);	ds_tab3_sayang.SetColumn(0, "Grid2_OnCellClick", Tab00.tab3.Grid2.OnCellClick);		ds_tab3_sayang.SetColumn(0, "Grid2_SetCellProp", Tab00.tab3.Grid2.GetCellProp("body", 10, "edit"));
		ds_tab3_sayang.SetColumn(0, "Grid3_Editable", Tab00.tab3.Grid3.Editable);	ds_tab3_sayang.SetColumn(0, "Grid3_OnCellClick", Tab00.tab3.Grid3.OnCellClick);		ds_tab3_sayang.SetColumn(0, "Grid3_SetCellProp", Tab00.tab3.Grid3.GetCellProp("body", 10, "edit"));
		
		// 2020 브랜드
		ds_tab3_sayang.SetColumn(0, "Grid4_Editable", Tab00.tab3.Grid4.Editable);	ds_tab3_sayang.SetColumn(0, "Grid4_OnCellClick", Tab00.tab3.Grid4.OnCellClick);		ds_tab3_sayang.SetColumn(0, "Grid4_SetCellProp", Tab00.tab3.Grid4.GetCellProp("body", 10, "edit"));
	}
}

// (2012.11.29 조건 추가) 견적TABLE에 없는 프로젝트(SAP온핸드)는 사양에서 원가FUNCTION을 호출하지 않고 바로 원가금액을 직접 입력 가능하도록 변경
function ufn_existsVbeln()
{
	var bExist = true;
	
	if ( ds_vbeln.GetRowCount() == 0 || length(ds_vbeln.GetColumn(0, "VBELN")) < 2 )
	{
		bExist = false;
	}
	return bExist;
}

/******************************************************
* 부분원가 화면에서 부분원가 저장 후 호출하는 함수
*  ==> 호기별 변경원가(부분원가 포함한 금액)를 받아서 화면에 반영한다.
*******************************************************/
function fn_setChWavwr(nChWavwr)
{
	if ( nChWavwr == null || nChWavwr == "" )
	{
		nChWavwr = 0;
	}
	ds_change_ZSDT0091.SetColumn(F_NROW, "CHWAVWR", nChwavwr);
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// Duty, Template 버튼 추가에 따라서 추가된 내용 [시작]
///////////////////////////////////////////////////////////////////////////////////////////////////
function btn_duty_OnClick(obj)
{	
    // 2020 브랜드
    var sndSys = "PDM"; 
    sndSys = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "SNDSYS");

	fn_createWait("",this);     // 처리중입니다. 메시지 처리

    plm_ds_log.ClearData();
    if(sndSys == "PLM") {
        // PLM 연동 처리
        fn_singlePlmDuty("DUTY");
   		fn_destroyWait();
		if(plm_ds_log.getRowCount() > 0) {
			fn_openPlmLogWin("grd_logList", ds_template, plm_ds_log, "FLAG");
			return false;
		}
    } else {
		ds_cond.ClearData();
		ds_cond.AddRow();
		ds_cond.SetColumn(0, "MANDT"   , G_MANDT         		  );
		ds_cond.SetColumn(0, "BLOCKGBN", Tab00.tab3.cb_block.value);
		ds_cond.SetColumn(0, "ZFLG", "P");

		var cond = "BLOCKGBN=" + Tab00.tab3.cb_block.value;
		destroy("ds_error");
		create("dataset", "ds_error");
		ds_error.AddColumn("IDX"   , "STRING", 256);
		ds_error.AddColumn("ERRMSG", "STRING", 256);
		fn_duty();

		//=========================================================================================
		//  기능ID   : UF021
		//  수정내역 : 영업사양 종속성체크 호출 변경
		//             duty/genDuty >>> dutyN/genSpecDutySingleMo
		//=========================================================================================
		nsfRequest("queryDuty"
				   , "dutyN/genSpecDutySingleMo"
				   , "ds_cond=ds_cond ds_template1=ds_template_add"
				   , "ds_template_add=ds_template1 ds_error=ds_error"
				   , cond
				   , "fn_afterQuery");
    }
}

// Duty 체크용 template 만들기
function fn_duty()
{
	var j = 0;
	var obj_template;
	
	ds_template_add.ClearData();
	
	// 2020 브랜드
	for (var a=0; a<=6; a++)
	{
		switch (a)
		{
			case 0	: obj_template = object(ds_output_ZSDT0094_G.ID); break;
			case 1	: obj_template = object(ds_output_ZSDT0094_A.ID); break;
			case 2	: obj_template = object(ds_output_ZSDT0094_B.ID); break;
			case 3	: obj_template = object(ds_output_ZSDT0094_C.ID); break;
			case 4	: obj_template = object(ds_output_ZSDT0094_D.ID); break;
			case 5	: obj_template = object(ds_output_ZSDT0094_E.ID); break;
			case 6	: obj_template = object(ds_output_ZSDT0094_F.ID); break;
			default : break;
		}
		
		for (var i=0; i<obj_template.GetRowCountNF(); i++)
		{
			ds_template_add.AddRow();
			ds_template_add.SetColumn(j, "MANDT"  , Trim(obj_template.GetColumn(i, "MANDT"     )));
			ds_template_add.SetColumn(j, "ATKLA"  , Trim(obj_template.GetColumn(i, "ATKLA"     )));
			ds_template_add.SetColumn(j, "PRH"    , Trim(obj_template.GetColumn(i, "NAM_CHAR"  )));
			ds_template_add.SetColumn(j, "PRHNAME", Trim(obj_template.GetColumn(i, "ATBEZ"     )));
			ds_template_add.SetColumn(j, "PRD"    , Trim(obj_template.GetColumn(i, "CHAR_VALUE")));
			ds_template_add.SetColumn(j, "HOGI"   , Trim(obj_template.GetColumn(i, "HOGI"      )));
			j++;
		}
	}
}

function destroyWait() {
	fn_destroyWait();
}

// 템플릿 불러오기
function btn_template_OnClick(obj)
{
	// 2020 브랜드
	// 브랜드코드 찾고, 브랜드 시퀀스는 견적번호로 찾아온다.
	var mclass = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "CLASS");
	var brndcd  = "NOBRND";
	var posnr = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "POSNR");
	var filterString = "POSNR=="+quote(posnr)+"&&NAM_CHAR=="+quote("EL_ABRAND");
	var searchRow = 0;
	if(F_BRND_FLAG = "Y") {
	    searchRow = ds_output_ZSDT0094_change.SearchRowNF(filterString);
	    if(searchRow>-1) {
	        brndcd = ds_output_ZSDT0094_change.GetColumnNF(searchRow, "CHAR_VALUE");
	    }
	}

	var arg = "mode='P' mclass="+quote(mclass)+" nRow="+quote(ds_change_ZSDT0091.currow)+ " brndcd="+quote(brndcd)+" brndseq="+quote("")+" qtnum="+quote(F_QTNUM);
    gfn_openPopUpUrlHdel("SES::Ses0582.xml", true, arg);
}

// 사양 다시 로딩 (Duty 체크 후, Template 불러온 후)
function fn_template(popupYn, nRow)
{
	if ( ds_output_ZSDS0063.GetColumn(0, "SPART") == "30" ) return; // 물류는 사양 없음 (2012.12.12)
	
	//ds_output_ZSDS0063.SaveXML()
	
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	
	// 2020 브랜드
	var arr0094Ds = Array(6);
	arr0094Ds[0] = object("ds_output_ZSDT0094_A");
	arr0094Ds[1] = object("ds_output_ZSDT0094_B");
	arr0094Ds[2] = object("ds_output_ZSDT0094_C");
	arr0094Ds[3] = object("ds_output_ZSDT0094_D");
	arr0094Ds[4] = object("ds_output_ZSDT0094_E");
    // 2020 브랜드
   	arr0094Ds[5] = object("ds_output_ZSDT0094_F");
	
	// 2013.02.22 호기 추가한 경우, HOGI번호가 확정되지 않아서 HOGI로 필터링이 안되므로, POSNR로 필터링
	//var strFilter = "HOGI=" + quote(ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "HOGI"));
	var strFilter = "POSNR=" + quote(ds_change_ZSDT0091.getColumn(ds_change_ZSDT0091.row, "POSNR")); 

	// 사양그리드 redraw 설정
	// 2020 브랜드
	var grdArry = ["Tab00.tab3.Grid", "Tab00.tab3.Grid0","Tab00.tab3.Grid1", "Tab00.tab3.Grid2","Tab00.tab3.Grid3", "Tab00.tab3.Grid4", "Tab00.tab3.Grid5"];
	for(var i = 0; i < grdArry.length; i++) {
		eval(grdArry[i]).Redraw = false;
	}
	
	for ( var dsIdx = 0 ; dsIdx < arr0094Ds.length ; dsIdx++ )
	{
		var objDs = arr0094Ds[dsIdx];
		if ( !IsValidObject(objDs) ) continue;
		objDs.Filter(strFilter);
		for ( var i = 0 ; i < objDs.GetRowCount() ; i++ )
		{
			var atkla  = objDs.GetColumn(i, "ATKLA");
			var prh    = objDs.GetColumn(i, "NAM_CHAR");
			var prd    = objDs.GetColumn(i, "CHAR_VALUE");
			var cnt    = objDs.GetColumn(i, "CNT");
			var moditp = objDs.GetColumn(i, "MODITP");
			var disptp = objDs.GetColumn(i, "DISPTP");

			var nRowIdx = ds_template_add.SearchRow("ATKLA=="+quote(atkla)+"&&PRH=="+quote(prh));
			if ( nRowIdx > -1 )
			{
				//  2020 브랜드 복사 로직 수정
				// 화면에 숨기지 않고, 변경 가능한 영업특성 항목에 대해서만 복사를 수행한다.
				// "EL_ABRAND", "EL_ATYP"
 				if(moditp == 'X' && disptp == 'X') {
                    var inputPrd = ds_template_add.GetColumn(nRowIdx, "PRD");
					if( prd == null && inputPrd == '' ) {
					    // 복사하지 않음
					} else if( prd == '' && inputPrd == null ) {
					    // 복사하지 않음
					} else if( prd == '' && inputPrd == '' ) {
					    // 복사하지 않음
					} else if( prd == null && inputPrd == null ) {
					    // 복사하지 않음
					} else {
				        objDs.SetColumn(i, "CHAR_VALUE", inputPrd);
					    objDs.SetColumn(i, "STATUS", "update");
					}
				}
			}
		}
	}
	
	for(var i = 0; i < grdArry.length; i++) {
		eval(grdArry[i]).Redraw = true;
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// Duty, Template 버튼 추가에 따라서 추가된 내용 [끝]
///////////////////////////////////////////////////////////////////////////////////////////////////

// Enter 키로 조회 처리
function ed_pspId_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
	if ( nChar == 13 )
	{
		fn_query();
	}
}
// Enter 키로 조회 처리
function ed_seq_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
	if ( nChar == 13 )
	{
		fn_query();
	}
}

// 달러와 유로일경우에 소수점 뒤에 두자리 ".00' 표시
function ufn_setGridMaskProperty()
{
	if ( ds_output_ZSDT0091.GetRowCount() == 0 )
	{
		return;
	}
	
	var strMask = "";
	if ( ds_output_ZSDT0091.GetColumn(0, "WAERK") != "KRW" )
	{
		strMask = "####,#.00";
	}
	
	// 호기탭-호기별 원가리스트
	var objGrid = Tab00.tab2.Grid;
	objGrid.SetCellProp("body", objGrid.GetBindCellIndex("body", "NETWR")  , "Mask", strMask); // Body-금액
	objGrid.SetCellProp("body", objGrid.GetBindCellIndex("body", "WAVWR")  , "Mask", strMask); // Body-원가
	objGrid.SetCellProp("body", objGrid.GetBindCellIndex("body", "CHNETWR"), "Mask", strMask); // Body-변경금액
	objGrid.SetCellProp("body", objGrid.GetBindCellIndex("body", "CHWAVWR"), "Mask", strMask); // Body-변경원가
	for ( var i = 0 ; i < objGrid.GetCellCount("summary") ; i++ ) // Summary 행
	{
		if ( indexOf(objGrid.GetCellProp("summary", i, "Expr"), "sum(") > -1 ) // 금액 컬럼만
		{
			objGrid.SetCellProp("summary", i, "Mask", strMask);
		}
	}
}

// 사양 변경 여부 반환
function ufn_isTemplateChanged()
{
	for ( var i = 0 ; i < ds_output_ZSDT0094_A.GetRowCount() ; i++ ) {
		sStatus = ds_output_ZSDT0094_A.GetColumn(i, "STATUS");
		if ( sStatus != "" && sStatus != null ) {
			return true;
		}
	}
	for ( var i = 0 ; i < ds_output_ZSDT0094_B.GetRowCount() ; i++ ) {
		sStatus = ds_output_ZSDT0094_B.GetColumn(i, "STATUS");
		if ( sStatus != "" && sStatus != null ) {
			return true;
		}
	}
	for ( var i = 0 ; i < ds_output_ZSDT0094_C.GetRowCount() ; i++ ) {
		sStatus = ds_output_ZSDT0094_C.GetColumn(i, "STATUS");
		if ( sStatus != "" && sStatus != null ) {
			return true;
		}
	}
	for ( var i = 0 ; i < ds_output_ZSDT0094_D.GetRowCount() ; i++ ) {
		sStatus = ds_output_ZSDT0094_D.GetColumn(i, "STATUS");
		if ( sStatus != "" && sStatus != null ) {
			return true;
		}
	}
	for ( var i = 0 ; i < ds_output_ZSDT0094_E.GetRowCount() ; i++ ) {
		sStatus = ds_output_ZSDT0094_E.GetColumn(i, "STATUS");
		if ( sStatus != "" && sStatus != null ) {
			return true;
		}
	}
	// 2020 브랜드
	for ( var i = 0 ; i < ds_output_ZSDT0094_F.GetRowCount() ; i++ ) {
		sStatus = ds_output_ZSDT0094_F.GetColumn(i, "STATUS");
		if ( sStatus != "" && sStatus != null ) {
			return true;
		}
	}
	return false;
}

	
// 사양 변경 여부 반환
function ufn_isDataChanged()
{
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		sStatus = ds_change_ZSDT0091.GetColumn(i, "STATUS");
		if ( sStatus != "" && sStatus != null ) {
			return true;
		}
	}
	return false;
}

// 2013.01.08 설계부의 표준템플릿 사용시 종속성 Duty call
// 사양템플릿 화면에서 호출됨
function fn_stdGenDuty(vZTPLGBN, vGtype)
{
	fn_createWait("",this);     // 처리중입니다. 메시지 처리

	ds_error.ClearData();

	var cond = "strGtype=" + quote(vGtype) + " strZflg='P'";

	fn_duty();
	// 종속성 Duty 처리 후 기존 Duty적용 fn호출됨
	//=========================================================================================
	//  기능ID   : UF021
	//  수정내역 : 영업사양 종속성체크 호출 변경
	//             duty/stdGenDuty >>> dutyN/dependDutySingleMo
	//=========================================================================================
	nsfRequest(   "queryDuty"
				, "dutyN/dependDutySingleMo"
				, "ds_template1=ds_template_add"
				, "ds_template_add=ds_template1 ds_error=ds_error"
				, cond
				, "fn_afterQuery"
			   );	
}

// 사양 입력값 형식 체크
function fn_checkTemplateValue()
{
	var arrDs = Array();
	
	arrDs[arrDs.length] = ds_output_ZSDT0094_A;
	arrDs[arrDs.length] = ds_output_ZSDT0094_B;
	arrDs[arrDs.length] = ds_output_ZSDT0094_C;
	arrDs[arrDs.length] = ds_output_ZSDT0094_D;
	arrDs[arrDs.length] = ds_output_ZSDT0094_E;
	// 2020 브랜드
    arrDs[arrDs.length] = ds_output_ZSDT0094_F;

	for( var i = 0 ; i < arrDs.length ; i++ ) {
		var objDs = arrDs[i];
		for ( var j = 0 ; j < objDs.GetRowCountNF() ; j++ ) {
			if ( objDs.GetColumnNF(j, "CNGBN") == 'NUM' ) {
				var strHogi  = objDs.GetColumnNF(j, "HOGI");
				var strAtbez = objDs.GetColumnNF(j, "ATBEZ");
				var strValue = replace( objDs.GetColumnNF(j, "CHAR_VALUE"), ',' ,''); // 특성 값
			}
			
			//2013.11.28 신미정 해외영업(ZE, ZT)의 경우 S/P영업사양 해외추가비용 필수 입력 추가
			var spText16Val = trim(objDs.GetColumn(j, "CHAR_VALUE"));
			if ( ( left(F_AUART,2) == "ZE" || left(F_AUART,2) == "ZT") && 
				 objDs.GetColumn(j, "NAM_CHAR") == 'SP_TEXT16' && 
				 ( spText16Val == null || spText16Val == "" ) )  {
				var strHogi  = objDs.GetColumn(j, "HOGI");
				var strAtbez = objDs.GetColumn(j, "ATBEZ");
				var strValue = replace( objDs.GetColumnNF(j, "CHAR_VALUE"), ',' ,''); // 특성 값
							
				var arr = [strHogi+"호기의 영업사양 ["+strAtbez+"" ']은 필수입력 사항입니다.'];
				gfn_showAlert("CW10025", arr);
				return false;							
			}
		}
	}
	return true;
}

function fn_z304() {
	var prdm01; var prdm02; var prdm03; var prdm04; var prdm05;
	var prdl01; var prdl02; var prdl03; var prdl04; var prdl05;
	var prde01; var prde02; var prde03; var prde04;	var prde05;	var prde06; var prde07; var prde08; var prde09;	var prde10;	var prde11; var prde12; var prde13; var prde14;	var prde15;
	var prdi01; var prdi02; var prdi03; var prdi04;
	var eqmm01; var eqmm02; var eqmm03; var eqmm04; var eqmm05;
	var eqma01; var eqma02;
	var eqml01; var eqml02; var eqml03; var eqml04;	var eqml05;
	var eqme01; var eqme02; var eqme03; var eqme04;	var eqme05;	var eqme06; var eqme07; var eqme08; var eqme09; var eqme10;	var eqme11; var eqme12; var eqme13; var eqme14; var eqme15;
	var eqme51; var eqme52; var eqme53; var eqme54;	var eqme55;	var eqme56; var eqme57; var eqme58; var eqme59;	var eqme60;	var eqme61; var eqme62; var eqme63; var eqme64;	var eqme65;	var eqme66; var eqme67; var eqme68; var eqme69; var eqme70;
	var eqme71; var eqme72; var eqme73; var eqme74;	var eqme75;	var eqme76; var eqme77; var eqme78; var eqme79;	var eqme80;	var eqme81; var eqme82; var eqme83; var eqme84;	var eqme85;	var eqme86; var eqme87; var eqme88; var eqme89;
	var eqme90; var eqme91; var eqme92; var eqme93; var eqme94; var eqme95; var eqme96; var eqme97; var eqme98; var eqme99;
	var eqmi01; var eqmi02; var eqmi03;
	var eqmo01; var eqmo02; var eqmo03; var eqmo04;	var eqmo05;	var eqmo06; var eqmo07; var eqmo08; var eqmo09;	var eqmo10;
	var eqmo11; var eqmo12; var eqmo13; var eqmo14;	var eqmo15;	var eqmo16; var eqmo17; var eqmo18; var eqmo19;	var eqmo20;
	var eqmo21; var eqmo22; var eqmo23; var eqmo24;	var eqmo25;	var eqmo26; var eqmo27; var eqmo28; var eqmo29; var eqmo30;
	var eqmo31; var eqmo32; var eqmo33; var eqmo34;	var eqmo35;	var eqmo36; var eqmo37; var eqmo38; var eqmo39; var eqmo40;
	var ctsm01; var ctsm02; var ctsm03; var ctsm04; var ctsm05; var ctsm06; var ctsm07; var ctsm08; var ctsm09; var ctsm10; var ctsm11; var ctsm12; var ctsm13; var ctsm14; var ctsm15; var ctsm17; var ctsm18; 
	var ctsl01; var ctsl02; var ctsl03; var ctsl04;	var ctsl05;
	var ctse01; var ctse02; var ctse03; var ctse04;	var ctse05;
	var ctsi01; var ctsi02; var ctsi03;
	var fdsp01; var fdsp02; var fdsp03; var fdsp04;	var fdsp05;	var fdsp06; var fdsp07; var fdsp08; var fdsp09;	var fdsp10;	var fdsp11;
	var addt01;
	var pr=0;	var eq=0;	var ct=0;	var fdsp=0;	var addt=0; var zuam=0;	var zcost;  var colId;  var prh;	var prd;	var posid;  var znumber; var searchRow;
	var nEqTemp=0; var sPrdTemp;

	ds_report.ClearData();

	for (var a=0; a<ds_t304.GetRowCount(); a++) {

		prdm01=ds_t304.GetColumn(a,"PRDM01"); prdm02=ds_t304.GetColumn(a,"PRDM02"); prdm03=ds_t304.GetColumn(a,"PRDM03"); prdm04=ds_t304.GetColumn(a,"PRDM04"); prdm05=ds_t304.GetColumn(a,"PRDM05");
		prdl01=ds_t304.GetColumn(a,"PRDL01"); prdl02=ds_t304.GetColumn(a,"PRDL02"); prdl03=ds_t304.GetColumn(a,"PRDL03"); prdl04=ds_t304.GetColumn(a,"PRDL04"); prdl05=ds_t304.GetColumn(a,"PRDL05");
		prde01=ds_t304.GetColumn(a,"PRDE01"); prde02=ds_t304.GetColumn(a,"PRDE02"); prde03=ds_t304.GetColumn(a,"PRDE03"); prde04=ds_t304.GetColumn(a,"PRDE04");	prde05=ds_t304.GetColumn(a,"PRDE05");
		prde06=ds_t304.GetColumn(a,"PRDE06"); prde07=ds_t304.GetColumn(a,"PRDE07"); prde08=ds_t304.GetColumn(a,"PRDE08"); prde09=ds_t304.GetColumn(a,"PRDE09");	prde10=ds_t304.GetColumn(a,"PRDE10");
		prde11=ds_t304.GetColumn(a,"PRDE11"); prde12=ds_t304.GetColumn(a,"PRDE12"); prde13=ds_t304.GetColumn(a,"PRDE13"); prde14=ds_t304.GetColumn(a,"PRDE14");	prde15=ds_t304.GetColumn(a,"PRDE15");
		prdi01=ds_t304.GetColumn(a,"PRDI01"); prdi02=ds_t304.GetColumn(a,"PRDI02"); prdi03=ds_t304.GetColumn(a,"PRDI03"); prdi04=ds_t304.GetColumn(a,"PRDI04");
		eqmm01=ds_t304.GetColumn(a,"EQMM01"); eqmm02=ds_t304.GetColumn(a,"EQMM02"); eqmm03=ds_t304.GetColumn(a,"EQMM03"); eqmm04=ds_t304.GetColumn(a,"EQMM04"); eqmm05=ds_t304.GetColumn(a,"EQMM05");
		eqma01=ds_t304.GetColumn(a,"EQMA01");
		eqma02=ds_t304.GetColumn(a,"EQMA02");
		eqml01=ds_t304.GetColumn(a,"EQML01"); eqml02=ds_t304.GetColumn(a,"EQML02"); eqml03=ds_t304.GetColumn(a,"EQML03"); eqml04=ds_t304.GetColumn(a,"EQML04");	eqml05=ds_t304.GetColumn(a,"EQML05");
		eqme01=ds_t304.GetColumn(a,"EQME01"); eqme02=ds_t304.GetColumn(a,"EQME02"); eqme03=ds_t304.GetColumn(a,"EQME03"); eqme04=ds_t304.GetColumn(a,"EQME04");	eqme05=ds_t304.GetColumn(a,"EQME05");
		eqme06=ds_t304.GetColumn(a,"EQME06"); eqme07=ds_t304.GetColumn(a,"EQME07"); eqme08=ds_t304.GetColumn(a,"EQME08"); eqme09=ds_t304.GetColumn(a,"EQME09"); eqme10=ds_t304.GetColumn(a,"EQME10");
		eqme11=ds_t304.GetColumn(a,"EQME11"); eqme12=ds_t304.GetColumn(a,"EQME12"); eqme13=ds_t304.GetColumn(a,"EQME13"); eqme14=ds_t304.GetColumn(a,"EQME14"); eqme15=ds_t304.GetColumn(a,"EQME15");
		eqme51=ds_t304.GetColumn(a,"EQME51"); eqme52=ds_t304.GetColumn(a,"EQME52"); eqme53=ds_t304.GetColumn(a,"EQME53"); eqme54=ds_t304.GetColumn(a,"EQME54");	eqme55=ds_t304.GetColumn(a,"EQME55");
		eqme56=ds_t304.GetColumn(a,"EQME56"); eqme57=ds_t304.GetColumn(a,"EQME57"); eqme58=ds_t304.GetColumn(a,"EQME58"); eqme59=ds_t304.GetColumn(a,"EQME59");	eqme60=ds_t304.GetColumn(a,"EQME60");
		eqme61=ds_t304.GetColumn(a,"EQME61"); eqme62=ds_t304.GetColumn(a,"EQME62"); eqme63=ds_t304.GetColumn(a,"EQME63"); eqme64=ds_t304.GetColumn(a,"EQME64");	eqme65=ds_t304.GetColumn(a,"EQME65");
		eqme66=ds_t304.GetColumn(a,"EQME66"); eqme67=ds_t304.GetColumn(a,"EQME67"); eqme68=ds_t304.GetColumn(a,"EQME68"); eqme69=ds_t304.GetColumn(a,"EQME69"); eqme70=ds_t304.GetColumn(a,"EQME70");
		eqme71=ds_t304.GetColumn(a,"EQME71"); eqme72=ds_t304.GetColumn(a,"EQME72"); eqme73=ds_t304.GetColumn(a,"EQME73"); eqme74=ds_t304.GetColumn(a,"EQME74");	eqme75=ds_t304.GetColumn(a,"EQME75");
		eqme76=ds_t304.GetColumn(a,"EQME76"); eqme77=ds_t304.GetColumn(a,"EQME77"); eqme78=ds_t304.GetColumn(a,"EQME78"); eqme79=ds_t304.GetColumn(a,"EQME79");	eqme80=ds_t304.GetColumn(a,"EQME80");
		eqme81=ds_t304.GetColumn(a,"EQME81"); eqme82=ds_t304.GetColumn(a,"EQME82"); eqme83=ds_t304.GetColumn(a,"EQME83"); eqme84=ds_t304.GetColumn(a,"EQME84");	eqme85=ds_t304.GetColumn(a,"EQME85");
		eqme86=ds_t304.GetColumn(a,"EQME86"); eqme87=ds_t304.GetColumn(a,"EQME87"); eqme88=ds_t304.GetColumn(a,"EQME88"); eqme89=ds_t304.GetColumn(a,"EQME89");
		eqme90=ds_t304.GetColumn(a,"EQME90"); eqme91=ds_t304.GetColumn(a,"EQME91"); eqme92=ds_t304.GetColumn(a,"EQME92"); eqme93=ds_t304.GetColumn(a,"EQME93"); eqme94=ds_t304.GetColumn(a,"EQME94"); 
		eqme95=ds_t304.GetColumn(a,"EQME95"); eqme96=ds_t304.GetColumn(a,"EQME96"); eqme97=ds_t304.GetColumn(a,"EQME97"); eqme98=ds_t304.GetColumn(a,"EQME98"); eqme99=ds_t304.GetColumn(a,"EQME99"); 
		eqmi01=ds_t304.GetColumn(a,"EQMI01"); eqmi02=ds_t304.GetColumn(a,"EQMI02"); eqmi03=ds_t304.GetColumn(a,"EQMI03");
		eqmo01=ds_t304.GetColumn(a,"EQMO01"); eqmo02=ds_t304.GetColumn(a,"EQMO02"); eqmo03=ds_t304.GetColumn(a,"EQMO03"); eqmo04=ds_t304.GetColumn(a,"EQMO04");	eqmo05=ds_t304.GetColumn(a,"EQMO05");
		eqmo06=ds_t304.GetColumn(a,"EQMO06"); eqmo07=ds_t304.GetColumn(a,"EQMO07"); eqmo08=ds_t304.GetColumn(a,"EQMO08"); eqmo09=ds_t304.GetColumn(a,"EQMO09");	eqmo10=ds_t304.GetColumn(a,"EQMO10");
		eqmo11=ds_t304.GetColumn(a,"EQMO11"); eqmo12=ds_t304.GetColumn(a,"EQMO12"); eqmo13=ds_t304.GetColumn(a,"EQMO13"); eqmo14=ds_t304.GetColumn(a,"EQMO14");	eqmo15=ds_t304.GetColumn(a,"EQMO15");
		eqmo16=ds_t304.GetColumn(a,"EQMO16"); eqmo17=ds_t304.GetColumn(a,"EQMO17"); eqmo18=ds_t304.GetColumn(a,"EQMO18"); eqmo19=ds_t304.GetColumn(a,"EQMO19");	eqmo20=ds_t304.GetColumn(a,"EQMO20");
		eqmo21=ds_t304.GetColumn(a,"EQMO21"); eqmo22=ds_t304.GetColumn(a,"EQMO22"); eqmo23=ds_t304.GetColumn(a,"EQMO23"); eqmo24=ds_t304.GetColumn(a,"EQMO24");	eqmo25=ds_t304.GetColumn(a,"EQMO25");
		eqmo26=ds_t304.GetColumn(a,"EQMO26"); eqmo27=ds_t304.GetColumn(a,"EQMO27"); eqmo28=ds_t304.GetColumn(a,"EQMO28"); eqmo29=ds_t304.GetColumn(a,"EQMO29"); eqmo30=ds_t304.GetColumn(a,"EQMO30");
		eqmo31=ds_t304.GetColumn(a,"EQMO31"); eqmo32=ds_t304.GetColumn(a,"EQMO32"); eqmo33=ds_t304.GetColumn(a,"EQMO33"); eqmo34=ds_t304.GetColumn(a,"EQMO34");	eqmo35=ds_t304.GetColumn(a,"EQMO35");
		eqmo36=ds_t304.GetColumn(a,"EQMO36"); eqmo37=ds_t304.GetColumn(a,"EQMO37"); eqmo38=ds_t304.GetColumn(a,"EQMO38"); eqmo39=ds_t304.GetColumn(a,"EQMO39"); eqmo40=ds_t304.GetColumn(a,"EQMO40");
		ctsm01=ds_t304.GetColumn(a,"CTSM01"); ctsm02=ds_t304.GetColumn(a,"CTSM02"); ctsm03=ds_t304.GetColumn(a,"CTSM03"); ctsm04=ds_t304.GetColumn(a,"CTSM04"); ctsm05=ds_t304.GetColumn(a,"CTSM05"); 
		ctsm06=ds_t304.GetColumn(a,"CTSM06"); ctsm07=ds_t304.GetColumn(a,"CTSM07"); ctsm08=ds_t304.GetColumn(a,"CTSM08"); ctsm09=ds_t304.GetColumn(a,"CTSM09"); ctsm10=ds_t304.GetColumn(a,"CTSM10"); 
		ctsm11=ds_t304.GetColumn(a,"CTSM11"); ctsm12=ds_t304.GetColumn(a,"CTSM12"); ctsm13=ds_t304.GetColumn(a,"CTSM13"); ctsm14=ds_t304.GetColumn(a,"CTSM14"); ctsm15=ds_t304.GetColumn(a,"CTSM15"); 
		ctsm17=ds_t304.GetColumn(a,"CTSM17"); ctsm18=ds_t304.GetColumn(a,"CTSM18");
		ctsl01=ds_t304.GetColumn(a,"CTSL01"); ctsl02=ds_t304.GetColumn(a,"CTSL02"); ctsl03=ds_t304.GetColumn(a,"CTSL03"); ctsl04=ds_t304.GetColumn(a,"CTSL04");	ctsl05=ds_t304.GetColumn(a,"CTSL05");
		ctse01=ds_t304.GetColumn(a,"CTSE01"); ctse02=ds_t304.GetColumn(a,"CTSE02"); ctse03=ds_t304.GetColumn(a,"CTSE03"); ctse04=ds_t304.GetColumn(a,"CTSE04");	ctse05=ds_t304.GetColumn(a,"CTSE05");
		ctsi01=ds_t304.GetColumn(a,"CTSI01"); ctsi02=ds_t304.GetColumn(a,"CTSI02"); ctsi03=ds_t304.GetColumn(a,"CTSI03");
		fdsp01=ds_t304.GetColumn(a,"FDSP01"); fdsp02=ds_t304.GetColumn(a,"FDSP02"); fdsp03=ds_t304.GetColumn(a,"FDSP03"); fdsp04=ds_t304.GetColumn(a,"FDSP04");	fdsp05=ds_t304.GetColumn(a,"FDSP05");
		fdsp06=ds_t304.GetColumn(a,"FDSP06"); fdsp07=ds_t304.GetColumn(a,"FDSP07"); fdsp08=ds_t304.GetColumn(a,"FDSP08"); fdsp09=ds_t304.GetColumn(a,"FDSP09");	fdsp10=ds_t304.GetColumn(a,"FDSP10"); fdsp11=ds_t304.GetColumn(a,"FDSP11");
		addt01=ds_t304.GetColumn(a,"ADDT01");

		pr  = ParseFloat(prdm01) + ParseFloat(prdm02) + ParseFloat(prdm03) + ParseFloat(prdm04) + ParseFloat(prdm05)
			+ ParseFloat(prdl01) + ParseFloat(prdl02) + ParseFloat(prdl03) + ParseFloat(prdl04) + ParseFloat(prdl05)
			+ ParseFloat(prde01) + ParseFloat(prde02) + ParseFloat(prde03) + ParseFloat(prde04) + ParseFloat(prde05) + ParseFloat(prde06) + ParseFloat(prde07) + ParseFloat(prde08) + ParseFloat(prde09) + ParseFloat(prde10)
			+ ParseFloat(prde11) + ParseFloat(prde12) + ParseFloat(prde13) + ParseFloat(prde14) + ParseFloat(prde15)
			+ ParseFloat(prdi01) + ParseFloat(prdi02) + ParseFloat(prdi03) + ParseFloat(prdi04) + ParseFloat(ctsm15) + ParseFloat(ctsm17) + ParseFloat(ctsm18);

		eq 	= ParseFloat(eqmm01) + ParseFloat(eqmm02) + ParseFloat(eqmm03) + ParseFloat(eqmm04) + ParseFloat(eqmm05)
			+ ParseFloat(eqml01) + ParseFloat(eqml02) + ParseFloat(eqml03) + ParseFloat(eqml04) + ParseFloat(eqml05)
			+ ParseFloat(eqme01) + ParseFloat(eqme02) + ParseFloat(eqme03) + ParseFloat(eqme04) + ParseFloat(eqme05) + ParseFloat(eqme06) + ParseFloat(eqme07) + ParseFloat(eqme08) + ParseFloat(eqme09) + ParseFloat(eqme10)
			+ ParseFloat(eqme11) + ParseFloat(eqme12) + ParseFloat(eqme13) + ParseFloat(eqme14) + ParseFloat(eqme15)
			+ ParseFloat(eqme51) + ParseFloat(eqme52) + ParseFloat(eqme53) + ParseFloat(eqme54) + ParseFloat(eqme55) + ParseFloat(eqme56) + ParseFloat(eqme57) + ParseFloat(eqme58) + ParseFloat(eqme59) + ParseFloat(eqme60)
			+ ParseFloat(eqme61) + ParseFloat(eqme62) + ParseFloat(eqme63) + ParseFloat(eqme64) + ParseFloat(eqme65) + ParseFloat(eqme66) + ParseFloat(eqme67) + ParseFloat(eqme68) + ParseFloat(eqme69) + ParseFloat(eqme70)
			+ ParseFloat(eqme71) + ParseFloat(eqme72) + ParseFloat(eqme73) + ParseFloat(eqme74) + ParseFloat(eqme75) + ParseFloat(eqme76) + ParseFloat(eqme77) + ParseFloat(eqme78) + ParseFloat(eqme79) + ParseFloat(eqme80)
			+ ParseFloat(eqme81) + ParseFloat(eqme82) + ParseFloat(eqme83) + ParseFloat(eqme84) + ParseFloat(eqme85) + ParseFloat(eqme86) + ParseFloat(eqme87) + ParseFloat(eqme88) + ParseFloat(eqme89) + ParseFloat(eqme90)
			+ ParseFloat(eqme91) + ParseFloat(eqme92) + ParseFloat(eqme93) + ParseFloat(eqme94) + ParseFloat(eqme95) + ParseFloat(eqme96) + ParseFloat(eqme97) + ParseFloat(eqme98) + ParseFloat(eqme99)
			+ ParseFloat(eqmi01) + ParseFloat(eqmi02) + ParseFloat(eqmi03)
			+ ParseFloat(eqmo01) + ParseFloat(eqmo02) + ParseFloat(eqmo03) + ParseFloat(eqmo04) + ParseFloat(eqmo05) + ParseFloat(eqmo06) + ParseFloat(eqmo07) + ParseFloat(eqmo08) + ParseFloat(eqmo09) + ParseFloat(eqmo10)
			+ ParseFloat(eqmo11) + ParseFloat(eqmo12) + ParseFloat(eqmo13) + ParseFloat(eqmo14) + ParseFloat(eqmo15) + ParseFloat(eqmo16) + ParseFloat(eqmo17) + ParseFloat(eqmo18) + ParseFloat(eqmo19) + ParseFloat(eqmo20)
			+ ParseFloat(eqmo21) + ParseFloat(eqmo22) + ParseFloat(eqmo23) + ParseFloat(eqmo24) + ParseFloat(eqmo25) + ParseFloat(eqmo26) + ParseFloat(eqmo27) + ParseFloat(eqmo28) + ParseFloat(eqmo29) + ParseFloat(eqmo30)
			+ ParseFloat(eqmo31) + ParseFloat(eqmo32) + ParseFloat(eqmo33) + ParseFloat(eqmo34) + ParseFloat(eqmo35) + ParseFloat(eqmo36) + ParseFloat(eqmo37) + ParseFloat(eqmo38) + ParseFloat(eqmo39) + ParseFloat(eqmo40);

		ct	= ParseFloat(ctsm01) + ParseFloat(ctsm02) + ParseFloat(ctsm03) + ParseFloat(ctsm04) //+ ParseFloat(ctsm05) //+ ParseFloat(ctsm06)
			+ ParseFloat(ctsl01) + ParseFloat(ctsl02) + ParseFloat(ctsl03) + ParseFloat(ctsl04) + ParseFloat(ctsl05)
			+ ParseFloat(ctse01) + ParseFloat(ctse02) + ParseFloat(ctse03) + ParseFloat(ctse04) + ParseFloat(ctse05)
			+ ParseFloat(ctsi01) + ParseFloat(ctsi02) + ParseFloat(ctsi03);

		fdsp= ParseFloat(fdsp01) + ParseFloat(fdsp02) + ParseFloat(fdsp03) + ParseFloat(fdsp04) + ParseFloat(fdsp05) + ParseFloat(fdsp06) + ParseFloat(fdsp07) + ParseFloat(fdsp08) + ParseFloat(fdsp09) + ParseFloat(fdsp10) + ParseFloat(fdsp11);
		addt= ParseFloat(addt01);

		zuam = pr + eq + ct + fdsp + addt + ParseFloat(ctsm05) + ParseFloat(ctsm06) + ParseFloat(ctsm07) + ParseFloat(ctsm08) + ParseFloat(ctsm09) + ParseFloat(ctsm10) + ParseFloat(ctsm11) + ParseFloat(ctsm12) + ParseFloat(ctsm13) + ParseFloat(ctsm14);
	
		ds_report.AddRow();
		ds_report.SetColumn(a, "PR"  , pr  ); // 제조
		ds_report.SetColumn(a, "EQ"  , eq  ); // 설치
		ds_report.SetColumn(a, "CT"  , ct  ); // 보수
		ds_report.SetColumn(a, "FDSP", fdsp); // 영업개별입력
		ds_report.SetColumn(a, "ZUAM", zuam); // 견적가
		ds_report.SetColumn(a, "ADDT", addt); // 부분원가
		// ds_report.SetColumn(a, "FDSP10", fdsp10); // 21.09.03 물가상승률

		nEqTemp = eq - ParseFloat(eqmi01) - ParseFloat(eqmi02) - ParseFloat(eqmi03); // 2013.02.06 eq에서 eqmi 3개 항목를 제외한 94개 항목의 합계

		for (var i=0; i<ds_t304.GetColCount(); i++) {
			colId = ds_t304.GetColID(i);

			if (colId=="EQME79" || colId=="EQME80" || colId=="EQME81" || colId=="EQME82" || colId=="EQME87"	|| colId=="EQME89" ||
				colId=="FDS01"  || colId=="FDS02"  || colId=="FDS03"  || colId=="FDS04"  || colId=="FDS05"  ||
				colId=="FDSP01" || colId=="FDSP02" || colId=="FDSP03" || colId=="FDSP04" || colId=="FDSP05" ||
				colId=="FDS06"  || colId=="FDS07"  || colId=="FDS08"  || colId=="FDS09"  || colId=="FDS10"  ||
				colId=="FDSP06" || colId=="FDSP07" || colId=="FDSP08" || colId=="FDSP09" || colId=="FDSP10"	|| colId=="FDSP11" ||
				colId=="MODEL"  ) {

				prd = ds_t304.GetColumn(a, colId);
				ds_report.SetColumn(a, colId, prd);
			}
			/**********************************************************************
			// 2013.02.06
			// 현재 설치 옵션 원가 항목 금액이 ZCOBT302의 해당 매칭 FIELD 금액을 불러오고 있으나, 제조간접비+기타간접비+영업이익금액을 반영해 주어야 함.
			// * 처리공식 EX) 단납기 할증비 : ZCOBT302-EQML03 + ( ( ZCOBT302-EQML03 / 설치관련 총금액( 94개 FIELD ) ) * ( EQMI01+EQMI02+EQMI03 ) )
			// * 설치 옵션 원가 항목들에 대해서만 위의 로직으로 대체. --> 25개 항목
			**********************************************************************/
			if (colId=="EQML03" || colId=="EQME01" || colId=="EQME88" || colId=="EQME04" || colId=="EQME06" ||
				colId=="EQME86" || colId=="EQME83" || colId=="EQME84" || colId=="EQME85" || colId=="EQMO07" ||
				colId=="EQME55" || colId=="EQME56" || colId=="EQME59" || colId=="EQME60" || colId=="EQME61" ||
				colId=="EQME62" || colId=="EQME63" || colId=="EQME65" || colId=="EQME66" || colId=="EQME67" ||
				colId=="EQME73" || colId=="EQME75" || colId=="EQME76" || colId=="EQME77" || colId=="EQME78" ||
				// 2013.04.02 설치옵션원가에 항목 추가
				colId=="EQME51" || colId=="EQMO01" || colId=="EQMO02" || colId=="EQMO03" || colId=="EQMO15" ||
				colId=="EQMO04" || colId=="EQMO05" || colId=="EQMO06" || colId=="EQMO08" ||	colId=="EQMO09" ||
				colId=="EQMO10" || colId=="EQMO11" || colId=="EQMO12" || colId=="EQMO13" ||	colId=="EQMO14" ||
				colId=="EQMO16" || colId=="EQMO17" || colId=="EQMO18" || colId=="EQMO19" ||	colId=="EQMO20"	||
				colId=="EQMO21" || colId=="EQMO22" || colId=="EQMO23" ||
				// 2013.04.02 설치외주원가에 항목 추가
				colId=="EQME79" || colId=="EQME80" || colId=="EQME81" || colId=="EQME82" || colId=="EQME84" ||
				colId=="EQME87" || colId=="EQME11" || colId=="EQME12" || colId=="EQME57" || colId=="EQME58" ||
				colId=="EQME64" || colId=="EQME69" || colId=="EQME70" || colId=="EQME71" || colId=="EQME72" ||
				colId=="EQME74" || colId=="EQME52" || colId=="EQME10" || colId=="EQME89" || colId=="EQME91" || colId=="EQME93" 	||
				//2016.01.23 추가
				colId=="EQMO24" || colId=="EQMO25" || colId=="EQMO26" || colId=="EQMO28" || colId=="EQME92" ||
				//2016.02.23 추가
				colId=="EQME54" || colId=="EQMM02" || colId=="EQMM04" 
			) {

				sPrdTemp = parseFloat(ds_t304.GetColumn(a, colId));
				prd = sPrdTemp + ( ( sPrdTemp / nEqTemp ) * ( parseFloat(eqmi01) + parseFloat(eqmi02) + parseFloat(eqmi03) ) );
				ds_report.SetColumn(a, colId, prd);
			}
		}

		// 2013.01.09 Cost Eng.팀 요청사항 : 설치옵션원가 ? 보양 CAGE : EQME79, 80, 81, 82, 86 금액의 합   ( ZCOBT302 TABLE )
		var nEqme86 = ParseFloat(eqme79) + ParseFloat(eqme80) + ParseFloat(eqme81) + ParseFloat(eqme82) + ParseFloat(eqme86);
		ds_report.SetColumn(a, "EQME86", nEqme86);

		// 2013.01.09 Cost Eng.팀 요청사항 : 설치옵션원가 ? 보양 HATCH DOOR : EQME84, 87 금액의 합
		var nEqme84 = ParseFloat(eqme84) + ParseFloat(eqme87);
		ds_report.SetColumn(a, "EQME84", nEqme84);
		
		//2016.01.23
		var nEqmo27 = ParseFloat(eqme58) + ParseFloat(eqmo27);
		ds_report.SetColumn(a, "EQMO27", nEqmo27);		
		var nEqmo29 = ParseFloat(eqme74) + ParseFloat(eqmo29);
		ds_report.SetColumn(a, "EQMO29", nEqmo29);		
		//var nEqme93 = ParseFloat(eqme93) + ParseFloat(eqmm02);
		//ds_report.SetColumn(a, "EQME93", nEqme93);
		
		posid = ds_t304.GetColumn(a, "POSID");
		ds_output_ZSDT0094_change.UnFilter();
		ds_output_ZSDT0094_change.Filter("HOGI==" + quote(posid));
		
		//2012.12.01. khs
		var searchRow = ds_output_ZSDT0091.FindRow("HOGI", posid);
		var zprdgbn = substr(fn_getClassCdFromMatnr(ds_output_ZSDT0091.GetColumn(searchRow, "MATNR")), 0, 2);
		var waerk = ds_output_ZSDT0091.GetColumn(searchRow, "WAERK");
		var edatu = ds_output_ZSDT0091.GetColumn(searchRow, "CHEDATU");

		for (var i=0; i<ds_output_ZSDT0094_change.GetRowCount(); i++) {
			
			prh = ds_output_ZSDT0094_change.GetColumn(i, "NAM_CHAR");
			prd = ds_output_ZSDT0094_change.GetColumn(i, "CHAR_VALUE");
			
			//ES, MW인 경우  - 2012.12.01.khs			
			if ( zprdgbn == "ES") prh = replace(prh, "ES","EL");
			else if (zprdgbn == "MW")  prh = replace(prh, "MW","EL");		
			
			if (prh=="PSPID"      || prh=="POSID"      || prh=="EL_ATYP"   || prh=="EL_AUSE"    ||
				prh=="EL_AOPEN"   || prh=="EL_ASPD"    || prh=="EL_AFQ"    || prh=="EL_ASTQ"    ||
				prh=="EL_ACD2"    || prh=="EL_ATT"     || prh=="EL_ADTA"   ||
				prh=="EL_FDNCMQ"  || prh=="EL_FDWUQ"   || prh=="EL_FDSMDQ" || prh=="EL_FDSMSQ"  ||
				prh=="EL_ADRV"    || prh=="EL_BMDL"    || prh=="EL_BCL"    || prh=="EL_BFR"     ||
				prh=="EL_BFS"     || prh=="EL_BWM"     || prh=="EL_BWHG"   || prh=="EL_BMOPB"   || prh=="EL_BSOPB"  ||
				prh=="EL_BHOPB"   || prh=="EL_BCDM"    || prh=="EL_BCDHG"  || prh=="EL_BCPI"    ||
				prh=="EL_CJM1"	  || prh=="EL_CJM1Q"   || prh=="EL_CJM1M"  || prh=="EL_CJM1HG"  || prh=="EL_CHPI1"  ||
				prh=="EL_CJM2"	  || prh=="EL_CJM2Q"   || prh=="EL_CJM2M"  || prh=="EL_CJM2HG"  || prh=="EL_CHPI2"  ||
				prh=="EL_CJM3"	  || prh=="EL_CJM3Q"   || prh=="EL_CJM3M"  || prh=="EL_CJM3HG"  || prh=="EL_CHPI3"  ||
				prh=="EL_CJM4"	  || prh=="EL_CJM4Q"   || prh=="EL_CJM4M"  || prh=="EL_CJM4HG"  || prh=="EL_CHPI4"  ||
				prh=="EL_CHD1"	  || prh=="EL_CHD1HG"  || prh=="EL_CHD1Q"  ||
				prh=="EL_CHD2"	  || prh=="EL_CHD2HG"  || prh=="EL_CHD2Q"  ||
				prh=="EL_CHD3"	  || prh=="EL_CHD3HG"  || prh=="EL_CHD3Q"  ||
				prh=="EL_CHPBM1"  || prh=="EL_CHPBM1Q" || prh=="EL_CHPBM2" || prh=="EL_CHPBM2Q" ||
				prh=="EL_CHPBT"   || prh=="EL_CHPBTQ"  || prh=="EL_CHPBB"  || prh=="EL_CHPBBQ"  ||
				prh=="EL_CHIPM1"  || prh=="EL_CHIPM1Q" || prh=="EL_CHIPM2" || prh=="EL_CHIPM2Q" ||
				prh=="EL_CHIPT"   || prh=="EL_CHIPTQ"  || prh=="EL_CHIPB"  || prh=="EL_CHIPBQ"  ||
				prh=="EL_COB"     || prh=="EL_ECCH"    || prh=="EL_ECJJ"   || prh=="EL_ECHH"    || prh=="EL_EHO"    ||
				prh=="EL_EHTRH"   || prh=="EL_EHP"     || prh=="EL_EHTH"   || prh=="EL_ETM"     || prh=="EL_ETMM"   ||
				prh=="EL_ECSF"    || prh=="EL_ECRL"    || prh=="EL_ECWRL"  ||
				
				//2012.12.01.khs add
				prh=="EL_AWID" 	  || prh=="EL_ADEG"    || prh=="EL_ARISE"  || prh=="EL_AFLAT"   || prh=="EL_ASPE" 	||
				prh=="EL_AMOT" 	  || prh=="EL_ASTC"    || prh=="EL_AGCOL"  || prh=="EL_AHCOL"   || prh=="EL_AIODK"  ||
				prh=="EL_ASKTPN"  || prh=="EL_ASUBW"   || prh=="EL_BBRU"   || prh=="EL_BMP"     || prh=="EL_CCOML"   ||
				prh=="EL_CUSL"    || prh=="EL_DSOF"    || prh=="EL_DGR"    || prh=="EL_DBARR"   || prh=="EL_ALOCA"	||
				prh=="EL_AMAN"    || prh=="EL_ECW"     || prh=="EL_ECWAD"  ||
				//2013.04.05 추가
				prh=="EL_ALENG"   || prh=="EL_ARIS"
				)
				ds_report.SetColumn(a, prh, prd);
		}
		
		var searchRow = ds_output_ZSDT0091.FindRow("HOGI", posid);
		var waerk = ds_output_ZSDT0091.GetColumn(searchRow, "WAERK");

		ds_report.SetColumn(a, "ZKUNNR", ds_t304.GetColumn(a, "ZKUNNR_NM"			)); // 영업담당자명
		ds_report.SetColumn(a, "QTNUM" , ds_t304.GetColumn(a, "POSID"			 	)); // 프로젝트번호
		ds_report.SetColumn(a, "VKGRT" , ds_t304.GetColumn(a, "VKGRP_NM"			)); // 영업팀
		ds_report.SetColumn(a, "PSPID" , ds_t304.GetColumn(a, "PSPID"     			)); // 
		ds_report.SetColumn(a, "POSID" , ds_t304.GetColumn(a, "POSID"     			)); // 
		ds_report.SetColumn(a, "GSNAM" , ds_t304.GetColumn(a, "GSNAM"              	)); // 프로젝트명
		ds_report.SetColumn(a, "KUNNR" , ds_t304.GetColumn(a, "BUYR_NM"			 	)); // 판매처
		ds_report.SetColumn(a, "MODEL" , zprdgbn									 ); // 모델
		ds_report.SetColumn(a, "WAERK" , decode(waerk, "KRW", "\\", waerk			)); // 통화단위
		ds_report.SetColumn(a, "SPART" , ds_t304.GetColumn(a, "SPART"				)); // 제품군
		ds_report.SetColumn(a, "DELDAT", edatu										 ); // 납기일자
		
		//광역 운송지역 sync 처리 2013.01.10
		//리포트 운송지역명 추가 2013.09.03
 		http.sync = true;
	
		ds_cond_atnam.ClearData();
		ds_cond_atnam.AddRow();
		ds_cond_atnam.SetColumn(0, "MANDT" , G_MANDT   );
		ds_cond_atnam.SetColumn(0, "KLART" , "300"     );
		ds_cond_atnam.SetColumn(0, "CLASS1", "ELV_01"  );
		ds_cond_atnam.SetColumn(0, "ATKLA" , "EL_BASIC");
		ds_cond_atnam.SetColumn(0, "ATNAM" , "EL_ALOCT");
		ds_cond_atnam.SetColumn(0, "WHERE" , ""        );
		ds_cond_atnam.SetColumn(0, "ATNAM" , "EL_ADTA");
		
		nsfRequest("", "com0150/find", "ds_cond_atnam=ds_cond_atnam ds_list_atnam=ds_zregn3", "ds_zregn3=ds_list_atnam", "", "fn_afterQuery");

		ds_zregn3.sort("ATWTB");  // 
		http.sync = false;
		
		var region = ds_report.GetColumn(a, "EL_ADTA");
		
		searchRow = ds_zregn3.searchRow("ATWRT ==" + quote(region)); 
		ds_report.SetColumn(a, "REGION" , ds_zregn3.GetColumn(searchRow, "ATWTB")); //운송지역명
		
		// 국가코드 = 방글라데시이면 금액표기
		if (ds_t304.GetColumn(0, "LAND1") == "BD" && ctsm05 < 0){
			ds_report.SetColumn(a, "OS_BDTXT", "* 방글라데시");
			ds_report.SetColumn(a, "OS_BDAMT", ParseFloat(ctsm05));
		}
		if (ctsm06 < 0) {
			ds_report.SetColumn(a, "CT06", ParseFloat(ctsm06));
			ds_report.SetColumn(a, "CTTXT", "고속EL 감액 금액");
		}
		if (ctsm07 < 0) {
			ds_report.SetColumn(a, "CT07", ParseFloat(ctsm07));
			ds_report.SetColumn(a, "CTTXT7", "선박EL 감액 금액");
		}
		
		if (ctsm08 < 0) {
			ds_report.SetColumn(a, "CT08", ParseFloat(ctsm08));
			ds_report.SetColumn(a, "CTTXT8", "해외 중저속EL 감액 금액");
		}
		if (ctsm09 < 0) {
			ds_report.SetColumn(a, "CT09", ParseFloat(ctsm09));
			ds_report.SetColumn(a, "CTTXT9", "리모델링1:1 GEARLESS E/L감액금액");
		}
		if (ctsm10 < 0) {
			ds_report.SetColumn(a, "CT10", ParseFloat(ctsm10));
			ds_report.SetColumn(a, "CTTXT10", "전망,누드,병원용 E/L감액금액");
		}
		if (ctsm11 < 0) {
			ds_report.SetColumn(a, "CT11", ParseFloat(ctsm11));
			ds_report.SetColumn(a, "CTTXT11", "속도 105m/min E/L감액금액");
		}
		if (ctsm12 < 0) {
			ds_report.SetColumn(a, "CT12", ParseFloat(ctsm12));
			ds_report.SetColumn(a, "CTTXT12", "WB 감액금액");
		}
		if (ctsm13 < 0) {
			ds_report.SetColumn(a, "CT13", ParseFloat(ctsm13));
			ds_report.SetColumn(a, "CTTXT13", "INV or NEO E/L감액금액");
		}
		//2021.07 jss : 고용량 영업경쟁력 강화 감액금액
		if (ctsm18 < 0) {
			ds_report.SetColumn(a, "CT15", ParseFloat(ctsm18));
			ds_report.SetColumn(a, "CTTXT15", "고용량 영업경쟁력 강화 감액금액");
		}	
	}

	ds_report.setcolumn(0,'EQMO30',ParseFloat(eqmo30));
	ds_report.setcolumn(0,'EQMO31',ParseFloat(eqmo31));
	ds_report.setcolumn(0,'EQMO32',ParseFloat(eqmo32));
	ds_report.setcolumn(0,'EQMO33',ParseFloat(eqmo33));
	ds_report.setcolumn(0,'EQMO34',ParseFloat(eqmo34));
}

function fn_getClassCdFromMatnr(matnr)
{
	var zprdgbn = decode(matnr  , 'L-1000', 'ELV_01'
								, 'S-1000', 'ESC_01'
								, 'W-1000', 'MW_01'
								, 'L-2000', 'ELV_02'
								, 'L-1200', 'DW_01'
								, 'G-1000', 'PSD_01'
								, 'Y-1000', 'SP_01'
								, 'T-1000', 'SV_01'
								, 'L-1100', 'WL_01'
								, 'J-1000', 'AP_01');
	return zprdgbn;
}

// 사양변경 버튼 눌렀을 때, 원가합계 재계산 (2012.01.17)
function fn_sumCostAll(argCostSumMode)
{
	// 상해작은 원가산출 하지 않음
	if ( ds_output_ZSDT0090.GetRowCount() > 0 ) {
		if ( left(ds_output_ZSDT0090.GetColumn(0, "PSPID"), 1) == "T" ) {
			return true;
		}
	}

	if (!fn_saveChk("ALL")) {
		gfn_showAlert("CW10025", "변경된 자료가 있습니다 저장후 원가산출을 해주십시요."); // CW10025=${}
		return false;  //false 처리로 변경 20160429 ksk
	}
	
	// (2012.11.29 조건 추가) 견적TABLE에 없는 프로젝트(SAP온핸드)는 사양에서 원가FUNCTION을 호출하지 않고 바로 원가금액을 직접 입력 가능하도록 변경
	if ( !ufn_existsVbeln() )
	{
		return true;
	}
	
	// 원가 유효성검사
	if ( !fn_checkTemplateValue() )
	{
		return false;
	}
	
	var partCost ;  //부분원가 여부 
	
	plm_ds_log.ClearData();  //제한조건 리스트
	ds_log.ClearData();
	
	fn_createWait("",this); // 처리중입니다. 메시지 처리
	
	var newRow = 0;
	// 먼저 원가산출 전 제한조건을 먼저 체크한다.
	// SRM 제한조건을 먼저 체크한다.
	for ( var idxHogi = 0 ; idxHogi < ds_change_ZSDT0091.GetRowCount() ; idxHogi++ )
	{
		// SPEC_STAT 가 S라면 원가산출이 종료되었으므로 할 필요가 없다.
		if(ds_change_ZSDT0091.getColumn(idxHogi, "SPEC_STAT") != "S" && ds_change_ZSDT0091.getColumn(idxHogi, "SNDSYS") != "PLM")  {
			var curMatnr 	= ds_change_ZSDT0091.GetColumn(idxHogi, "MATNR"); 	  // 자재코드
			var strChck     = ds_change_ZSDT0091.GetColumn(idxHogi, "CHCK");	  // 변경여부
			var strCanc     = ds_change_ZSDT0091.GetColumn(idxHogi, "HOGI_CANC"); // 호기취소
			var strPosnr    = ds_change_ZSDT0091.GetColumn(idxHogi, "POSNR");	  // 
			
			// 자재번호 없으면 원가산출하지 않음
			if ( length(curMatnr) == 0 ) {
				continue;
			}
			if ( curMatnr == "Y-1000" ) { // S/P는 원가산출 하지 않음
				continue;
			}
			if ( strChck != "X" ) { // 2013.01.25 변경되지 않은 호기는 원가산출 하지 않음
				continue;
			}
			if ( strCanc == "C" ) {
				continue;
			}

			if ( ds_save_ZSDT0094.GetRowCount() == 0 ) {
				continue;
			}

			destroy("ds_save_ZSDT0094");
			create("dataset", "ds_save_ZSDT0094");
			
			object("ds_save_ZSDT0094").clearData();
			object("ds_save_ZSDT0094").copy(ds_output_ZSDT0094_change);
			ds_save_ZSDT0094.Filter("POSNR=="+quote(strPosnr));

			// 단가
			ds_char.ClearData();
			for ( var i = 0 ; i < ds_save_ZSDT0094.getRowCount() ; i ++ )
			{
				// 원가 산정시 숫자형 값에 , 가 들어있으면 오류 발생하므로 , 제거함
				var sValue = ds_save_ZSDT0094.getColumn(i, "CHAR_VALUE");
				if ( ds_save_ZSDT0094.getColumn(i, "CNGBN") == "NUM" ) {
					sValue = replace(sValue, ",", "");
				}
				
				if (( ds_save_ZSDT0094.getColumn(i, "NAM_CHAR") == "CO_QTDAT") && ( sValue.length != 8 )) {
					sValue = "00000000";			
				}

                newRow = ds_char.addrow();
				// duty 체크용
                ds_char.SetColumn( newRow, "PSPID", ds_save_ZSDT0094.getColumn(i, "PSPID") );		// 프로젝트번호
				ds_char.SetColumn( newRow, "HOGI"	, ds_save_ZSDT0094.getColumn(i, "HOGI") 	);
				ds_char.SetColumn( newRow, "ATKLA"	, ds_save_ZSDT0094.getColumn(i, "ATKLA") 	);
				ds_char.SetColumn( newRow, "PRH"		, ds_save_ZSDT0094.getColumn(i, "NAM_CHAR") );
				ds_char.SetColumn( newRow, "PRHNAME"	, ds_save_ZSDT0094.getColumn(i, "ATBEZ") 	);
				ds_char.SetColumn( newRow, "PRD"		, sValue 									);
				ds_char.SetColumn( newRow, "UCH_DUTY", chk_uch_duty.Value						);
            }
            
            setDsOrder(ds_change_ZSDT0091.GetColumn(idxHogi, "PSPID"), ed_seq.text, strPosnr);
			var inDs = "ds_output_char=ds_char ds_order=ds_order";
			var outDs = "ds_log=ds_log ds_error=ds_error";
            http.Sync = true;
			nsfRequest("singleGenCostDuty"																// srvId
						, "sso0055n/singleGenCostDuty"														// url
						, inDs																	// biz에서 받는 명, mip에서 보내는 명
						, outDs																	// mip에서 받는 명, biz에서 보내는 명
						, ""
						, ""																	// CallBackFunc
			);
            http.Sync = false;

			if(ds_log.GetRowCount() > 0) {
				for(var idx=0; idx < ds_log.GetRowCount(); idx++) {
					plm_ds_log.AddRow();
					plm_ds_log.CopyRow(plm_ds_log.row, ds_log, idx);
				}
				ds_log.ClearData();
				continue;
			}
        }
	}

	// 2020 브랜드
	// PLM 제한조건을 연동한다. 멀티호기 제한조건 체크 수행
	fn_MultiPlmDuty("CONSTRAINT");
	
	// SRM, PLM 제한조건 체크 로그를 통합하여 사용자에게 보여준다.
	if(plm_ds_log.getRowCount() > 0) 
	{
	    fn_destroyWait();
		fn_openPlmLogWin("grd_logList", ds_template, plm_ds_log, "FLAG"); // error 정보 표시
		return false;
	}

    // 제한조건 체크 조건이 존재하지 않아야 전제 원가 산출을 실행한다.
	for ( var idxHogi = 0 ; idxHogi < ds_change_ZSDT0091.GetRowCount() ; idxHogi++ )
	{
		// SPEC_STAT 가 S라면 원가산출이 종료되었으므로 할 필요가 없다.
		if(ds_change_ZSDT0091.getColumn(idxHogi, "SPEC_STAT") != "S")  {
			var curYear  	= substr(gfn_getCurrDate(),0,4);  					// 년도
			var curMonth 	= substr(gfn_getCurrDate(),4,2); 					// 월
			var curAuart 	= ds_change_ZSDT0091.GetColumn(idxHogi, "AUART"); 	// 오더유형
			var curMatnr 	= ds_change_ZSDT0091.GetColumn(idxHogi, "MATNR"); 	// 자재코드
			var curChnetwr 	= ds_change_ZSDT0091.GetColumn(idxHogi, "CHNETWR" );// 변경금액
			var curChedatu 	= ds_change_ZSDT0091.GetColumn(idxHogi, "CHEDATU" );// 변경납기
			var curEdatu 	= ds_change_ZSDT0091.GetColumn(idxHogi, "EDATU" );// 납기
			var strHogi     = ds_change_ZSDT0091.GetColumn(idxHogi, "HOGI");	// 호기
			var strChck     = ds_change_ZSDT0091.GetColumn(idxHogi, "CHCK");	// 변경여부
			var strCanc     = ds_change_ZSDT0091.GetColumn(idxHogi, "HOGI_CANC");// 호기취소
			var strPosnr    = ds_change_ZSDT0091.GetColumn(idxHogi, "POSNR");	 // 
            
			// 2013.02.25 오류 방지 : 자재번호 없으면 원가산출하지 않음
			if ( length(curMatnr) == 0 ) {
				continue;
			}
			
			if ( curMatnr == "Y-1000" ) { // S/P는 원가산출 하지 않음
				continue;
			}
			if ( strChck != "X") { // 2013.01.25 변경되지 않은 호기는 원가산출 하지 않음
				continue;
			}
			if ( strCanc == "C" ) {
				continue;
			}

			destroy("ds_save_ZSDT0094");
			create("dataset", "ds_save_ZSDT0094");
			
			object("ds_save_ZSDT0094").clearData();
			object("ds_save_ZSDT0094").copy(ds_output_ZSDT0094_change);
			ds_save_ZSDT0094.Filter("POSNR=="+quote(strPosnr));
			
			// 단가
			ds_char.ClearData();
			for ( var i = 0 ; i < ds_save_ZSDT0094.getRowCount() ; i ++ )
			{
				// 원가 산정시 숫자형 값에 , 가 들어있으면 오류 발생하므로 , 제거함
				var sValue = ds_save_ZSDT0094.getColumn(i, "CHAR_VALUE");
				if ( ds_save_ZSDT0094.getColumn(i, "CNGBN") == "NUM" ) {
					sValue = replace(sValue, ",", "");
				}
				
				if (( ds_save_ZSDT0094.getColumn(i, "NAM_CHAR") == "CO_QTDAT") && ( sValue.length != 8 )) {
					sValue = "00000000";			
				}
				
				ds_char.addrow();
				ds_char.SetColumn( i, "PSPID", ds_save_ZSDT0094.getColumn(i, "PSPID") );		// 프로젝트번호
				ds_char.SetColumn( i, "POSID", ds_save_ZSDT0094.getColumn(i, "HOGI") );			// 호기번호
				ds_char.SetColumn( i, "GJAHR", curYear );			
				ds_char.SetColumn( i, "POPER", curMonth );					
				ds_char.SetColumn( i, "MATNR", curMatnr );				
				ds_char.SetColumn( i, "NETWR", curChnetwr);	 // 변경금액
				ds_char.SetColumn( i, "ATNAM", ds_save_ZSDT0094.getColumn(i, "NAM_CHAR") );		// 특성이름
				ds_char.SetColumn( i, "ATBEZ", ds_save_ZSDT0094.getColumn(i, "ATBEZ") );		// 특성내역
				ds_char.SetColumn( i, "VALUE", sValue 									);		// 특성값
				ds_char.SetColumn( i, "ATWTB", ds_save_ZSDT0094.getColumn(i, "ATWTB") );		// 특성값 내역
				// duty 체크용
				ds_char.SetColumn( i, "HOGI"	, ds_save_ZSDT0094.getColumn(i, "HOGI") 	);
				ds_char.SetColumn( i, "ATKLA"	, ds_save_ZSDT0094.getColumn(i, "ATKLA") 	);
				ds_char.SetColumn( i, "PRH"		, ds_save_ZSDT0094.getColumn(i, "NAM_CHAR") );
				ds_char.SetColumn( i, "PRHNAME"	, ds_save_ZSDT0094.getColumn(i, "ATBEZ") 	);
				ds_char.SetColumn( i, "PRD"		, sValue 									);
				ds_char.SetColumn( i, "UCH_DUTY", chk_uch_duty.Value						);
			}
			
			if ( ds_save_ZSDT0094.GetRowCount() == 0 ) {
				continue;
			}
			
			// PLM 원가종속성 데이터 연동 21.08.23
			CUR_ROW = idxHogi;
			if(!fn_singlePlmDuty("ESTIMATE")) {
				fn_destroyWait();
				return false;
			}

            // 원가종속성 PLM 데이터 추가
			for ( var i = 0 ; i < ds_output_ZSDT0094_change_estimate.getRowCount(); i ++ )
			{
				var nRow = ds_char.addrow();
				ds_char.SetColumn( nRow, "PSPID", ds_output_ZSDT0094_change_estimate.getColumn(i, "PSPID") );		// 프로젝트번호
				ds_char.SetColumn( nRow, "POSID", ds_output_ZSDT0094_change_estimate.getColumn(i, "HOGI") );			// 호기번호
				ds_char.SetColumn( nRow, "GJAHR", curYear );			
				ds_char.SetColumn( nRow, "POPER", curMonth );					
				ds_char.SetColumn( nRow, "MATNR", curMatnr );				
				ds_char.SetColumn( nRow, "NETWR", curChnetwr);	 // 변경금액
				ds_char.SetColumn( nRow, "ATNAM", ds_output_ZSDT0094_change_estimate.getColumn(i, "NAM_CHAR") );		// 특성이름
				ds_char.SetColumn( nRow, "ATBEZ", "" );		// 특성내역
				ds_char.SetColumn( nRow, "VALUE", ds_output_ZSDT0094_change_estimate.getColumn(i, "CHAR_VALUE"));		// 특성값
				ds_char.SetColumn( nRow, "ATWTB", "");		// 특성값 내역
				// duty 체크용
				ds_char.SetColumn( nRow, "HOGI"	, ds_output_ZSDT0094_change_estimate.getColumn(i, "HOGI") 	);
				ds_char.SetColumn( nRow, "ATKLA"	, ""	);
				ds_char.SetColumn( nRow, "PRH"		, ds_output_ZSDT0094_change_estimate.getColumn(i, "NAM_CHAR") );
				ds_char.SetColumn( nRow, "PRHNAME"	, ""	);
				ds_char.SetColumn( nRow, "PRD"		, ds_output_ZSDT0094_change_estimate.getColumn(i, "CHAR_VALUE"));
				ds_char.SetColumn( nRow, "UCH_DUTY", chk_uch_duty.Value						);
            }
            // trace(ds_output_ZSDT0094_change_estimate.SaveXML());
            ds_output_ZSDT0094_change_estimate.ClearData();

			ds_error.DeleteAll();
			setDsOrder(ds_change_ZSDT0091.GetColumn(idxHogi, "PSPID"), ed_seq.text, strPosnr);
			var inDs = "ds_output_char=ds_char ds_order=ds_order ds_output_ZSDT0094_change_estimate=ds_output_ZSDT0094_change_estimate";
			var outDs = "ds_t304=ds_t304 ds_check=ds_check ds_error=ds_error"; // 2013.02.26 오류 데이터셋 제거 (공통함수에서 일괄 추가됨)
			var cond = "i_seq=" + quote(ed_seq.text)
					+ " i_gjahr=" + quote(substr(curChedatu,0,4))
					+ " i_zdate=" + quote(curEdatu) + " i_chk=" + quote("ALL")+" i_pspId="+quote(ds_change_ZSDT0091.GetColumn(idxHogi, "PSPID"));
			        // , " i_pspId="+quote(ds_change_ZSDT0091.GetColumn(idxHogi, "PSPID"));

			// 2013.03.12 callServiceN을 nsfRequest로 변경 - 오류에서 CE00001 메시지
            http.Sync = true;
			nsfRequest("costAll"																// srvId
						, "sso0055n/singleCost"													// url
						, inDs																	// biz에서 받는 명, mip에서 보내는 명
						, outDs																	// mip에서 받는 명, biz에서 보내는 명
						, cond
						, ""																	// CallBackFunc
			);
            http.Sync = false;

			if(ds_error.GetRowCount() > 0) {
				gfn_showMsgBar(ds_error.GetColumn(0,"ERRMSG"));   
				//gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
				gfn_openMsgWin(ds_error.GetColumn(0,'ERRMSG'), 'W','A');
				fn_destroyWait();
				return false;
			}
			
			// 부분원가 일치화 확인
			destroy("ds_check_temp");
			create("dataset", "ds_check_temp");
			ds_check_temp.copy(ds_check);
			ds_check_temp.Filter(" STATE != 'X' ");
					
			if ( ds_check.GetRowCount() > 0 )
			{
				if ( argCostSumMode == "all" ) {	// 2013.03.06 전체 원가합계 => 부분원가 정보 누적
					//if ( ds_check.GetColumn(0, "STATE") != "X" ) { // 2013.03.13 STATE가 X가 아닐 때만 부분원가 보여 줌
						for ( var idx = 0 ; idx < ds_check.GetRowCount() ; idx++ ) {
							ds_check_all.AddRow();
							ds_check_all.CopyRow(ds_check_all.row, ds_check, idx);
						}
					//}
				} else if ( argCostSumMode == "spec" ) {
						for ( var idx = 0 ; idx < ds_check_temp.GetRowCount() ; idx++ ) {
							ds_check_all.AddRow();
							ds_check_all.CopyRow(ds_check_all.row, ds_check, idx);
							partCost = "Y";    //부분원가 여부 체크후 모든 호기 부분원가 저장후 아래로직에서 알림메시지
						}			
				} else {							// 호기별 원가합계 => 처리 중단
				
					if ( ds_check_temp.GetRowCount() > 0 ) {				
						for ( var idx = 0 ; idx < ds_check_temp.GetRowCount() ; idx++ ) {
							ds_check_all.AddRow();
							ds_check_all.CopyRow(ds_check_all.row, ds_check_temp, idx);
						}
						var arr = ["부분원가의 존재","사양"]; // CW10083=해당 정보는 [${}]로/이므로 [${}]을/를 변경할 수 없습니다.
						gfn_showAlert("CW10083", arr);
						return false;
					} 
				}
			}
			
			// 2013.02.25 오류 방지 : 원가산출 결과가 없을 때, 계산하지 않음
			if ( ds_t304.GetRowCount() == 0 ) {
				continue;
			}
			
			// 2013.02.04 transaction 호출 후 바로 수행하도록 위치 변경
			var sumResult = sum304();
			sumResult = convertIntoForeignCurrency(sumResult, ds_output_ZSDT0090.GetColumn(0, "CHWAERK"), ds_output_ZSDS0063.GetColumn(0, "AUART"));
			
			// T호기(감시반)의 경우 0원 원가가 가능하므로 해당 로직 escape
			if(LEFT(curMatnr, 1) <> "T" && sumResult == 0) {
				gfn_showAlert("CW10025", ds_t304.GetColumn(idxHogi, "POSID")+"호기정보의 원가를 확인해주세요.");
				return false;
			}
			if(sumResult < 0) {
				gfn_showAlert('CE10007');	// 환율정보가 존재하지 않습니다.
				gfn_showMsgBar('CE10007', "CE00001");
				return false;
			}

			//Tab00.tab3.ed_cost.Text = sumResult; // 원가합계
			
			// [변경원가]컬럼에 값 셋팅
			var nSearchRow = ds_change_ZSDT0091.FindRow("HOGI", ds_t304.GetColumn(0, "POSID"));
			ds_change_ZSDT0091.setColumn(nSearchRow, "CHWAVWR", sumResult );
			
		}
		
		// 원가 산출이 끝난 자료는 표시를 해둔다.
		ds_change_ZSDT0091.SetColumn(idxHogi, "SPEC_STAT", "I");
	}
	//adjustChnetwrByWavwr(ds_change_ZSDT0091);
	
	fn_destroyWait();
	
	if ( partCost == "Y" ) {
		var arr = ["부분원가의 존재","사양"]; // CW10083=해당 정보는 [${}]로/이므로 [${}]을/를 변경할 수 없습니다.
		gfn_showAlert("CW10083", arr);
		return false;
	}
			
	http.Sync = false;				// 순차적으로 처리 비활성
	return true;
}

function setDsOrder(ordno, ordseq, orditem) {
	ds_order.ClearData();
	ds_order.AddRow();
	ds_order.SetColumn(0, "ordno", ordno);
	ds_order.SetColumn(0, "ordseq", ordseq);
	ds_order.SetColumn(0, "orditem", orditem);
}
// 프로젝트 번호 입력시 차수 초기화
function ed_pspId_OnCharChanged(obj,strPreText,strPostText)
{
	ed_seq.Text = "";
}

// 2013.01.21 공통사양 - 시방서
function fn_aspc(objDs, nRow)
{
	var prd   = "";
	var atwtb = "";
	
	if ( objDs != null && nRow > -1 ) {
		var prh = objDs.getColumn(nRow, "NAM_CHAR");
		if ( prh != "EL_ASPC" && prh != "ES_ASPC" && prh != "MW_ASPC" ) {
			return;
		}
		prd   = objDs.getColumn(nRow, "CHAR_VALUE");
		atwtb = objDs.getColumn(nRow, "ATWTB"     );
	} else {
		var nRow = ds_change_ZSDT0091.currow;
		if ( ds_change_ZSDT0091.GetColumn(nRow, "HOGI") == "" ) nRow = 0;
		var posnr = ds_change_ZSDT0091.GetColumn(nRow, "POSNR");
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR=="+ quote(posnr) +" && (NAM_CHAR=='EL_ASPC'||NAM_CHAR=='ES_ASPC'||NAM_CHAR=='MW_ASPC')");
		if ( nSearchRow == -1 ) return;
		
		prd   = ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE");
		atwtb = ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "ATWTB"     );
	}
	
	// 모든 호기에 동일한 값 적용
	// 2020 브랜드
	ds_output_ZSDT0094_F.fireEvent = false;
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		//if ( sHogiCanc == 'C' ) continue; // 취소된 호기는 제외
		
		// 화면에 변경사항 적용 (공통 사양 제외)
		for ( var j = 0 ; j < F_ZSDT0094_ABCDE.length ; j++ ) {
			var objDsTemp = F_ZSDT0094_ABCDE[j];
			var nSearchRow = objDsTemp.SearchRowNF("POSNR==" + quote(sPosnr) + " && (NAM_CHAR=='EL_ASPC'||NAM_CHAR=='ES_ASPC'||NAM_CHAR=='MW_ASPC')");
			if ( nSearchRow > -1 ) {
				if ( prd != objDsTemp.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
					objDsTemp.SetColumnNF(nSearchRow, "CHAR_VALUE", prd);
					objDsTemp.SetColumnNF(nSearchRow, "ATWTB"     , atwtb);
					if ( objDsTemp.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
						objDsTemp.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
					}
					if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
						ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
					}
					ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
				}
			}
		}
		// 화면에 변경사항 적용 (공통 사양)
		// 2020 브랜드
		var objDsTemp = ds_output_ZSDT0094_G;
		var nSearchRow = objDsTemp.SearchRowNF("POSNR==" + quote(sPosnr) + " && (NAM_CHAR=='CO_ASPC')");
		if ( nSearchRow > -1 ) {
			if ( prd != objDsTemp.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				objDsTemp.SetColumnNF(nSearchRow, "CHAR_VALUE", prd);
				objDsTemp.SetColumnNF(nSearchRow, "ATWTB"     , atwtb);
				if ( objDsTemp.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					objDsTemp.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}
	}
	// 2020 브랜드
	ds_output_ZSDT0094_G.fireEvent = true;
	
	// 원본에 변경사항 적용
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		//if ( sHogiCanc == 'C' ) continue; // 취소된 호기는 제외
		
		// 원본에 변경사항 적용 (공통 사양 제외)
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && (NAM_CHAR=='EL_ASPC'||NAM_CHAR=='ES_ASPC'||NAM_CHAR=='MW_ASPC')");
		if ( nSearchRow > -1 ) {
			if ( prd != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", prd);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , atwtb);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
		// 원본에 변경사항 적용 (공통 사양)
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && (NAM_CHAR=='CO_ASPC')");
		if ( nSearchRow > -1 ) {
			if ( prd != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", prd);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , atwtb);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
	}
}

// 2013.01.21 추가, 공통사양 - LCD 총 수량
function fn_bclcd()
{
	// 모든 호기를 돌면서 총수량 구하기
	var nCount = 0;
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		var nSearchRow1 = ds_output_ZSDT0094_B.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='EL_BCLCD'");
		var nSearchRow2 = ds_output_ZSDT0094_C.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='EL_CHLCD'");
		var sPrdTemp1 = decode(nSearchRow1, -1, "", trim(ds_output_ZSDT0094_B.GetColumnNF(nSearchRow1, "CHAR_VALUE")));
		var sPrdTemp2 = decode(nSearchRow2, -1, "", trim(ds_output_ZSDT0094_C.GetColumnNF(nSearchRow2, "CHAR_VALUE")));
		if ( length(sPrdTemp1) > 0 || length(sPrdTemp2) > 0 ) {
			nCount++;
		}
	}
	nCount = decode(nCount, 0, "", nCount);
	
	// 모든 호기에 동일한 값 적용
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		//if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		// 화면에 변경사항 적용 (공통 사양)
		// 2020 브랜드
		var nSearchRow = ds_output_ZSDT0094_G.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_BCLCDTQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}
		
		// 원본에 변경사항 적용 (공통 사양)
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_BCLCDTQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
	}
}

// 2013.01.21 추가, 공통사양 - LED 총 수량
function fn_bcpi()
{
	// 모든 호기를 돌면서 수량 구하기
	var nCount = 0;
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		var nSearchRow1 = ds_output_ZSDT0094_B.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='EL_BCPI'" );
		var nSearchRow2 = ds_output_ZSDT0094_C.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='EL_CHPI1'");
		var nSearchRow3 = ds_output_ZSDT0094_C.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='EL_CHPI2'");
		var nSearchRow4 = ds_output_ZSDT0094_C.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='EL_CHPI3'");
		var nSearchRow5 = ds_output_ZSDT0094_C.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='EL_CHPI4'");
		var sPrdTemp1 = decode(nSearchRow1, -1, "", trim(ds_output_ZSDT0094_B.GetColumnNF(nSearchRow1, "CHAR_VALUE")));
		var sPrdTemp2 = decode(nSearchRow2, -1, "", trim(ds_output_ZSDT0094_C.GetColumnNF(nSearchRow2, "CHAR_VALUE")));
		var sPrdTemp3 = decode(nSearchRow3, -1, "", trim(ds_output_ZSDT0094_C.GetColumnNF(nSearchRow3, "CHAR_VALUE")));
		var sPrdTemp4 = decode(nSearchRow4, -1, "", trim(ds_output_ZSDT0094_C.GetColumnNF(nSearchRow4, "CHAR_VALUE")));
		var sPrdTemp5 = decode(nSearchRow5, -1, "", trim(ds_output_ZSDT0094_C.GetColumnNF(nSearchRow5, "CHAR_VALUE")));
		
		if ( (sPrdTemp1 == "L12" || sPrdTemp1 == "L24")
			|| (sPrdTemp2 == "L12" || sPrdTemp2 == "L24")
			|| (sPrdTemp3 == "L12" || sPrdTemp3 == "L24")
			|| (sPrdTemp4 == "L12" || sPrdTemp4 == "L24")
			|| (sPrdTemp5 == "L12" || sPrdTemp5 == "L24")
		) {
			nCount++;
		}
	}
	nCount = decode(nCount, 0, "", nCount);
	
	// 모든 호기에 동일한 값 적용
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		//if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		// 화면에 변경사항 적용 (공통 사양)
		// 2020 브랜드
		var nSearchRow = ds_output_ZSDT0094_G.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_CHPITQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}
		
		// 원본에 변경사항 적용 (공통 사양)
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_CHPITQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
	}
}

// 2013.01.21 추가, 공통사양 - 비상통화장치 DI-PBX 적용대수
function fn_deph()
{

	// 모든 호기를 돌면서 수량 구하기
	var nCount = 0;
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		var nSearchRow = ds_output_ZSDT0094_D.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='EL_DEPH'");
		var sPrdTemp = decode(nSearchRow, -1, "", trim(ds_output_ZSDT0094_D.GetColumnNF(nSearchRow, "CHAR_VALUE")));
		if ( sPrdTemp == "DI" || sPrdTemp == "DILP"|| sPrdTemp == "HYBRIDW"|| sPrdTemp == "HYBRIDWL" ) {
			nCount++;
		}
	}
	nCount = decode(nCount, 0, "", nCount);

	// 모든 호기에 동일한 값 적용
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		//if ( sHogiCanc == 'X' ) continue; // 취소된 호기는 제외
		
		// 화면에 변경사항 적용 (공통 사양)
		// 2020 브랜드
		var nSearchRow = ds_output_ZSDT0094_G.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DEPHTQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}
		
		// 원본에 변경사항 적용 (공통 사양)
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DEPHTQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
	}
}

// 2013.01.21 추가, 공통사양 - DVR 적용대수
function fn_ddvr()
{
	// 모든 호기를 돌면서 수량 구하기
	var nCount = 0;
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		var nSearchRow = ds_output_ZSDT0094_D.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='EL_DDVR'");
		var sPrdTemp = decode(nSearchRow, -1, "", trim(ds_output_ZSDT0094_D.GetColumnNF(nSearchRow, "CHAR_VALUE")));
		if ( length(sPrdTemp) > 0 ) {
			nCount++;
		}
	}
	nCount = decode(nCount, 0, "", nCount);
	
	// 모든 호기에 동일한 값 적용
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		//if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		// 화면에 변경사항 적용 (공통 사양)
		// 2020 브랜드
		var nSearchRow = ds_output_ZSDT0094_G.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DDVRTQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}
		
		// 원본에 변경사항 적용 (공통 사양)
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DDVRTQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
	}
}

// 2013.01.21 추가, 공통사양 - 감시반1
function fn_dsv1()
{
	var prd   = "";
	var atwtb = "";
	
	// 모든 호기를 돌면서 수량 구하기
	var nCount = 0;
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"     );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		for ( var j = 0 ; j < F_ZSDT0094_ABCDE.length ; j++ ) {
			var objDsTemp = F_ZSDT0094_ABCDE[j];
			var nSearchRow = objDsTemp.SearchRowNF("POSNR==" + quote(sPosnr) + " && (NAM_CHAR=='EL_DSV1'||NAM_CHAR=='ES_DSV1'||NAM_CHAR=='MW_DSV1')");
			var sPrdTemp = decode(nSearchRow, -1, "", trim(objDsTemp.GetColumnNF(nSearchRow, "CHAR_VALUE")));
			var sAtwTemp = decode(nSearchRow, -1, "", trim(objDsTemp.GetColumnNF(nSearchRow, "ATWTB")));
			if ( length(sPrdTemp) > 0 ) {
				nCount++;
				prd = sPrdTemp; // 값이 있는 맨 마지막 호기의 값을 전체에 적용한다.
				atwtb = sAtwTemp;
			}
		}
	}
	nCount = decode(nCount, 0, "", nCount);
	
	// 모든 호기에 동일한 값 적용
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		//if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		// 화면에 변경사항 적용
		// 2020 브랜드
		var nSearchRow = ds_output_ZSDT0094_G.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DSV1'");
		if ( nSearchRow > -1 ) {
			if ( prd != ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "CHAR_VALUE", prd);
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "ATWTB"     , atwtb);
				if ( ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}
		// 2020 브랜드
		var nSearchRow = ds_output_ZSDT0094_G.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DSV1TQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}
		
		// 원본에 변경사항 적용
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DSV1'");
		if ( nSearchRow > -1 ) {
			if ( prd != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", prd);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , atwtb);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DSV1TQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
	}
}

// 2013.01.21 추가, 공통사양 - 감시반2
function fn_dsv2()
{
	var prd   = "";
	var atwtb = "";
		
	// 모든 호기를 돌면서 수량 구하기
	var nCount = 0;
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		for ( var j = 0 ; j < F_ZSDT0094_ABCDE.length ; j++ ) {
			var objDsTemp = F_ZSDT0094_ABCDE[j];
			var nSearchRow = objDsTemp.SearchRowNF("POSNR==" + quote(sPosnr) + " && (NAM_CHAR=='EL_DSV2'||NAM_CHAR=='ES_DSV2'||NAM_CHAR=='MW_DSV2')");
			var sPrdTemp = decode(nSearchRow, -1, "", trim(objDsTemp.GetColumnNF(nSearchRow, "CHAR_VALUE")));
			var sAtwTemp = decode(nSearchRow, -1, "", trim(objDsTemp.GetColumnNF(nSearchRow, "ATWTB")));
			if ( length(sPrdTemp) > 0 ) {
				nCount++;
				prd = sPrdTemp; // 값이 있는 맨 마지막 호기의 값을 전체에 적용한다.
				atwtb = sAtwTemp;
			}
		}
	}
	nCount = decode(nCount, 0, "", nCount);
	
	// 모든 호기에 동일한 값 적용
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		//if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		// 화면에 변경사항 적용
		// 2020 브랜드
		var nSearchRow = ds_output_ZSDT0094_G.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DSV2'");				
		if ( nSearchRow > -1 ) {
			if ( prd != ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "CHAR_VALUE", prd);
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "ATWTB"     , atwtb);
				if ( ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}
		
		// 2020 브랜드 적용
		var nSearchRow = ds_output_ZSDT0094_G.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DSV2TQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) { 
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}
		
		// 원본에 변경사항 적용
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DSV2'");
		if ( nSearchRow > -1 ) {
			if ( prd != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", prd);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , atwtb);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_DSV2TQ'");
		if ( nSearchRow > -1 ) {
			if ( nCount != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", nCount);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , nCount);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
	}
}

// 고속현장 2013.04.03
function fn_aspd() {
// 추가로 발생한 공용사양으로 호기별 사양서에 모두 존재하는 경우에 대하여 확인 필요
//trace("************fn_aspd");
	// 모든 호기를 돌면서 속도 확인하기
	var sAspdYn = "";
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		var nSearchRow = ds_output_ZSDT0094_A.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='EL_ASPD'");
		var sPrdTemp = decode(nSearchRow, -1, "", trim(ds_output_ZSDT0094_A.GetColumnNF(nSearchRow, "CHAR_VALUE")));
		if ( sPrdTemp == "180" || sPrdTemp == "210" || sPrdTemp == "240" ) {
			sAspdYn = "Y";
			break;
		}
	}
	
	// 모든 호기에 동일한 값 적용
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");
		//if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외
		
		// 화면에 변경사항 적용 (공통 사양)
		// 2020 브랜드 적용
		var nSearchRow = ds_output_ZSDT0094_G.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_ASPD'");
		if ( nSearchRow > -1 ) {
			if ( sAspdYn != ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "CHAR_VALUE", sAspdYn);
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "ATWTB"     , sAspdYn);
				if ( ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}
		
		// 원본에 변경사항 적용 (공통 사양)
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_ASPD'");
		if ( nSearchRow > -1 ) {
			if ( sAspdYn != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", sAspdYn);
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , sAspdYn);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
	}
}

function fn_etc() {
	var wwbld = ds_vbeln.GetColumn(0, "WWBLD");
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sPosnr    = ds_change_ZSDT0091.GetColumn(i, "POSNR"    );
		var sHogiCanc = ds_change_ZSDT0091.GetColumn(i, "HOGI_CANC");

		// 2020 브랜드 
		var nSearchRow = ds_output_ZSDT0094_G.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_FBDUSE'");
		if ( nSearchRow > -1 ) {
			if ( wwbld != ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "CHAR_VALUE", wwbld);
				//ds_output_ZSDT0094_F.SetColumnNF(nSearchRow, "ATWTB"     , wwbld);
				if ( ds_output_ZSDT0094_G.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_G.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				if ( ds_change_ZSDT0091.GetColumn(i, "STATUS") != "insert" ) {
					ds_change_ZSDT0091.SetColumn(i, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
				ds_change_ZSDT0091.SetColumn(i, "CHCK", "X"); // 변경 구분 체크
			}
		}

		// 원본에 변경사항 적용 (공통 사양)
		var nSearchRow = ds_output_ZSDT0094_change.SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_FBDUSE'");
		if ( nSearchRow > -1 ) {
			if ( wwbld != ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
				ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "CHAR_VALUE", wwbld);
				//ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "ATWTB"     , wwbld);
				if ( ds_output_ZSDT0094_change.GetColumnNF(nSearchRow, "STATUS") != "insert" ) {
					ds_output_ZSDT0094_change.SetColumnNF(nSearchRow, "STATUS", "update"); // 변경된 컬럼은 상태플래그 처리
				}
			}
		}
	}
}

// 2021.08.22 E/L 대수
function fn_coElqty() {
    var znumSum = 0;
    var namchar = "";
    var matnr = "";
    var sHogiCanc = "";
    for(var i=0; i < object("ds_change_ZSDT0091").GetRowCount(); i++) {
        matnr = object("ds_change_ZSDT0091").GetColumn(i, "MATNR");
        sHogiCanc = object("ds_change_ZSDT0091").GetColumn(i, "HOGI_CANC");
        if ( sHogiCanc == "C" ) continue; // 취소된 호기는 제외

        if( matnr == "L-1000") {
            znumSum = znumSum + 1;
        }
    }

    znumSum = ToString(znumSum);
    if(znumSum == "0") {
        znumSum = "";
    }

    for(var i=0; i < object("ds_change_ZSDT0091").GetRowCount(); i++) {
		var sPosnr    = object("ds_change_ZSDT0091").GetColumn(i, "POSNR");
		var nSearchRow = object("ds_output_ZSDT0094_G").SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_ELQTY'");
		if ( nSearchRow > -1 ) {
		    if( znumSum != object("ds_output_ZSDT0094_G").GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
		        object("ds_output_ZSDT0094_G").SetColumnNF(nSearchRow, "CHAR_VALUE", znumSum);
                object("ds_change_ZSDT0091").SetColumn(i, "CHCK", "X"); // 변경 구분 체크
		    }
		}

		nSearchRow = object("ds_output_ZSDT0094_change").SearchRowNF("POSNR==" + quote(sPosnr) + " && NAM_CHAR=='CO_ELQTY'");
		if ( nSearchRow > -1 ) {
		    if( znumSum != object("ds_output_ZSDT0094_change").GetColumnNF(nSearchRow, "CHAR_VALUE") ) {
		        object("ds_output_ZSDT0094_change").SetColumnNF(nSearchRow, "CHAR_VALUE", znumSum);
		        object("ds_output_ZSDT0094_change").SetColumnNF(nSearchRow, "STATUS", "update");
		    }
		}
    }
}

// 2013.01.22 설정된 데이터 해지 처리 ★★★★
function fn_close()
{
	close();
}

// 2013.02.07 사양 넓게 보이기 위해 사이즈 조정
function fn_resize() {
	tab00.width  = window.width-50;
	tab00.height = window.height-220;
	
	tab00.tab2.Width = tab00.width-2;
	tab00.tab2.height= tab00.height-40;
	
	tab00.tab3.Width = tab00.width-2;
	tab00.tab3.height= tab00.height-40;
	
	tab00.tab2.Grid.Width = tab00.width-60;
	tab00.tab2.Grid0.height = tab00.tab2.height-280;
	tab00.tab2.Grid1.height = tab00.tab2.height-280;
	
	tab00.tab3.Grid.height  = tab00.tab3.height-59;
	tab00.tab3.Grid0.height = tab00.tab3.height-59;
	tab00.tab3.Grid1.height = tab00.tab3.height-59;
	tab00.tab3.Grid2.height = tab00.tab3.height-59;
	tab00.tab3.Grid3.height = tab00.tab3.height-59;
	tab00.tab3.Grid4.height = tab00.tab3.height-59;
	
	// 2020 브랜드
	tab00.tab3.Grid5.height = tab00.tab3.height-59;
	
	Tab00.tab2.ResizeScroll();
	Tab00.tab3.ResizeScroll();
}

// 2013.03.04 호기별 사양서 출력
function fn_hogiSpecPrint()
{
	// 변경된 내용이 있으면 저장하고 호기별 사양서 출력 가능
	for ( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++ ) {
		var sStatus = ds_change_ZSDT0091.GetColumn(i, "STATUS");
		if ( sStatus == "update" || sStatus == "insert" ) {
			gfn_showAlert("CW10028"); // 저장버튼을 눌러 수정/추가 작업을 먼저 완료해주세요.
			return;
		}
	}
	
	var nRow = ds_change_ZSDT0091.currow;
	var sPspid = ds_change_ZSDT0091.GetColumn(nRow, "PSPID");
	var sPosnr = ds_change_ZSDT0091.GetColumn(nRow, "POSNR");
	var sHogi  = ds_change_ZSDT0091.GetColumn(nRow, "HOGI");
	
	if ( nRow < 0 || sHogi == "" ) {
		gfn_showAlert("CW10029", "호기"); //${}을/를 선택하세요.
		return;
	}
	else {
		
		//사양 출력 rfc 대신 현재 저장 화면 사양출력으로 변경 2013.12.05 강슬기
		ds_output_ZSDT0094_A.filter("POSNR=='"+sPosnr+"'" + "&& CHAR_VALUE<>''");	
		ds_A.CopyF(ds_output_ZSDT0094_A);
		ds_output_ZSDT0094_A.Unfilter();
		
		ds_output_ZSDT0094_B.filter("POSNR=='"+sPosnr+"'" + "&& CHAR_VALUE<>''");	
		ds_B.CopyF(ds_output_ZSDT0094_B);
		ds_output_ZSDT0094_B.Unfilter();
		
		ds_output_ZSDT0094_C.filter("POSNR=='"+sPosnr+"'" + "&& CHAR_VALUE<>''");	
		ds_C.CopyF(ds_output_ZSDT0094_C);
		ds_output_ZSDT0094_C.Unfilter();
		
		ds_output_ZSDT0094_D.filter("POSNR=='"+sPosnr+"'" + "&& CHAR_VALUE<>''");	
		ds_D.CopyF(ds_output_ZSDT0094_D);
		ds_output_ZSDT0094_D.Unfilter();
		
		ds_output_ZSDT0094_E.filter("POSNR=='"+sPosnr+"'" + "&& CHAR_VALUE<>''");	
		ds_E.CopyF(ds_output_ZSDT0094_E);
		ds_output_ZSDT0094_E.Unfilter();

        // 2020 브랜드
		ds_output_ZSDT0094_F.filter("POSNR=='"+sPosnr+"'" + "&& CHAR_VALUE<>''");	
		ds_F.CopyF(ds_output_ZSDT0094_F);
		ds_output_ZSDT0094_F.Unfilter();

		// 2020 브랜드
		ds_G.ClearData();
		ds_G.AddRow();
		ds_G.SetColumn(0,"HOGI",sHogi);
		ds_G.SetColumn(0,"ARKTX",ds_change_ZSDT0091.GetColumn(nRow, "ARKTX"));
		ds_G.SetColumn(0,"VDATU",ds_change_ZSDT0091.GetColumn(nRow, "CHEDATU"));
		ds_G.SetColumn(0,"KUNNRT",ds_output_ZSDS0063.Getcolumn(0,"KUNRG_NM"));
		ds_G.SetColumn(0,"KUNNRTZ2",ds_output_ZSDS0063.Getcolumn(0,"ZKUNNRT"));
		ds_G.SetColumn(0,"KUNNRTZ3",ds_output_ZSDS0063.Getcolumn(0,"KUNZ3"));
		ds_G.SetColumn(0,"BSTKD",ds_output_ZSDS0063.Getcolumn(0,"BSTNK"));
		ds_G.SetColumn(0,"TELEP",ds_output_ZSDS0063.Getcolumn(0,"TELF1"));
				
	}
	
	// 2020 브랜드 보고서 체크 필요
	var arg = "aCnt="+quote(ds_A.GetRowCount())
			+ " bCnt="+quote(ds_B.GetRowCount())
			+ " CCnt="+quote(ds_C.GetRowCount())
			+ " DCnt="+quote(ds_D.GetRowCount())
			+ " ECnt="+quote(ds_E.GetRowCount())
			+ " FCnt="+quote(ds_F.GetRowCount())
			+ " GCnt="+quote(ds_G.GetRowCount())
			+ " ABCCnt="+quote(ds_A.GetRowCount()+ds_B.GetRowCount()+ds_C.GetRowCount());
			
	Dialog("SSO::Sso0041.xml", arg, -1, -1, "Resize=true");
}

// 2013.03.06 전체 원가합계 버튼 클릭
function btn_costsumall_onclick(obj)
{
	if(ds_output_ZSDS0063.GetColumn(0, "KUNZ1") == "INPUT" ) {
		alert("생성된 자료입니다. 저장을 먼저 해주십시요.");
		return false;
	}
	
	// 2018.03.30 환율 존재 여부 확인 mj.Shin 
	if ( fn_existExchange(ds_output_ZSDT0090.GetColumn(0, "CHWAERK"), ds_output_ZSDS0063.GetColumn(0, "AUART"))  != 0  )
	{
		gfn_showAlert('CE10007');	// 환율정보가 존재하지 않습니다.
		gfn_showMsgBar('CE10007', "CE00001");
		return false;	
	}	
	
	ds_check_all.ClearData();
	
	if ( fn_sumCostAll("all") == true ) {
		// 부분원가 일치화 확인
		destroy("ds_check_temp");
		create("dataset", "ds_check_temp");
		ds_check_temp.copy(ds_check_all);
		ds_check_temp.Filter(" STATE != 'X' ");
		
		if ( ds_check_temp.GetRowCount() > 0 ) { // 부분원가 존재하는 호기가 있을 때
			var pspid = trim(ed_pspId.Text);
			var arg = "fa_flag="+quote("cont")
					+ " fa_pspid="+quote(pspid)
					+ " fa_posid="+quote("")
					+ " fa_qtnum="+quote("")
					+ " fa_qtseq="+quote("")
					+ " fa_qtser="+quote("")
			;
			gfn_openPopUpUrlHdel("Ses::Ses0038.xml", true, arg);
		} else { 								// 정상 종료
			gfn_showAlert("CI00005"); 	// 처리를 완료했습니다.
			gfn_showMsg("CI00005");		// 처리를 완료했습니다.
		}
	}
}

// 2013.03.06 종속성 검증 처리
function fn_dependDuty(obj)
{
    // 2020 브랜드
    var sndSys = "PDM"; 
    sndSys = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "SNDSYS");
	
	fn_createWait("",this);     // 처리중입니다. 메시지 처리
	ds_error.ClearData();
	plm_ds_log.ClearData();
	if(sndSys == "PLM") {
        // PLM 연동 처리
        fn_singlePlmDuty("DEPENDENCY");
   		fn_destroyWait();
   		if(plm_ds_log.getRowCount() > 0) {
			fn_openPlmLogWin("grd_logList", ds_template, plm_ds_log, "FLAG");
			return false;
		}
	} else {
		var vGtype = "";
		var zprdgbn = fn_getClassCdFromMatnr(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "MATNR"));
		switch(zprdgbn) {
			case "ELV_01" : vGtype = "ZEL1";
							break;
			case "ESC_01" : vGtype = "ZES1";
							break;
			case "MW_01"  : vGtype = "ZMW1";
							break;
			default       : break;
		}

		var cond = "strGtype=" + quote(vGtype) + " strZflg='P'";
	
		fn_duty();
	
		// 종속성 Duty 처리 후 기존 Duty적용 fn호출됨
		//=========================================================================================
		//  기능ID   : UF021
		//  수정내역 : 영업사양 종속성체크 호출 변경
		//             duty/dependDuty >>> dutyN/dependDutySingleMo
		//=========================================================================================
		nsfRequest(   "queryDuty"
					, "dutyN/dependDutySingleMo"
					, "ds_template1=ds_template_add"
					, "ds_template_add=ds_template1 ds_error=ds_error"
					, cond
					, "fn_afterQuery"
				   );
	}
}

// 2013.08.02  레이아웃 자동생성 
function fn_dependDuty2(obj)
{
	fn_createWait("",this);     // 처리중입니다. 메시지 처리

	ds_error.ClearData();

    var sndSys = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "SNDSYS");
    var brndcd_left3  = left(trim(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow,"BRNDCD")),3);
    var ethru = "";
	var arfq = "";
	var arf = "";
    var vGtype = "";
	var zprdgbn = fn_getClassCdFromMatnr(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "MATNR"));
	var nSrchRow1 = ds_output_ZSDT0094_change.SearchRowNF("HOGI==" + quote(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI")) + " && NAM_CHAR ==" + quote("EL_AUSE"));
	ds_output_ZSDT0094_change.UnFilter();
	var	zuse	 = trim(ds_output_ZSDT0094_change.GetColumn(nSrchRow1, "CHAR_VALUE"));
	var nSrchRow2 = ds_output_ZSDT0094_change.SearchRowNF("HOGI==" + quote(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI")) + " && NAM_CHAR ==" + quote("EL_ATYP"));
	ds_output_ZSDT0094_change.UnFilter();						
	var gtype   = trim(ds_output_ZSDT0094_change.GetColumn(nSrchRow2, "CHAR_VALUE"));
	var nSrchRow3 = ds_output_ZSDT0094_change.SearchRowNF("HOGI==" + quote(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI")) + " && NAM_CHAR ==" + quote("EL_AMAN"));
	ds_output_ZSDT0094_change.UnFilter();
	var type1   = trim(ds_output_ZSDT0094_change.GetColumn(nSrchRow3, "CHAR_VALUE"));
	
	if ( obj.id == "btn_depend2" ){ //오토 레이아웃
		for(var i=0;i<ds_output_ZSDT0094_A.GetRowCount();i++){ // EL_ARFQ A017, EL_ARF A018 특성 값 찾기 - 오서택 - 2021.10.28.
			prh = ds_output_ZSDT0094_A.GetColumn(i,"NAM_CHAR");
			prd = ds_output_ZSDT0094_A.GetColumn(i,"CHAR_VALUE");
			
			if(PRH == "EL_ARFQ"){
				arfq = prd;
			}
			else if(PRH == "EL_ARF"){
				arf = prd;
			}			
		}
	/*	
		var nSrchRow4 = ds_output_ZSDT0094_change.SearchRowNF("HOGI==" + quote(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI")) + " && NAM_CHAR ==" + quote("EL_ARFQ"));
		ds_output_ZSDT0094_change.UnFilter();
		arfq = trim(ds_output_ZSDT0094_change.GetColumn(nSrchRow4, "CHAR_VALUE"));
		
		var nSrchRow5 = ds_output_ZSDT0094_change.SearchRowNF("HOGI==" + quote(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI")) + " && NAM_CHAR ==" + quote("EL_ARF"));
		ds_output_ZSDT0094_change.UnFilter();
		arf = trim(ds_output_ZSDT0094_change.GetColumn(nSrchRow5, "CHAR_VALUE"));
		*/
		for(var i=0;i<ds_output_ZSDT0094_E.GetRowCount();i++){ // EL_ETHRU E006 특성 값 찾기 - 오서택 - 2021.10.28.
			prh = ds_output_ZSDT0094_E.GetColumn(i,"NAM_CHAR");
			prd = ds_output_ZSDT0094_E.GetColumn(i,"CHAR_VALUE");
			
			if(PRH == "EL_ETHRU"){
				ethru = prd;
			}	
		}
		/*
		var nSrchRow6 = ds_output_ZSDT0094_change.SearchRowNF("HOGI==" + quote(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI")) + " && NAM_CHAR ==" + quote("EL_ETHRU"));
		ds_output_ZSDT0094_change.UnFilter();
		ethru = trim(ds_output_ZSDT0094_change.GetColumn(nSrchRow6, "CHAR_VALUE"));
		*/
		// 좌우 공백 제거 및 빈 값은 NULL로
		arfq = trim(arfq);
		arf = trim(arf);
		ethru = trim(ethru);
		
		
		switch(zprdgbn) {
			case "ELV_01" : //vGtype = "ZEL2";
							if ( (zuse == "BD" || zuse == "BH" || zuse == "EB") && (gtype == "STVF" || gtype == "WBSS") && //병원용 적용 20151215
			                      (type1 == "18" || type1 == "20" || type1 == "21" || type1 =="24" || type1 =="26" )) { //병원용일 경우 
			                    vGtype = "ZEL4";
			                } 
			                else if(arfq != NULL && arf != NULL && ethru == "Y") { // LAD 관통형 AutoLayout - 오서택 - 2021.10.28.
								vGtype = "ZEL7";
			                }
			                else {
			                    if(brndcd_left3 == "NEX") {
			                        vGtype = "XEL2";
			                    } else {
								    vGtype = "ZEL2";
			                    }
			                }
   			                break;
			case "ESC_01" : vGtype = "ZES2";
							break;
			case "MW_01"  : vGtype = "ZMW2";
							break;
			default       : break;
		}

		if(sndSys == "PLM") {
            fn_destroyWait();
		    gfn_openMsgWin("해당 브랜드의 오토레이아웃 산출은 DUTY CALL에 병합되었습니다. DUTY CALL로 실행해주세요.", "", "A", "AUTO LAYOUT");
		    return;
		}
	} else if ( obj.id == "btn_stdLayout") {                         //표준 레이아웃
		switch(ds_detail.GetColumn(ds_detail.currow, "ZPRDGBN"))	{
			case "ELV_01" : vGtype = "ZEL3";
							break;
			case "ESC_01" : vGtype = "ZES3";
							break;
			case "MW_01"  : vGtype = "ZMW3";
							break;
			default       : break;
		}
	}
	
    // 해당호기의 호기번호를 layout part 의 설치 호기 번호로 자동 입력 20141229
    ds_output_ZSDT0094_E.SetColumn(ds_output_ZSDT0094_E.SearchRow("NAM_CHAR = 'EL_ECN'"), "CHAR_VALUE",substr(Tab00.tab2.ed_hogi.Text,7,3));
	var cond = "strGtype=" + quote(vGtype) + " strZflg='P'";

	fn_duty();

	// 종속성 Duty 처리 후 기존 Duty적용 fn호출됨
	//=========================================================================================
	//  기능ID   : UF003  
	//  수정내역 : 영업사양 종속성체크 호출 변경
	//             duty/dependDuty >>> dutyN/dependDutySingleMo
	//=========================================================================================
	nsfRequest(   "queryDuty"
				, "dutyN/dependDutySingleMo"
				, "ds_template1=ds_template_add"
				, "ds_template_add=ds_template1 ds_error=ds_error"
				, cond
				, "fn_afterQuery"
			   );	
}

function btn_draft_OnClick(obj) {

	var arg = F_URL +
	          "&ino=" 	+ ds_output_ZSDT0090.GetColumn(0, "VBELN") 	+ 
			  "&seq="   + ds_output_ZSDT0090.GetColumn(0, "SEQ") 	+ 
			  "&cdate=DISP";
			  
	//021.05.21 그룹웨어 리뉴얼		  
	// var arg = F_URL +
	          // "&ino=" + ds_output_ZSDT0090.GetColumn(0, "VBELN") + 
			  // "&seq="   + ds_output_ZSDT0090.GetColumn(0, "SEQ")  ;
	
	var finl = toUpper(trim(ds_output_ZSDT0090.GetColumn(0, "FINL")));
	var recad = ds_recad_da.GetColumn(0,"RECAD_DA");
	
	if ( finl == "R" ) {
		Alert("원가의뢰중에는 기안을 할 수 없습니다.");
		return;
	}
	
	if ( recad == "00000000") {
		Alert("수주 미승인 현장으로 기안 할 수 없습니다.");
		return;
	}
	
	// 사양변경 여부 체크
	if ( ufn_getSayangUpdateFlag() )
	{	
		fn_createWait("",this);
		if ( fn_sumCostAll("") == false ) { // 원가합계 - (2014.051.6) 기안시 변경사양 있으면 원가 산출 처리
			fn_destroyWait();
			return;
		}
		fn_destroyWait();
		gfn_showAlert("CW10025", "변경된 정보가 있습니다.\n저장 후 다시 시도해 주세요.");
		return;
	}
	
	// 호기데이터변경 여부 체크
	if ( ufn_isDataChanged() )
	{
		gfn_showAlert("CW10025", "변경된 정보가 있습니다.\n저장 후 다시 시도해 주세요.");
		return;
	}

	ds_routing.DeleteAll();
	ds_rout_status.DeleteAll();

	var ds = "";
	//stsE = sts1 = sts2 = sts5 = '';
	ds_updated_char.DeleteAll();
	// 2020 브랜드
	for(var a = 0 ; a < 6 ; a++ ) {
		if ( a == 0 ){ds=ds_output_ZSDT0094_A;ds_output_ZSDT0094_A.UnFilter();}
		if ( a == 1 ){ds=ds_output_ZSDT0094_B;ds_output_ZSDT0094_B.UnFilter();}
		if ( a == 2 ){ds=ds_output_ZSDT0094_C;ds_output_ZSDT0094_C.UnFilter();}
		if ( a == 3 ){ds=ds_output_ZSDT0094_D;ds_output_ZSDT0094_D.UnFilter();}
		if ( a == 4 ){ds=ds_output_ZSDT0094_E;ds_output_ZSDT0094_E.UnFilter();}
		// 2020 브랜드
		if ( a == 5 ){ds=ds_output_ZSDT0094_F;ds_output_ZSDT0094_F.UnFilter();}
		
		for(var i = 0 ; i < ds.getRowCount() ; i++ ) {	
			removeComma(ds, i);
			var searchRow = ds_print_sayang.SearchRow('HOGI=='+quote(ds.getColumn(i, "HOGI"))+' && NAM_CHAR=='+quote(ds.getColumn(i, "NAM_CHAR")));
			if(ds.getColumn(i, "STATUS") == 'update' || searchRow > -1) {
				ufn_appendUpdatedChar(ds_print_sayang.getColumn(searchRow, "HOGI"), ds_print_sayang.getColumn(searchRow, "NAM_CHAR"), ds_print_sayang.getColumn(searchRow, "CHAR_VALUE"), ds_print_sayang.getColumn(searchRow, "CHAR_VALUEMD"));
			}
		}
		
	}

	checkRouting();
	if(ds_routing.GetRowCount() == 0) {

	} else if(ds_rout_status.GetRowCount() > 0) {
		ds_rout_status.UnFilter();
		gfn_openPopUpUrlHdel('Sso::Sso0057.xml', true, null);
		fn_query();
		Tab00.TabIndex = 0;
		return;
	}

	if(right(ds_output_ZSDS0063.GetColumn(0, "AUART"),2) = '02'
		&& ds_output_zsdt0090.GetColumn(0,'NETWR') <> ds_output_zsdt0090.GetColumn(0,'CHNETWR')
		&& ds_output_zsdt0090.GetColumn(0,'CHNETWR') == 0) {
		gfn_showAlert("CW10025", '계약금 수금 후 계약해지 기안시 "계약취소시 귀속금액 입력" 작성 후 기안하여 주시기 바랍니다.');
	}

    // 2021.09.03 기안처리 시 납기일 변경 시 원가 재산출 체크
    /*
    var isChedatuCheck = false;
	for ( var i = 0 ; i < ds_change_ZSDT0091.getRowCount() ; i++ )
	{
		if (ds_change_ZSDT0091.GetColumn(i,"EDATU") != ds_change_ZSDT0091.GetColumn(i,"CHEDATU"))  //납기일
		{
		    alert("납기일 변경되어 원가 재산출을 수행합니다.");
	        isChedatuCheck = false;
		}
	}

    if(!isChedatuCheck) {
        if ( ds_output_ZSDT0090.GetColumn(0, "FINL") <> 'X' )
        {
            fn_createWait("",this);
            if ( fn_sumCostAll("spec") == false ) { // 21.09.03 기안 버튼 클릭 시 납기일이 변경된 경우 원가 재산출 처리 추가
                fn_destroyWait();
                return false;
            }
        }
        fn_destroyWait();
    }
    */

	// 선택된 정보 확인 후 처리
	if (ds_output_ZSDT0090.GetColumn(0, "VBELN") != "") {
		//gfn_showAlert("CW00116", "기안 (수주통보서) 대상을");		
		ExecBrowser(arg);
	}
}

function removeComma(ds, idx) {
	var sValue = ds.getColumn(idx, "CHAR_VALUE");

	if(ds.getColumn(idx, "CNGBN") == "NUM") {
		sValue = replace(sValue, ",", "");
		ds.setColumn(idx,"CHAR_VALUE",sValue);
	}
}

/******************************************************
*  WebService 처리시 발생한 에러 정보 표시
* @param  grdObj 처리 그리드 객체
* @param  dsObj 데이터셋 객체
* @param  errDsObj 에러 정보 데이터셋 객체
* @param  flagColNm 플래그 컬럼명
* @return
******************************************************/
function fn_openLogWin(grdObj, dsObj, logDsObj, flagColNm) {
	var grdNm = "";
	
	if ( type( grdObj ) == "STRING") {
		grdNm = grdObj;
	} else {
		grdNm = grdObj.id;
	}
	
	var dsNm = dsObj.id;
	var logDsNm = logDsObj.id;

	var arg = "fa_flagNm=" + quote( flagColNm);
		arg += " fa_grdName=" + quote(grdNm);
		arg += " fa_dsName=" + quote( dsNm);
		arg += " fa_logDsName=" + quote( logDsNm );

	gfn_openPopupUrl("COM::Com0270.xml", true, arg);
}


//=========================================================================================
//  함수기능 : 영업사양 찾기
//  파라미터 : 
//  리턴값   : 
//  기능ID   : UF022
//  개선내역 :
//  HISTORY  : 2016.02.29 최초 코딩 hsi
//=========================================================================================
function tab_template_div_template_ed_temp_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam) {
	if(nChar == "13") {
	    // 2020 브랜드
		var grdArry = ["Tab00.tab3.Grid", "Tab00.tab3.Grid0",
		               "Tab00.tab3.Grid1", "Tab00.tab3.Grid2",
		               "Tab00.tab3.Grid3", "Tab00.tab3.Grid4", "Tab00.tab3.Grid5"];
		               
		if(length(obj.text) < 1) {
			for(var i = 0; i < grdArry.length; i++) {
				eval(grdArry[i]).Redraw = false;
				eval(grdArry[i]).SetCellProp("body", 2, "bkColor", "");
				eval(grdArry[i]).SetCellProp("body", 2, "bkColor2", "User Color 22");
				eval(grdArry[i]).SetCellProp("body", 9, "Color", "");
				eval(grdArry[i]).Redraw = true;
			}
		} else {
			for(var i = 0; i < grdArry.length; i++) {
				eval(grdArry[i]).Redraw = false;
				eval(grdArry[i]).SetCellProp("body", 2, "bkColor", "expr:iif(IndexOf(ATBEZ, Tab00.tab3.ed_temp.Text) < 0, '', 'red')");
				eval(grdArry[i]).SetCellProp("body", 2, "bkColor2", "expr:iif(IndexOf(ATBEZ, Tab00.tab3.ed_temp.Text) < 0, 'User Color 22', 'red')");
				eval(grdArry[i]).SetCellProp("body", 9, "color", "expr:iif(IndexOf(ATBEZ, Tab00.tab3.ed_temp.Text) < 0, '', 'red')");
				eval(grdArry[i]).Redraw = true;
			}
		}
	}
}


function Tab00_tab2_btn_dwg_OnClick(obj)
{    
    // 리모델링 추가
    var findRow = object("ds_output_ZSDT0094_F").FindRow("NAM_CHAR", "EL_DREUSE");
    var isRadYsno   = false;
    if(findRow > -1 ) {
        if(object("ds_output_ZSDT0094_F").getColumn(findRow, "CHAR_VALUE") == "Y" && Substr(ed_pspId.text, 0,1) == "N") {
            // 리모델링 자동도면 대상여부 체크
            isRadYsno = fn_isRadYsno();
	        // 리모델링 자동도면 대상여부 체크
	        isRadYsno = fn_isRadYsno();
	        if(!isRadYsno) {
                gfn_openMsgWin("리모델링 자동도면 생성 대상이 아닙니다.", "", "A", "알림");
                return;
	        }

			// 리모델링 견적실측존재여부 체크
			var currRow = object("ds_change_ZSDT0091").currow;
			var pspid = object("ds_change_ZSDT0091").GetColumn(currRow, "PSPID");
			var hogi = object("ds_change_ZSDT0091").GetColumn(currRow, "HOGI");
	
			http.sync = true;
			var cond = "PSPID="+quote(pspid)+ " HOGI="+quote(hogi);
			nsfRequest(   "findQuotationSuvList"
						, "radSurveyC/findQuotationSuvList"
						, ""
						, "RAD_QTNUM=RAD_QTNUM RAD_QTSER=RAD_QTSER RAD_QTSEQ=RAD_QTSEQ RAD_QSUVSN=RAD_QSUVSN RAD_OSUVSN=RAD_OSUVSN"
						, cond
						, ""
			);
			http.sync = false;

            if(Length(RAD_QSUVSN) == 0 && Length(RAD_OSUVSN) == 0) {
			    if(SAVEYSNO == "N") {
				    gfn_openMsgWin("수주사양에 반영된 실측값 저장 후 표준도면생성을 요청해 주십시요", "", "A", "알림");
				    return;
			    }
            }
        }
    }

    if(isRadYsno) {
        // 리모델링 표준도면 생성
		var temp;
		var URL;
		temp = parseInt(ed_seq.Text);
        // 2009200: 유태용, 2003937: 송현섭
		var urlg = "user_id="+G_USER_ID+"&project_num="+ed_pspid.Text+"&seq="+temp+"&hogi="+Tab00.tab2.ed_hogi.Text+"&reviewer_id=2009200&approval_id=2003937";
		    urlg = urlg + "&qtnum="+RAD_QTNUM+"&qtser="+RAD_QTSER+"&qtseq="+RAD_QTSEQ+"&suvsn="+RAD_QSUVSN;
		URL = gfn_get_lad_baseurl("R") + "IF_R_0008.html?" + urlg;
		ExecBrowser(URL);
    } else {
		var temp;
		var URL;
		temp = parseInt(ed_seq.Text);
		var urlg = "user_id="+G_USER_ID+"&project_num="+ed_pspid.Text+"&seq="+temp+"&hogi="+Tab00.tab2.ed_hogi.Text;
		var brndcd_left3  = left(trim(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "BRNDCD")),3);
		if( brndcd_left3 == "NEX" ) {
			URL = gfn_get_lad_baseurl("NEX") + "IF_I_0001.html?" + urlg;
		} else {
			URL = gfn_get_lad_baseurl() + "IF_C_0008.html?" + urlg;
		}
		ExecBrowser(URL);
	}
}

function btn_moveDwg_OnClick(obj)   //post 방식 lad 포탈 호출 20150416 
{
    // 리모델링 추가
    var findRow = object("ds_output_ZSDT0094_F").FindRow("NAM_CHAR", "EL_DREUSE");
    var isRadYsno   = false;
    if(findRow > -1 ) {
        if(object("ds_output_ZSDT0094_F").getColumn(findRow, "CHAR_VALUE") == "Y" && Substr(ed_pspId.text, 0,1) == "N") {
            // 리모델링 자동도면 대상여부 체크
            isRadYsno = fn_isRadYsno();
	        if(!isRadYsno) {
                gfn_openMsgWin("리모델링 자동도면 생성 대상이 아닙니다.", "", "A", "알림");
                return;
	        }
        }
    }

    if(isRadYsno) {
        var urlg = "no="+ed_pspId.Text+"&hogi="+substr(Tab00.tab2.ed_hogi.Text,8,1)+"&gubun=P&user_id="+G_USER_ID;
        var URL = gfn_get_lad_baseurl("R") + "dwgRADDet.html" + "?" + urlg;
        ExecBrowser(URL);
    } else {
		qtseq  = ds_detail.GetColumn(ds_detail.currow, "QTSEQ");	
		
		var urlg = "no="+ed_pspId.Text+"&hogi="+substr(Tab00.tab2.ed_hogi.Text,8,1)+"&gubun=P&user_id="+G_USER_ID;  
        var URL = "";
		var brndcd_left3  = left(trim(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "BRNDCD")),3);
		if( brndcd_left3 == "NEX" ) {
			URL = gfn_get_lad_baseurl("NEX") + "IF_I_dwgDet.html?" + urlg;
		} else {
			URL = gfn_get_lad_baseurl() + "dwgDet.html" + "?" + urlg;
		}
		ExecBrowser(URL);
    }
}

function Tab00_tab2_btn_proj_OnClick(obj)
{    
    // 리모델링 추가
    var findRow = object("ds_output_ZSDT0094_F").FindRow("NAM_CHAR", "EL_DREUSE");
    var isRadYsno   = false;
    if(findRow > -1 ) {
        if(object("ds_output_ZSDT0094_F").getColumn(findRow, "CHAR_VALUE") == "Y" && Substr(ed_pspId.text, 0,1) == "N") {
            // 리모델링 자동도면 대상여부 체크
            isRadYsno = fn_isRadYsno();
	        if(!isRadYsno) {
                gfn_openMsgWin("리모델링 자동도면 생성 대상이 아닙니다.", "", "A", "알림");
                return;
	        } 

			if(SAVEYSNO == "N") {
				gfn_openMsgWin("수주사양에 반영된 실측값 저장 후 수주도면생성을 요청해 주십시요", "", "A", "알림");
				return;
			}
        }
    }

    if(isRadYsno) {
        var temp;
        temp = parseInt(ed_seq.Text);
        // 2009200: 유태용, 2003937: 송현섭
	    var urlg = "user_id="+G_USER_ID+"&project_num="+ed_pspid.Text+"&seq="+temp+"&hogi="+Tab00.tab2.ed_hogi.Text+"&reviewer_id=2009200&approval_id=2003937";
	    var URL = gfn_get_lad_baseurl("R") + "IF_R_0015.html" + "?" + urlg;
	    ExecBrowser(URL);
    } else {
		var temp;
		temp = parseInt(ed_seq.Text);
		var urlg = "user_id="+G_USER_ID+"&project_num="+ed_pspid.Text+"&seq="+temp+"&hogi="+Tab00.tab2.ed_hogi.Text;
		var URL = "";
		var brndcd_left3  = left(trim(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "BRNDCD")),3);
		if( brndcd_left3 == "NEX" ) {
			URL = gfn_get_lad_baseurl("NEX") + "IF_I_0015.html?" + urlg;
		} else {
			URL = gfn_get_lad_baseurl() + "IF_C_0015.html?" + urlg;
		}
        ExecBrowser(URL);
    }
}

// 원가산출을 하려면 수정중인 데이터가 없어야 한다.
function fn_saveChk(gubun) {
	if(gubun == "ALL") {
		if(ds_output_ZSDT0094_change.CaseCount("STATUS=='update'") > 0 || ds_change_ZSDT0091.CaseCount("STATUS=='update'") > 0) {
			return false;
		}
	} else if(gubun == "ONE") {
		if(ds_output_ZSDT0094_change.CaseCount("STATUS=='update'&&HOGI=="+quote(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI"))) > 0 || 
		   ds_change_ZSDT0091.CaseCount("STATUS=='update'&&HOGI=="+quote(ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI"))) > 0) {
			return false;
		}
	}
	return true;
}

// 계약변경 호기 순번 변경 팝업 호출(기능개선)
function btn_mv_hogi_OnClick2(obj)
{
	var arg  = "ParentTitle="+quote("")
			+ " fa_pspid="+quote(ds_output_ZSDT0090.GetColumn(0,'FINL'));
	if( ds_output_ZSDS0063.GetRowCount() > 0 ) {
	    if( ds_output_ZSDS0063.GetColumn(0, "SEQ") != "" ) {
	         if( st_finl.Text == "산출완료" || st_finl.Text == "승인완료" || st_finl.Text == "결재진행중" ) {
				gfn_showAlert("CW10025", "원가의뢰전에만 호기를 변경할 수 있습니다.");
				return;
	         }
			gfn_openPopUpUrlHdel("Sso::Sso0056.xml", true, arg);
		}
	}
}
function btn_mv_hogi_OnClick(obj) {
btn_mv_hogi_OnClick2(obj);
return;
	if( ds_output_ZSDS0063.GetRowCount() == 0 )
		return;
	if( ds_output_ZSDS0063.GetColumn(0, "SEQ") == "" )
		return;

	if ( ufn_getSayangUpdateFlag() ) {	// 사양변경 여부 체크
		gfn_showAlert("CW00202"); //변경된 정보가 있습니다. 저장 후 출력하여 주십시오.
		return;
	}
	
	if ( ufn_isDataChanged() ) {	// 호기데이터변경 여부 체크
		gfn_showAlert("CW00202"); //변경된 정보가 있습니다. 저장 후 출력하여 주십시오.
		return;
	}
	var arg  = "ParentTitle="+quote("")
			//+ " fa_pspid="+quote(ds_output_ZSDT0090.GetColumn(0,'FINL'))
			+ " fa_vbeln="+quote(ds_output_ZSDS0063.GetColumn(0,'VBELN'))
			+ " fa_seq="+quote(ds_output_ZSDS0063.GetColumn(0,'SEQ'))
			+ " fa_bstnk="+quote(ds_output_ZSDS0063.GetColumn(0,'BSTNK'))
			;

	if(gfn_openPopUpUrlHdel("Sso::Sso0058.xml", true, arg))
		fn_query();
}
function call_init_mv_query() {
	var seq 	= ed_seq.Text;		// 차수	
	var pspId 	= ed_pspId.Text; 	// 프로젝트

    fn_createWait("호기 순번 변경 처리 후 원가 재처리 수행", this);
    
	// 폼 초기화
	fn_formInit();
	var output = "ds_output_ZSDS0063=ds_output_ZSDS0063";
		output += " ds_output_ZSDT0090=ds_output_ZSDT0090";
		output += " ds_output_ZSDT0091=ds_output_ZSDT0091";
		output += " ds_output_ZSDT0092=ds_output_ZSDT0092";
		output += " ds_output_ZSDT0093=ds_output_ZSDT0093";
		output += " ds_output_ZSDT0094_original=ds_output_ZSDT0094_original";
		output += " ds_output_ZSDT0094_change=ds_output_ZSDT0094_change";
		output += " ds_vbeln=ds_vbeln";
		output += " ds_vbeln2=ds_vbeln2";
		output += " ds_recad_da=ds_recad_da";
		output += " ds_129=ds_129";
		output += " ds_date_commi=ds_date_commi";
			
	// 조회시 탭위치가 [사양]일 경우
	// [호기]로 변경 시킨다.
	// [사양]탭은 [호기]탭의 데이터를 클릭시에만 데이터가 생성되므로 ====> 2012.11.30 기본탭은 헤더 탭으로...
	if ( Tab00.TabIndex == 2 ) {Tab00.TabIndex = 0;}
	callServiceN("mvHogiquery"										// srvId
				, "sso0055n/find"									// url5
				, "ds_129=ds_129 ds_date_commi = ds_date_commi"		// biz에서 받는 명, mip에서 보내는 명
				, output											// mip에서 받는 명, biz에서 보내는 명
				, "pspId="+quote(pspId)
				+" cmd=DISP seq="+quote(seq) 						// strParam
				, "mvHogiqueryCallback"								// CallBackFunc
				);
}

function mvHogiqueryCallback() 
{
    // 호기변경 후 강제로 이벤트를 추가함
    ds_output_ZSDT0094_change_OnLoadCompleted();

    // 전체 원가합계 로직을 수행한다.
	ds_check_all.ClearData();
	
	if ( fn_sumCostAll("all") == true ) {
		// 부분원가 일치화 확인
		destroy("ds_check_temp");
		create("dataset", "ds_check_temp");
		ds_check_temp.copy(ds_check_all);
		ds_check_temp.Filter(" STATE != 'X' ");

	    fn_destroyWait();

		if ( ds_check_temp.GetRowCount() > 0 )  { // 부분원가 존재하는 호기가 있을 때
			var pspid = trim(ed_pspId.Text);
			var arg = "fa_flag="+quote("cont")
					+ " fa_pspid="+quote(pspid)
					+ " fa_posid="+quote("")
					+ " fa_qtnum="+quote("")
					+ " fa_qtseq="+quote("")
					+ " fa_qtser="+quote("")
			;
			gfn_openPopUpUrlHdel("Ses::Ses0038.xml", true, arg);
		}

	    gfn_showAlert("CW00022", "호기 순번 변경 및 전체 원가 산출이 처리 되었습니다. 변경된 원가는 확인 후 반드시 저장 하십시요.");
	} else {
	    	fn_destroyWait();
	}
}
function ufn_appendUpdatedChar(posid, atnam, atwrtb, atwrt) {
	ds_updated_char.AddRow();
	ds_updated_char.SetColumn(ds_updated_char.currow,'POSID', posid);
	ds_updated_char.SetColumn(ds_updated_char.currow,'ATNAM', atnam);
	ds_updated_char.SetColumn(ds_updated_char.currow,'ATWRTB', atwrtb);
	ds_updated_char.SetColumn(ds_updated_char.currow,'ATWRT', atwrt);
}
function sum304( ) {
	var sumCose = ds_t304.Sum("PRDM01")
				+ds_t304.Sum("PRDM02")
				+ds_t304.Sum("PRDM03")
				+ds_t304.Sum("PRDM04")
				+ds_t304.Sum("PRDM05")
				//+ds_t304.Sum("PRDA01") 숫자가 아님.
				+ds_t304.Sum("PRDL01")
				+ds_t304.Sum("PRDL02")
				+ds_t304.Sum("PRDL03")
				+ds_t304.Sum("PRDL04")
				+ds_t304.Sum("PRDL05")
				+ds_t304.Sum("PRDE01")
				+ds_t304.Sum("PRDE02")
				+ds_t304.Sum("PRDE03")
				+ds_t304.Sum("PRDE04")
				+ds_t304.Sum("PRDE05")
				+ds_t304.Sum("PRDE06")
				+ds_t304.Sum("PRDE07")
				+ds_t304.Sum("PRDE08")
				+ds_t304.Sum("PRDE09")
				+ds_t304.Sum("PRDE10")
				+ds_t304.Sum("PRDE11")
				+ds_t304.Sum("PRDE12")
				+ds_t304.Sum("PRDE13")
				+ds_t304.Sum("PRDE14")
				+ds_t304.Sum("PRDE15")
				+ds_t304.Sum("PRDI01")
				+ds_t304.Sum("PRDI02")
				+ds_t304.Sum("PRDI03")
				+ds_t304.Sum("PRDI04")
				+ds_t304.Sum("EQMM01")
				+ds_t304.Sum("EQMM02")
				+ds_t304.Sum("EQMM03")
				+ds_t304.Sum("EQMM04")
				+ds_t304.Sum("EQMM05")
				//+ds_t304.Sum("EQMA01") 숫자가 아님.
				+ds_t304.Sum("EQML01")
				+ds_t304.Sum("EQML02")
				+ds_t304.Sum("EQML03")
				+ds_t304.Sum("EQML04")
				+ds_t304.Sum("EQML05")
				+ds_t304.Sum("EQME01")
				+ds_t304.Sum("EQME02")
				+ds_t304.Sum("EQME03")
				+ds_t304.Sum("EQME04")
				+ds_t304.Sum("EQME05")
				+ds_t304.Sum("EQME06")
				+ds_t304.Sum("EQME07")
				+ds_t304.Sum("EQME08")
				+ds_t304.Sum("EQME09")
				+ds_t304.Sum("EQME10")
				+ds_t304.Sum("EQME11")
				+ds_t304.Sum("EQME12")
				+ds_t304.Sum("EQME13")
				+ds_t304.Sum("EQME14")
				+ds_t304.Sum("EQME15")
				+ds_t304.Sum("EQME51")
				+ds_t304.Sum("EQME52")
				+ds_t304.Sum("EQME53")
				+ds_t304.Sum("EQME54")
				+ds_t304.Sum("EQME55")
				+ds_t304.Sum("EQME56")
				+ds_t304.Sum("EQME57")
				+ds_t304.Sum("EQME58")
				+ds_t304.Sum("EQME59")
				+ds_t304.Sum("EQME60")
				+ds_t304.Sum("EQME61")
				+ds_t304.Sum("EQME62")
				+ds_t304.Sum("EQME63")
				+ds_t304.Sum("EQME64")
				+ds_t304.Sum("EQME65")
				+ds_t304.Sum("EQME66")
				+ds_t304.Sum("EQME67")
				+ds_t304.Sum("EQME68")
				+ds_t304.Sum("EQME69")
				+ds_t304.Sum("EQME70")
				+ds_t304.Sum("EQME71")
				+ds_t304.Sum("EQME72")
				+ds_t304.Sum("EQME73")
				+ds_t304.Sum("EQME74")
				+ds_t304.Sum("EQME75")
				+ds_t304.Sum("EQME76")
				+ds_t304.Sum("EQME77")
				+ds_t304.Sum("EQME78")
				+ds_t304.Sum("EQME79")
				+ds_t304.Sum("EQME80")
				+ds_t304.Sum("EQME81")
				+ds_t304.Sum("EQME82")
				+ds_t304.Sum("EQME83")
				+ds_t304.Sum("EQME84")
				+ds_t304.Sum("EQME85")
				+ds_t304.Sum("EQME86")
				+ds_t304.Sum("EQME87")
				+ds_t304.Sum("EQME88")
				+ds_t304.Sum("EQME89")
				+ds_t304.Sum("EQME90")
				+ds_t304.Sum("EQME91")
				+ds_t304.Sum("EQME92")
				+ds_t304.Sum("EQME93")
				+ds_t304.Sum("EQME94")
				+ds_t304.Sum("EQME95")
				+ds_t304.Sum("EQME96")
				+ds_t304.Sum("EQME97")
				+ds_t304.Sum("EQME98")
				+ds_t304.Sum("EQME99")
				+ds_t304.Sum("EQMI01")
				+ds_t304.Sum("EQMI02")
				+ds_t304.Sum("EQMI03")
				+ds_t304.Sum("EQMO01")
				+ds_t304.Sum("EQMO02")
				+ds_t304.Sum("EQMO03")
				+ds_t304.Sum("EQMO04")
				+ds_t304.Sum("EQMO05")
				+ds_t304.Sum("EQMO06")
				+ds_t304.Sum("EQMO07")
				+ds_t304.Sum("EQMO08")
				+ds_t304.Sum("EQMO09")
				+ds_t304.Sum("EQMO10")
				+ds_t304.Sum("EQMO11")
				+ds_t304.Sum("EQMO12")
				+ds_t304.Sum("EQMO13")
				+ds_t304.Sum("EQMO14")
				+ds_t304.Sum("EQMO15")
				+ds_t304.Sum("EQMO16")
				+ds_t304.Sum("EQMO17")
				+ds_t304.Sum("EQMO18")
				+ds_t304.Sum("EQMO19")
				+ds_t304.Sum("EQMO20")
				+ds_t304.Sum("EQMO21")
				+ds_t304.Sum("EQMO22")
				+ds_t304.Sum("EQMO23")
				+ds_t304.Sum("EQMO24")
				+ds_t304.Sum("EQMO25")
				+ds_t304.Sum("EQMO26")
				+ds_t304.Sum("EQMO27")
				+ds_t304.Sum("EQMO28")
				+ds_t304.Sum("EQMO29")
				+ds_t304.Sum("EQMO30")
				+ds_t304.Sum("EQMO31")
				+ds_t304.Sum("EQMO32")
				+ds_t304.Sum("EQMO33")
				+ds_t304.Sum("EQMO34")
				+ds_t304.Sum("EQMO35")
				+ds_t304.Sum("EQMO36")
				+ds_t304.Sum("EQMO37")
				+ds_t304.Sum("EQMO38")
				+ds_t304.Sum("EQMO39")
				+ds_t304.Sum("EQMO40")
				+ds_t304.Sum("CTSM01")
				+ds_t304.Sum("CTSM02")
				+ds_t304.Sum("CTSM03")
				+ds_t304.Sum("CTSM04")
				+ds_t304.Sum("CTSM05")
				+ds_t304.Sum("CTSM06")
				+ds_t304.Sum("CTSM07")
				+ds_t304.Sum("CTSM08")
				+ds_t304.Sum("CTSM09")
				+ds_t304.Sum("CTSM10")
				+ds_t304.Sum("CTSM11")
				+ds_t304.Sum("CTSM12")
				+ds_t304.Sum("CTSM13")
				+ds_t304.Sum("CTSM14")
				+ds_t304.Sum("CTSM15")
				+ds_t304.Sum("CTSM17")
				+ds_t304.Sum("CTSM18")
				//+ds_t304.Sum("CTSA01") 숫자가 아님.
				+ds_t304.Sum("CTSL01")
				+ds_t304.Sum("CTSL02")
				+ds_t304.Sum("CTSL03")
				+ds_t304.Sum("CTSL04")
				+ds_t304.Sum("CTSL05")
				+ds_t304.Sum("CTSE01")
				+ds_t304.Sum("CTSE02")
				+ds_t304.Sum("CTSE03")
				+ds_t304.Sum("CTSE04")
				+ds_t304.Sum("CTSE05")
				+ds_t304.Sum("CTSI01")
				+ds_t304.Sum("CTSI02")
				+ds_t304.Sum("CTSI03")
				+decode(ds_check_temp.getRowCount() > 0, 0, ds_t304.Sum("ADDT01"))
				+ds_t304.Sum("FDSP01")
				+ds_t304.Sum("FDSP02")
				+ds_t304.Sum("FDSP03")
				+ds_t304.Sum("FDSP04")
				+ds_t304.Sum("FDSP05")
				+ds_t304.Sum("FDSP06")
				+ds_t304.Sum("FDSP07")
				+ds_t304.Sum("FDSP08")
				+ds_t304.Sum("FDSP09")
				+ds_t304.Sum("FDSP10")
				+ds_t304.Sum("FDSP11")
	;
	sumCose = sumCose * 100;
	return sumCose;
}
function convertIntoForeignCurrency(won, waerk, auart) {
	var fcamt=0;
	
	// 환율 적용 (2012.12.18)
	if ( left(auart, 2) != "ZE" || waerk == "KRW" ) { // 2013.02.20 매매기준환율 적용 - AUART ZE로 시작하는 경우에만 환율 처리 (통화단위가 : != KRW)
		fcamt = won;
		return fcamt;
	}

	if ( ds_exchange.GetRowCount() == 0 ) { // 2013.02.20 환율이 존재하지 않는 경우에는 에러메시지 처리
		return -1;
	}
	
	var nExchange = "";
	nExchange = toNumber(ds_exchange.GetColumn(0, "UKURS"));
	if ( nExchange == null || trim(nExchange) == "" || nExchange <= 0 ) {
		return -1;
	}
	
	if ( nExchange > 0 ) {
		if ( waerk == "USD" || waerk == "EUR" || waerk == "MYR" ) {
			fcamt = truncate(won / nExchange, 2);
		} else if ( waerk == "JPY" ) {
			fcamt = round(won / nExchange, 0);
		} else {
			fcamt = truncate(won / nExchange, 0);
		}
	}

	return fcamt;
}
function chk_uch_duty_OnClick(obj,strValue)
{
	
}

function fn_existExchange(waerk, auart) {
	
	var nExchange = "";
	
	nExchange = toNumber(ds_exchange.GetColumn(0, "UKURS"));
		
	if ( left(auart, 2) == "ZE" && waerk != "KRW" && (nExchange == null || trim(nExchange) == "" || nExchange <= 0 )) {
		return -1;
	} else {
		return 0;
	}
}

function Tab00_tab1_ed_chwaerk_OnCharChanged(obj,strPreText,strPostText)
{
	if (strPreText != strPostText)
	{
		F_CHG_CURR = 'Y';
	}
	else
	{
		F_CHG_CURR = 'N';
	}	
}

// 대금청구 계획 체크 - 2016.06.18 추가 by mj.Shin 

function fn_check_billingplan()
{
	var replaceBstdk = replace( ds_output_ZSDS0063.GetColumn(0, "BSTDK"), "-", "");

	if ( !fn_check_billingplan_Amt() ) {
		return false;
	}
	
	if ( ds_output_ZSDS0063.GetColumn(0, "VKBUR") != "B500" && 
		 ds_output_ZSDS0063.GetColumn(0, "VKBUR") != "B600" && 
		 ds_output_ZSDS0063.GetColumn(0, "VKBUR") != "B700" && 
		 ds_output_ZSDS0063.GetColumn(0, "VKBUR") != "B900" && 
		 ds_output_ZSDS0063.GetColumn(0, "VKBUR") != "BA00" && 
		 ds_output_ZSDS0063.GetColumn(0, "VKBUR") != "BB00" && 
		 //replaceBstdk >= "20200401" && G_CURR_DATE >= "20200413" ) {
		 replaceBstdk >= "20200413") {
		if ( !fn_check_billingplan_Zterm() ) {
			return false; 
		}	
	}
	
	return true;
}

function fn_check_billingplan_Amt()
{
	//헤더 청구계획 
	if ( toNumber(Tab00.tab1.ed_lackPay) != 0 )
	{
		var arr = ["헤더 청구 계획을 확인하세요. [차이금액 : "+Tab00.tab1.ed_lackPay.Text+"" ']'];
		gfn_showAlert("CW10025", arr);
		return false;			
	}
		
	//품목 청구계획
	if ( ds_output_ZSDT0092_B1.getRowCount() == 0 && ds_output_ZSDT0093_B1.getRowCount() == 0 ) {	
		for( var i = 0 ; i < ds_change_ZSDT0091.GetRowCount() ; i++) {
	
			destroy("ds_temp");
			Create("Dataset", "ds_temp");
			ds_temp.copy(ds_output_ZSDT0093_B2);
			ds_temp.Filter("POSNR ==" + quote(ds_change_ZSDT0091.getColumn(i, "POSNR")));
			
			var nNetwrSum_Item = ds_change_ZSDT0091.getColumn(i,"CHNETWR");
			var nBillSum_Item = toNumber(ds_temp.Sum("CHFAKWR"));	
			var nChaiAmt_Item = nNetwrSum_Item - nBillSum_Item;
					
			if (nNetwrSum_Item <> nBillSum_Item) {					
			
				var strPosnr = ds_change_ZSDT0091.getColumn(i, "POSNR");
				var strHogi  = ds_change_ZSDT0091.getColumn(i, "HOGI");	
				destroy("ed_lackpayHogiSum");
				Create("MaskEdit","ed_lackpayHogiSum");
				ed_lackpayHogiSum.text = nChaiAmt_Item;
				var arr = [" 호기/품목번호("+strHogi+" / " +strPosnr +") 의 청구계획을 확인 하세요. [차이금액 : "+ ed_lackpayHogiSum.text +"" ']'];
				gfn_showAlert("CW10025", arr);
				return false;										
			}			
		}
	}
	return true;
}

function fn_check_billingplan_Zterm()
{
	// 헤더변경청구계획	
	for ( var i = 0 ; i < ds_output_ZSDT0093_B1.getRowCount() ; i++ )
	{	
		switch ( substr(ds_output_ZSDT0093_B1.GetColumnNF(i, "CHZTERM"),0,1))
		{
			case 'A' :
				if ( ( 	ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10001' 	 &&    //계약시
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10002' ) &&    //도면승인시 
					 (	ds_output_ZSDT0093_B1.GetColumnNF(i, "CHFKSAF") != 'C' ) ) {						 
					Alert("빌링 " + parseInt(i+1) + "행의 지급조건 선수금일 경우 종별구분은  계약시 or 도면승인시 입니다."); 
					tab00.TabIndex = 0;		// 품목 탭으로 이동
					gfn_SetFocusGrid(Tab00.tab1.Grid0, i, "CHZTERM") ; 
					return false;					
				}
				break;
			case 'B' :
				if ( (  ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10003' 	 &&       //착공시(선적시)
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10004' 	 &&       //주자재반입시
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10005' 	 &&       //출입구완료시
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10006' 	 &&       //주자재설치시
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10007' 	 &&       //설치완료시  
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10008' 	 &&       //완성검사시
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '20000' ) &&       //월기성
					 (	ds_output_ZSDT0093_B1.GetColumnNF(i, "CHFKSAF") != 'C' ) ) {					 
					Alert("빌링 " + parseInt(i+1) + "행의 지급조건 중도금일 경우 종별구분은 주자재반입시 or 출입구완료시 or 주자재설치시 or 설치완료시 or 완성검사시 or 월기성입니다."); 
					tab00.TabIndex = 0;		// 품목 탭으로 이동
					gfn_SetFocusGrid(Tab00.tab1.Grid0, i, "CHZTERM") ; 
					return false;					
				}
				break;	
			case 'C' :	
				 if ( ( ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10008' 	 &&       //완성검사시
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10009' 	 &&       //인도시
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10010' 	 &&       //건물준공시
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10011' 	 &&       //분할청구(교체)
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '10012' 	 &&       //일괄청구(분할수금)
						ds_output_ZSDT0093_B1.GetColumnNF(i, "CHMLBEZ") != '20000' ) &&       //월기성
					  (	ds_output_ZSDT0093_B1.GetColumnNF(i, "CHFKSAF") != 'C' ) ) {
					  Alert("빌링 " + parseInt(i+1) + "행의 지급조건 잔금일 경우 종별구분은  완성검사시 or 인도시 or  건물준공시 or 월기성 or 분할청구입니다."); 
					  tab00.TabIndex = 0;		// 품목 탭으로 이동
					  gfn_SetFocusGrid(Tab00.tab1.Grid0, i, "CHZTERM") ; 
					  return false;					
					 } 
				break;
			default :					
			
		} 

	}
	
	return true;
}

function isManualWavwrItem(matnr, spart, auart) {
	var isManual = false;
	if(substr(matnr,0,1) == "Y"
		|| matnr == "L-1200" || matnr == "L-1100"	// 모든 s/p 포함 //DW,휠체어리프트 추가 2015.04.09
		|| spart == '20') {				//주차 원가 직접 수정
		isManual=true;
	} else {
		// 견적 테이블에 존재하지 않는 경우 (SAP에만 존재하는 자료) (2012.12.19)
		// 해외) 중계 무역 프로젝트 원가입력은 견적입력 프로세스와 동일 (2012.12.19)
		if (!ufn_existsVbeln() && auart == "ZT01" ) {
			isManual=false;
		}
		else {
			// (2012.12.24) 변경원가 항목은 온핸드일때(견적데이터 없는 현재SAP에서 생성된프로젝트) 만 직접 입력가능하고 나머지는 비활성화(원가계산으로 자동입력되도록) 요망
			if (!ufn_existsVbeln()) {
				isManual=true;
			} else {
				isManual=false;
			}
		}

	}
	return isManual;
}
function Tab00_tab2_Grid_OnCellPosChanged(obj,nRow,nCell,nOldRow,nOldCell,nPivotIndex,nOldPivotIndex) {
	var colIdxChwavwr = obj.GetBindCellIndex('body', 'CHWAVWR');
	if(colIdxChwavwr <> nCell)
		return;

	var colIdxMatnr = obj.GetBindCellIndex('body','MATNR');
	var matnr = obj.GetCellValue(nRow,colIdxMatnr);

	setChwavwrEditable(obj, matnr, ds_output_ZSDS0063.GetColumn(0,'SPART'), ds_output_ZSDS0063.GetColumn(0, 'AUART'));
}
function setChwavwrEditable(objGrid, matnr, spart, auart) {
	var colIdxChwavwr = objGrid.GetBindCellIndex('body', 'CHWAVWR');

	if(isManualWavwrItem(matnr, spart, auart)){
		//objGrid.SetCellProp('body', colIdxChwavwr, 'Edit', 'expr:decode(HOGI_CANC,"C","none","number")');
		objGrid.SetCellProp('body', colIdxChwavwr, 'Edit', 'expr:decode(HOGI_CANC,"C","none", decode(Mid(HOGI,6,2), "Y6", "none", "normal"))');
	}else{
		objGrid.SetCellProp('body', colIdxChwavwr, 'Edit', 'none');
	}	
}
function adjustChnetwrByWavwr(ds0091) {
	if(ds_output_ZSDT0090.GetColumn(0, 'FINL') == 'X')
		return;

	destroy('lds0091');
	create('dataset', 'lds0091');
	lds0091.copy(ds0091);

	var totChnetwr = lds0091.sumNF('CHNETWR');
	var totChwavwr = lds0091.sum('CHWAVWR');
	var acmChnetwr = 0;

	for(var i=0; i < lds0091.GetRowCount(); i++) {
		if(lds0091.getColumn(i, 'HOGI_CANC') == 'C')
			continue;
			
		var chnetwr = round(totChnetwr * lds0091.GetColumn(i,'CHWAVWR') / totChwavwr / 1000, 0) * 1000;
		
		if(chnetwr < 0) {
			chnetwr=0;
		}

		lds0091.SetColumn(i, 'CHNETWR', chnetwr);
		acmChnetwr = acmChnetwr + chnetwr;
	}
	var remains = totChnetwr - acmChnetwr;
	if(remains != 0) {
		lds0091.SetColumn(lds0091.GetRowCount()-1, 'CHNETWR', (lds0091.GetColumn(lds0091.GetRowCount()-1, 'CHNETWR') + remains));
	}

	ds0091.fireevent = false;
	for(var i=0; i < lds0091.GetRowCount(); i++) {
		var idxFound = ds0091.SearchRowNF('HOGI==' + quote(lds0091.GetColumn(i,'HOGI')));
		if(idxFound < 0)
			continue;
		if(lds0091.GetColumn(i, 'CHNETWR') == ds0091.GetColumn(idxFound, 'CHNETWR'))
			continue;

		ds0091.SetColumn(idxFound, 'CHNETWR', lds0091.GetColumn(i, 'CHNETWR'));

		if(ds0091.getColumn(idxFound, 'STATUS') != 'insert')
			ds0091.setColumn(idxFound, 'STATUS', 'update');
	}

	ds0091.fireevent = true;
	destroy('lds0091');
}
function isNewItem(ds0091, idx) {
	if(ds0091.getColumn(idx, 'HOGI_CANC') != 'C'
		&& ds0091.getColumn(idx, 'NETWR') == 0
		&& ds0091.getColumn(idx, 'WAVWR') == 0)
		return true;
	else
		return false;
}
function btn_distribution_OnClick(obj) {
	adjustChnetwrByWavwr(ds_change_ZSDT0091);
}

/****************************************************************
* 영업사양 특성 그리드 스타일 지정
***************************************************************/
function fn_gridStyle(grdObj) {
    // user21, lightskyblue, lightgrey #E4EDF4  #E4EDF4 yellow
	grdObj.Redraw = false;
	grdObj.SetCellProp("body", 2, "bkColor", "expr:iif(NAM_CHAR == 'OPT_GROUP_TITLE', '#E4EDF4', 'default')");
	grdObj.SetCellProp("body", 2, "bkColor2", "expr:iif(NAM_CHAR == 'OPT_GROUP_TITLE', '#E4EDF4', 'default')");

    // 소그룹 타이틀 지정
	grdObj.SetCellProp("body", 9, "font", "expr:iif(NAM_CHAR == 'OPT_GROUP_TITLE', '맑은 고딕, 10, Bold', '')");

    // 소그룹 정렬처리
    grdObj.SetCellProp("body", 9, "align", "expr:iif(NAM_CHAR == 'OPT_GROUP_TITLE', 'right', 'left')");

    // 색깔지정
    grdObj.SetCellProp("body", 9, "bkColor", "expr:iif(NAM_CHAR == 'OPT_GROUP_TITLE', '#E4EDF4', iif(trim(PCNCD) = 'C' && MODITP = 'X', 'peachpuff', iif(trim(PCNCD) = 'P' && MODITP = 'X', 'lightpink', iif(MODITP = '', 'lightgrey','default'))))");
    grdObj.SetCellProp("body", 9, "bkColor2", "expr:iif(NAM_CHAR == 'OPT_GROUP_TITLE', '#E4EDF4', iif(trim(PCNCD) = 'C' && MODITP = 'X', 'peachpuff', iif(trim(PCNCD) = 'P' && MODITP = 'X', 'lightpink', iif(MODITP = '', 'lightgrey', 'User Color22'))))");
	grdObj.SetCellProp("body", 10, "bkColor", "expr:iif(NAM_CHAR== 'OPT_GROUP_TITLE', '#E4EDF4', iif(trim(PCNCD) = 'C' && MODITP = 'X', 'peachpuff', iif(trim(PCNCD) = 'P' && MODITP = 'X', 'lightpink', iif(MODITP = '', 'lightgrey', 'default'))))");
	grdObj.SetCellProp("body", 10, "bkColor2", "expr:iif(NAM_CHAR == 'OPT_GROUP_TITLE', '#E4EDF4', iif(trim(PCNCD) = 'C' && MODITP = 'X', 'peachpuff', iif(trim(PCNCD) = 'P' && MODITP = 'X', 'lightpink', iif(MODITP = '', 'lightgrey', 'User Color22'))))");

	// 쓰기 금지
	grdObj.SetCellProp("body", 10, "edit", "expr:iif(MODITP == 'X', decode(CNGBN,'NUM','number','normal'), 'none')");
	grdObj.Redraw = true;
}

/****************************************************************
* 영업사양 option 소그룹데이터 생성 조회
***************************************************************/
var G_grpCodeArray = ["EL_ERHDH" ,"EL_EMRLC" ,"EL_FDBBT" ,"EL_FDSP1" ,"EL_AFFT1" ,"EL_AFFT2" ,"EL_AFFT3" ,"EL_AFFT4" ,"EL_AFFT5" ,"EL_AFFT6" ,"EL_AFFT7" ,"EL_AFFT0" ,"EL_EFHB5"];
var G_grpNameArray = ["교체공사" ,"자동도면" ,"설치옵션" ,"개별견적" ,"승장사양(1) - 기준층 포함층" ,"승장사양(2)" ,"승장사양(3)" ,"승장사양(4)" ,"승장사양(5)" ,"승장사양(6)" ,"승장사양(7)" ,"승장사양(CP)" ,"층고"];
function fn_findZsdt1143List() {
	// DS 	
	Create("dataset", "ds_zsdt1143");
	object("ds_zsdt1143").addColumn("MANDT", "STRING");
	object("ds_zsdt1143").addColumn("GRPPRH", "STRING");
	object("ds_zsdt1143").addColumn("GRPDESC", "STRING");

	Create("dataset", "ds_cond_param");
	object("ds_cond_param").addColumn("MANDT", "STRING");
	object("ds_cond_param").addColumn("ZPRDGBN", "STRING");
    object("ds_cond_param").AddRow();
    object("ds_cond_param").SetColumn(0, "ZPRDGBN", "ELV_01");

    http.Sync = true;
    nsfRequest("optGrpTitle"
			, "coms01a/findGroupTitList"
			, "ds_cond=ds_cond_param ds_zsdt1143=ds_zsdt1143"
			, "ds_zsdt1143=ds_zsdt1143 ds_error=ds_error"
			, ""
			, ""
			);
	http.Sync = false;

	if(ds_error.GetRowCount() > 0 )	{
	    gfn_showAlert(ds_error.GetColumn(0,"ERRMSG"));
		return false;
	} else {
	    G_grpCodeArray = Array(object("ds_zsdt1143").GetRowCount());
	    G_grpNameArray = Array(object("ds_zsdt1143").GetRowCount());
	    for(var i=0; i < object("ds_zsdt1143").GetRowCount(); i++) {
	        G_grpCodeArray[i] = object("ds_zsdt1143").GetColumn(i, "GRPPRH");
	        G_grpNameArray[i] = object("ds_zsdt1143").GetColumn(i, "GRPDESC");
	    }
	}

	// DS 삭제
	destroy("ds_zsdt1143");
	destroy("ds_cond_param");
}

/****************************************************************
* 영업사양 그룹별 소그룹 타이틀 생성
***************************************************************/
function initCreateOptGroup(ds_template) {
    var filterString="";
	var searchRow = 0;
	var grpCodeArray = G_grpCodeArray;
	var grpNameArray = G_grpNameArray;
    var dsObj;
	var tmpPOSNR;
	var tmpClass;
 
    for(var i=0; i < ds_change_ZSDT0091.GetRowCount(); i++) {
	    tmpPOSNR = ds_change_ZSDT0091.GetColumn(i, "POSNR");
	    tmpClass = ds_change_ZSDT0091.GetColumn(i, "CLASS");

		if(tmpClass == 'ELV_01') {
			for(var codeRow = 0; codeRow < Length(grpCodeArray); codeRow++) {
				filterString = "POSNR=="+quote(tmpPOSNR)+"&& NAM_CHAR=="+quote(grpCodeArray[codeRow])+"&&DISPTP=="+quote("X");
				searchRow = ds_template.SearchRowNF(filterString);			
				if(searchRow > -1) {
					// 만약 이미 값이 추가 되어 있으면 패스
					var agoATBEZ = ds_template.GetColumnNF(searchRow-1, "ATBEZ");
					if(agoATBEZ != grpNameArray[codeRow]) {
						var tmpATKLA = ds_template.GetColumnNF(searchRow, "ATKLA");
						var nRow = ds_template.InsertRow(searchRow);
						ds_template.SetColumnNF(nRow, "MANDT", G_MANDT);
						ds_template.SetColumnNF(nRow, "POSNR", tmpPOSNR);
						ds_template.SetColumnNF(nRow, "ATKLA", tmpATKLA);
						ds_template.SetColumnNF(nRow, "CNGBN", "CHAR");
						ds_template.SetColumnNF(nRow, "CNT", "1");
						ds_template.SetColumnNF(nRow, "NAM_CHAR", "OPT_GROUP_TITLE");
						ds_template.SetColumnNF(nRow, "ATBEZ", grpNameArray[codeRow]);
						ds_template.SetColumnNF(nRow, "CHAR_VALUE", '');
						ds_template.SetColumnNF(nRow, "DISPTP", 'X');
						ds_template.SetColumnNF(nRow, "MODITP", 'X');
						ds_template.SetColumnNF(nRow, "STATUS", "");
					}
				}
			}
		}	    
    }
}

/********************************************************************************
* 기      능   : 2020 브랜드 브랜드 코드 조회
********************************************************************************/
function fn_query_abrand() 
{
	nsfRequest("query"												// srvId
				, "coms01a/comboAtwrt"								// url
				, "ds_list_atwrt=ds_list_abrand"					// inDsList
				, "ds_list_abrand=ds_list_atwrt ds_error=ds_error"	// outDsList
				, "G_VKBUR='EL_ABRAND'"        						// strParam
				, "fn_afterQuery_abrand"							// CallBackFunc
				); 
}

/********************************************************************************
* 기      능   : 2020 브랜드 브랜드 코드 조회 CALL BACK
********************************************************************************/
function fn_afterQuery_abrand(svcId, errCode, errMsg) 
{
	//gfn_InsertRowCombo(ds_list_abrand, 0, "", "", "CODE", "CODE_NAME"); // 선택 행 추가 
	//ds_list_abrand.row = 0;

	// 브랜드 그리드 콤보 설정
	Tab00.tab2.Grid.SetCellProp('Body', 5, "Display", 		"combo");
	Tab00.tab2.Grid.SetCellProp('Body', 5, "Edit", 			"none");
	Tab00.tab2.Grid.SetCellProp('Body', 5, "ComboCol", 		"CODE");
	Tab00.tab2.Grid.SetCellProp('Body', 5, "ComboText", 	"CODE_NAME");
//	Tab00.tab2.Grid.SetCellProp("Body", 5, "edit", "expr:iif(MATNR == 'L-1000', 'combo', 'none')");
	Tab00.tab2.Grid.SetCellProp('Body', 5, "ComboDataset", 	"ds_list_abrand");
}

/****************************************************************
* PLM  단일 호기 Duty 실행
* opt1: DUTY CALL : "DUTY", 종속성 : "DEPENDENCY", 제한조건 : "CONSTRAINT", 원가종속성: "ESTIMATE"
***************************************************************/
function fn_singlePlmDuty(opt1) {
    var sysId = G_SYSID;
    var callSys = 'S';
    var zflag = "P";
    var auart= ds_change_ZSDT0091.GetColumn(0, "AUART");
    var strPosnr = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "POSNR");
    var hogi = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI");
    var matnr = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "MATNR");
    var startIdx = 0;
    var endIdx   = 0;
    var ds;

    // 엘리베이터나 에스컬레이터가 아니면 제외
	if(opt1 =="ESTIMATE") {
		if(substr(ds_change_ZSDT0091.GetColumn(CUR_ROW, "MATNR"), 0,1) != "L" && substr(ds_change_ZSDT0091.GetColumn(CUR_ROW, "MATNR"), 0,1) != "S") {
			 return true;
		}
	}

    plm_ds_header.ClearData();
    plm_ds_template.ClearData();

	for ( var a = 0 ; a < 7 ; a++ )
	{
		if ( a == 0 ){ds=ds_output_ZSDT0094_A;}
		if ( a == 1 ){ds=ds_output_ZSDT0094_B;}
		if ( a == 2 ){ds=ds_output_ZSDT0094_C;}
		if ( a == 3 ){ds=ds_output_ZSDT0094_D;}
		if ( a == 4 ){ds=ds_output_ZSDT0094_E;}
		if ( a == 5 ){ds=ds_output_ZSDT0094_F;}
		if ( a == 6 ){ds=ds_output_ZSDT0094_G;}

		for( var i = 0 ; i < ds.getRowCountNF() ; i++ )
		{
			if(strPosnr == ds.GetColumnNF(i, "POSNR")) {
				// 원가 산정시 숫자형 값에 , 가 들어있으면 오류 발생하므로 , 제거함
				var sValue = ds.getColumnNF(i, "CHAR_VALUE");
				if ( ds.getColumnNF(i, "CNGBN") == "NUM" ) {
					sValue = replace(sValue, ",", "");
				}
				
				if (( ds.getColumnNF(i, "NAM_CHAR") == "CO_QTDAT") && ( sValue.length != 8 )) {
					sValue = "00000000";			
				}

				endIdx = plm_ds_template.AddRow();
				// IDX: dsid + 구분자 + 로우 인덱스
				plm_ds_template.SetColumn(endIdx, "IDX", ds.ID+":"+i);
				plm_ds_template.SetColumn(endIdx, "PRH", ds.GetColumnNF(i, "NAM_CHAR"));
				plm_ds_template.SetColumn(endIdx, "PRD", sValue);
				
				//2021.03 jss
				if(ds.GetColumnNF(i, "NAM_CHAR") == "EL_DPEXQ") el_dpexq_prd = ds.GetColumnNF(i, "CHAR_VALUE");
				
			}
		}
	}

	// 헤더 정보를 생성한다.
	newRow = plm_ds_header.AddRow();
	plm_ds_header.SetColumn(newRow, "SYSID", sysId);
	plm_ds_header.SetColumn(newRow, "CALLSYS", callSys);
	plm_ds_header.SetColumn(newRow, "ZFLAG", zflag);
	plm_ds_header.SetColumn(newRow, "QTNUM", "");
	plm_ds_header.SetColumn(newRow, "QTSER", "");
	plm_ds_header.SetColumn(newRow, "QTSEQ", "");
	plm_ds_header.SetColumn(newRow, "HOGI", hogi);
	plm_ds_header.SetColumn(newRow, "AUART", auart);
	plm_ds_header.SetColumn(newRow, "START_IDX", startIdx);
	plm_ds_header.SetColumn(newRow, "END_IDX", endIdx);
    plm_ds_header.SetColumn(newRow, "USER_ID", G_USER_ID);
    plm_ds_header.SetColumn(newRow, "LAND", "KR");
    plm_ds_header.SetColumn(newRow, "MATNR", matnr);

    // PLM 연동 처리를 수행한다.
    F_OPT1 = opt1;
    var isRslt = true;
    if(opt1 == 'FLOOR') {
        isRslt = callPlmWebService("P", opt1, "MF", plm_ds_header, plm_ds_template, "fn_plmFloorAfter");
		if(G_STATUS == "") {
			gfn_openMsgWin("PLM 시스템과 연결이 안됩니다. 시스템 관리자에게 문의하십시요, ", "A", "PLM 연동");
			return false;
		}    
    } else {
        isRslt = callPlmWebService("P", opt1, "MF", plm_ds_header, plm_ds_template, "fn_plmDutyAfter");
		if(G_STATUS == "") {
			gfn_openMsgWin("PLM 시스템과 연결이 안됩니다. 시스템 관리자에게 문의하십시요, ", "A", "PLM 연동");
			return false;
		}    
    }
	return isRslt;
}

/****************************************************************
* PLM  멀티 호기 Duty 실행
* opt1: DUTY CALL : "DUTY", 종속성 : "DEPENDENCY", 제한조건 : "CONSTRAINT", 원가종속성: "ESTIMATE"
***************************************************************/
function fn_MultiPlmDuty(opt1) {
    var sysId = G_SYSID;
    var callSys = 'S';
    var zflag = "P";
    var auart= ds_change_ZSDT0091.GetColumn(0, "AUART");
	var startIdx = 0;
    var endIdx   = 0;
    var ds;
    var newRow = 0;
    var sndSys = "PDM";
	var ds;

    plm_ds_header.ClearData();
    plm_ds_template.ClearData();
    ds_output_ZSDT0094_change_estimate.ClearData();
    for ( var idxHogi = 0 ; idxHogi < ds_change_ZSDT0091.GetRowCount() ; idxHogi++ ) {
	    if(ds_change_ZSDT0091.getColumn(idxHogi, "SPEC_STAT") != "S" && (ds_change_ZSDT0091.getColumn(idxHogi, "SNDSYS") == "PLM" || opt1 =="ESTIMATE")) {
			var curMatnr 	= ds_change_ZSDT0091.GetColumn(idxHogi, "MATNR"); 	  // 자재코드
			var strChck     = ds_change_ZSDT0091.GetColumn(idxHogi, "CHCK");	  // 변경여부
			var strCanc     = ds_change_ZSDT0091.GetColumn(idxHogi, "HOGI_CANC"); // 호기취소
			var strPosnr    = ds_change_ZSDT0091.GetColumn(idxHogi, "POSNR");	  // 
			var hogi        = ds_change_ZSDT0091.GetColumn(idxHogi, "HOGI");
			
			// 자재번호 없으면 원가산출하지 않음
			if ( length(curMatnr) == 0 ) {
				continue;
			}
			if ( curMatnr == "Y-1000" ) { // S/P는 원가산출 하지 않음
				continue;
			}
			if ( strChck != "X" ) { // 2013.01.25 변경되지 않은 호기는 원가산출 하지 않음
				continue;
			}
			if ( strCanc == "C" ) {
				continue;
			}
			if ( ds_save_ZSDT0094.GetRowCount() == 0 ) {
				continue;
			}
			
            // 엘리베이터와 에스컬레이터가 아니면 원가 정합성 연동 제외
            if(opt1 =="ESTIMATE") {
                if(substr(curMatnr, 0,1) != "L" && substr(curMatnr, 0,1) != "S") {
                    continue;
                }
            }

	        for ( var a = 0 ; a < 7 ; a++ )
	        {
		        if ( a == 0 ){ds=ds_output_ZSDT0094_A;}
		        if ( a == 1 ){ds=ds_output_ZSDT0094_B;}
		        if ( a == 2 ){ds=ds_output_ZSDT0094_C;}
		        if ( a == 3 ){ds=ds_output_ZSDT0094_D;}
		        if ( a == 4 ){ds=ds_output_ZSDT0094_E;}
		        if ( a == 5 ){ds=ds_output_ZSDT0094_F;}
		        if ( a == 6 ){ds=ds_output_ZSDT0094_G;}
		
		        for ( var i = 0 ; i < ds.getRowCountNF() ; i++ )
		        {
				    if(strPosnr == ds.GetColumnNF(i, "POSNR")) {
						// 원가 산정시 숫자형 값에 , 가 들어있으면 오류 발생하므로 , 제거함
						var sValue = ds.getColumnNF(i, "CHAR_VALUE");
						if ( ds.getColumnNF(i, "CNGBN") == "NUM" ) {
							sValue = replace(sValue, ",", "");
						}
						
						if (( ds.getColumnNF(i, "NAM_CHAR") == "CO_QTDAT") && ( sValue.length != 8 )) {
							sValue = "00000000";			
						}

					    endIdx = plm_ds_template.AddRow();
						// IDX: dsid + 구분자 + 로우 인덱스
						plm_ds_template.SetColumn(endIdx, "IDX", ds.ID+":"+i);
						plm_ds_template.SetColumn(endIdx, "PRH", ds.GetColumnNF(i, "NAM_CHAR"));
						plm_ds_template.SetColumn(endIdx, "PRD", sValue);
					}
			    }
			}

			// 헤더 정보를 생성한다.
			newRow = plm_ds_header.AddRow();
			plm_ds_header.SetColumn(newRow, "SYSID", sysId);
			plm_ds_header.SetColumn(newRow, "CALLSYS", callSys);
			plm_ds_header.SetColumn(newRow, "ZFLAG", zflag);
			plm_ds_header.SetColumn(newRow, "QTNUM", "");
			plm_ds_header.SetColumn(newRow, "QTSER", "");
			plm_ds_header.SetColumn(newRow, "QTSEQ", "");
			plm_ds_header.SetColumn(newRow, "HOGI", hogi);
			plm_ds_header.SetColumn(newRow, "AUART", auart);
			plm_ds_header.SetColumn(newRow, "START_IDX", startIdx);
			plm_ds_header.SetColumn(newRow, "END_IDX", endIdx);
			plm_ds_header.SetColumn(newRow, "USER_ID", G_USER_ID);
			plm_ds_header.SetColumn(newRow, "LAND", "KR");
			plm_ds_header.SetColumn(newRow, "MATNR", curMatnr);
			startIdx = endIdx+1;
        }
    }

    // PLM 연동 처리를 수행한다.
    var isRslt = true;
    if(plm_ds_header.GetRowCount() > 0) {
        F_OPT1 = opt1;
        isRslt = callPlmWebService("P", opt1, "MF", plm_ds_header, plm_ds_template, "fn_plmDutyAfter");
		if(G_STATUS == "") {
			gfn_openMsgWin("PLM 시스템과 연결이 안됩니다. 시스템 관리자에게 문의하십시요, ", "A", "PLM 연동");
		}    
    }
    return isRslt;
}

/****************************************************************
* PLM  전송 데이터 생성 Call Back 함수
***************************************************************/
function fn_plmDutyAfter() {
    var hogi;
    var prh;
    var prd;
    var prhName;
    var atkla;
    var logMsg;
    var idName;
    var findRow;
    var idx;
    var idxList;
    var nam_char;
    var newRow = -1;

    getPlmOutDs(ds_error);
    if(ds_error.GetRowCount() > 0) {
        // PLM 오류 메시지 출력
        if(ds_error.GetColumn(0, "ERRCODE") != "OK") {
            gfn_showAlert(ds_error.GetColumn(0, "ERRMSG"));
            ds_error.ClearData();
            return false;
        }
    }

    // 결과 처리
    getPlmOutDs(plm_out_ds_template);
    var errMsg = "";
    var disptp = "";
    var nTmplRow = -1;
    var estiRow = -1;
    for(var i=0; i < plm_out_ds_template.GetRowCount(); i++) {
        idx = plm_out_ds_template.GetColumn(i, "IDX");
        if(Length(idx) > 0) {
			idxList = Split(idx, ":");
			idName = idxList[0];
			findRow = ToNumber(idxList[1]);
	
			// 수신받은 데이터에서 에러 메시지와 화면에 적용할 메시지로 분리하여 처리한다.
			if(IndexOf(plm_out_ds_template.GetColumn(i, "PRH"), "ERRMSG_") > -1) {
				// 에러 데이터 셑을 생성한다.
				prhName = object(idName).GetColumnNF(findRow, "ATBEZ");
				hogi = object(idName).GetColumnNF(findRow, "HOGI");
				atkla = object(idName).GetColumnNF(findRow, "ATKLA");
	            nam_char = object(idName).GetColumnNF(findRow, "NAM_CHAR");
				logMsg = plm_out_ds_template.GetColumn(i, "PRD");
				newRow = plm_ds_log.AddRow();
				plm_ds_log.SetColumn(newRow, "IDX", newRow);
				//결과 처리 시스템명을 입력한다.
				plm_ds_log.SetColumn(newRow, "PRCSYS", "PLM");
				plm_ds_log.SetColumn(newRow, "HOGI", hogi);
				plm_ds_log.SetColumn(newRow, "ATKLA", atkla);
				plm_ds_log.SetColumn(newRow, "PRHNAME", prhName);
				plm_ds_log.SetColumn(newRow, "LOGMSG", logMsg);
			} else {
				// 제한조건인 경우에는 시스템에서 데이터 처리 없음
				if( F_OPT1 != "CONSTRAINT") {
					prh = plm_out_ds_template.GetColumn(i, "PRH");
					prd = plm_out_ds_template.GetColumn(i, "PRD");
					hogi = object(idName).GetColumnNF(findRow, "HOGI");					
					disptp = object(idName).GetColumnNF(findRow, "DISPTP");
					if(disptp == "X") {
					    object(idName).SetColumnNF(findRow, "CHAR_VALUE", prd);
					} else {
					    if(prd != object(idName).GetColumnNF(findRow, "CHAR_VALUE")) {
					        object(idName).SetColumnNF(findRow, "CHAR_VALUE", prd);
					        object(idName).SetColumnNF(findRow, "STATUS", "update");
							// 2013.01.21 화면의 사양 변경 내용을 원본 데이터셋에도 적용
							var nSrchRow = ds_output_ZSDT0094_change.SearchRowNF("HOGI==" + quote(hogi) + " && NAM_CHAR==" + quote(prh));
							if(nSrchRow > - 1) {
							    ds_output_ZSDT0094_change.SetColumnNF(nSrchRow, "CHAR_VALUE", prd);
							    ds_output_ZSDT0094_change.SetColumnNF(nSrchRow, "STATUS", "update");
							}
					    }
					}
					
					//2021.03 jss
					if(prh == "CO_DPEXQ1") el_dpexq1 = prd;
					if(prh == "CO_DPEXQ2") el_dpexq2 = prd;
					if(prh == "CO_DPEXQ3") el_dpexq3 = prd;
				}

				// 제한조건인 경우에는 시스템에서 데이터 처리 없음
				if( F_OPT1 != "CONSTRAINT") {
					prd = plm_out_ds_template.GetColumn(i, "PRD");
					// 특성값을 반영한다.
					object(idName).SetColumnNF(findRow, "CHAR_VALUE", prd);
				}
			}
        } else {
			if(IndexOf(plm_out_ds_template.GetColumn(i, "PRH"), "ERRMSG") > -1) {
				errMsg = plm_out_ds_template.GetColumn(i, "PRD");
            } else {
				if(F_OPT1 == "ESTIMATE") {
					prh = plm_out_ds_template.GetColumn(i, "PRH");
					prd = plm_out_ds_template.GetColumn(i, "PRD");
					estiRow = ds_output_ZSDT0094_change_estimate.AddRow();
					ds_output_ZSDT0094_change_estimate.SetColumn(estiRow, "POSNR", ds_change_ZSDT0091.GetColumn(CUR_ROW,"POSNR"));
					ds_output_ZSDT0094_change_estimate.SetColumn(estiRow, "PSPID", ds_change_ZSDT0091.GetColumn(CUR_ROW,"PSPID"));
					ds_output_ZSDT0094_change_estimate.SetColumn(estiRow, "HOGI", ds_change_ZSDT0091.GetColumn(CUR_ROW,"HOGI"));
					ds_output_ZSDT0094_change_estimate.SetColumn(estiRow, "NAM_CHAR", prh);
					ds_output_ZSDT0094_change_estimate.SetColumn(estiRow, "CHAR_VALUE", prd);
				}
            }
        }
    }

    //2021.03 jss
    el_plm_after = true;
    fn_dpex();
    
    var isRslt = true;
	// 단일 메시지 처리
	if(F_OPT1 != "CONSTRAINT" && Length(errMsg) > 0) {
		if(F_OPT1 == "DUTY") {
			gfn_openMsgWin(errMsg, "", "A", "Duty Call 알림");
			isRslt = false;
		} else if(F_OPT1 == "DEPENDENCY") {
			gfn_openMsgWin(errMsg, "", "A", "종속성 알림");
			isRslt = false;
		}
	}

	if( length(trim(errMsg)) != 0 ) { 
		newRow = plm_ds_log.AddRow();
		plm_ds_log.SetColumn(newRow, "IDX", newRow);
		//결과 처리 시스템명을 입력한다.
		plm_ds_log.SetColumn(newRow, "PRCSYS", "PLM");
		plm_ds_log.SetColumn(newRow, "LOGMSG", errMsg);		
	}
	return isRslt;
}

/******************************************************
*  WebService 처리시 발생한 에러 정보 표시
* @param  grdObj 처리 그리드 객체
* @param  dsObj 데이터셋 객체
* @param  errDsObj 에러 정보 데이터셋 객체
* @param  flagColNm 플래그 컬럼명
* @return
******************************************************/
function fn_openPlmLogWin(grdObj, dsObj, logDsObj, flagColNm) {
	var grdNm = "";
	
	if ( type( grdObj ) == "STRING") {
		grdNm = grdObj;
	} else {
		grdNm = grdObj.id;
	}
	
	var dsNm = dsObj.id;
	var logDsNm = logDsObj.id;

    // 정렬
    logDsObj.Sort("HOGI:A,PRHNAME:A,IDX:A");

	var arg = "fa_flagNm=" + quote( flagColNm);
		arg += " fa_grdName=" + quote(grdNm);
		arg += " fa_dsName=" + quote( dsNm);
		arg += " fa_logDsName=" + quote( logDsNm );
	//alert("gtn 넘어가는 값 : " + arg );
	gfn_openPopupUrl("COM::Com0271.xml", true, arg);
}

/******************************************************
*  PLM 웹서비스 연동을 통한 층별사양 정보 
* @return
******************************************************/
function btn_floor_OnClick(obj)
{
    var sndSys = "PDM"; 
    sndSys = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "SNDSYS");
    if(sndSys == "PLM") {
		// PLM 연동 처리
		fn_createWait("",this);
		plm_ds_log.ClearData();
		fn_singlePlmDuty("FLOOR");
    } else {
        gfn_openMsgWin("해당 브랜드에서 제공되지 않습니다.", "", "A", "층별사양");
    }
}

/****************************************************************
* PLM  층별사양 정보 전송 데이터 생성 Call Back 함수
***************************************************************/
function fn_plmFloorAfter() {
    var hogi = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI");
    var logMsg;
    var newRow = 0;

    getPlmOutDs(ds_error);
    if(ds_error.GetRowCount() > 0) {
        // PLM 오류 메시지 출력
        if(ds_error.GetColumn(0, "ERRCODE") != "OK") {
            gfn_showAlert(ds_error.GetColumn(0, "ERRMSG"));
            ds_error.ClearData();
            return;
        }
    }

    // 결과 처리
    getPlmOutDs(plm_out_ds_template);
    //trace("plm_out_ds_template:"+plm_out_ds_template.SaveXML());
    var errMsg = "";
    for(var i=0; i < plm_out_ds_template.GetRowCount(); i++) {
        // 수신받은 데이터에서 에러 메시지와 화면에 적용할 메시지로 분리하여 처리한다.
        if(IndexOf(plm_out_ds_template.GetColumn(i, "PRH"), "ERRMSG_") > -1) {
            logMsg = plm_out_ds_template.GetColumn(i, "PRD");
            newRow = plm_ds_log.AddRow();
            plm_ds_log.SetColumn(newRow, "IDX", newRow);

            //결과 처리 시스템명을 입력한다.
            plm_ds_log.SetColumn(newRow, "PRCSYS", "PLM");
            plm_ds_log.SetColumn(newRow, "HOGI", qtseq);
            plm_ds_log.SetColumn(newRow, "LOGMSG", logMsg);
        } else if(plm_out_ds_template.GetColumn(i, "PRH") == "ERRMSG") {
            logMsg = plm_out_ds_template.GetColumn(i, "PRD");
            errMsg = logMsg;
        }
    }

    // 네비게이션 삭제
    fn_destroyWait();
    if(plm_ds_log.GetRowCount() >0 && errMsg == "") {
        // 층별사양 체크 메시지를 출력한다.
		fn_openPlmLogWin("grd_logList", ds_template, plm_ds_log, "FLAG");
    } else if(errMsg != "") {
        gfn_openMsgWin(errMsg, "", "A", "층별사양");
    } else {
        getPlmOutDs(plm_out_ds_header);
        //trace("plm_out_ds_header:"+plm_out_ds_header.SaveXML());
        // 층별사양전개 팝업을 호출한다.
        if(plm_out_ds_header.GetRowCount() > 0 && plm_out_ds_template.GetRowCount() > 0) {
			var arg;
			var brndArr = gfn_openPopUpUrlHdel("COM::Com0272.xml", true, arg);
	    }
    }
}


//교환기 세팅
function fn_dpex() {
	for (var i = 0; i < ds_output_ZSDT0094_D.GetRowCountNF(); i++) {
		var prh = ds_output_ZSDT0094_D.GetColumnNF(i, "NAM_CHAR"  );
		if (prh == "EL_DPEXQ" ) {
			ds_output_ZSDT0094_D.SetColumnNF(i, "CHAR_VALUE", el_dpexq_prd);
			ds_output_ZSDT0094_D.SetColumnNF(i, "STATUS", "update");
		}
	}
	
	for (var i = 0; i < ds_output_ZSDT0094_G.GetRowCountNF(); i++) {
		var prh = ds_output_ZSDT0094_G.GetColumnNF(i, "NAM_CHAR"  );
		
		if (prh == "CO_DPEXQ1") {
			ds_output_ZSDT0094_G.SetColumnNF(i, "CHAR_VALUE", el_dpexq1);
			ds_output_ZSDT0094_G.SetColumnNF(i, "STATUS", "update");
		}		
		
		if (prh == "CO_DPEXQ2") {
			ds_output_ZSDT0094_G.SetColumnNF(i, "CHAR_VALUE", el_dpexq2);
			ds_output_ZSDT0094_G.SetColumnNF(i, "STATUS", "update");
		}
		
		if (prh == "CO_DPEXQ3" ) {
			ds_output_ZSDT0094_G.SetColumnNF(i, "CHAR_VALUE", el_dpexq3);
			ds_output_ZSDT0094_G.SetColumnNF(i, "STATUS", "update");
		}
	}
}

/****************************************************************
* 리모델링실측적용 팝업화면 호출
***************************************************************/
function tab_template_div_template_btn_rad_auto_OnClick(obj)
{
	var arg  = "";
	arg = "FLOORYSNO="+quote(FLOORYSNO)+" LAYOUTYSNO="+quote(LAYOUTYSNO)+" APPLYYSNO="+quote(APPLYYSNO);
	var arr  = gfn_openPopUpUrlHdel("SSO::Sso0050R.xml", true, arg);
    if(Length(arr) == 3) {
        FLOORYSNO  = arr[0];
        LAYOUTYSNO = arr[1];
        APPLYYSNO  = arr[2];
        SAVEYSNO   = "N";
    } else if(Length(arr) == 4) {
        // 변경사항이 없는 경우 리턴 파라미터
        FLOORYSNO  = arr[0];
        LAYOUTYSNO = arr[1];
        APPLYYSNO  = arr[2];
        SAVEYSNO   = arr[3];
    }

	// 데이터셑에 최신값 반영
	var hogi = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "HOGI");
	var findRow = -1;
	var addRow = -1;
	findRow = ds_rad_sts.FindRow("HOGI", hogi);
	if(findRow > -1) {
		ds_rad_sts.SetColumn(findRow, "FLOORYSNO", FLOORYSNO);
		ds_rad_sts.SetColumn(findRow, "LAYOUTYSNO", LAYOUTYSNO);
		ds_rad_sts.SetColumn(findRow, "APPLYYSNO", APPLYYSNO);
		ds_rad_sts.SetColumn(findRow, "SAVEYSNO", SAVEYSNO);
	} else {
		addRow = ds_rad_sts.AddRow();
		ds_rad_sts.SetColumn(addRow, "FLOORYSNO", FLOORYSNO);
		ds_rad_sts.SetColumn(addRow, "LAYOUTYSNO", LAYOUTYSNO);
		ds_rad_sts.SetColumn(addRow, "APPLYYSNO", APPLYYSNO);
		ds_rad_sts.SetColumn(addRow, "SAVEYSNO", SAVEYSNO);
	}
	//trace("ds_rad_sts input:"+ds_rad_sts.SaveXML());
}

/****************************************************************
* 리모델링 자동도면 대상여부
***************************************************************/
function fn_isRadYsno()
{
	var isRad   = true;
	var findRow = -1;
	var elAtyp;
	var elAuse;
	var elAman;
	var elErpr;
	var elAspd;
	var znumber;
	var elEhm;
	var elEthru;

	// 기종(EL_ATYP): XLVF
	findRow = object("ds_output_ZSDT0094_A").FindRow("NAM_CHAR", "EL_ATYP");
    if(findRow > -1) {
        elAtyp = object("ds_output_ZSDT0094_A").GetColumn(findRow, "CHAR_VALUE");
	    //trace("기종 elAtyp:"+elAtyp);
		if(elAtyp != "LXVF") {
			return false;
		}
    } else {
        return false;
    }

    // 용도(EL_AUSE): 인승(PS) '장애(HC), 비상(EP), 비상,장애(EH)
	findRow = object("ds_output_ZSDT0094_A").FindRow("NAM_CHAR", "EL_AUSE");
    if(findRow > -1) {
        elAuse = object("ds_output_ZSDT0094_A").GetColumn(findRow, "CHAR_VALUE");
	    //trace("용도 elAuse:"+elAuse);
		if(elAuse == "PS" || elAuse == "HC" || elAuse == "EP" || elAuse == "EH") {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }

    // 인승(EL_AMAN): 9 ~21
    findRow = object("ds_output_ZSDT0094_A").FindRow("NAM_CHAR", "EL_AMAN");
    if(findRow > -1) {
        elAman = object("ds_output_ZSDT0094_A").GetColumn(findRow, "CHAR_VALUE");
		elAman = ToNumber(elAman);
		//trace("인승 elAman:"+elAman);
		if(elAman >=6 && elAman <= 21) {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }
    
    // 속도(EL_ASPD): 60, 90, 105
    findRow = object("ds_output_ZSDT0094_A").FindRow("NAM_CHAR", "EL_ASPD");
    if(findRow > -1) {
        elAspd = object("ds_output_ZSDT0094_A").GetColumn(findRow, "CHAR_VALUE");
	    //trace("속도 elAspd:"+elAspd);
		if(elAspd == "60" || elAspd == "90" || elAspd == "105") {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }
    
    // 로핑방식(EL_ERPR), 1:1, 2:1
    findRow = object("ds_output_ZSDT0094_E").FindRow("NAM_CHAR", "EL_ERPR");
    if(findRow > -1) {
        elErpr = object("ds_output_ZSDT0094_E").GetColumn(findRow, "CHAR_VALUE");
	    //trace("로핑방식(EL_ERPR) elErpr:"+elErpr);
		if(elErpr == "1:1" || elErpr == "2:1") {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }

    // 승강로재질(EL_EHM): 골조(CEMEN) elEhm
    findRow = object("ds_output_ZSDT0094_A").FindRow("NAM_CHAR", "EL_EHM");
    if(findRow > -1) {
        elEhm = object("ds_output_ZSDT0094_A").GetColumn(findRow, "CHAR_VALUE");
	    //trace("골조(CEMEN) elEhm:"+elEhm);
		if(elEhm == "CEMEN") {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }
    
    // 관통여부(EL_ETHRU): !Y elEthru
    findRow = object("ds_output_ZSDT0094_E").FindRow("NAM_CHAR", "EL_ETHRU");
    if(findRow > -1) {
        elEthru = object("ds_output_ZSDT0094_E").GetColumn(findRow, "CHAR_VALUE");
        //trace(" 관통여부 elEthru:"+elEthru);
		if(elEthru != "Y") {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }

    // CWT 위치 -> 후락만 대상임(R)
    findRow = object("ds_output_ZSDT0094_E").FindRow("NAM_CHAR", "EL_ECWTP");
    if(findRow > -1) {
        elEcwtp = object("ds_output_ZSDT0094_E").GetColumn(findRow, "CHAR_VALUE");
        //trace("CWT 위치 elEcwtp:"+elEcwtp);
		if(elEcwtp == "R") {
			isRad   = true;
		} else {
			return false;
		}
    } else {
        return false;
    }
    return isRad;
}

/****************************************************************
* JQPR Y호기 생성 여부 체크 함수
***************************************************************/
function fn_hasJqpr() {
	var hasnewJqpr = false;
	var shouldCreateNewHogi = false;
	var jqprYhogiNum = "";
	var sumEmptyYrow = 0;
	var maxHogi = ds_jqpr.getColumn(0, "REMARKHOGI");
	var maxRemark = ds_jqpr.getColumn(0, "REMARKROW");
	var sumShouldRemarkrow = 0;
	
	if (Trim(maxRemark) != "" && maxRemark != null) {
		sumEmptyYrow = 15 - ToNumber(maxRemark);
	}
	
	for (var i=0; i < ds_jqpr.GetRowCount(); i++) {
		if (ds_jqpr.getColumn(i, "REMARKROW") == "" || ds_jqpr.getColumn(i, "REMARKROW") == null) {
			hasnewJqpr = true;
			sumShouldRemarkrow = sumShouldRemarkrow + 1;
		}
	}
	
	if (hasnewJqpr == false) {
		return [shouldCreateNewHogi, jqprYhogiNum];
	};
	
	if (maxHogi == "" || maxHogi == null) {
		//if (sumEmptyYrow < sumShouldRemarkrow) {
			//jqprYhogiNum = "Y"+ ToString(ToNumber(Right(maxHogi, 2))+1);
		//}
		//else {
			jqprYhogiNum = "Y66";
		//}
		/**
		ds_output_ZSDT0091.Filter("HOGI ==" + quote(jqprYhogiNum));
		if (ds_output_ZSDT0091.GetRowCount() == 0) {
		shouldCreateNewHogi = true;
		}
		ds_output_ZSDT0091.UnFilter();
		*/
		
		 //2021.05 jss :  Y66호기 생성여부
		var y66Row = ds_output_ZSDT0091.FindRowAs("HOGI", "%Y66");
		if(y66Row < 0) shouldCreateNewHogi = true;
		
	}
	else {
		jqprYhogiNum = Right(maxHogi, 6, 2);
	}
	
	return [shouldCreateNewHogi, jqprYhogiNum];
}

/****************************************************************
* JQPR Y호기 Remark 함수
***************************************************************/
function fn_remarkJqpr(remarkHogi, remarkRow, jqprNum, jqprNo, iwBtrOrg, waers, maxSeqJq) {
	ds_jqpr.Filter("JQPRNUM ==" + quote(jqprNum) + " && JQPRNO == " + quote(jqprNo));
	if (ds_jqpr.GetRowCount() > 0) {
		if(iwBtrOrg == null || iwBtrOrg == "") iwBtrOrg = "0";
		if(maxSeqJq == null || maxSeqJq == "") maxSeqJq = "0";
		ds_jqpr.SetColumn(0, "REMARKHOGI", remarkHogi);
		ds_jqpr.SetColumn(0, "REMARKROW", remarkRow);
		ds_jqpr.SetColumn(0, "IWBTRORG", iwBtrOrg);
		ds_jqpr.SetColumn(0, "WAERS", waers);
		ds_jqpr.SetColumn(0, "FLAG", "U");
		ds_jqpr.SetColumn(0, "SEQ", maxSeqJq);
	}
	ds_jqpr.UnFilter();
	//trace("ds_jqpr : "+ds_jqpr.saveXml());
}

/****************************************************************
* JQPR Y호기 원가 지정 함수
***************************************************************/
function fn_setJqprCost(remarkRow, jqprCost) {
	var curCost = ds_change_ZSDT0091.GetColumn(ds_change_ZSDT0091.currow, "CHWAVWR");
	var sumAmt = ToInteger(curCost) + ToInteger(jqprCost);

	if (curCost == null || curCost == 0) {
		ds_change_ZSDT0091.SetColumn(ds_change_ZSDT0091.currow, "CHWAVWR", jqprCost);
		Tab00.tab3.ed_cost.Text = jqprCost;
	}
	else {
		ds_change_ZSDT0091.SetColumn(ds_change_ZSDT0091.currow, "CHWAVWR", sumAmt);
		Tab00.tab3.ed_cost.Text = sumAmt;
	}
}

function Grid_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,nLLParam,nHLParam)
{	
	var ds = ""; // dataset id
	if ( obj.id == 'Grid' ){ds=ds_output_ZSDT0094_A;}
	if ( obj.id == 'Grid0' ){ds=ds_output_ZSDT0094_B;}
	if ( obj.id == 'Grid1' ){ds=ds_output_ZSDT0094_C;}
	if ( obj.id == 'Grid2' ){ds=ds_output_ZSDT0094_D;}
	if ( obj.id == 'Grid3' ){ds=ds_output_ZSDT0094_E;}
	if ( obj.id == 'Grid4' ){ds=ds_output_ZSDT0094_F;}
	ds = object(obj.BindDataset);
	
	var ds4 = ds_output_ZSDT0094_F;
	var findRow = ds4.FindRow("NAM_CHAR", "EL_YSTAT");
	if(findRow > -1 ) {
		ds4.SetColumn(findRow, "CHAR_VALUE",ds.GetColumn(ds.row, "NAM_CHAR"));
		ds4.SetColumn(findRow, "STATUS", "update");
	}
}]]></Script>
</Window>