<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form BKColor="white" Font="돋움,16" Height="695" Id="login" Left="8" OnClick="login_OnClick" OnLoadCompleted="login_OnLoadCompleted" OnTimer="login_OnTimer" PidAttrib="7" Title="현대엘리베이터" TooltipFont="Default,0" Top="8" Ver="1.0" Width="480" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_login"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_list">
				<Contents>
					<colinfo id="USER_ID" size="256" type="STRING"/>
					<record>
						<USER_ID></USER_ID>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user62" Bottom="695" Height="695" Id="Shape6" Left="0" LineWidth="0" Right="480" TabOrder="26" Top="0" Type="Rectangle" Width="480"></Shape>
		<Image FillType="STRETCH" Height="600" Id="Image0" ImageID="lo_im_bg" TabOrder="1" Width="480"></Image>
		<Image Height="448" Id="Image5" ImageID="lo_im_numbg1" Left="14" TabOrder="23" Top="222" Width="452"></Image>
		<Image Height="51" Id="Image1" ImageID="lo_im_logo" Left="22" TabOrder="2" Top="32" Width="209"></Image>
		<Image Height="40" Id="Image2" ImageID="lo_im_id" Left="23" TabOrder="3" Top="117" Width="49"></Image>
		<Image Height="40" Id="Image3" ImageID="lo_im_pw" Left="23" TabOrder="4" Top="163" Width="49"></Image>
		<Edit BKColor="white" Border="Flat" BorderColor="#a2a2a2" Color="#005d92" Font="돋움,18" Height="40" Id="ed_userId" InputPanel="FALSE" Left="76" LeftMargin="6" MaxLength="9" OnKillFocus="Edit_OnKillFocus" RightMargin="6" TabOrder="5" Top="117" UpperOnly="TRUE" Width="257"></Edit>
		<Edit BKColor="white" Border="Flat" BorderColor="#a2a2a2" Color="#005d92" Font="돋움,18" Height="40" Id="ed_pwd" InputPanel="FALSE" Left="76" LeftMargin="6" MaxLength="10" OnKillFocus="Edit_OnKillFocus" Password="TRUE" RightMargin="6" TabOrder="6" Top="163" UpperOnly="TRUE" Width="257"></Edit>
		<Button Cursor="HAND" Height="40" Id="btn_Login" ImageID="lo_bt_login" Left="347" OnClick="fn_Login" TabOrder="7" Text="Button0" Top="117" Width="111"></Button>
		<Button Cursor="HAND" Height="40" Id="btn_Cancel" ImageID="lo_bt_cancel" Left="347" OnClick="btn_Cancel_OnClick" TabOrder="8" Text="Button0" Top="163" Width="111"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,18,Bold" Height="83" Id="Button15" ImageID="lo_bt_numside" Left="204" TabOrder="21" Text="환경&#10;설정" Top="570" Transparent="TRUE" Width="141"></Button>
		<Button ButtonStyle="TRUE" Color="white" Cursor="HAND" Font="돋움,18,Bold" Height="83" Id="btn_Exit" ImageID="lo_bt_numclose" Left="353" OnClick="btn_Exit_OnClick" TabOrder="22" Text="종료" Top="570" Transparent="TRUE" Width="102"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="굴림,11,Bold" Height="82" Id="btn_Back" ImageID="lo_bt_numbasp_02" Left="26" OnClick="fn_ProcessKey" TabOrder="18" Top="476" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_7" ImageID="lo_bt_num_02" Left="26" OnClick="fn_ProcessKey" TabOrder="15" Text="7" Top="394" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_4" ImageID="lo_bt_num_02" Left="26" OnClick="fn_ProcessKey" TabOrder="12" Text="4" Top="313" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_1" ImageID="lo_bt_num_02" Left="26" OnClick="fn_ProcessKey" TabOrder="9" Text="1" Top="232" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_0" ImageID="lo_bt_num_02" Left="169" OnClick="fn_ProcessKey" TabOrder="19" Text="0" Top="476" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_8" ImageID="lo_bt_num_02" Left="169" OnClick="fn_ProcessKey" TabOrder="16" Text="8" Top="394" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_5" ImageID="lo_bt_num_02" Left="169" OnClick="fn_ProcessKey" TabOrder="13" Text="5" Top="313" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_2" ImageID="lo_bt_num_02" Left="169" OnClick="fn_ProcessKey" TabOrder="10" Text="2" Top="232" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_Del" ImageID="lo_bt_num_02" Left="312" OnClick="fn_ProcessKey" TabOrder="20" Text="Del" Top="476" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_9" ImageID="lo_bt_num_02" Left="312" OnClick="fn_ProcessKey" TabOrder="17" Text="9" Top="394" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_6" ImageID="lo_bt_num_02" Left="312" OnClick="fn_ProcessKey" TabOrder="14" Text="6" Top="313" Width="143"></Button>
		<Button ButtonStyle="TRUE" Color="#2c2c2c" Cursor="HAND" Font="돋움,20,Bold" Height="82" Id="btn_3" ImageID="lo_bt_num_02" Left="312" OnClick="fn_ProcessKey" TabOrder="11" Text="3" Top="232" Width="143"></Button>
		<Checkbox BKColor="#176179" Color="white" Font="돋움,16,Bold" Height="83" Id="cb_save" Left="32" LeftMargin="8" TabOrder="24" Text="&#32;ID/PW&#32;저장" Top="570" Width="165"></Checkbox>
	</Form>
	<Script><![CDATA[/*
 ******************************************************************************************
 * 기      능   : 사용자 로그인 처리
 * 작  성  자   : 김용호
 * 작성  일자   : 2010/01/26
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
 #include "LIB::common.js";	// 공통 스크립트 
 #include "LIB::global.js";	// 공통 스크립트 
//=========================================================================================
// [ PART 1 ]
// Form에서 사용될 전역변수를 선언
// FORM에서 사용되는 전역변수는 대문자로 작성하며, F_XXX 의 형태를 갖도록 한다. 
//=========================================================================================
var F_ObjEdit; //Key 입력을 위한 선택 Edit

//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================
//=========================================================================================
// [ PART 2 ]
// Form Loading / Unloading 시 작업 정의
//=========================================================================================

function login_OnLoadCompleted(obj){
	//SetTimer(1000, 300000); //5분마다 LCD 체크
	tit_CreateActionInfo();
	ds_list.Reset();

	if(getReg("_R_CHK") == "1") {
		cb_save.Value = "1";
	} else {
		cb_save.Value = "0";
	}

	if(!GFN_IsNull(getReg("_R_ID"))){
		ed_userId.Text = getReg("_R_ID");
	}
	
	if(!GFN_IsNull(getReg("_R_PWD"))){
		ed_pwd.Text = getReg("_R_PWD");
	}
}

function fn_completeInit(sCode, sDsObj, sCodeType) {

}

function login_OnTimer(obj,nEventID) {
	/*if(nEventID == 1000) {
		ExecShell("\\HELCO\\HDEL_LCDOff.exe");
		KillTimer(1000);
	}*/
}

function login_OnClick(obj,nX,nY) {
	//SetTimer(1000, 300000); //5분마다 LCD 체크
}

//=========================================================================================
// [ PART 3 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,form닫기)
//=========================================================================================
/********************************************************************************
* 기      능   : 조회 
********************************************************************************/
/********************************************************************************
* 기      능   :  로그인 버튼 선택 
********************************************************************************/
function fn_Login(obj){
	if(length(trim(ed_userId.Text)) <> 7) {
		GFN_ShowAlert(this, "ID를 확인하십시요.");
		return false;
	}

	if(length(trim(ed_pwd.Text)) == 0) {
		GFN_ShowAlert(this, "PW를 확인하십시요.");
		return false;
	}

	tit_CallService(
		"PDALoginAction"
		,""
		,""
		,"ds_login=ds_login gds_auth=gds_auth"
		,"USER_ID="+quote(ed_userId.Text)+ " USER_PW="+quote(ed_pwd.Text)
		,"fn_afterLogin"
	);
}
//=========================================================================================
// [ PART 4]
// Callback 함수 정의 : callback 함수명은 메인 함수의 fn_xxxx() 에서 xxxx 부분은 fn_afterXXXX()
// 형태가 되도록 작성 
//=========================================================================================
/********************************************************************************
* 기      능   :  로그인 Callback 
********************************************************************************/
function fn_afterLogin(errCode, errMsg) {
	//SetTimer(1000, 300000); //5분마다 LCD 체크

	if ( errCode == 0 ) {
		if(ds_login.getRowCount() >0 ){
			// if(ed_pwd != ds_login.getColumn(0, "USER_PWD")){
				// GFN_ShowAlert(this,"CW00005");
				// return;
			// }

			ds_list.SetColumn(0, "USER_ID", ds_login.getColumn(0, "USER_ID"));
			fn_LoginInsert();
			
			// 변수에 넣기 
			GV_USER_ID = ds_login.getColumn(0, "USER_ID");
			GV_LOGINKEY = ds_login.getColumn(0, "GV_LOGINKEY");
			GV_USER_NAME = ds_login.getColumn(0, "USER_NAME");
			GV_VEND_CODE = ds_login.getColumn(0, "VEND_CODE");
			GV_ORGV_VEND_CODE = ds_login.getColumn(0, "VEND_CODE");
			GV_VEND_NAME = ds_login.getColumn(0, "VEND_NAME");
			GV_EMAIL = ds_login.getColumn(0, "EMAIL");
			GV_USER_GROUP = ds_login.getColumn(0, "USER_GROUP");
			GV_USER_GROUP_R = ds_login.getColumn(0, "USER_GROUP_R");
			GV_USER_GROUP_E = ds_login.getColumn(0, "USER_GROUP_E");
			GV_USER_GROUP_M = ds_login.getColumn(0, "USER_GROUP_M");
			GV_USER_GROUP_B = ds_login.getColumn(0, "USER_GROUP_B");
			GV_AREA_CODE = ds_login.getColumn(0, "AREA_CODE");
			GV_AREA_NAME = ds_login.getColumn(0, "AREA_NAME");
			GV_EXPR_DATE = ds_login.getColumn(0, "PWD_EXPR_DATE");	// 비밀번호 만료 일자 
			GV_LOGIN_TIME = ds_login.getColumn(0, "LOGIN_TIME");
			GV_LANG = ds_login.getColumn(0, "LANG");
			GV_MANDT = ds_login.getColumn(0, "MANDT");	// Mandt 설정 
			G_MANDT = ds_login.getColumn(0, "MANDT");	// Mandt 설정 
			GV_SYSTEM = ds_login.getColumn(0, "SYSTEM");	// 시스템 구분 
			GV_LGORT = ds_login.getColumn(0, "LGORT");
	
			// 일주일 전일 경우 
			/*if ( length( GV_EXPR_DATE ) == 8 && 
				gfn_getDayCnt(gfn_getCurrDate(),GV_EXPR_DATE) <= 7 ) {
				if ( gfn_showConfirm("ZI00001",gfn_formatDate(GV_EXPR_DATE, ".")) ) {
					// 비밀번호 변경창 보여주기 
					var sArg = "fa_oldPwd=" + quote(ds_login.getColumn(0, "USER_PWD"));
					gfn_openPopupUrl("WB01::CommPWChangeForm.xml", true, sArg);
				}
			}*/
		}else{
			GFN_ShowAlert(this,"CW00004");
			return;
		}
/*
		if(Confirm("사용자 아이디 및 비밀번호를 저장하시겠습니까?")){
			setReg("_R_ID", ed_userId.Text);
			setReg("_R_PWD", ed_pwd.Text);
		} else {
			setReg("_R_ID", "");
			setReg("_R_PWD", "");
		}
*/

		if(cb_save.Value == "0") {
			setReg("_R_ID", "");
			setReg("_R_PWD", "");
			setReg("_R_CHK", "");
		} else {
			setReg("_R_ID", ed_userId.Text);
			setReg("_R_PWD", ed_pwd.Text);
			setReg("_R_CHK", "1");
		}

		setReg("USER_ID", ed_userId.Text);
		setReg("WORK_FLAG", ds_login.getColumn(0, "WORK_FLAG"));

//		if(FindWindow(null,"HDELGPSM") == false) {
			//ExecShell("\\HELCO\\HDELGPSMMKill.exe");
			//File0.Delete("\\Windows\시작\\HDELGPSMM.exe");
			ExecShell("\\HELCO\\HDELGPSM.exe");
//		}

		var url = "PCC04::Main.xml";
		//var url = "PCC01::PCC0101002A.xml";
		Go(url);
	} else {
		//GFN_ShowAlert(this, "CE00001");
		GFN_ShowAlert(this, "사용자정보를 확인해 주십시요.");
		return;
	}
}

function fn_LoginInsert(){
	tit_clearActionInfo();
	tit_addSelectExActionInfo("pcc04:PCC0401001A_S1", "pcc04:PCC0401001A_I1", "pcc04:PCC0401001A_U1");

	tit_callService(
       ""
       , ""
       , "ds_list=ds_list:A"
       , ""
       , ""
       , "fn_afterLoginInsert");
}

function fn_afterLoginInsert(errCode, errMsg) {
	if(errCode != 0) {
		GFN_ShowAlert(this,"CE00001");
		return;
	}
}

//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
// 사용자 정의 함수는 ufn_xxxx() 형태로 작성 
//=========================================================================================
/********************************************************************************
* 기      능   : 버턴키 처리
********************************************************************************/
function fn_ProcessKey(obj){
	if(F_ObjEdit == null || F_ObjEdit.getType() != "Edit"){
		return;
	}
	
	if(obj.id == "btn_Del"){
		var nPos = F_ObjEdit.getSel();		
		if(length(F_ObjEdit.Text) != nPos[0]){
			F_ObjEdit.Text = F_ObjEdit.Text.SubStr(0,nPos[0]) + F_ObjEdit.Text.SubStr(nPos[0]+1);
		}
		F_ObjEdit.setFocus();
		F_ObjEdit.SetSel(nPos[0],nPos[0]);
	}else if(obj.id == "btn_Back"){
		var nPos = F_ObjEdit.getSel();		
		if(length(F_ObjEdit.Text) != 0){
			F_ObjEdit.Text = F_ObjEdit.Text.SubStr(0,nPos[0]-1) + F_ObjEdit.Text.SubStr(nPos[0]);
		}
		F_ObjEdit.setFocus();
		F_ObjEdit.SetSel(nPos[0]-1,nPos[0]-1);	
	}else{
		if(length(F_ObjEdit.text) < F_ObjEdit.MaxLength){
			F_ObjEdit.Text += right(obj.id,1);
		}
	}
}
//=========================================================================================
// [ PART 6 ]
// component Event 정의 : 각 Component 별 이벤트 
//=========================================================================================
/********************************************************************************
* 기      능   : 사용자 아이디 혹은 비밀번호 구분 설정(버튼키입력을 위해)  
********************************************************************************/
function Edit_OnKillFocus(obj){
	F_ObjEdit = obj;
}

function btn_Exit_OnClick(obj)
{
	exit();
}


function btn_Cancel_OnClick(obj)
{
	ed_userId.Text = "";
	ed_pwd.Text = "";
}
]]></Script>
</Window>