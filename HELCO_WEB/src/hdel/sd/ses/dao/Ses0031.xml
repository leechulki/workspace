<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hdel.sd.ses.dao.Ses0031D">

	<resultMap id="selectListSOMap" type="hdel.sd.ses.domain.Ses0031"> 
	    <result property="mandt" column="MANDT"/>
	    <result property="sonnr" column="SONNR"/>
	    <result property="zpym" column="ZPYM"/>
	    <result property="spart" column="SPART"/>
	    <result property="auart" column="AUART"/>
	    <result property="matnr" column="MATNR"/>
	    <result property="vkbur" column="VKBUR"/>
	    <result property="vkgrp" column="VKGRP"/>
	    <result property="zkunnr" column="ZKUNNR"/>
	    <result property="gtype" column="GTYPE"/>
	    <result property="rtype" column="RTYPE"/>
	    <result property="type1" column="TYPE1"/>
	    <result property="type2" column="TYPE2"/>
	    <result property="type3" column="TYPE3"/>
	    <result property="znumber" column="ZNUMBER"/>
	    <result property="kunnr" column="KUNNR"/>
	    <result property="gsnam" column="GSNAM"/>
	    <result property="region" column="REGION"/>
	    <result property="zdeli" column="ZDELI"/>
	    <result property="shangh" column="SHANGH"/>
	    <result property="zinter" column="ZINTER"/>
	    <result property="sofoca" column="SOFOCA"/>
	    <result property="zfore" column="ZFORE"/>
	    <result property="waerk" column="WAERK"/>
	    <result property="deldat" column="DELDAT"/>
	    <result property="zrmk" column="ZRMK"/>
	    <result property="soable" column="SOABLE"/>
	    <result property="sorlt" column="SORLT"/>
	    <result property="soprice" column="SOPRICE"/>
	    <result property="shang" column="SHANG"/>
	    <result property="zmpflg" column="ZMPFLG"/>
	    <result property="vbeln" column="VBELN"/>
	    <result property="zbpnnr" column="ZBPNNR"/>
	    <result property="cdate" column="CDATE"/>
	    <result property="ctime" column="CTIME"/>
	    <result property="uuser" column="CUSER"/>
	    <result property="udate" column="UDATE"/>
	    <result property="utime" column="UTIME"/>
	    <result property="uuser" column="UUSER"/>
	    <result property="ddate" column="DDATE"/>
	    <result property="dtime" column="DTIME"/>
	    <result property="duser" column="DUSER"/>
	    <result property="fa_byrgbn" column="FA_BYRGBN"/>
	</resultMap>
	
	<select id="selectListSO" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListSOMap">
		SELECT MANDT           -- 클라이언트
		        , SONNR           -- 수주계획번호
		        , ZPYM              -- 계획년월
				, SPART             -- 제품군
				, AUART            -- 판매문서유형
				, MATNR            -- 자재번호
		        , VKBUR             -- 사업장
		        , VKGRP             -- 영업그룹
		        , ZKUNNR          -- 영업사원
		        , GTYPE              -- 대표기종
		        , RTYPE              -- 실기종
		        , TYPE1              -- 타입1
		        , TYPE2              -- 타입2
		        , TYPE3              -- 타입3
		        , ZNUMBER        -- 대수
		        , KUNNR           -- 고객번호
		        , GSNAM           -- 공사명
		        , REGION           -- 지역
				, ZDELI              -- 단납기구분
				, SHANGH          -- 국내/상해구분
		        , ZINTER            -- 중계무역구분
		        , SOFOCA           -- 수주예상액
		        , ZFORE             -- 예상시행율
		        , WAERK            -- 통화
		        , DELDAT           -- 납기예정일
		        , ZRMK             -- 비고
		        , SOABLE           -- 수주가능성
		        , SORLT             -- 수주결과
		        , SOPRICE           -- 수주금액
		        , SHANG            -- 시행율
		        , ZMPFLG           -- 이동계획반영여부
		        , VBELN             -- 판매문서
		        , ZBPNNR           -- 사업계획번호
				, CDATE             -- 입력일
				, CTIME              -- 입력시각
				, CUSER              -- 입력자
				, UDATE             -- 변경일
				, UTIME             -- 변경시각
				, UUSER             -- 변경자
				, DDATE             -- 삭제일
				, DTIME             -- 삭제시각
				, DUSER             -- 삭제자
		FROM SAPHEE.ZSDT1001 -- 수주계획
	   WHERE MANDT = #{mandt}
		  AND SONNR = #{sonnr}
	</select>
	
	<resultMap id="selectListSpecMap" type="hdel.sd.ses.domain.Ses0031">
		<result property="flag"   column="FLAG"   />
	    <result property="mandt" column="MANDT"/>
		<result property="mclass"   column="MCLASS"   />
		<result property="atkla"   column="ATKLA"  />
		<result property="prh"   column="PRH" />
		<result property="prd"   column="PRD"  />
		<result property="atfor"   column="ATFOR"  />
		<result property="prhname"   column="PRHNAME"  />
		<result property="ztplgbn"   column="ZTPLGBN"  />
		<result property="zprdgbn"   column="ZPRDGBN"  />
		<result property="zrmk"   column="ZRMK"  />
		<result property="classgbn"   column="CLASSGBN"  />
	</resultMap>

	<select id="selectListSpec" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListSpecMap">
SELECT *
  FROM (
	SELECT  '' AS FLAG
			, T.MANDT
			, A.ZTPLNO
			, A.ZTPLSEQ
			, T.PRH
			, TRIM(A.PRD) AS PRD
			, A.ZRMK
			, A.CDATE 
			, A.CTIME
			, A.CUSER
			, A.UDATE
			, A.UTIME
			, A.UUSER
			, B.ZTPLGBN AS MCLASS
			, B.ZTPLNM  
			, T.ATKLA
			, T.ATFOR
			, T.PRHNAME
			, T.CNT
			, T.MCLASS AS CLASSGBN
	  FROM TABLE
			  (	
		         SELECT A.MANDT
		              , A.BRNDSEQ
		              , A.ZPRDGBN
		              , A.PRH
		              , B.ATKLA
		              , B.ATFOR
		              , (SELECT ATBEZ FROM SAPHEE.CABNT WHERE MANDT = B.MANDT AND ATINN = B.ATINN AND SPRAS = #{spras}) AS PRHNAME
		              , ( SELECT COUNT(*)
		                  FROM SAPHEE.CAWN
		                 WHERE MANDT = A.MANDT
		                   AND ATINN = B.ATINN  ) AS CNT
		              , A.DISPTP
		              , A.MODITP
		              , A.ZPRDGBN AS MCLASS
		         FROM   SAPHEE.ZSDT1141 AS A
		                INNER JOIN SAPHEE.CABN AS B ON A.MANDT = B.MANDT AND A.PRH = B.ATNAM
		     	        LEFT OUTER JOIN SAPHEE.ZSDT1073 AS C ON C.MANDT = A.MANDT AND C.CLASS = A.ZPRDGBN  AND C.ATNAM = A.PRH
		         WHERE  A.MANDT = #{mandt}
<if test="brndcd == 'NOBRND'">AND   A.BRNDSEQ = '000'</if>
<if test="brndcd != 'NOBRND' ">
AND  A.BRNDSEQ = (
                 SELECT  NVL(MAX(BRNDSEQ),'000') 
                   FROM  SAPHEE.ZSDT1140 
                  WHERE  MANDT = #{mandt}
                    AND  ZPRDGBN = #{zprdgbn} 
                    AND  BRNDCD  = #{brndcd} 
                    AND  (SELECT DECODE(CDATE, '00000000', HEX(CURRENT DATE), CDATE) FROM SAPHEE.ZSDT1060 WHERE MANDT = #{mandt} AND ZTPLNO = #{ztplno}) BETWEEN FRDAT AND TODAT
                 ) 
</if>
		           AND  A.ZPRDGBN = #{zprdgbn}
		           AND  A.BRNDCD  = #{brndcd}
		           AND  A.DISPTP = 'X'
		           AND  A.MODITP = 'X'
		           AND  A.DIPSDAT > HEX(CURRENT DATE)
		           AND  C.ATNAM IS NULL
				) T LEFT OUTER JOIN SAPHEE.ZSDT1061 AS A ON T.PRH   = A.PRH   AND T.MANDT = A.MANDT  AND A.ZTPLNO = #{ztplno}
					LEFT OUTER JOIN SAPHEE.ZSDT1060 AS B ON T.MANDT = B.MANDT AND A.ZTPLNO = B.ZTPLNO AND T.MCLASS = B.ZPRDGBN
		) ResultDt
ORDER BY ResultDt.MCLASS
       , CASE WHEN ResultDt.ATKLA = ' ' THEN '2' || ResultDt.ATKLA ELSE '1' || ResultDt.ATKLA END
       , ResultDt.PRHNAME
	</select>
	
	<select id="selectZsdt1072" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultType="map">
		SELECT ATNAM
			   , ATWRT
		  FROM SAPHEE.ZSDT1072
		 WHERE MANDT = #{mandt}
	</select>
	
	<select id="selectZsdt1073" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultType="map">
		SELECT ATNAM
			   , CLASS
		  FROM SAPHEE.ZSDT1073
		 WHERE MANDT = #{mandt}
	</select>
	
	<resultMap id="selectListTemplateMap" type="hdel.sd.ses.domain.Ses0031"> 
	    <result property="ztplno" column="ZTPLNO"/>
	</resultMap>
	
	<resultMap id="selectListQtserMap" type="hdel.sd.ses.domain.Ses0031"> 
	    <result property="qtser" column="QTSER"/>
	</resultMap>

	<select id="selectListQtser" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListQtserMap">
		SELECT VALUE(MAX(QTSER)+1, 1) AS QTSER
		 FROM SAPHEE.ZSDT1046
		WHERE MANDT = #{mandt}
		  AND QTNUM = #{qtnum}
	</select>
	
	<update id="mergeHeader" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		MERGE INTO SAPHEE.ZSDT1046 AS T1
		USING ( SELECT  CAST(#{mandt}  AS VARCHAR(9)) AS MANDT
							, CAST(#{qtnum} AS VARCHAR(30)) AS QTNUM
							, CAST(#{qtser}   AS SMALLINT) AS QTSER
					 FROM SYSIBM.SYSDUMMY1
				 ) AS T2 ON T1.MANDT = T2.MANDT
						 AND T1.QTNUM = T2.QTNUM
						 AND T1.QTSER   = T2.QTSER
		WHEN MATCHED THEN
				UPDATE SET T1.QTDAT            = #{qtdat}
							  , T1.AUART            = #{auart}
							  , T1.SPART             = #{spart}
							  , T1.QTGBN            = #{qtgbn}
							  , T1.ZBDTYP            = #{zbdtyp}
							  , T1.ZPRGFLG           = #{zprgflg}
							  , T1.VKBUR             = #{vkbur}
							  , T1.VKGRP             = #{vkgrp}
							  , T1.ZKUNNR          = #{zkunnr}
							  , T1.ZAGNT            = #{zagnt}
							  , T1.KUNNR            = CHAR(REPEAT('0', 10 - LENGTH(TRIM(#{kunnr}||''))) || TRIM(#{kunnr}||''))
							  , T1.ZCST               = #{zcst}
							  , T1.ZGNM             = #{zgnm}
							  , T1.ZDEV               = #{zdev}
							  , T1.GSNAM            = #{gsnam}
							  , T1.ZREGN             = #{zregn}
							  , T1.ZPID                = #{zpid}
							  , T1.ZTEL                = #{ztel}
							  , T1.ZADDR_ZPOST    = #{zaddr_zpost}
							  , T1.ZADDR_ADR1     = #{zaddr_adr1}
							  , T1.ZADDR_ADR2     = #{zaddr_adr2}
							  , T1.SOABLE            = #{soable}
							  , T1.ZESTDAT           = #{zestdat}
							  , T1.DELDAT            = #{deldat}
							  , T1.ZDVMTS           = #{zdvmts}
							  , T1.ZSUM_ZNUMBER = #{zsum_znumber}
							  , T1.ZSUM_ZCOST      = #{zsum_zcost}
							  , T1.ZSUM_ZEAM       = #{zsum_zeam}
							  , T1.ZSUM_SHANG      = #{zsum_shang}
							  , T1.INCO                 = #{inco}
							  , T1.ZICIF_PPRT          = #{zicif_pprt}
							  , T1.ZICIF_PPCT          = #{zicif_ppct}
							  , T1.ZICIF_PPCD          = #{zicif_ppcd}
							  , T1.ZICIF_1STRT         = #{zicif_1strt}
							  , T1.ZICIF_1STCT         = #{zicif_1stct}
							  , T1.ZICIF_1STCD         = #{zicif_1stcd}
							  , T1.ZICIF_2STRT         = #{zicif_2strt}
							  , T1.ZICIF_2STCT         = #{zicif_2stct}
							  , T1.ZICIF_2STCD         = #{zicif_2stcd}
							  , T1.ZICIF_RMRT         = #{zicif_rmrt}
							  , T1.ZICIF_RMCT         = #{zicif_rmct}
							  , T1.ZICIF_RMCD         = #{zicif_rmcd}
							  , T1.SPRMK1             = #{sprmk1}
							  , T1.SPRMK2             = #{sprmk2}
							  , T1.SPRMK3             = #{sprmk3}
							  , T1.SPRMK4             = #{sprmk4}
							  , T1.SPRMK5             = #{sprmk5}
							  , T1.SPRMK6             = #{sprmk6}
							  , T1.SPRMK7             = #{sprmk7}
							  , T1.SPRMK8             = #{sprmk8}
							  , T1.SPRMK9             = #{sprmk9}
							  , T1.SPRMK10            = #{sprmk10}
							  , T1.ZSOFLG              = #{zsoflg}
							  , T1.SONNR              = #{sonnr}
							  , T1.VBELN               = #{vbeln}
							  , T1.WAERK              = #{waerk}
							  , T1.CO_DDVRTQ        = #{co_ddvrtq}
							  , T1.CO_DEPHTQ        = #{co_dephtq}
							  , T1.CO_DSSQ           = #{co_dssq}
							  , T1.CO_BCLCDTQ       = #{co_bclcdtq}
							  , T1.CO_CHPITQ         = #{co_chpitq}
							  , T1.CO_ASPC            = #{co_aspc}
							  , T1.CO_DSV1            = #{co_dsv1}
							  , T1.CO_DSV1TQ         = #{co_dsv1tq}
							  , T1.CO_DSV2            = #{co_dsv2}
							  , T1.CO_DSV2TQ         = #{co_dsv2tq}
							  , T1.ZLZONE              = #{zlzone}
							  , T1.REGION              = #{region}
							  , T1.UDATE               = HEX(CURRENT DATE)
							  , T1.UTIME               = HEX(CURRENT TIME)
							  , T1.UUSER               = #{uuser}
							  , T1.ZAGNTFLG          = #{zagntflg}
 							  , T1.INCO2             = NVL((CASE WHEN #{egisFlag} = 'X'
 							                                 THEN NVL((SELECT PORTNAME
	 							                                       FROM SAPHEE.ZSDT1130
	 							                                       WHERE 1=1
	 							                                       AND MANDT = #{mandt}
	 							                                       AND DESTPORT = #{destport}
	 							                                       AND LAND1 IN (SELECT LAND1
		 							                                                     FROM SAPHEE.KNA1
		 							                                                     WHERE 1=1
		 							                                                     AND MANDT = #{mandt}
		 							                                                     AND KUNNR = CHAR(REPEAT('0', 10 - LENGTH(TRIM(#{kunnr}||''))) || TRIM(#{kunnr}||''))
	 							                                                     )
 							                                       ),'')
 							                                 ELSE  #{inco2} 
 							                             END ),'') 
							  , T1.FA_BYRGBN         = #{fa_byrgbn}
							  , T1.ZDELI                 = #{zdeli}
							  , T1.JGBN                 = #{jgbn}
							  , T1.AQTNUM                 = #{aqtnum}
							  , T1.OPPID                 = #{oppid}
							  , T1.AUTOLP                 = #{autolp}
		WHEN NOT MATCHED THEN
				INSERT ( MANDT
						  , QTNUM
						  , QTSER
						  , QTDAT
						  , AUART
						  , SPART
						  , QTGBN
						  , ZBDTYP
						  , ZPRGFLG
						  , VKBUR
						  , VKGRP
						  , ZKUNNR
						  , ZAGNT
						  , KUNNR
						  , ZCST
						  , ZGNM
						  , ZDEV
						  , GSNAM
						  , ZREGN
						  , ZPID
						  , ZTEL
						  , ZADDR_ZPOST
						  , ZADDR_ADR1
						  , ZADDR_ADR2
						  , SOABLE
						  , ZESTDAT
						  , DELDAT
						  , ZDVMTS
						  , ZSUM_ZNUMBER
						  , ZSUM_ZCOST
						  , ZSUM_ZEAM
						  , ZSUM_SHANG
						  , INCO
						  , ZICIF_PPRT
						  , ZICIF_PPCT
						  , ZICIF_PPCD
						  , ZICIF_1STRT
						  , ZICIF_1STCT
						  , ZICIF_1STCD
						  , ZICIF_2STRT
						  , ZICIF_2STCT
						  , ZICIF_2STCD
						  , ZICIF_RMRT
						  , ZICIF_RMCT
						  , ZICIF_RMCD
						  , SPRMK1
						  , SPRMK2
						  , SPRMK3
						  , SPRMK4
						  , SPRMK5
						  , SPRMK6
						  , SPRMK7
						  , SPRMK8
						  , SPRMK9
						  , SPRMK10
						  , ZSOFLG
						  , SONNR
						  , VBELN
						  , WAERK
						  , CO_DDVRTQ
						  , CO_DEPHTQ
						  , CO_DSSQ
						  , CO_BCLCDTQ
						  , CO_CHPITQ
						  , CO_ASPC
						  , CO_DSV1
						  , CO_DSV1TQ
						  , CO_DSV2
						  , CO_DSV2TQ
						  , CDATE
						  , CTIME
						  , CUSER
						  , ZLZONE
						  , REGION
						  , ZAGNTFLG
						  , INCO2
						  , FA_BYRGBN
						  , ZDELI
						  , JGBN
						  , AQTNUM
						  , OPPID
						  , AUTOLP
						  ) VALUES (
						   #{mandt}
						  , #{qtnum}
						  , #{qtser}
						  , #{qtdat}
						  , #{auart}
						  , #{spart}
						  , #{qtgbn}
						  , #{zbdtyp}
						  , #{zprgflg}
						  , #{vkbur}
						  , #{vkgrp}
						  , #{zkunnr}
						  , #{zagnt}
						  , CHAR(REPEAT('0', 10 - LENGTH(TRIM(#{kunnr}||''))) || TRIM(#{kunnr}||''))
						  , #{zcst}
						  , #{zgnm}
						  , #{zdev}
						  , #{gsnam}
						  , #{zregn}
						  , #{zpid}
						  , #{ztel}
						  , #{zaddr_zpost}
						  , #{zaddr_adr1}
						  , #{zaddr_adr2}
						  , #{soable}
						  , #{zestdat}
						  , #{deldat}
						  , #{zdvmts}
						  , #{zsum_znumber}
						  , #{zsum_zcost}
						  , #{zsum_zeam}
						  , #{zsum_shang}
						  , #{inco}
						  , #{zicif_pprt}
						  , #{zicif_ppct}
						  , #{zicif_ppcd}
						  , #{zicif_1strt}
						  , #{zicif_1stct}
						  , #{zicif_1stcd}
						  , #{zicif_2strt}
						  , #{zicif_2stct}
						  , #{zicif_2stcd}
						  , #{zicif_rmrt}
						  , #{zicif_rmct}
						  , #{zicif_rmcd}
						  , #{sprmk1}
						  , #{sprmk2}
						  , #{sprmk3}
						  , #{sprmk4}
						  , #{sprmk5}
						  , #{sprmk6}
						  , #{sprmk7}
						  , #{sprmk8}
						  , #{sprmk9}
						  , #{sprmk10}
						  , #{zsoflg}
						  , #{sonnr}
						  , #{vbeln}
						  , #{waerk}
	 					  , #{co_ddvrtq}
						  , #{co_dephtq}
						  , #{co_dssq}
						  , #{co_bclcdtq}
						  , #{co_chpitq}
						  , #{co_aspc}
						  , #{co_dsv1}
						  , #{co_dsv1tq}
						  , #{co_dsv2}
						  , #{co_dsv2tq}
						  , HEX(CURRENT DATE)
						  , HEX(CURRENT TIME)
						  , #{cuser}
						  , #{zlzone}
						  , #{region}
						  , #{zagntflg}
 						  , NVL((CASE WHEN #{egisFlag} = 'X'
 							          THEN NVL((SELECT PORTNAME
	 						                    FROM SAPHEE.ZSDT1130
	 						                    WHERE 1=1
	 						                    AND MANDT = #{mandt}
	 						                    AND DESTPORT = #{destport}
	 						                    AND LAND1 IN (SELECT LAND1
		 					                                      FROM SAPHEE.KNA1
		 					                                      WHERE 1=1
		 					                                      AND MANDT = #{mandt}
		 					                                      AND KUNNR = CHAR(REPEAT('0', 10 - LENGTH(TRIM(#{kunnr}||''))) || TRIM(#{kunnr}||''))
	 						                                   )
 							                 ),'')
 							          ELSE  #{inco2} 
 							END ),'')
						  , #{fa_byrgbn}
						  , #{zdeli}
						  , #{jgbn}
						  , #{aqtnum}
						  , #{oppid}
						  , #{autolp}
						  )
	</update>

	<delete id="deleteHeader" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZSDT1046
		 WHERE MANDT = #{mandt}
			AND QTNUM = #{qtnum}
			AND QTSER   = #{qtser}
	</delete>

	<insert id="addHeader" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		INSERT INTO SAPHEE.ZSDT1046 ( MANDT
									, QTNUM
									, QTSER
									, QTDAT
									, AUART
									, SPART
									, QTGBN
									, ZBDTYP
									, ZPRGFLG
									, VKBUR
									, VKGRP
									, ZKUNNR
									, ZAGNT
									, KUNNR
									, ZCST
									, ZGNM
									, ZDEV
									, GSNAM
									, ZREGN
									, ZPID
									, ZTEL
									, ZADDR_ZPOST
									, ZADDR_ADR1
									, ZADDR_ADR2
									, SOABLE
									, ZESTDAT
									, DELDAT
									, ZDVMTS
									, ZSUM_ZNUMBER
									, ZSUM_ZCOST
									, ZSUM_ZEAM
									, ZSUM_SHANG
									, INCO
									, ZICIF_PPRT
									, ZICIF_PPCT
									, ZICIF_PPCD
									, ZICIF_1STRT
									, ZICIF_1STCT
									, ZICIF_1STCD
									, ZICIF_2STRT
									, ZICIF_2STCT
									, ZICIF_2STCD
									, ZICIF_RMRT
									, ZICIF_RMCT
									, ZICIF_RMCD
									, SPRMK1
									, SPRMK2
									, SPRMK3
									, SPRMK4
									, SPRMK5
									, SPRMK6
									, SPRMK7
									, SPRMK8
									, SPRMK9
									, SPRMK10
									, ZSOFLG
									, SONNR
									, VBELN
									, WAERK
									, CO_DDVRTQ
									, CO_DEPHTQ
									, CO_DSSQ
									, CO_BCLCDTQ
									, CO_CHPITQ
									, CO_ASPC
									, CO_DSV1
									, CO_DSV1TQ
									, CO_DSV2
									, CO_DSV2TQ
									, CDATE
									, CTIME
									, CUSER
									, ZLZONE
									, REGION
									, ZAGNTFLG
									, INCO2
									, FA_BYRGBN
									, ZDELI
									)
		SELECT MANDT
				, QTNUM
				,  CAST(#{max_qtser}   AS SMALLINT    ) AS QTSER 
/*
				, ( SELECT VALUE(MAX(QTSER)+1, 1)
					FROM SAPHEE.ZSDT1046
				  WHERE MANDT = #{mandt}
					 AND QTNUM = #{qtnum} )	AS QTSER
*/					 
				, QTDAT
				, AUART
				, SPART
				, QTGBN
				, ZBDTYP
				, '20' AS ZPRGFLG
				, VKBUR
				, VKGRP
				, ZKUNNR
				, ZAGNT
				, KUNNR
				, ZCST
				, ZGNM
				, ZDEV
				, GSNAM
				, ZREGN
				, ZPID
				, ZTEL
				, ZADDR_ZPOST
				, ZADDR_ADR1
				, ZADDR_ADR2
				, SOABLE
				, ZESTDAT
				, DELDAT
				, ZDVMTS
				, ZSUM_ZNUMBER
				, ZSUM_ZCOST
				, ZSUM_ZEAM
				, ZSUM_SHANG
				, INCO
				, ZICIF_PPRT
				, ZICIF_PPCT
				, ZICIF_PPCD
				, ZICIF_1STRT
				, ZICIF_1STCT
				, ZICIF_1STCD
				, ZICIF_2STRT
				, ZICIF_2STCT
				, ZICIF_2STCD
				, ZICIF_RMRT
				, ZICIF_RMCT
				, ZICIF_RMCD
				, SPRMK1
				, SPRMK2
				, SPRMK3
				, SPRMK4
				, SPRMK5
				, SPRMK6
				, SPRMK7
				, SPRMK8
				, SPRMK9
				, SPRMK10
				, ZSOFLG
				, SONNR
				, VBELN
				, WAERK
				, CO_DDVRTQ
				, CO_DEPHTQ
				, CO_DSSQ
				, CO_BCLCDTQ
				, CO_CHPITQ
				, CO_ASPC
				, CO_DSV1
				, CO_DSV1TQ
				, CO_DSV2
				, CO_DSV2TQ
				, HEX(CURRENT DATE)              AS CDATE
				, HEX(CURRENT TIME)               AS CTIME
				, CAST(#{cuser} AS VARCHAR(30)) AS CUSER
				, ZLZONE
				, REGION
				, ZAGNTFLG
				, INCO2
				, FA_BYRGBN
				, ZDELI
		 FROM SAPHEE.ZSDT1046
	    WHERE MANDT = #{mandt}
		  AND QTNUM = #{qtnum}
		  AND QTSER = #{qtser}
	</insert>

	<insert id="insertQtserZsdt1046" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		INSERT INTO SAPHEE.ZSDT1046 ( MANDT
									, QTNUM
									, QTSER
									, QTDAT
									, AUART
									, SPART
									, QTGBN
									, ZBDTYP
									, ZPRGFLG
									, VKBUR
									, VKGRP
									, ZKUNNR
									, ZAGNT
									, KUNNR
									, ZCST
									, ZGNM
									, ZDEV
									, GSNAM
									, ZREGN
									, ZPID
									, ZTEL
									, ZADDR_ZPOST
									, ZADDR_ADR1
									, ZADDR_ADR2
									, SOABLE
									, ZESTDAT
									, DELDAT
									, ZDVMTS
									, ZSUM_ZNUMBER
									, ZSUM_ZCOST
									, ZSUM_ZEAM
									, ZSUM_SHANG
									, INCO
									, ZICIF_PPRT
									, ZICIF_PPCT
									, ZICIF_PPCD
									, ZICIF_1STRT
									, ZICIF_1STCT
									, ZICIF_1STCD
									, ZICIF_2STRT
									, ZICIF_2STCT
									, ZICIF_2STCD
									, ZICIF_RMRT
									, ZICIF_RMCT
									, ZICIF_RMCD
									, SPRMK1
									, SPRMK2
									, SPRMK3
									, SPRMK4
									, SPRMK5
									, SPRMK6
									, SPRMK7
									, SPRMK8
									, SPRMK9
									, SPRMK10
									, ZSOFLG
									, VBELN
									, WAERK
									, CO_DDVRTQ
									, CO_DEPHTQ
									, CO_DSSQ
									, CO_BCLCDTQ
									, CO_CHPITQ
									, CO_ASPC
									, CO_DSV1
									, CO_DSV1TQ
									, CO_DSV2
									, CO_DSV2TQ
									, CDATE
									, CTIME
									, CUSER
									, ZLZONE
									, REGION
									, ZAGNTFLG
									, INCO2
									, FA_BYRGBN
									, ZDELI
									)
		SELECT MANDT
				, QTNUM
				, CAST(#{max_qtser}   AS SMALLINT    ) AS QTSER
				, QTDAT
				, AUART
				, SPART
				, QTGBN
				, ZBDTYP
				, CASE SUBSTR(AUART,3,2) 
				    WHEN '02' THEN
				       CASE 
					     WHEN CAST(ZPRGFLG AS INT) &lt;  25
			   			    THEN '20'
						  ELSE '25'
					   END 
				    ELSE '20' 
				  END AS ZPRGFLG_1 			
				, VKBUR
				, VKGRP
				, ZKUNNR
				, ZAGNT
				, KUNNR
				, ZCST
				, ZGNM
				, ZDEV
				, GSNAM
				, ZREGN
				, ZPID
				, ZTEL
				, ZADDR_ZPOST
				, ZADDR_ADR1
				, ZADDR_ADR2
				, SOABLE
				, ZESTDAT
				, DELDAT
				, ZDVMTS
				, ZSUM_ZNUMBER
				, 0 AS ZSUM_ZCOST
				, 0 AS ZSUM_ZEAM
				, 0 AS ZSUM_SHANG
				, INCO
				, ZICIF_PPRT
				, ZICIF_PPCT
				, ZICIF_PPCD
				, ZICIF_1STRT
				, ZICIF_1STCT
				, ZICIF_1STCD
				, ZICIF_2STRT
				, ZICIF_2STCT
				, ZICIF_2STCD
				, ZICIF_RMRT
				, ZICIF_RMCT
				, ZICIF_RMCD
				, SPRMK1
				, SPRMK2
				, SPRMK3
				, SPRMK4
				, SPRMK5
				, SPRMK6
				, SPRMK7
				, SPRMK8
				, SPRMK9
				, SPRMK10
				, ZSOFLG
				, VBELN
				, WAERK
				, CO_DDVRTQ
				, CO_DEPHTQ
				, CO_DSSQ
				, CO_BCLCDTQ
				, CO_CHPITQ
				, CO_ASPC
				, CO_DSV1
				, CO_DSV1TQ
				, CO_DSV2
				, CO_DSV2TQ
				, HEX(CURRENT DATE)             AS CDATE
				, HEX(CURRENT TIME)             AS CTIME
				, CAST(#{cuser} AS VARCHAR(30)) AS CUSER
				, ZLZONE
				, REGION
				, ZAGNTFLG
				, INCO2
				, FA_BYRGBN
				, ZDELI
		 FROM SAPHEE.ZSDT1046
	    WHERE MANDT = #{mandt}
		  AND QTNUM = #{qtnum}
		  AND QTSER = #{qtser}
	</insert>

	<update id="updateHeader" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		MERGE INTO SAPHEE.ZSDT1046 AS T1
		USING ( SELECT    CAST(#{mandt}  AS VARCHAR(9))  AS MANDT
						, CAST(#{qtnum}  AS VARCHAR(30)) AS QTNUM
						, CAST(#{qtser}  AS SMALLINT)    AS QTSER
						, VALUE(SUM(ZNUMBER), 0)         AS ZSUM_ZNUMBER
						, VALUE(SUM(ZCOST),   0)         AS ZSUM_ZCOST
						, VALUE(SUM(ZEAM),    0)         AS ZSUM_ZEAM
						, CASE WHEN VALUE(SUM(ZEAM),  0) = 0 THEN 0
							   WHEN VALUE(SUM(ZEAM),  0) != 0 AND VALUE(SUM(ZCOST), 0) * 100.00 / VALUE(SUM(ZEAM), 0) > 999 THEN 999
			  				   ELSE ROUND(VALUE(SUM(ZCOST), 0) * 100.00 / VALUE(SUM(ZEAM), 0), 1) END AS ZSUM_SHANG
					 FROM SAPHEE.ZSDT1047
					WHERE MANDT = #{mandt}
					  AND QTNUM	= #{qtnum}
					  AND QTSER = #{qtser}
				 ) AS T2 ON T1.MANDT = T2.MANDT
						AND T1.QTNUM = T2.QTNUM
						AND T1.QTSER = T2.QTSER
	
		WHEN MATCHED THEN
				UPDATE SET  T1.UUSER        = #{uuser}
						  , T1.ZSUM_ZNUMBER = T2.ZSUM_ZNUMBER
						  , T1.ZSUM_ZCOST   = T2.ZSUM_ZCOST
						  , T1.ZSUM_ZEAM    = T2.ZSUM_ZEAM
						  , T1.ZSUM_SHANG   = T2.ZSUM_SHANG
						  , T1.UDATE        = HEX(CURRENT DATE)
						  , T1.UTIME        = HEX(CURRENT TIME)
						  <if test="zprgflg != null and zprgflg != '' "> , T1.ZPRGFLG = #{zprgflg} </if>
						  <if test="qtdat   != null and qtdat   != '' "> , T1.QTDAT   = #{qtdat}   </if>
	
		WHEN NOT MATCHED THEN
				INSERT ( MANDT
						  , QTNUM
						  , QTSER
						  , ZSUM_ZNUMBER
						  , ZSUM_ZCOST
						  , ZSUM_ZEAM
						  , ZSUM_SHANG
						  , CDATE
						  , CTIME
						  , CUSER
						  ) VALUES (
						    #{mandt}
						  , #{qtnum}
						  , #{qtser}
						  , T2.ZSUM_ZNUMBER
						  , T2.ZSUM_ZCOST
						  , T2.ZSUM_ZEAM
						  , T2.ZSUM_SHANG
						  , HEX(CURRENT DATE)
						  , HEX(CURRENT TIME)
						  , #{cuser}
						  )
	</update>
  
	<update id="mergeDetail" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		MERGE INTO SAPHEE.ZSDT1047 AS T1
		USING ( SELECT  CAST(#{mandt}  AS VARCHAR(9)) AS MANDT
							, CAST(#{qtnum} AS VARCHAR(30)) AS QTNUM
							, CAST(#{qtser}   AS SMALLINT) AS QTSER
							, CAST(#{qtseq}  AS SMALLINT) AS QTSEQ
					 FROM SYSIBM.SYSDUMMY1
				 ) AS T2 ON T1.MANDT = T2.MANDT
						 AND T1.QTNUM = T2.QTNUM
						 AND T1.QTSER   = T2.QTSER
						 AND T1.QTSEQ   = T2.QTSEQ
	
		WHEN MATCHED THEN
				UPDATE SET	T1.SHANGH  = #{shangh}
							  , 	T1.ZSAREA   = #{zsarea}
							  , T1.MATNR    = #{matnr}
							  , T1.ZPRDGBN = #{zprdgbn}
							  , T1.SPEC        = #{spec}
							  , T1.GTYPE      = #{gtype}
							  , T1.TYPE1      = #{type1}
							  , T1.TYPE2      = #{type2}
							  , T1.TYPE3      = #{type3}
							  , T1.ZNUMBER = #{znumber}
							  , T1.ZACAPA   = #{zacapa}
							  , T1.ZUSE       = #{zuse}
							  , T1.ZOPN      = #{zopn}
							  , T1.ZLEN       = #{zlen}
							  , T1.ZOUTC     = #{zoutc}
							  , T1.ZUAM      = #{zuam}
							  , T1.ZUAMS      = #{zuams}		-- 상해단가 추가  - 신미정 2014.05.27 정동명CJ 요청
							  , T1.ZURATE      = #{zurate}							  							  
							  , T1.ZCOST      = #{zcost}
							  , T1.ZCOSTM   = #{zcostm}
							  , T1.ZEAM      = #{zeam}
							  , T1.SHANG     = #{shang}
							  , T1.ZRMK      = #{zrmk}
							  , T1.SONNR    = #{sonnr}
							  , T1.UDATE     = HEX(CURRENT DATE)
							  , T1.UTIME     = HEX(CURRENT TIME)
							  , T1.UUSER     = #{uuser}
	
		WHEN NOT MATCHED THEN
				INSERT ( MANDT
						  , QTNUM
						  , QTSER
						  , QTSEQ
						  , SHANGH
						  , ZSAREA           -- 판매지역
						  , MATNR
						  , ZPRDGBN         -- 
						  , SPEC
						  , GTYPE
						  , TYPE1
						  , TYPE2
						  , TYPE3
						  , ZNUMBER
						  , ZACAPA           -- 용량
						  , ZUSE
						  , ZOPN
						  , ZLEN
						  , ZOUTC             -- 
						  , ZUAM
						  , ZUAMS			  -- 상해단가 추가  - 신미정 2014.05.27 정동명CJ 요청	
						  , ZURATE						  						  
						  , ZCOST
						  , ZCOSTM           -- 
						  , ZEAM
						  , SHANG
						  , ZRMK
						  , SONNR
						  , CDATE
						  , CTIME
						  , CUSER
						  ) VALUES (
						   #{mandt}
						  , #{qtnum}
						  , #{qtser}
						  , #{qtseq}
						  , #{shangh}
						  , #{zsarea}
						  , #{matnr}
						  , #{zprdgbn}
						  , #{spec}
						  , #{gtype}
						  , #{type1}
						  , #{type2}
						  , #{type3}
						  , #{znumber}
						  , #{zacapa}
						  , #{zuse}
						  , #{zopn}
						  , #{zlen}
						  , #{zoutc}
						  , #{zuam}
						  , #{zuams} -- 상해단가 추가  - 신미정 2014.05.27 정동명CJ 요청
						  , #{zurate}						  
						  , #{zcost}
						  , #{zcostm}
						  , #{zeam}
						  , #{shang}
						  , #{zrmk}
						  , #{sonnr}
						  , HEX(CURRENT DATE)
						  , HEX(CURRENT TIME)
						  , #{cuser}
						  )
	</update>

	<delete id="deleteDetail" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZSDT1047
		 WHERE MANDT = #{mandt}
			AND QTNUM = #{qtnum}
			AND QTSER   = #{qtser}
			AND QTSEQ   = #{qtseq}
	</delete>

	<delete id="deleteQtserZsdt1047" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZSDT1047
		 WHERE MANDT = #{mandt}
		   AND QTNUM = #{qtnum}
		   AND QTSER = #{qtser}
	</delete>

	<insert id="addDetail" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		INSERT INTO SAPHEE.ZSDT1047 (  MANDT
									, QTNUM
									, QTSER
									, QTSEQ
									, SHANGH
									, ZSAREA
									, MATNR
									, ZPRDGBN
									, SPEC
									, GTYPE
									, TYPE1
									, TYPE2
									, TYPE3
									, ZNUMBER
									, ZACAPA
									, ZUSE
									, ZOPN
									, ZLEN
									, ZOUTC
									, ZUAM
									, ZUAMS		 -- 상해단가 추가  - 신미정 2014.05.27 정동명CJ 요청
									, ZURATE																	
									, ZCOST
									, ZCOSTM
									, ZEAM
									, SHANG
									, ZRMK
									, SONNR
									, CDATE
									, CTIME
									, CUSER
									)
		SELECT MANDT
				, QTNUM
				, ( SELECT VALUE(MAX(QTSER)+1, 1)
					FROM SAPHEE.ZSDT1047
				  WHERE MANDT = #{mandt}
					 AND QTNUM = #{qtnum} )	AS QTSER
				, QTSEQ
				, SHANGH
				, ZSAREA
				, MATNR
				, ZPRDGBN
				, SPEC
				, GTYPE
				, TYPE1
				, TYPE2
				, TYPE3
				, ZNUMBER
				, ZACAPA
				, ZUSE
				, ZOPN
				, ZLEN
				, ZOUTC
				, ZUAM		
				, ZUAMS		-- 상해단가 추가  - 신미정 2014.05.27 정동명CJ 요청
				, ZURATE						
				, ZCOST
				, ZCOSTM 
				, ZEAM
				, SHANG
				, ZRMK
				, SONNR
				, HEX(CURRENT DATE)              AS CDATE
				, HEX(CURRENT TIME)               AS CTIME
				, CAST(#{cuser} AS VARCHAR(30)) AS CUSER
		 FROM SAPHEE.ZSDT1047
	    WHERE MANDT = #{mandt}
		  AND QTNUM	= #{qtnum}
		  AND QTSER = #{qtser}
	</insert>

	<insert id="insertQtserZsdt1047" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		INSERT INTO SAPHEE.ZSDT1047 (  MANDT
									, QTNUM
									, QTSER
									, QTSEQ
									, SHANGH
									, ZSAREA
									, MATNR
									, ZPRDGBN
									, SPEC
									, GTYPE
									, TYPE1
									, TYPE2
									, TYPE3
									, ZNUMBER
									, ZACAPA
									, ZUSE
									, ZOPN
									, ZLEN
									, ZOUTC
									, ZUAM
									, ZUAMS		-- 상해단가 추가  - 신미정 2014.05.27 정동명CJ 요청
									, ZURATE																		
									, ZCOST
									, ZCOSTM
									, ZEAM
									, SHANG
									, ZRMK
									, SONNR
									, CDATE
									, CTIME
									, CUSER
									)
		SELECT MANDT
			, QTNUM
			, CAST(#{max_qtser}   AS SMALLINT    ) AS QTSER
			, QTSEQ
			, SHANGH
			, ZSAREA
			, MATNR
			, ZPRDGBN
			, SPEC
			, GTYPE
			, TYPE1
			, TYPE2
			, TYPE3
			, ZNUMBER
			, ZACAPA
			, ZUSE
			, ZOPN
			, ZLEN
			, ZOUTC
			, CASE SUBSTR(MATNR,1,1) WHEN 'Y' THEN ZUAM ELSE 0 END AS ZUAM    -- 0 AS ZUAM
			, CASE SUBSTR(MATNR,1,1) WHEN 'Y' THEN ZUAMS ELSE 0 END AS ZUAMS    -- 0 AS ZUAMS
			, CASE SUBSTR(MATNR,1,1) WHEN 'Y' THEN ZURATE ELSE 0 END AS ZURATE    -- 0 AS ZURATE					
			, CASE SUBSTR(MATNR,1,1) WHEN 'Y' THEN ZCOST ELSE 0 END AS ZCOST  -- 0 AS ZCOST
			, ZCOSTM 
			, CASE SUBSTR(MATNR,1,1) WHEN 'Y' THEN ZEAM ELSE 0 END AS ZEAM    -- 0 AS ZEAM
			, CASE SUBSTR(MATNR,1,1) WHEN 'Y' THEN SHANG ELSE 0 END AS SHANG  -- 0 AS SHANG
			, ZRMK
			, SONNR
			, HEX(CURRENT DATE)              AS CDATE
			, HEX(CURRENT TIME)               AS CTIME
			, CAST(#{cuser} AS VARCHAR(30)) AS CUSER
		 FROM SAPHEE.ZSDT1047
	    WHERE MANDT = #{mandt}
		  AND QTNUM	= #{qtnum}
		  AND QTSER = #{qtser}
	</insert>

	<update id="updateDetail" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT1047
			  SET    ZUAM = #{zuam}
				  , ZCOST = CAST(#{zuam} AS DECIMAL(15,2)) *  VALUE(ZNUMBER, 0)
				  , SHANG = CASE WHEN ZEAM = 0 THEN 0
			  		  		 	 WHEN ZEAM != 0 AND CAST(#{zuam} AS DECIMAL(15,2)) * VALUE(ZNUMBER, 0) * 100.00 / ZEAM > 999 THEN 999
				  				 ELSE ROUND(CAST(#{zuam} AS DECIMAL(15,2)) * VALUE(ZNUMBER, 0) * 100.00, 1) / ZEAM END
				  , UDATE = HEX(CURRENT DATE)
				  , UTIME = HEX(CURRENT TIME)
				  , UUSER = #{uuser}
	    WHERE MANDT = #{mandt}
		  AND QTNUM	= #{qtnum}
		  AND QTSER = #{qtser}
		  AND QTSEQ = #{qtseq}
	</update>

	<update id="mergeTemplate" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		MERGE INTO SAPHEE.ZSDT1048 AS T1
		USING ( SELECT  CAST(#{mandt}  AS VARCHAR(9) ) AS MANDT
							, CAST(#{qtnum} AS VARCHAR(30)) AS QTNUM
							, CAST(#{qtser}   AS SMALLINT    ) AS QTSER
							, CAST(#{qtseq}  AS SMALLINT    ) AS QTSEQ
							, CAST(#{prseq}  AS SMALLINT    ) AS PRSEQ
							, CAST(#{prh}    AS VARCHAR(45) ) AS PRH
					 FROM SYSIBM.SYSDUMMY1
				 ) AS T2 ON T1.MANDT = T2.MANDT
						 AND T1.QTNUM = T2.QTNUM
						 AND T1.QTSER   = T2.QTSER
						 AND T1.QTSEQ   = T2.QTSEQ
						 AND T1.PRH      = T2.PRH
	
		WHEN MATCHED THEN
				UPDATE SET	T1.PRH    = #{prh}
							  , T1.PRD    = #{prd}
							  , T1.ETCH   = #{etch}
							  , T1.ETCM  = #{etcm}
							  , T1.ZRMK = #{zrmk}
							  , T1.UDATE = HEX(CURRENT DATE)
							  , T1.UTIME = HEX(CURRENT TIME)
							  , T1.UUSER = #{uuser}
	
		WHEN NOT MATCHED THEN
				INSERT ( MANDT
						  , QTNUM
						  , QTSER
						  , QTSEQ
						  , PRSEQ
						  , PRH
						  , PRD
						  , ETCH
						  , ETCM
						  , ZRMK
						  , CDATE
						  , CTIME
						  , CUSER
						  ) VALUES (
						   #{mandt}
						  , #{qtnum}
						  , #{qtser}
						  , #{qtseq}
						  , #{prseq}
						  , #{prh}
						  , #{prd}
						  , #{etch}
						  , #{etcm}
						  , #{zrmk}
						  , HEX(CURRENT DATE)
						  , HEX(CURRENT TIME)
						  , #{cuser}
						  )
	</update>

	<delete id="deleteTemplate" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZSDT1048
		 WHERE MANDT = #{mandt}
			AND QTNUM = #{qtnum}
			AND QTSER   = #{qtser}
			AND QTSEQ   = #{qtseq}
	</delete>

	<delete id="deleteQtserZsdt1048" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZSDT1048
		 WHERE MANDT = #{mandt}
		   AND QTNUM = #{qtnum}
		   AND QTSER = #{qtser}
	</delete>

	<insert id="addTemplate" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		INSERT INTO SAPHEE.ZSDT1048 ( MANDT
												, QTNUM
												, QTSER
												, QTSEQ
												, PRSEQ
												, PRH
												, PRD
												, ETCH
												, ETCM
												, ZRMK
												, CDATE
												, CTIME
												, CUSER
												)
		SELECT MANDT
				, QTNUM
				, ( SELECT VALUE(MAX(QTSER)+1, 1)
					FROM SAPHEE.ZSDT1048
				  WHERE MANDT = #{mandt}
					 AND QTNUM = #{qtnum} )	AS QTSER
				, QTSEQ
				, PRSEQ
				, PRH
				, PRD
				, ETCH
				, ETCM
				, ZRMK
				, HEX(CURRENT DATE)              AS CDATE
				, HEX(CURRENT TIME)               AS CTIME
				, CAST(#{cuser} AS VARCHAR(30)) AS CUSER
		 FROM SAPHEE.ZSDT1048
		WHERE MANDT = #{mandt}
		   AND QTNUM = #{qtnum}
		   AND QTSER   = #{qtser}
	</insert>

	<insert id="insertQtserZsdt1048" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		INSERT INTO SAPHEE.ZSDT1048 ( MANDT
									, QTNUM
									, QTSER
									, QTSEQ
									, PRSEQ
									, PRH
									, PRD
									, ETCH
									, ETCM
									, ZRMK
									, CDATE
									, CTIME
									, CUSER
									)
		SELECT MANDT
				, QTNUM
				, CAST(#{max_qtser}   AS SMALLINT    ) AS QTSER
				, QTSEQ
				, PRSEQ
				, PRH
				, PRD
				, ETCH
				, ETCM
				, ZRMK
				, HEX(CURRENT DATE)              AS CDATE
				, HEX(CURRENT TIME)               AS CTIME
				, CAST(#{cuser} AS VARCHAR(30)) AS CUSER
		 FROM SAPHEE.ZSDT1048
		WHERE MANDT = #{mandt}
		  AND QTNUM = #{qtnum}
		  AND QTSER = #{qtser}
	</insert>

	<resultMap id="selectTemplateMap" type="hdel.sd.ses.domain.Ses0031">
		<result property="flag"   	column="FLAG"   />
	    <result property="mandt" 	column="MANDT"/>
	    <result property="qtnum" 	column="QTNUM"/>
	    <result property="qtser" 	column="QTSER"/>
	    <result property="qtseq" 	column="QTSEQ"/>
	    <result property="prseq" 	column="PRSEQ"/>
	    <result property="prh" 		column="PRH"/>
	    <result property="prd" 		column="PRD"/>
	    <result property="etch" 	column="ETCH"/>
	    <result property="etcm" 	column="ETCM"/>
	    <result property="zrmk" 	column="ZRMK"/>
		<result property="atkla"   	column="ATKLA"  />
		<result property="atfor"   	column="ATFOR"  />
		<result property="prhname"  column="PRHNAME"  />
		<result property="cnt"   	column="CNT"  />
		<result property="pcncd"   	column="PCNCD"  />
	</resultMap>
	<select id="selectListTemplate" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectTemplateMap">
SELECT '' AS FLAG
     ,X.QTNUM
     ,X.QTSER
     ,X.QTSEQ
     ,X.PRSEQ 
     ,X.PRH
     ,DECODE(X.ATFOR, 'NUM', REPLACE(Y.PRD, ',', ''), Y.PRD) AS PRD
     ,X.ATKLA
     ,X.ATINN
     ,X.ATFOR
     ,X.PRHNAME
     ,X.CNT
     ,(SELECT B.ATWTB
         FROM SAPHEE.CAWN A, SAPHEE.CAWNT B
        WHERE A.MANDT = B.MANDT
          AND A.ATINN = B.ATINN
          AND A.ATZHL = B.ATZHL
          AND B.SPRAS = DECODE(X.ZPRDGBN, 'SHN_01', '3', 'SHN_02', '3', #{spras})
          AND A.ADZHL = B.ADZHL
          AND A.MANDT = X.MANDT
          AND A.ATINN = X.ATINN
          AND A.ATWRT = Y.PRD ) AS ATWTB
     ,CASE WHEN Y.CTEXT2 IS NOT NULL THEN 'P'
          WHEN LOCATE('\', X.PRHNAME) > 0 THEN 'C'
          ELSE 'N' 
      END AS PCNCD
     ,X.DISPTP
     ,X.MODITP
FROM  (
	    SELECT A.MANDT
            ,C.QTNUM
            ,C.QTSER
            ,C.QTSEQ
            ,ROW_NUMBER() over(partition by C.QTSEQ) AS PRSEQ
	         ,A.PRH
	         ,(SELECT ATBEZ FROM SAPHEE.CABNT WHERE MANDT = B.MANDT AND ATINN = B.ATINN AND SPRAS = DECODE(A.ZPRDGBN, 'SHN_01', '3', 'SHN_02', '3', #{spras})) AS PRHNAME
	         ,(SELECT COUNT(MANDT) FROM SAPHEE.CAWN WHERE MANDT = A.MANDT AND ATINN = B.ATINN ) AS CNT
            ,B.ATINN
	         ,B.ATKLA
	         ,B.ATFOR
	         ,A.BRNDSEQ
	         ,A.ZPRDGBN
	         ,A.BRNDCD
	         ,A.DISPTP
	         ,A.MODITP
	    FROM   SAPHEE.ZSDT1141 AS A
	          INNER JOIN SAPHEE.CABN AS B ON A.MANDT = B.MANDT AND A.PRH = B.ATNAM
	          INNER JOIN TABLE (
			              SELECT MANDT
			                 , QTNUM
			                 , QTSER
			                 , QTSEQ
			                 , BRNDSEQ
			                 , NVL(ZPRDGBN, 'ELV_01') AS ZPRDGBN
			                 , CASE WHEN TRIM(BRNDCD) = '' THEN
			                       'NOBRND'
			                       WHEN BRNDCD = NULL THEN 
			                       'NOBRND'
			                       ELSE
			                        BRNDCD
			                    END AS BRNDCD	                 
			              FROM   SAPHEE.ZSDT1047 
			              WHERE  MANDT = #{mandt}
				           AND  QTNUM = #{qtnum}
				           AND  QTSER = #{qtser}
				           <if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq}    </if>
		        ) AS C ON A.MANDT = C.MANDT AND A.BRNDSEQ = C.BRNDSEQ AND A.ZPRDGBN = C.ZPRDGBN AND A.BRNDCD = C.BRNDCD
		        LEFT OUTER JOIN SAPHEE.ZSDT1073 AS D ON D.MANDT = A.MANDT AND D.CLASS = A.ZPRDGBN  AND D.ATNAM = A.PRH
		   WHERE A.DIPSDAT > HEX(CURRENT DATE)
		    AND  D.ATNAM IS NULL
     )  X
     LEFT OUTER JOIN (
                  SELECT R.MANDT
                       , R.QTNUM
                       , R.QTSER
                       , R.QTSEQ
                       , R.PRH
                       , R.PRD
                       ,(SELECT CTEXT2 FROM SAPHEE.ZLCODE WHERE MANDT = R.MANDT AND LANG = 'ko' AND CODE1 = 'SD121' AND CTEXT2 = R.PRH ) AS CTEXT2
                   FROM  SAPHEE.ZSDT1048 R
                   WHERE R.MANDT = #{mandt}
                    AND R.QTNUM = #{qtnum}
                    AND R.QTSER = #{qtser}
                    <if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq}    </if>
     ) Y ON X.MANDT = Y.MANDT AND X.QTNUM = Y.QTNUM AND X.QTSER = Y.QTSER AND X.QTSEQ = Y.QTSEQ AND X.PRH = Y.PRH
ORDER BY X.QTSER, X.QTSEQ, CASE WHEN X.ATKLA = ' ' THEN '2' || X.ATKLA ELSE '1' || X.ATKLA END, X.PRHNAME
WITH UR	
	</select>

	<resultMap id="selectListKsmlMap" type="hdel.sd.ses.domain.Ses0031"> 
		<result property="flag"   column="FLAG"   />
		<result property="mclass"   column="mclass"   />
		<result property="atkla"   column="atkla"  />
		<result property="prh"   column="prh" />
		<result property="prd"   column="prd"  />
		<result property="atfor"   column="ATFOR"  />
		<result property="prhname"   column="PRHNAME"  />
		<result property="posnr"   column="POSNR"  />
		<result property="cnt"   column="CNT"  />
	</resultMap>

	<select id="selectListKsml" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListKsmlMap">
		SELECT 'I'          AS FLAG
				, D.CLASS  AS MCLASS
				, B.ATKLA
				, B.ATFOR
				, B.ATNAM AS PRH
				, C.ATBEZ  AS PRHNAME
				, ''           AS PRD
				, A.POSNR AS POSNR
	 			, ( SELECT COUNT(*)
		  			 FROM SAPHEE.CAWN
		 			WHERE MANDT	= B.MANDT
		   			   AND ATINN	= B.ATINN  ) AS CNT
		  FROM	SAPHEE.KSML AS A
				INNER JOIN		    SAPHEE.CABN AS B	ON A.MANDT = B.MANDT	AND A.IMERK = B.ATINN
				LEFT OUTER JOIN		SAPHEE.CABNT AS C	ON B.MANDT = C.MANDT	AND B.ATINN = C.ATINN
				INNER JOIN			SAPHEE.KLAH AS D	ON A.MANDT = D.MANDT	AND A.CLINT = D.CLINT
		 WHERE A.MANDT= #{mandt}
		   AND  A.KLART  = '300'
		<if test="zprdgbn !=null and zprdgbn !=''"> AND D.CLASS = #{zprdgbn} </if>
		   AND  C.SPRAS  = #{spras}
		<if test="prh !=null and prh !=''"> AND B.ATNAM LIKE #{prh} || '%' </if>
		 ORDER
			BY	D.CLASS
			 ,	B.ATKLA
			 ,	A.CLINT
			 ,	A.POSNR
	</select>

	<resultMap id="selectListBlockNameMap" type="hdel.sd.ses.domain.Ses0031"> 
	    <result property="mandt" column="MANDT"/>
	    <result property="qtnum" column="QTNUM"/>
	    <result property="qtser" column="QTSER"/>
	    <result property="qtseq" column="QTSEQ"/>
	    <result property="blseq" column="BLSEQ"/>
	    <result property="bdmng" column="BDMNG"/>
	    <result property="zctotal" column="ZCTOTAL"/>
	    <result property="sales" column="SALES"/>
	    <result property="messg" column="MESSG"/>
	    <result property="blockname" column="BLOCKNAME"/>
	    <result property="maktx" column="MAKTX"/>
	</resultMap>
	<select id="selectListBlockName" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListBlockNameMap">
		(SELECT   A.MANDT
				, A.QTNUM
				, A.QTSER
				, A.QTSEQ
				, A.BLSEQ2      AS BLSEQ
				, SUM(A.BDMNG)  AS BDMNG
--				, CASE WHEN MAX(A.MESSG) IS NOT NULL OR MAX(A.MESSG) != '' THEN 0 ELSE SUM(A.ZCTOTAL) END  AS ZCTOTAL
				, MIN(A.SALES)  AS SALES
				, SUM(A.ZCTOTAL)AS ZCTOTAL
--				, CASE WHEN MAX(A.MESSG) IS NOT NULL
--							 OR MAX(A.MESSG) != '' THEN ''
--						 ELSE   MIN(A.SALES)  END	         AS SALES
				, MAX(A.MESSG)       AS MESSG
				, MAX(A.BLOCKNAME)   AS BLOCKNAME
				, MAX(A.DESCRIPTION) AS MAKTX
 		 FROM TABLE
		 (  SELECT    B.MANDT
					, B.QTNUM
					, B.QTSER
					, B.QTSEQ
					, B.BLSEQ2
--							, B.BDMNG
					, CASE WHEN BLSEQ3 = '00' THEN B.BDMNG
											 	ELSE NULL END 			AS BDMNG
					, B.ZCTOTAL
					, B.SALES
					, B.MESSG
					, B.BLOCKNAME
					, CASE WHEN B.MAKTX IS NULL OR B.MAKTX = '' THEN Z005.CD_KEY
							 ELSE  B.MAKTX	 END                                                     AS MAKTX
--							, VALUE(mara.spec,VALUE(z005.cd_name,'')) DESCRIPTION,
					, CASE WHEN BLSEQ3 = '00' THEN VALUE(mara.spec,VALUE(z005.cd_name,''))
													 ELSE NULL END		AS DESCRIPTION
			 FROM TABLE
					 ( SELECT     Z202.*
								, M.MATNR
								, M.MAKTX
						  FROM TABLE
								  ( SELECT  Z202.*
--											, Z005.BLOCKNAME
											, CASE WHEN BLSEQ3 = '00' THEN Z005.BLOCKNAME
													 ELSE NULL END	                                    AS BLOCKNAME
									 FROM TABLE
											 ( SELECT     MANDT
														, QTNUM
														, QTSER
														, QTSEQ
														, BLSEQ
														, SUBSTR(BLSEQ, 1, 4) AS BLSEQ2
														, SUBSTR(BLSEQ, 5, 2) AS BLSEQ3
														, BLNUM
														, MODEL
														, RQMAT
														, BDMNG
														, ZCTOTAL
														, SALES
														, MESSG
												 FROM SAPHEE.ZCOBT202
												WHERE MANDT  =  #{mandt}
												   AND QTNUM =  #{qtnum}
												   AND QTSER =  #{qtser}
												   AND BLSEQ != 'A13602'
											 ) Z202 LEFT OUTER JOIN TABLE
											 ( SELECT  OPT_CD1
														, OPT_CD2
														, MODEL
														, CD_NAME AS BLOCKNAME
												 FROM SAPHEE.ZCOBT005
												WHERE MANDT  = #{mandt}
												   AND CD_TYPE = 'AB0001'
	   											   AND DIV = '0'
											 ) Z005
										 ON Z202.BLSEQ = Z005.OPT_CD1
									   AND Z202.MODEL = Z005.MODEL
									) Z202 LEFT OUTER JOIN TABLE
									( SELECT MANDT
											 , MATNR
											 , MAKTX
									   FROM SAPHEE.MAKT
									  WHERE MANDT = #{mandt}
										 AND SPRAS    = '3'
									) M
							   ON Z202.RQMAT = M.MATNR
					 ) B LEFT OUTER JOIN TABLE
					 ( SELECT  MATNR, SPEC
						  FROM SAPHEE.MARA
						 WHERE MANDT  = #{mandt}
					 ) MARA 
				ON B.RQMAT = mara.matnr
				LEFT OUTER JOIN TABLE
			       ( SELECT  CD_TYPE
								, MODEL
								, CD_KEY
								, CD_NAME
						  FROM SAPHEE.ZCOBT005
						 WHERE MANDT  = #{mandt}
							AND CD_TYPE = 'AB0004'
	   						AND DIV = '0'
					 ) Z005
				ON B.MODEL = Z005.MODEL
			  AND B.RQMAT = Z005.CD_KEY
		 ) A
        GROUP BY  A.MANDT
				, A.QTNUM
				, A.QTSER
				, A.QTSEQ
				, A.BLSEQ2
        )
		WITH UR
	</select>

	<resultMap id="selectListGtypeMap" type="hdel.sd.ses.domain.Ses0031">
	    <result property="mandt" column="MANDT"/>
		<result property="gtype"   column="GTYPE"   />
		<result property="gtypeo"  column="GTYPEO" />
	</resultMap>

	<select id="selectListGtype" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListGtypeMap">
		SELECT MANDT
				, GTYPE
				, GTYPEO
		  FROM SAPHEE.ZSDTGTYPE
		 WHERE MANDT = #{mandt}
		WITH UR
	</select>

	<resultMap id="selectListZcobt302Map" type="hdel.sd.ses.domain.Ses0031"> 
	    <result property="mandt" column="MANDT"/>
	    <result property="qtnum" column="QTNUM"/>
	    <result property="qtser" column="QTSER"/>
	    <result property="qtseq" column="QTSEQ"/>
	    <result property="meinh_mh" column="MEINH_MH"/>
	    <result property="prdm01" column="PRDM01"/>
	    <result property="prdm02" column="PRDM02"/>
	    <result property="prdm03" column="PRDM03"/>
	    <result property="prdm04" column="PRDM04"/>
	    <result property="prdm05" column="PRDM05"/>
	    <result property="prda01" column="PRDA01"/>
	    <result property="prdl01" column="PRDL01"/>
	    <result property="prdl02" column="PRDL02"/>
	    <result property="prdl03" column="PRDL03"/>
	    <result property="prdl04" column="PRDL04"/>
	    <result property="prdl05" column="PRDL05"/>
	    <result property="prde01" column="PRDE01"/>
	    <result property="prde02" column="PRDE02"/>
	    <result property="prde03" column="PRDE03"/>
	    <result property="prde04" column="PRDE04"/>
	    <result property="prde05" column="PRDE05"/>
	    <result property="prde06" column="PRDE06"/>
	    <result property="prde07" column="PRDE07"/>
	    <result property="prde08" column="PRDE08"/>
	    <result property="prde09" column="PRDE09"/>
	    <result property="prde10" column="PRDE10"/>
	    <result property="prde11" column="PRDE11"/>
	    <result property="prde12" column="PRDE12"/>
	    <result property="prde13" column="PRDE13"/>
	    <result property="prde14" column="PRDE14"/>
	    <result property="prde15" column="PRDE15"/>
	    <result property="prdi01" column="PRDI01"/>
	    <result property="prdi02" column="PRDI02"/>
	    <result property="prdi03" column="PRDI03"/>
	    <result property="prdi04" column="PRDI04"/>
	    <result property="eqmm01" column="EQMM01"/>
	    <result property="eqmm02" column="EQMM02"/>
	    <result property="eqmm03" column="EQMM03"/>
	    <result property="eqmm04" column="EQMM04"/>
	    <result property="eqmm05" column="EQMM05"/>
	    <result property="eqma01" column="EQMA01"/>
	    <result property="eqma02" column="EQMA02"/>
	    <result property="eqml01" column="EQML01"/>
	    <result property="eqml02" column="EQML02"/>
	    <result property="eqml03" column="EQML03"/>
	    <result property="eqml04" column="EQML04"/>
	    <result property="eqml05" column="EQML05"/>
	    <result property="eqme01" column="EQME01"/>
	    <result property="eqme02" column="EQME02"/>
	    <result property="eqme03" column="EQME03"/>
	    <result property="eqme04" column="EQME04"/>
	    <result property="eqme05" column="EQME05"/>
	    <result property="eqme06" column="EQME06"/>
	    <result property="eqme07" column="EQME07"/>
	    <result property="eqme08" column="EQME08"/>
	    <result property="eqme09" column="EQME09"/>
	    <result property="eqme10" column="EQME10"/>
	    <result property="eqme11" column="EQME11"/>
	    <result property="eqme12" column="EQME12"/>
	    <result property="eqme13" column="EQME13"/>
	    <result property="eqme14" column="EQME14"/>
	    <result property="eqme15" column="EQME15"/>
	    <result property="eqme51" column="EQME51"/>
	    <result property="eqme52" column="EQME52"/>
	    <result property="eqme53" column="EQME53"/>
	    <result property="eqme54" column="EQME54"/>
	    <result property="eqme55" column="EQME55"/>
	    <result property="eqme56" column="EQME56"/>
	    <result property="eqme57" column="EQME57"/>
	    <result property="eqme58" column="EQME58"/>
	    <result property="eqme59" column="EQME59"/>
	    <result property="eqme60" column="EQME60"/>
	    <result property="eqme61" column="EQME61"/>
	    <result property="eqme62" column="EQME62"/>
	    <result property="eqme63" column="EQME63"/>
	    <result property="eqme64" column="EQME64"/>
	    <result property="eqme65" column="EQME65"/>
	    <result property="eqme66" column="EQME66"/>
	    <result property="eqme67" column="EQME67"/>
	    <result property="eqme68" column="EQME68"/>
	    <result property="eqme69" column="EQME69"/>
	    <result property="eqme70" column="EQME70"/>
	    <result property="eqme71" column="EQME71"/>
	    <result property="eqme72" column="EQME72"/>
	    <result property="eqme73" column="EQME73"/>
	    <result property="eqme74" column="EQME74"/>
	    <result property="eqme75" column="EQME75"/>
	    <result property="eqme76" column="EQME76"/>
	    <result property="eqme77" column="EQME77"/>
	    <result property="eqme78" column="EQME78"/>
	    <result property="eqme79" column="EQME79"/>
	    <result property="eqme80" column="EQME80"/>
	    <result property="eqme81" column="EQME81"/>
	    <result property="eqme82" column="EQME82"/>
	    <result property="eqme83" column="EQME83"/>
	    <result property="eqme84" column="EQME84"/>
	    <result property="eqme85" column="EQME85"/>
	    <result property="eqme86" column="EQME86"/>
	    <result property="eqme87" column="EQME87"/>
	    <result property="eqme88" column="EQME88"/>
	    <result property="eqme89" column="EQME89"/>
	    <result property="eqme90" column="EQME90"/>
	    <result property="eqme91" column="EQME91"/>
	    <result property="eqme92" column="EQME92"/>
	    <result property="eqme93" column="EQME93"/>
	    <result property="eqme94" column="EQME94"/>
	    <result property="eqme95" column="EQME95"/>
	    <result property="eqme96" column="EQME96"/>
	    <result property="eqme97" column="EQME97"/>
	    <result property="eqme98" column="EQME98"/>
	    <result property="eqme99" column="EQME99"/>
	    <result property="eqme100" column="EQME100"/>
	    <result property="eqme101" column="EQME101"/>
	    <result property="eqme102" column="EQME102"/>
	    <result property="eqme103" column="EQME103"/>
	    <result property="eqme104" column="EQME104"/>
	    <result property="eqme105" column="EQME105"/>
	    <result property="eqme106" column="EQME106"/>
	    <result property="eqme107" column="EQME107"/>
	    <result property="eqme108" column="EQME108"/>
	    <result property="eqme109" column="EQME109"/>
	    <result property="eqme110" column="EQME110"/>
	    <result property="eqme111" column="EQME111"/>
	    <result property="eqme112" column="EQME112"/>
	    <result property="eqme113" column="EQME113"/>
	    <result property="eqme114" column="EQME114"/>
	    <result property="eqme115" column="EQME115"/>
	    <result property="eqme116" column="EQME116"/>
	    <result property="eqme117" column="EQME117"/>
	    <result property="eqme118" column="EQME118"/>
	    <result property="eqme119" column="EQME119"/>
	    <result property="eqme120" column="EQME120"/>	    
	    <result property="eqmi01" column="EQMI01"/>
	    <result property="eqmi02" column="EQMI02"/>
	    <result property="eqmi03" column="EQMI03"/>
	    <result property="eqmo01" column="EQMO01"/>
	    <result property="eqmo02" column="EQMO02"/>
	    <result property="eqmo03" column="EQMO03"/>
	    <result property="eqmo04" column="EQMO04"/>
	    <result property="eqmo05" column="EQMO05"/>
	    <result property="eqmo06" column="EQMO06"/>
	    <result property="eqmo07" column="EQMO07"/>
	    <result property="eqmo08" column="EQMO08"/>
	    <result property="eqmo09" column="EQMO09"/>
	    <result property="eqmo10" column="EQMO10"/>
	    <result property="eqmo11" column="EQMO11"/>
	    <result property="eqmo12" column="EQMO12"/>
	    <result property="eqmo13" column="EQMO13"/>
	    <result property="eqmo14" column="EQMO14"/>
	    <result property="eqmo15" column="EQMO15"/>
	    <result property="eqmo16" column="EQMO16"/>
	    <result property="eqmo17" column="EQMO17"/>
	    <result property="eqmo18" column="EQMO18"/>
	    <result property="eqmo19" column="EQMO19"/>
	    <result property="eqmo20" column="EQMO20"/>
	    <result property="eqmo21" column="EQMO21"/>
	    <result property="eqmo22" column="EQMO22"/>
	    <result property="eqmo23" column="EQMO23"/>
	    <result property="eqmo24" column="EQMO24"/>
	    <result property="eqmo25" column="EQMO25"/>
	    <result property="eqmo26" column="EQMO26"/>
	    <result property="eqmo27" column="EQMO27"/>
	    <result property="eqmo28" column="EQMO28"/>
	    <result property="eqmo29" column="EQMO29"/>
	    <result property="eqmo30" column="EQMO30"/>
	    <result property="eqmo31" column="EQMO31"/>
	    <result property="eqmo32" column="EQMO32"/>
	    <result property="eqmo33" column="EQMO33"/>
	    <result property="eqmo34" column="EQMO34"/>
	    <result property="eqmo35" column="EQMO35"/>
	    <result property="eqmo36" column="EQMO36"/>
	    <result property="eqmo37" column="EQMO37"/>
	    <result property="eqmo38" column="EQMO38"/>
	    <result property="eqmo39" column="EQMO39"/>
	    <result property="eqmo40" column="EQMO40"/>
	    <result property="ctsm01" column="CTSM01"/>
	    <result property="ctsm02" column="CTSM02"/>
	    <result property="ctsm03" column="CTSM03"/>
	    <result property="ctsm04" column="CTSM04"/>
	    <result property="ctsm05" column="CTSM05"/>
	    <result property="ctsm06" column="CTSM06"/>
	    <result property="ctsm07" column="CTSM07"/>
	    <result property="ctsm08" column="CTSM08"/>
	    <result property="ctsm09" column="CTSM09"/>
	    <result property="ctsm10" column="CTSM10"/>
	    <result property="ctsm11" column="CTSM11"/>
	    <result property="ctsm12" column="CTSM12"/>
	    <result property="ctsm13" column="CTSM13"/>
	    <result property="ctsm14" column="CTSM14"/>
	    <result property="ctsm15" column="CTSM15"/>
	    <result property="ctsa01" column="CTSA01"/>
	    <result property="ctsl01" column="CTSL01"/>
	    <result property="ctsl02" column="CTSL02"/>
	    <result property="ctsl03" column="CTSL03"/>
	    <result property="ctsl04" column="CTSL04"/>
	    <result property="ctsl05" column="CTSL05"/>
	    <result property="ctse01" column="CTSE01"/>
	    <result property="ctse02" column="CTSE02"/>
	    <result property="ctse03" column="CTSE03"/>
	    <result property="ctse04" column="CTSE04"/>
	    <result property="ctse05" column="CTSE05"/>
	    <result property="ctsi01" column="CTSI01"/>
	    <result property="ctsi02" column="CTSI02"/>
	    <result property="ctsi03" column="CTSI03"/>
	    <result property="fdsp01" column="FDSP01"/>
	    <result property="fdsp02" column="FDSP02"/>
	    <result property="fdsp03" column="FDSP03"/>
	    <result property="fdsp04" column="FDSP04"/>
	    <result property="fdsp05" column="FDSP05"/>
	    <result property="fdsp06" column="FDSP06"/>
	    <result property="fdsp07" column="FDSP07"/>
	    <result property="fdsp08" column="FDSP08"/>
	    <result property="fdsp09" column="FDSP09"/>
	    <result property="fdsp10" column="FDSP10"/>
	    <result property="fdsp11" column="FDSP11"/>
	    <result property="model" column="MODEL"/>
	    <result property="fds01" column="FDS01"/>
	    <result property="fds02" column="FDS02"/>
	    <result property="fds03" column="FDS03"/>
	    <result property="fds04" column="FDS04"/>
	    <result property="fds05" column="FDS05"/>
	    <result property="fds06" column="FDS06"/>
	    <result property="fds07" column="FDS07"/>
	    <result property="fds08" column="FDS08"/>
	    <result property="fds09" column="FDS09"/>
	    <result property="fds10" column="FDS10"/>
	    <result property="addt01" column="ADDT01"/>
	</resultMap>
	<select id="selectListZcobt302" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListZcobt302Map">
		SELECT    MANDT
				, QTNUM
				, QTSER
				, QTSEQ
				, TWAER
				, MEINH_MH
				, PRDM01
				, PRDM02
				, PRDM03
				, PRDM04
				, PRDM05
				, PRDA01
				, PRDL01
				, PRDL02
				, PRDL03
				, PRDL04
				, PRDL05
				, PRDE01
				, PRDE02
				, PRDE03
				, PRDE04
				, PRDE05
				, PRDE06
				, PRDE07
				, PRDE08
				, PRDE09
				, PRDE10
				, PRDE11
				, PRDE12
				, PRDE13
				, PRDE14
				, PRDE15
				, PRDI01
				, PRDI02
				, PRDI03
				, PRDI04
				, EQMM01
				, EQMM02
				, EQMM03
				, EQMM04
				, EQMM05
				, EQMA01
				, EQMA02
				, EQML01
				, EQML02
				, EQML03
				, EQML04
				, EQML05
				, EQME01
				, EQME02
				, EQME03
				, EQME04
				, EQME05
				, EQME06
				, EQME07
				, EQME08
				, EQME09
				, EQME10
				, EQME11
				, EQME12
				, EQME13
				, EQME14
				, EQME15
				, EQME51
				, EQME52
				, EQME53
				, EQME54
				, EQME55
				, EQME56
				, EQME57
				, EQME58
				, EQME59
				, EQME60
				, EQME61
				, EQME62
				, EQME63
				, EQME64
				, EQME65
				, EQME66
				, EQME67
				, EQME68
				, EQME69
				, EQME70
				, EQME71
				, EQME72
				, EQME73
				, EQME74
				, EQME75
				, EQME76
				, EQME77
				, EQME78
				, EQME79
				, EQME80
				, EQME81
				, EQME82
				, EQME83
				, EQME84
				, EQME85
				, EQME86
				, EQME87
				, EQME88
				, EQME89
				, EQME90
				, EQME91
				, EQME92
				, EQME93
				, EQME94
				, EQME95
				, EQME96
				, EQME97
				, EQME98
				, EQME99
				, EQME100
				, EQME101
				, EQME102
				, EQME103
				, EQME104
				, EQME105
				, EQME106
				, EQME107
				, EQME108
				, EQME109
				, EQME110
				, EQME111
				, EQME112
				, EQME113
				, EQME114
				, EQME115
				, EQME116
				, EQME117
				, EQME118
				, EQME119
				, EQME120
				, EQMI01
				, EQMI02
				, EQMI03
				, EQMO01
				, EQMO02
				, EQMO03
				, EQMO04
				, EQMO05
				, EQMO06
				, EQMO07
				, EQMO08
				, EQMO09
				, EQMO10
				, EQMO11
				, EQMO12
				, EQMO13
				, EQMO14
				, EQMO15
				, EQMO16
				, EQMO17
				, EQMO18
				, EQMO19
				, EQMO20
				, EQMO21
				, EQMO22
				, EQMO23
				, EQMO24
				, EQMO25
				, EQMO26
				, EQMO27
				, EQMO28
				, EQMO29
				, EQMO30
				, EQMO31
				, EQMO32
				, EQMO33
				, EQMO34
				, EQMO35
				, EQMO36
				, EQMO37
				, EQMO38
				, EQMO39
				, EQMO40
				, CTSM01
				, CTSM02
				, CTSM03
				, CTSM04
				, CTSM05
				, CTSM06
				, CTSM07
				, CTSM08
				, CTSM09
				, CTSM10
				, CTSM11
				, CTSM12
				, CTSM13
				, CTSM14
				, CTSM15
				, CTSA01
				, CTSL01
				, CTSL02
				, CTSL03
				, CTSL04
				, CTSL05
				, CTSE01
				, CTSE02
				, CTSE03
				, CTSE04
				, CTSE05
				, CTSI01
				, CTSI02
				, CTSI03
				, FDSP01
				, FDSP02
				, FDSP03
				, FDSP04
				, FDSP05
				, FDSP06
				, FDSP07
				, FDSP08
				, FDSP09
				, FDSP10
				, FDSP11
				, MODEL
				, FDS01
				, FDS02
				, FDS03
				, FDS04
				, FDS05
				, FDS06
				, FDS07
				, FDS08
				, FDS09
				, FDS10
				, ADDT01
		 FROM SAPHEE.ZCOBT302
		WHERE MANDT = #{mandt}
		   AND QTNUM = #{qtnum}
		   AND QTSER   = #{qtser}
	WITH UR
	</select>

	<resultMap id="selectListZuamMap" type="hdel.sd.ses.domain.Ses0031"> 
	    <result property="mandt" column="MANDT"/>
	    <result property="qtnum" column="QTNUM"/>
	    <result property="qtser" column="QTSER"/>
	    <result property="qtseq" column="QTSEQ"/>
	    <result property="zuam" column="ZUAM"/>
	</resultMap>
	<select id="selectListZuam" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListZuamMap">
		SELECT MANDT
				, QTNUM
				, QTSER
				, QTSEQ
				, PRDA01, CTSA01, EQMA01, EQMA02 -- 원가산출 시 사용하지 않는 컬럼
				, (PRDM01   + PRDM02  + PRDM03  + PRDM04  + PRDM05
				+ PRDL01   + PRDL02   + PRDL03   + PRDL04    + PRDL05
				+ PRDE01   + PRDE02   + PRDE03   + PRDE04   + PRDE05 + PRDE06 + PRDE07 + PRDE08 + PRDE09 + PRDE10
				+ PRDE11   + PRDE12   + PRDE13   + PRDE14   + PRDE15
				+ PRDI01   + PRDI02    + PRDI03    + PRDI04
				+ EQMM01 + EQMM02 + EQMM03 + EQMM04 + EQMM05
				+ EQML01  + EQML02  + EQML03  + EQML04   + EQML05
				+ EQME01  + EQME02  + EQME03  + EQME04  + EQME05 + EQME06 + EQME07 + EQME08 + EQME09 + EQME10
				+ EQME11  + EQME12  + EQME13  + EQME14  + EQME15
				+ EQME51  + EQME52  + EQME53  + EQME54  + EQME55
				+ EQME56  + EQME57  + EQME58  + EQME59  + EQME60
				+ EQME61  + EQME62	 + EQME63  + EQME64   + EQME65 + EQME66 + EQME67 + EQME68 + EQME69 + EQME70
				+ EQME71  + EQME72 + EQME73  + EQME74   + EQME75 + EQME76 + EQME77 + EQME78 + EQME79 + EQME80
				+ EQME81  + EQME82 + EQME83  + EQME84   + EQME85 + EQME86 + EQME87 + EQME88 + EQME89 + EQME90
				+ EQME91  + EQME92 + EQME93  + EQME94   + EQME95 + EQME96 + EQME97 + EQME98 + EQME99 + EQME100
				+ EQME101 + EQME102 + EQME103 + EQME104 + EQME105 + EQME106 + EQME107 + EQME108 + EQME109 + EQME110
				+ EQME111 + EQME112 + EQME113 + EQME114 + EQME115 + EQME116 + EQME117 + EQME118 + EQME119 + EQME120
				+ EQMI01  + EQMI02  + EQMI03
				+ EQMO01 + EQMO02 + EQMO03 + EQMO04  + EQMO05 + EQMO06 + EQMO07 + EQMO08 + EQMO09 + EQMO10
				+ EQMO11 + EQMO12 + EQMO13 + EQMO14  + EQMO15 + EQMO16 + EQMO17 + EQMO18 + EQMO19 + EQMO20
				+ EQMO21 + EQMO22 + EQMO23 + EQMO24  + EQMO25 + EQMO26 + EQMO27 + EQMO28 + EQMO29 + EQMO30
				+ EQMO31 + EQMO32 + EQMO33 + EQMO34  + EQMO35 + EQMO36 + EQMO37 + EQMO38 + EQMO39 + EQMO40
				+ CTSM01  + CTSM02  + CTSM03  + CTSM04   + CTSM05 + CTSM06 + CTSM07 + CTSM08 + CTSM09 + CTSM10 + CTSM11 + CTSM12 + CTSM13 + CTSM14 + CTSM15
				+ CTSL01   + CTSL02   + CTSL03   + CTSL04     + CTSL05
				+ CTSE01   + CTSE02   + CTSE03   + CTSE04    + CTSE05
				+ CTSI01    + CTSI02   + CTSI03
				+ FDSP01   + FDSP02   + FDSP03   + FDSP04    + FDSP05   + FDSP06   + FDSP07   + FDSP08   + FDSP09   + FDSP10   + FDSP11) * 100 AS ZUAM
		 FROM SAPHEE.ZCOBT302
		WHERE MANDT = #{mandt}
		   AND QTNUM = #{qtnum}
		   AND QTSER = #{qtser}
		   AND QTSEQ = #{qtseq}
		WITH UR
	</select>

	<resultMap id="selectZcobt304Map" type="hdel.sd.ses.domain.Ses0031"> 
	    <result property="mandt" column="MANDT"/>
	    <result property="pspid" column="PSPID"/>
	    <result property="posid" column="POSID"/>
	    <result property="zuam" column="ZUAM"/>
	</resultMap>
	<select id="selectZcobt304" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectZcobt304Map">
		SELECT    MANDT
				, PSPID
				, POSID
				, KTGRM
				, PRDA01, CTSA01, EQMA01, EQMA02 -- 원가산출 시 사용하지 않는 컬럼
				, (PRDM01   + PRDM02  + PRDM03  + PRDM04  + PRDM05
				+ PRDL01   + PRDL02   + PRDL03   + PRDL04    + PRDL05
				+ PRDE01   + PRDE02   + PRDE03   + PRDE04   + PRDE05 + PRDE06 + PRDE07 + PRDE08 + PRDE09 + PRDE10
				+ PRDE11   + PRDE12   + PRDE13   + PRDE14   + PRDE15
				+ PRDI01   + PRDI02    + PRDI03    + PRDI04
				+ EQMM01 + EQMM02 + EQMM03 + EQMM04 + EQMM05
				+ EQML01  + EQML02  + EQML03  + EQML04   + EQML05
				+ EQME01  + EQME02  + EQME03  + EQME04  + EQME05 + EQME06 + EQME07 + EQME08 + EQME09 + EQME10
				+ EQME11  + EQME12  + EQME13  + EQME14  + EQME15
				+ EQME51  + EQME52  + EQME53  + EQME54  + EQME55
				+ EQME56  + EQME57  + EQME58  + EQME59  + EQME60
				+ EQME61  + EQME62	 + EQME63  + EQME64   + EQME65 + EQME66 + EQME67 + EQME68 + EQME69 + EQME70
				+ EQME71  + EQME72 + EQME73  + EQME74   + EQME75 + EQME76 + EQME77 + EQME78 + EQME79 + EQME80
				+ EQME81  + EQME82 + EQME83  + EQME84   + EQME85 + EQME86 + EQME87 + EQME88 + EQME89 + EQME90
				+ EQME91  + EQME92 + EQME93  + EQME94   + EQME95 + EQME96 + EQME97 + EQME98 + EQME99 + EQME100
				+ EQME101 + EQME102 + EQME103 + EQME104 + EQME105 + EQME106 + EQME107 + EQME108 + EQME109 + EQME110
				+ EQME111 + EQME112 + EQME113 + EQME114 + EQME115 + EQME116 + EQME117 + EQME118 + EQME119 + EQME120
				+ EQMI01  + EQMI02  + EQMI03
				+ EQMO01 + EQMO02 + EQMO03 + EQMO04  + EQMO05 + EQMO06 + EQMO07 + EQMO08 + EQMO09 + EQMO10
				+ EQMO11 + EQMO12 + EQMO13 + EQMO14  + EQMO15 + EQMO16 + EQMO17 + EQMO18 + EQMO19 + EQMO20
				+ EQMO21 + EQMO22 + EQMO23 + EQMO24  + EQMO25 + EQMO26 + EQMO27 + EQMO28 + EQMO29 + EQMO30
				+ EQMO31 + EQMO32 + EQMO33 + EQMO34  + EQMO35 + EQMO36 + EQMO37 + EQMO38 + EQMO39 + EQMO40
				+ CTSM01  + CTSM02  + CTSM03  + CTSM04   + CTSM05 + CTSM06 + CTSM07 + CTSM08 + CTSM09 + CTSM10 + CTSM11 + CTSM12 + CTSM13 + CTSM14 + CTSM15
				+ CTSL01   + CTSL02   + CTSL03   + CTSL04     + CTSL05
				+ CTSE01   + CTSE02   + CTSE03   + CTSE04    + CTSE05
				+ CTSI01    + CTSI02   + CTSI03
				+ FDSP01   + FDSP02   + FDSP03   + FDSP04    + FDSP05   + FDSP06   + FDSP07   + FDSP08   + FDSP09   + FDSP10   + FDSP11) * 100 AS ZUAM
		 FROM SAPHEE.ZCOBT304
		WHERE MANDT  = #{mandt}
		   AND PSPID = #{pspid}
		   AND POSID = #{posid}
		WITH UR
	</select>

	<update id="updateZcobt302" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZCOBT302
			 SET ADDT01 = CAST(#{addt01} AS DECIMAL(15,2)) / 100
	     WHERE MANDT = #{mandt}
		   AND QTNUM = #{qtnum}
		   AND QTSER = #{qtser}
		   AND QTSEQ = #{qtseq}
	</update>

	<update id="updateZcobt304" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZCOBT304
			 SET ADDT01 = CAST(#{addt01} AS DECIMAL(15,2)) / 100
	     WHERE MANDT = #{mandt}
		   AND PSPID = #{pspid}
		   AND POSID = #{posid} -- 304의 KTGRM의 컬럼은 무시되어도  OK
	</update>

	<update id="updateZcobt202" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZCOBT202
			 SET MESSG = #{messg}
	     WHERE MANDT = #{mandt}
		   AND QTNUM = #{qtnum}
		   AND QTSER = #{qtser}
		   AND QTSEQ = #{qtseq}
		   AND BLSEQ = #{blseq}
	</update>

	<update id="updateZcobt204" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZCOBT204
			 SET MESSG = #{messg}
	     WHERE MANDT = #{mandt}
		   AND PSPID = #{pspid}
		   AND POSID = #{posid}		-- 204의 KTGRM의 컬럼은 무시되어도  OK
		   AND BLSEQ = #{blseq}
	</update>


	<resultMap id="selectListZcobt309Map" type="hdel.sd.ses.domain.Ses0031"> 
		<result property="flag"   column="FLAG"   />
	    <result property="mandt" column="MANDT"/>
	    <result property="qtnum" column="QTNUM"/>
	    <result property="qtser" column="QTSER"/>
	    <result property="qtseq" column="QTSEQ"/>
	    <result property="pspid" column="PSPID"/>
	    <result property="posid" column="POSID"/>
	    <result property="atype" column="ATYPE"/>
	    <result property="gubun" column="GUBUN"/>
	    <result property="blseq" column="BLSEQ"/>
	    <result property="blnum" column="BLNUM"/>
	    <result property="blnam" column="BLNAM"/>
	    <result property="messg" column="MESSG"/>
	    <result property="state" column="STATE"/>
	    <result property="seria" column="SERIA"/>
	    <result property="zitem" column="ZITEM"/>
	    <result property="zchar" column="ZCHAR"/>
	    <result property="zquty" column="ZQUTY"/>
	    <result property="zamnt" column="ZAMNT"/>
	    <result property="ztotl" column="ZTOTL"/>
	    <result property="bigo" column="BIGO"/>
	    <result property="tex1" column="TEX1"/>
	    <result property="tex2" column="TEX2"/>
	    <result property="addt01" column="ADDT01"/>
	    <result property="vkbur" column="VKBUR"/>
	    <result property="vkgrp" column="VKGRP"/>
	    <result property="zkunnr" column="ZKUNNR"/>
	    <result property="shangh" column="SHANGH"/>
	    <result property="brndnm" column="BRNDNM"/>
	</resultMap>

	<select id="selectListZsdt1054D" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListZcobt309Map">
		SELECT    E.FLAG
		        , E.MANDT
				, E.QTNUM
				, E.QTSER
				, E.QTSEQ
				, E.PSPID
				, E.POSID
				, E.ATYPE
				, E.GUBUN
				, E.BLSEQ
				, E.BLNUM
				, E.BLNAM
				, E.MESSG
				, E.STATE
				, E.SERIA
				, E.ZITEM
				, E.ZCHAR
				, E.ZQUTY
				, VALUE(E.ZAMNT, 0) * 100 AS ZAMNT
				, VALUE(E.ZTOTL, 0) * 100 AS ZTOTL
				, E.BIGO
				, E.TEX1
				, E.TEX2
				, E.STATE
				, CASE WHEN E.SERIA = 1 THEN VALUE(E.ADDT01, 0) * 100
					   ELSE NULL END AS ADDT01
	           , (
	 			 SELECT ATWTB
	 			 FROM                SAPHEE.KSML AS A
	 			 INNER JOIN          SAPHEE.CABN AS B	ON A.MANDT = B.MANDT	AND A.IMERK = B.ATINN
	 			 LEFT OUTER JOIN	    SAPHEE.CABNT AS C	ON B.MANDT = C.MANDT	AND B.ATINN = C.ATINN	AND C.SPRAS = '3'
	 			 INNER JOIN          SAPHEE.KLAH AS D	ON A.MANDT = D.MANDT	AND A.CLINT = D.CLINT
	 			 LEFT OUTER JOIN     SAPHEE.CAWN AS E	ON B.MANDT = E.MANDT	AND B.ATINN = E.ATINN
	 			 LEFT OUTER JOIN     SAPHEE.CAWNT AS F	ON A.MANDT = F.MANDT AND E.ATINN = F.ATINN AND E.ATZHL = F.ATZHL AND F.SPRAS = '3'
	 			 WHERE   A.MANDT = #{mandt}
	 			   AND A.KLART = '300'
	 			   AND D.CLASS = ZPRDGBN
	 			   AND B.ATNAM = 'EL_ABRAND'
	 			   AND E.ATWRT = BRNDCD
	             ) BRNDNM           -- 브랜드명
		 FROM (
				   SELECT ''         AS FLAG
						   , ZSDT1054D.MANDT
						   , ZSDT1054D.QTNUM
						   , ZSDT1054D.QTSER
						   , ZSDT1054D.QTSEQ
						   , ZSDT1054D.PSPID
						   , ZSDT1054D.POSID
						   , ZSDT1054D.ATYPE
						   , ZSDT1054D.GUBUN
						   , ZSDT1054D.BLSEQ
						   , ROW_NUMBER() OVER (PARTITION BY ZSDT1054D.QTNUM, ZSDT1054D.QTSER,ZSDT1054D.QTSEQ, ZSDT1054D.GUBUN, ZSDT1054D.PSPID, ZSDT1054D.POSID
												ORDER BY ZSDT1054D.QTNUM, ZSDT1054D.QTSER, ZSDT1054D.QTSEQ, ZSDT1054D.GUBUN, ZSDT1054D.PSPID, ZSDT1054D.POSID, ZSDT1054D.BLSEQ) AS SERIA
						   , ZSDT1054D.BLNUM
						   , ZSDT1054D.BLNAM
						   , ZSDT1054D.ZITEM
						   , ZSDT1054D.ZCHAR
						   , ZSDT1054D.ZQUTY
						   , ZSDT1054D.ZAMNT
						   , ZSDT1054D.ZTOTL
						   , ZSDT1054D.BIGO
						   , ZSDT1054D.TEX1
						   , ZSDT1054D.TEX2
						   , ZSDT1054D.FLAG AS STATE
						   , (SELECT MESSG FROM SAPHEE.ZCOBT309 
						       WHERE MANDT = ZSDT1054D.MANDT AND QTNUM = ZSDT1054D.QTNUM
						         AND QTSER = ZSDT1054D.QTSER AND QTSEQ = ZSDT1054D.QTSEQ
						         AND PSPID = ZSDT1054D.PSPID AND POSID = ZSDT1054D.POSID
						         AND ATYPE = ZSDT1054D.ATYPE AND GUBUN = ZSDT1054D.GUBUN
						         AND BLSEQ = ZSDT1054D.BLSEQ AND BLNUM = ZSDT1054D.BLNUM) AS MESSG
						   , (SELECT SUM(ZTOTL) FROM SAPHEE.ZSDT1054D
						       WHERE MANDT = ZSDT1054D.MANDT AND QTNUM = ZSDT1054D.QTNUM
						         AND QTSER = ZSDT1054D.QTSER AND QTSEQ = ZSDT1054D.QTSEQ
						         AND PSPID = ZSDT1054D.PSPID AND POSID = ZSDT1054D.POSID
						         AND GUBUN = ZSDT1054D.GUBUN ) AS ADDT01
                           , ZSDT1047.ZPRDGBN						         
						   , ZSDT1047.BRNDCD      
					 FROM SAPHEE.ZSDT1054D AS ZSDT1054D
					      LEFT OUTER JOIN SAPHEE.ZSDT1047 AS ZSDT1047 ON ZSDT1047.MANDT = ZSDT1054D.MANDT AND ZSDT1047.QTNUM =  ZSDT1054D.QTNUM
					                                                 AND ZSDT1047.QTSER = ZSDT1054D.QTSER AND ZSDT1047.QTSEQ = ZSDT1054D.QTSEQ
					WHERE ZSDT1054D.MANDT = #{mandt}
<if test="qtnum !=null and qtnum !=''"> AND ZSDT1054D.QTNUM = #{qtnum} </if>
<if test="qtser !=null and qtser !=''"> AND ZSDT1054D.QTSER = #{qtser} </if>
<if test="qtseq !=null and qtseq !=''"> AND ZSDT1054D.QTSEQ = #{qtseq} </if>
<if test="pspid !=null and pspid !=''"> AND ZSDT1054D.PSPID = #{pspid} </if>
<if test="posid !=null and posid !=''"> AND ZSDT1054D.POSID = #{posid} </if>
				 ) E
		ORDER BY  E.QTNUM
				, E.QTSER
				, E.QTSEQ
				, E.PSPID
				, E.POSID
				, E.GUBUN
				, E.SERIA
		WITH UR
	</select>

	<select id="selectListZcobt309" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListZcobt309Map">
		SELECT    E.FLAG
				, E.MANDT
				, E.QTNUM
				, E.QTSER
				, E.QTSEQ
				, E.PSPID
				, E.POSID
				, E.ATYPE
				, E.GUBUN
				, E.BLSEQ
				, E.BLNUM
				, E.BLNAM
				, E.MESSG
				, E.STATE
				, E.SERIA
				, E.ZITEM
				, E.ZCHAR
				, E.ZQUTY
				, VALUE(E.ZAMNT, 0) * 100 AS ZAMNT
				, VALUE(E.ZTOTL, 0) * 100 AS ZTOTL
				, E.BIGO
				, E.TEX1
				, E.TEX2
				, CASE WHEN E.SERIA = 1 THEN VALUE(E.ADDT01, 0) * 100
					   ELSE NULL END AS ADDT01
		 FROM ( SELECT CASE WHEN A.FLAG = 'I'  THEN 'I'
							WHEN A.FLAG != 'I' AND B.MANDT IS NULL THEN 'U'
		 					ELSE NULL END AS FLAG
						   , A.MANDT
						   , A.QTNUM
						   , A.QTSER
						   , A.QTSEQ
						   , A.PSPID
						   , A.POSID
						   , A.ATYPE
						   , A.GUBUN
						   , A.BLSEQ
						   , A.BLNUM
						   , A.BLNAM
						   , A.MESSG
						   , B.FLAG  AS STATE
						   , CASE WHEN B.SERIA IS NULL THEN ROW_NUMBER() OVER (PARTITION BY A.QTNUM, A.QTSER, A.QTSEQ, A.GUBUN, A.PSPID, A.POSID
																			       ORDER BY A.QTNUM, A.QTSER, A.QTSEQ, A.GUBUN, A.PSPID, A.POSID, A.BLSEQ)
							      ELSE B.SERIA END AS SERIA
						  , B.ZITEM
						  , B.ZCHAR
						  , B.ZQUTY
						  , B.ZAMNT
						  , B.ZTOTL
						  , B.BIGO
						  , B.TEX1
						  , B.TEX2
						  , B.ADDT01
					FROM ( SELECT   ''    AS FLAG
								  , ZCOBT309.MANDT
								  , ZCOBT309.QTNUM
								  , ZCOBT309.QTSER
								  , ZCOBT309.QTSEQ
								  , ZCOBT309.PSPID
								  , ZCOBT309.POSID
								  , ZCOBT309.ATYPE
								  , ZCOBT309.GUBUN
								  , ZCOBT309.BLSEQ
								  , ROW_NUMBER() OVER (PARTITION BY ZCOBT309.QTNUM, ZCOBT309.QTSER, ZCOBT309.QTSEQ, ZCOBT309.GUBUN, ZCOBT309.PSPID, ZCOBT309.POSID
													   ORDER BY ZCOBT309.QTNUM, ZCOBT309.QTSER, ZCOBT309.QTSEQ, ZCOBT309.GUBUN, ZCOBT309.PSPID, ZCOBT309.POSID, ZCOBT309.BLSEQ) AS SERIA
								  , ZCOBT309.BLNUM
								  , ZCOBT309.BLNAM
								  , ZCOBT309.MESSG
								  , ZCOBT309.STATE
							FROM SAPHEE.ZCOBT309 AS ZCOBT309
						   WHERE ZCOBT309.MANDT = #{mandt}
		<if test="qtnum !=null and qtnum !=''"> AND ZCOBT309.QTNUM = #{qtnum} </if>
		<if test="qtser !=null and qtser !=''"> AND ZCOBT309.QTSER = #{qtser} </if>
		<if test="qtseq !=null and qtseq !=''"> AND ZCOBT309.QTSEQ = #{qtseq} </if>
		<if test="pspid !=null and pspid !=''"> AND ZCOBT309.PSPID = #{pspid} </if>
		<if test="posid !=null and posid !=''"> AND ZCOBT309.POSID = #{posid} </if>

						UNION ALL

						   SELECT 'I'         AS FLAG
								   , ZSDT1054D.MANDT
								   , ZSDT1054D.QTNUM
								   , ZSDT1054D.QTSER
								   , ZSDT1054D.QTSEQ
								   , ZSDT1054D.PSPID
								   , ZSDT1054D.POSID
								   , ZSDT1054D.ATYPE
								   , ZSDT1054D.GUBUN
								   , ZSDT1054D.BLSEQ
								   , ZSDT1054D.SERIA
								   , ZSDT1054D.BLNUM
								   , ZSDT1054D.BLNAM
								   , ''         AS MESSG
								   , ''         AS STATE
							 FROM SAPHEE.ZSDT1054D AS ZSDT1054D
							WHERE ZSDT1054D.MANDT = #{mandt}
		<if test="qtnum !=null and qtnum !=''"> AND ZSDT1054D.QTNUM = #{qtnum} </if>
		<if test="qtser !=null and qtser !=''"> AND ZSDT1054D.QTSER = #{qtser} </if>
		<if test="qtseq !=null and qtseq !=''"> AND ZSDT1054D.QTSEQ = #{qtseq} </if>
		<if test="pspid !=null and pspid !=''"> AND ZSDT1054D.PSPID = #{pspid} </if>
		<if test="posid !=null and posid !=''"> AND ZSDT1054D.POSID = #{posid} </if>
							   AND (    ZSDT1054D.MANDT
									  , ZSDT1054D.QTNUM
									  , ZSDT1054D.QTSER
									  , ZSDT1054D.QTSEQ
									  , ZSDT1054D.PSPID
									  , ZSDT1054D.POSID
									  , ZSDT1054D.BLSEQ
									  , ZSDT1054D.BLNUM
									  ) NOT IN ( SELECT   MANDT
														, QTNUM
														, QTSER
														, QTSEQ
														, PSPID
														, POSID
														, BLSEQ
														, BLNUM
									 			  FROM SAPHEE.ZCOBT309
												 WHERE MANDT = #{mandt}
		<if test="qtnum !=null and qtnum !=''">    AND QTNUM = #{qtnum} </if>
		<if test="qtser !=null and qtser !=''">    AND QTSER = #{qtser} </if>
		<if test="qtseq !=null and qtseq !=''">    AND QTSEQ = #{qtseq} </if>
		<if test="pspid !=null and pspid !=''">    AND PSPID = #{pspid} </if>
		<if test="posid !=null and posid !=''">    AND POSID = #{posid} </if>
										 			) 
		 					) A LEFT OUTER JOIN TABLE
		 					( SELECT C.*
		 		 					  , D.ADDT01
		 		 				FROM ( SELECT *
		 		 						 FROM SAPHEE.ZSDT1054D
										WHERE MANDT = #{mandt}
		<if test="qtnum !=null and qtnum !=''"> AND QTNUM = #{qtnum} </if>
		<if test="qtser !=null and qtser !=''"> AND QTSER = #{qtser} </if>
		<if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq} </if>
		<if test="pspid !=null and pspid !=''"> AND PSPID = #{pspid} </if>
		<if test="posid !=null and posid !=''"> AND POSID = #{posid} </if>
		 		 						) C INNER JOIN TABLE
										( SELECT    MANDT
												  , QTNUM
												  , QTSER
												  , QTSEQ
												  , PSPID
												  , POSID
												  , GUBUN
												  , SUM(ZTOTL) AS ADDT01
										    FROM SAPHEE.ZSDT1054D
										  WHERE MANDT = #{mandt}
		<if test="qtnum !=null and qtnum !=''"> AND QTNUM = #{qtnum} </if>
		<if test="qtser !=null and qtser !=''"> AND QTSER = #{qtser} </if>
		<if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq} </if>
		<if test="pspid !=null and pspid !=''"> AND PSPID = #{pspid} </if>
		<if test="posid !=null and posid !=''"> AND POSID = #{posid} </if>
									  	GROUP BY MANDT
											  , QTNUM
											  , QTSER
											  , QTSEQ
											  , PSPID
											  , POSID
											  , GUBUN
										) D
					  			 ON C.MANDT = D.MANDT
								AND C.QTNUM = D.QTNUM
								AND C.QTSER = D.QTSER
								AND C.QTSEQ = D.QTSEQ
								AND C.PSPID = D.PSPID
								AND C.POSID = D.POSID
								AND C.GUBUN = D.GUBUN
		 					) B
					   ON A.MANDT = B.MANDT
					  AND A.QTNUM = B.QTNUM
					  AND A.QTSER = B.QTSER
					  AND A.QTSEQ = B.QTSEQ
					  AND A.PSPID = B.PSPID
					  AND A.POSID = B.POSID
					  AND A.ATYPE = B.ATYPE
					  AND A.GUBUN = B.GUBUN
					  AND A.SERIA = B.SERIA
					  AND A.BLSEQ = B.BLSEQ
				 ) E
		ORDER BY  E.QTNUM
				, E.QTSER
				, E.QTSEQ
				, E.PSPID
				, E.POSID
				, E.GUBUN
				, E.SERIA
		WITH UR
	</select>

	<update id="updateZcobt309" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZCOBT309
		   SET STATE = #{state}
	    WHERE MANDT = #{mandt}
		  AND QTNUM	= #{qtnum}
		  AND QTSER = #{qtser}
		  AND QTSEQ = #{qtseq}
		  AND PSPID = #{pspid}
		  AND POSID = #{posid}
		  AND ATYPE = #{atype}
		  AND GUBUN = #{gubun}
		  AND BLSEQ = #{blseq}
	</update>

	<update id="mergeZsdt1054H" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		MERGE INTO SAPHEE.ZSDT1054H AS T1
		USING ( SELECT  CAST(#{mandt}  AS VARCHAR(9) ) AS MANDT
							, CAST(#{qtnum} AS VARCHAR(30)) AS QTNUM
							, CAST(#{qtser}   AS SMALLINT    ) AS QTSER
							, CAST(#{pspid}  AS VARCHAR(72)) AS PSPID
					 FROM SYSIBM.SYSDUMMY1
				 ) AS T2 ON T1.MANDT = T2.MANDT
						 AND T1.QTNUM = T2.QTNUM
						 AND T1.QTSER = T2.QTSER
						 AND T1.PSPID = T2.PSPID
	
		WHEN MATCHED THEN
				UPDATE SET	T1.FLAG  = #{flag}
							  , T1.UDATE = HEX(CURRENT DATE)
							  , T1.UTIME = HEX(CURRENT TIME)
							  , T1.UUSER = #{uuser}
	
		WHEN NOT MATCHED THEN
				INSERT ( MANDT
						  , QTNUM
						  , QTSER
						  , PSPID
						  , FLAG
						  , CDATE
						  , CTIME
						  , CUSER
						  ) VALUES (
						   #{mandt}
						  , #{qtnum}
						  , #{qtser}
						  , #{pspid}
						  , #{flag}
						  , HEX(CURRENT DATE)
						  , HEX(CURRENT TIME)
						  , #{cuser}
						  )
	</update>

	<update id="mergeZsdt1054D" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		MERGE INTO SAPHEE.ZSDT1054D AS T1
		USING ( SELECT  CAST(#{mandt}  AS VARCHAR(9) ) AS MANDT
							, CAST(#{qtnum} AS VARCHAR(30)) AS QTNUM
							, CAST(#{qtser}   AS SMALLINT    ) AS QTSER
							, CAST(#{qtseq}  AS SMALLINT    ) AS QTSEQ
							, CAST(#{pspid}  AS VARCHAR(72)) AS PSPID
							, CAST(#{posid}  AS VARCHAR(72)) AS POSID
							, CAST(#{atype}  AS VARCHAR(90)) AS ATYPE
							, CAST(#{gubun} AS VARCHAR(3) ) AS GUBUN
							, CAST(#{blseq}   AS VARCHAR(6)    ) AS BLSEQ
					 FROM SYSIBM.SYSDUMMY1
				 ) AS T2 ON T1.MANDT = T2.MANDT
						 AND T1.QTNUM = T2.QTNUM
						 AND T1.QTSER   = T2.QTSER
						 AND T1.QTSEQ   = T2.QTSEQ
						 AND T1.PSPID    = T2.PSPID
						 AND T1.POSID    = T2.POSID
						 AND T1.ATYPE    = T2.ATYPE
						 AND T1.GUBUN  = T2.GUBUN
						 AND T1.BLSEQ    = T2.BLSEQ
	
		WHEN MATCHED THEN
				UPDATE SET T1.BLSEQ  = #{blseq}
							  , T1.BLNUM = #{blnum}
							  , T1.BLNAM = #{blnam}
							  , T1.ZITEM  = #{zitem}
							  , T1.ZCHAR  = #{zchar}
							  , T1.ZQUTY  = #{zquty}
							  , T1.ZAMNT = CAST(#{zamnt} AS DECIMAL(15,2)) / 100
							  , T1.ZTOTL   = CAST(#{ztotl} AS DECIMAL(15,2)) / 100
							  , T1.BIGO    = #{bigo}
							  , T1.TEX1    = #{tex1}
							  , T1.TEX2    = #{tex2}
							  , T1.FLAG    = #{flag}
	
		WHEN NOT MATCHED THEN
				INSERT ( MANDT
						  , QTNUM
						  , QTSER
						  , QTSEQ
						  , PSPID
						  , POSID
						  , ATYPE
						  , GUBUN
						  , SERIA
						  , BLSEQ
						  , BLNUM
						  , BLNAM
						  , ZITEM
						  , ZCHAR
						  , ZQUTY
						  , ZAMNT
						  , ZTOTL
						  , BIGO
						  , TEX1
						  , TEX2
						  , FLAG
						  ) VALUES (
						   #{mandt}
						  , #{qtnum}
						  , #{qtser}
						  , #{qtseq}
						  , #{pspid}
						  , #{posid}
						  , #{atype}
						  , #{gubun}
						  , #{seria}
						  , #{blseq}
						  , #{blnum}
						  , #{blnam}
						  , #{zitem}
						  , #{zchar}
						  , #{zquty}
						  , CAST(#{zamnt} AS DECIMAL(15,2)) / 100
						  , CAST(#{ztotl} AS DECIMAL(15,2)) / 100
						  , #{bigo}
						  , #{tex1}
						  , #{tex2}
						  , #{flag}
						  )
	</update>

	<resultMap id="selectListClassMap" type="hdel.sd.ses.domain.Ses0031">
	    <result property="mandt"   column="MANDT"/>
		<result property="matnr"    column="MATNR"/>
		<result property="class_cd" column="CLASS_CD" />
	</resultMap>

	<delete id="deleteZsdt1054H" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZSDT1054H
		 WHERE MANDT = #{mandt}
		   <if test="qtnum !=null and qtnum !=''"> AND QTNUM = #{qtnum} </if>
		   <if test="qtser !=null and qtser !=''"> AND QTSER = #{qtser} </if>
		   <if test="pspid !=null and pspid !=''"> AND PSPID = #{pspid} </if>
	</delete>

	<delete id="deleteZsdt1054D" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZSDT1054D
		 WHERE MANDT = #{mandt}
			<if test="qtnum !=null and qtnum !=''"> AND QTNUM = #{qtnum} </if>
			<if test="qtser !=null and qtser !=''"> AND QTSER = #{qtser} </if>
			<if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq} </if>
			<if test="pspid !=null and pspid !=''"> AND PSPID = #{pspid} </if>
			<if test="posid !=null and posid !=''"> AND POSID = #{posid} </if>
	</delete>

	<select id="selectListClass" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListClassMap">
		with smtr as (
			select inob.mandt, inob.objek as matnr, makt.maktx, klah.class
			from saphee.inob as inob
				inner join saphee.kssk as kssk on inob.mandt=kssk.mandt and inob.cuobj=kssk.objek
				inner join saphee.klah as klah on kssk.mandt=klah.mandt and kssk.clint=klah.clint
				left join saphee.makt as makt on inob.mandt=makt.mandt and inob.objek=makt.matnr and makt.spras='3'
			where inob.mandt=#{mandt} and inob.klart='300'
		)
		select mandt, matnr, class as class_cd
		from smtr
		
		union all
		select z1033.mandt, z1033.vsmtr as matnr, smtr.class as class_cd
		from saphee.zsdt1033 as z1033
			inner join smtr on z1033.mandt=smtr.mandt and z1033.rsmtr=smtr.matnr
			left join saphee.zsdt1034 as z1034 on z1033.mandt=z1034.mandt and z1033.vsmtr=z1034.vsmtr and z1034.spras='3'
		order by 2
		with ur
	</select>

	<update id="updateSorlt" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT1001 SET 	-- 수주계획
		       SORLT = #{sorlt}		-- 수주결과
		WHERE (MANDT, SONNR) IN (SELECT MANDT, SONNR
								   FROM SAPHEE.ZSDT1047
								  WHERE MANDT = #{mandt}		-- 클라이언트
							 		AND QTNUM = #{qtnum}
							 		AND QTSER = #{qtser}
								 )
		WITH UR
	</update>

	<resultMap id="selectListAcapaMap" type="hdel.sd.ses.domain.Ses0031"> 
	    <result property="mandt" column="MANDT"/>
	    <result property="atinn" column="ATINN"/>
	    <result property="atzhl" column="ATZHL"/>
	    <result property="atwrt" column="ATWRT"/>
	    <result property="zacapa" column="ZACAPA"/>
	    <result property="spras" column="SPRAS"/>
	</resultMap>
	<select id="selectListAcapa" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListAcapaMap">
		 SELECT A.MANDT
				 , A.ATINN
				 , A.ATZHL
				 , A.ATWRT
				 , CASE WHEN B.LOC = 0 THEN ''
						  ELSE REPLACE(B.ATWTB, SUBSTR(B.ATWTB, 1, B.LOC), '') END AS ZACAPA
				 , B.SPRAS
		  FROM SAPHEE.CAWN A
				, TABLE
				 ( SELECT MANDT
						   , ATINN
						   , ATZHL
						   , REPLACE(REPLACE(ATWTB, '(L)', 'L'), 'kg)', '') AS ATWTB
						   , LOCATE('(', REPLACE(REPLACE(ATWTB, '(L)', 'L'), 'kg)', '')) AS LOC
						   , SPRAS
					 FROM SAPHEE.CAWNT
				   WHERE MANDT = #{mandt}
					  AND ATINN = #{atinn}
					  AND SPRAS = #{spras}
				  ) B
		WHERE A.MANDT= #{mandt}
		   AND A.ATINN  = #{atinn}
		   AND A.MANDT = B.MANDT
		   AND A.ATZHL  = B.ATZHL
	   ORDER BY A.ATZHL
		WITH UR
	</select>

	<update id="updateHeaderFlag" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT1046
		   SET ZPRGFLG = #{zprgflg}
		   	 , UDATE   = HEX(CURRENT DATE)
		   	 , UTIME   = HEX(CURRENT TIME)
		   	 , UUSER   = #{uuser}
		 WHERE MANDT = #{mandt}
		   AND QTNUM = #{qtnum}
		   AND QTSER = #{qtser}
	</update>

	<update id="updateDwgFlag" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT1046
		   SET AUTOLP ='Y'
		 WHERE MANDT = #{mandt}
		   AND QTNUM = #{qtnum}
		   AND QTSER = #{qtser}
	</update>

	<resultMap id="selectListExchangeMap" type="hdel.sd.ses.domain.Ses0031"> 
	    <result property="mandt" column="MANDT"/>
	    <result property="zyear" column="ZYEAR"/>
	    <result property="zmonth" column="ZMONTH"/>
	    <result property="krwusd" column="KRWUSD"/>
	    <result property="krwjpy" column="KRWJPY"/>
	    <result property="krweur" column="KRWEUR"/>
	</resultMap>
	<select id="selectListExchange" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectListExchangeMap">
		SELECT MANDT
				, ZYEAR
				, ZMONTH
				, KRWUSD
				, KRWJPY
				, KRWEUR
		  FROM SAPHEE.ZSDT0013
		 WHERE MANDT   = #{mandt}
			AND ZYEAR  = #{zyear}
			AND ZMONTH = #{zmonth}
		WITH UR
	</select>

<!-- 2018.03.06 환율 조회 로직 공통모듈화 (com.dao.selectQtExchange)
	<select id="selectNewExchange" parameterType="map" resultMap="selectListExchangeMap">
		SELECT AA.MANDT
		     , CAST(MAX(AA.KRWJPY) AS DECIMAL(10,5)) AS KRWJPY
		     , MAX(AA.KRWEUR) AS KRWEUR
		     , MAX(AA.KRWUSD) AS KRWUSD
		  FROM (
				SELECT A.MANDT
				     , CASE WHEN A.FCURR = 'JPY' THEN A.UKURS / 100.00000 END AS KRWJPY
					 , CASE WHEN A.FCURR = 'EUR' THEN A.UKURS END AS KRWEUR
					 , CASE WHEN A.FCURR = 'USD' THEN A.UKURS END AS KRWUSD
				  FROM (
						SELECT MANDT, FCURR, UKURS
						  FROM SAPHEE.ZTCURR
						 WHERE MANDT = #{mandt}
						   AND TCURR = 'KRW'
						   AND KURST = 'Q'
						   AND #{date} BETWEEN FRDAT AND TODAT
						 ) AS A
				)AS AA
		GROUP BY AA.MANDT
		WITH UR
	</select>
-->
	<update id="updateInitCostZSDT1047" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT1047
		   SET  ZUAM  = #{zuam}
			  , ZCOST = #{zcost}
			  , SHANG = #{shang}
	    WHERE MANDT = #{mandt}
		  AND QTNUM	= #{qtnum}
		  AND QTSER = #{qtser}
		  AND MATNR != 'Y-1000'		-- SP는 단가 입력된 정보 유지 필요.(MATNR != "Y-1000")
		  AND MATNR != 'Y-200'      -- SP 예비품 EL
		  AND MATNR != 'Y-300'      -- SP 예비품 ES
		  AND MATNR != 'L-1100'     -- WL
		  AND MATNR != 'L-1200'     -- DW
	</update>

	<update id="updateInitCostZSDT1046" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT1046
		   SET  ZSUM_ZCOST = #{zcost}
			  , ZSUM_SHANG = #{shang}
	    WHERE MANDT = #{mandt}
		  AND QTNUM	= #{qtnum}
		  AND QTSER = #{qtser}
	</update>


	<update id="updateZsdt0091" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT0091
			  SET   CHWAVWR = #{zuam}
	    WHERE MANDT = #{mandt}
		  AND PSPID	= #{pspid}
		  AND HOGI  = #{posid}
		  AND SEQ   = #{seq}
	</update>

	<update id="updateZsdt0090" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT0090
			  SET   CHWAVWR = #{zuam}
				  , FINL  = #{finl}
	    WHERE MANDT = #{mandt}
		  AND PSPID	= #{pspid}
		  AND SEQ   = #{seq}
	</update>

	<delete id="deleteZcobt309" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZCOBT309
		 WHERE MANDT = #{mandt}
		   <if test="qtnum !=null and qtnum !=''"> AND QTNUM = #{qtnum} </if>
		   <if test="qtser !=null and qtser !=''"> AND QTSER = #{qtser} </if>
		   <if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq} </if>
		   <if test="pspid !=null and pspid !=''"> AND PSPID = #{pspid} </if>
		   <if test="posid !=null and posid !=''"> AND POSID = #{posid} </if>
	</delete>

	<delete id="deleteZcobt302" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZCOBT302
		 WHERE MANDT = #{mandt}
		   <if test="qtnum !=null and qtnum !=''"> AND QTNUM = #{qtnum} </if>
		   <if test="qtser !=null and qtser !=''"> AND QTSER = #{qtser} </if>
		   <if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq} </if>
	</delete>

	<delete id="deleteZcobt202" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZCOBT202
		 WHERE MANDT = #{mandt}
		   <if test="qtnum !=null and qtnum !=''"> AND QTNUM = #{qtnum} </if>
		   <if test="qtser !=null and qtser !=''"> AND QTSER = #{qtser} </if>
		   <if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq} </if>
	</delete>

	<delete id="deleteZsdt1050" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZSDT1050
		 WHERE MANDT = #{mandt}
		   <if test="qtnum !=null and qtnum !=''"> AND QTNUM = #{qtnum} </if>
		   <if test="qtser !=null and qtser !=''"> AND QTSER = #{qtser} </if>
		   <if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq} </if>
	</delete>

	<update id="updateQtserZsdt1001" parameterType="map">
		UPDATE SAPHEE.ZSDT1001 SET 	-- 수주계획
		       SORLT = #{sorlt}		-- 수주결과
		 WHERE MANDT = #{mandt}
		   AND SONNR = #{sonnr}
		   AND ZDELI != 'X'
		WITH UR
	</update>

	
	<select id="selectSonnrCount" parameterType="map" resultType="int">
		SELECT COUNT(*) AS SONNR_CNT
		  FROM SAPHEE.ZSDT1047
		 WHERE MANDT = #{mandt}
		   AND QTNUM = #{qtnum}
		   AND SONNR = #{sonnr}
		WITH UR
	</select>

	<resultMap id="selectKunnrMap" type="hdel.sd.ses.domain.Ses0031"> 
	    <result property="mandt" column="MANDT"/>
	    <result property="kunnr" column="KUNNR"/>
	    <result property="land1_nm" column="LAND1_NM"/>
	    <result property="land1" column="LAND1"/>
	    <result property="name1" column="NAME1"/>
	    <result property="telf1" column="TELF1"/>
	    <result property="telfx" column="TELFX"/>
	</resultMap>

	<select id="selectKunnr" parameterType="map" resultMap="selectKunnrMap">
		SELECT A.MANDT
		     , A.KUNNR
		     , A.LAND1
		     , (SELECT LANDX50 FROM SAPHEE.T005T WHERE MANDT = A.MANDT AND LAND1 = A.LAND1 AND SPRAS = 'E' ) AS LAND1_NM
		     , A.NAME1
		     , A.TELF1
		     , A.TELFX
		FROM SAPHEE.KNA1 AS A
	   WHERE A.MANDT = #{mandt}
		 AND A.KUNNR = #{kunnr}
	     AND A.KTOKD = 'Z004'
	  WITH UR
	</select>

	<update id="updateZsdt0090Status" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT0090
		   SET FINL = #{finl}
	    WHERE MANDT = #{mandt}
		  AND PSPID	= #{pspid}
		  AND SEQ   = #{seq}
	</update>
	
	<delete id="deleteZsdt0713" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZSDT0713
		 WHERE MANDT = #{mandt}
		   <if test="qtnum !=null and qtnum !=''"> AND QTNUM = #{qtnum} </if>
		   <if test="qtser !=null and qtser !=''"> AND QTSER = #{qtser} </if>
		   <if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq} </if>
	</delete>
	
	<delete id="deleteZsdt0712" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		  FROM SAPHEE.ZSDT0712
		 WHERE MANDT = #{mandt}
		   <if test="qtnum !=null and qtnum !=''"> AND QTNUM = #{qtnum} </if>
		   <if test="qtser !=null and qtser !=''"> AND QTSER = #{qtser} </if>
		   <if test="qtseq !=null and qtseq !=''"> AND QTSEQ = #{qtseq} </if>
	</delete>
	
	<update id="updateZsdt0711" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		MERGE INTO SAPHEE.ZSDT0711 AS T1
		USING ( SELECT    CAST(#{mandt}  AS VARCHAR(9))  AS MANDT
						, CAST(#{qtnum}  AS VARCHAR(30)) AS QTNUM
						, CAST(#{qtser}  AS SMALLINT)    AS QTSER
						, VALUE(SUM(ZCOST),   0)         AS COST						
					 FROM SAPHEE.ZSDT1047
					WHERE MANDT = #{mandt}
					  AND QTNUM	= #{qtnum}
					  AND QTSER = #{qtser}
				 ) AS T2 ON T1.MANDT = T2.MANDT
						AND T1.QTNUM = T2.QTNUM
						AND T1.QTSER = T2.QTSER
	
		WHEN MATCHED THEN
				UPDATE SET  T1.UUSER        = #{uuser}
						  , T1.COST         = T2.COST
						  , T1.UDATE        = HEX(CURRENT DATE)
						  , T1.UTIME        = HEX(CURRENT TIME)
	
		WHEN NOT MATCHED THEN
				INSERT ( MANDT
						  , QTNUM
						  , QTSER
						  , COST
						  , CDATE
						  , CTIME
						  , CUSER
						  ) VALUES (
						    #{mandt}
						  , #{qtnum}
						  , #{qtser}
						  , T2.COST
						  , HEX(CURRENT DATE)
						  , HEX(CURRENT TIME)
						  , #{cuser}
						  )
	</update>
	
	<update id="updateZcobt304D" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZCOBT304D
			 SET ADDT01 = CAST(#{addt01} AS DECIMAL(15,2)) / 100
	     WHERE MANDT = #{mandt}
		   AND PSPID = #{pspid}
		   AND POSID = #{posid} -- 304의 KTGRM의 컬럼은 무시되어도  OK
		   AND SEQ   = ( SELECT MAX(SEQ) 
		                 FROM   SAPHEE.ZCOBT304D
		                 WHERE  MANDT = #{mandt}
		   				 AND    PSPID = #{pspid}
		   				 AND    POSID = #{posid}
		                 GROUP BY PSPID, POSID)
	</update>


<!--   -->
	<delete id="deleteZsdt1091" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		 DELETE
		   FROM saphee.zsdt1091
 		  WHERE mandt  = #{mandt}
		    AND qtnum  = #{qtnum}
		    AND qtser  = #{qtser}		  
	</delete>		

 	<delete id="deleteZsdt1093" parameterType="map">
		 DELETE
		   FROM saphee.zsdt1093
 		  WHERE mandt  = #{mandt}
		    AND qtnum  = #{qtnum}
		    AND qtser  = #{qtser}		  
		    AND qtseq  =  CAST(#{qtseq}   AS SMALLINT)		  
 	</delete>		

	<update id="mergeZsdt1091" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
 		MERGE INTO SAPHEE.ZSDT1091 AS T1
		USING ( SELECT  CAST(#{mandt}  AS VARCHAR(9)) AS MANDT
					   , CAST(#{qtnum} AS VARCHAR(30)) AS QTNUM
					   , CAST(#{qtser}   AS SMALLINT) AS QTSER
					 FROM SYSIBM.SYSDUMMY1
				 ) AS T2 ON T1.MANDT 	= T2.MANDT
						 AND T1.QTNUM 	= T2.QTNUM
						 AND T1.QTSER   = T2.QTSER
		WHEN MATCHED THEN
				UPDATE SET
				        	T1.CONQTY20 = NVL((SELECT SUM(CASE WHEN Z48.PRH = 'EL_YCON20'
                                					   		   THEN CAST(DECODE(Z48.PRD,NULL,'0','','0',Z48.PRD) AS INTEGER)
                                 					   		   ELSE 0 
                                					       END)
                               				   FROM SAPHEE.ZSDT1048 Z48
											   WHERE 1=1
											   AND Z48.MANDT = #{mandt}
											   AND Z48.QTNUM = #{qtnum}
											   AND Z48.QTSER = #{qtser}
										    GROUP BY Z48.MANDT
											    	,Z48.QTNUM
													,Z48.QTSER
											  ) , 0)
						  	,T1.CONQTY40 = NVL((SELECT SUM(CASE WHEN Z48.PRH = 'EL_YCON40'
                                					   		    THEN CAST(DECODE(Z48.PRD,NULL,'0','','0',Z48.PRD) AS INTEGER)
                                 					   		    ELSE 0 
                                					        END)
                               				   FROM SAPHEE.ZSDT1048 Z48
											   WHERE 1=1
											   AND Z48.MANDT = #{mandt}
											   AND Z48.QTNUM = #{qtnum}
											   AND Z48.QTSER = #{qtser}
										    GROUP BY Z48.MANDT
											    	,Z48.QTNUM
													,Z48.QTSER
											  ) , 0)
						   ,T1.EGIS_FLAG     = #{egisFlag}
						   ,T1.EGIS_EST_NO   = #{egisEstNo}
						   ,T1.EGIS_EST_SEQ  = CAST(#{egisEstSeq}   AS SMALLINT)
 						   ,T1.PSPID_CO  	= CAST(#{pspidCo} AS VARCHAR(72))
						   ,T1.DEPTPORT  	= CAST(#{deptport} AS VARCHAR(30))
						   ,T1.DESTPORT  	= CAST(#{destport} AS VARCHAR(30))
						  , T1.AEDAT    = HEX(CURRENT DATE)
						  , T1.AEZET    = HEX(CURRENT TIME)
						  , T1.AENAM    = #{uuser}	
		WHEN NOT MATCHED THEN
				INSERT ( T1.MANDT
						, T1.QTNUM
						, T1.QTSER
						, T1.LH
						, T1.CONQTY20
						, T1.CONQTY40
					    , T1.EGIS_FLAG     
						, T1.EGIS_EST_NO   
						, T1.EGIS_EST_SEQ  
 					    , T1.PSPID_CO
						, T1.DEPTPORT
						, T1.DESTPORT
						, T1.ERDAT
						, T1.ERZET
						, T1.ERNAM
						, T1.AEDAT
						, T1.AEZET
						, T1.AENAM
				     ) VALUES (
					    #{mandt}
					   , #{qtnum}
					   , CAST(#{qtser}   AS SMALLINT)
					   , ''
					   , NVL((SELECT SUM(CASE WHEN Z48.PRH = 'EL_YCON20'
                                     		   THEN CAST(DECODE(Z48.PRD,NULL,'0','','0',Z48.PRD) AS INTEGER)
                                 			   ELSE 0 
                                		   END)
                               FROM SAPHEE.ZSDT1048 Z48
							   WHERE 1=1
							   AND Z48.MANDT = #{mandt}
							   AND Z48.QTNUM = #{qtnum}
							   AND Z48.QTSER = #{qtser}
						    GROUP BY Z48.MANDT
						        	,Z48.QTNUM
									,Z48.QTSER
						 ) , 0)
					   , NVL((SELECT SUM(CASE WHEN Z48.PRH = 'EL_YCON40'
                                     		   THEN CAST(DECODE(Z48.PRD,NULL,'0','','0',Z48.PRD) AS INTEGER)
                                 			   ELSE 0 
                                		   END)
                               FROM SAPHEE.ZSDT1048 Z48
							   WHERE 1=1
							   AND Z48.MANDT = #{mandt}
							   AND Z48.QTNUM = #{qtnum}
							   AND Z48.QTSER = #{qtser}
						    GROUP BY Z48.MANDT
						        	,Z48.QTNUM
									,Z48.QTSER
						 ) , 0)
   				       , #{egisFlag}
					   , #{egisEstNo}
					   , CAST(#{egisEstSeq}   AS SMALLINT)
 					   , CAST(#{pspidCo} AS VARCHAR(72))
					   , CAST(#{deptport} AS VARCHAR(30))
					   , CAST(#{destport} AS VARCHAR(30))
					   , HEX(CURRENT DATE)
					   , HEX(CURRENT TIME)
					   , #{cuser}
					   , HEX(CURRENT DATE)
					   , HEX(CURRENT TIME)
					   , #{uuser}
				     )
	</update>
	
	<insert id="addZsdt1091" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		INSERT INTO SAPHEE.ZSDT1091 ( MANDT
									, QTNUM
									, QTSER
							        , LH
             						, CONQTY20
			            			, CONQTY40
								    , EGIS_FLAG     
									, EGIS_EST_NO   
									, EGIS_EST_SEQ  
								    , PSPID_CO
									, DEPTPORT
									, DESTPORT
						            , ERDAT
						            , ERZET
						            , ERNAM
						            , AEDAT
						            , AEZET
						            , AENAM
				               )
							SELECT 	  MANDT
									, QTNUM
									, CAST(#{max_qtser}   AS SMALLINT    ) AS QTSER
									, LH
									, CONQTY20
									, CONQTY40
									, EGIS_FLAG
									, EGIS_EST_NO
									, CAST(#{max_qtser}   AS SMALLINT    ) AS EGIS_EST_SEQ
									, PSPID_CO
									, DEPTPORT
									, DESTPORT
									, HEX(CURRENT DATE)
									, HEX(CURRENT TIME)
									, CAST(#{cuser} AS VARCHAR(30))
									, HEX(CURRENT DATE)
									, HEX(CURRENT TIME)
									, CAST(#{uuser} AS VARCHAR(30))
							  FROM SAPHEE.ZSDT1091
						     WHERE MANDT = #{mandt}
							   AND QTNUM = #{qtnum}
							   AND QTSER = #{qtser}
	</insert>
	
	<update id="updateZsdt1091Lh" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT1091 AS T1 
		   SET T1.LH = NVL((SELECT DECODE(COUNT(*),0,'','X')  LH
		    			  FROM saphee.zsdt1048 Z48
		                 WHERE 1=1
			               AND z48.mandt = T1.mandt
                           AND z48.QTNUM = T1.qtnum
		                   AND z48.QTSER = T1.qtser
	                       AND Z48.prh   = 'EL_ASPC'
	                       AND Z48.prd   = 'JU' 
		              GROUP BY Z48.MANDT
		    	              ,Z48.QTNUM
				              ,Z48.QTSER
	                   ),'') 		              
		      ,T1.ERDAT    = HEX(CURRENT DATE)
			  ,T1.ERZET    = HEX(CURRENT TIME)
			  ,T1.ERNAM    = #{uuser}	
	     WHERE T1.MANDT = #{mandt}
           AND T1.QTNUM = #{qtnum}
		   AND T1.QTSER = #{qtser}
	</update>
	
	<update id="updateZsdt1091" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT1091 AS T1
		   SET T1.LH = NVL((SELECT DECODE(COUNT(*),0,'','X')  LH
		    			  FROM saphee.zsdt1048 Z48
		                 WHERE 1=1
			               AND z48.mandt = T1.mandt
                           AND z48.QTNUM = T1.qtnum
		                   AND z48.QTSER = T1.qtser
	                       AND Z48.prh   = 'EL_ASPC'
	                       AND Z48.prd   = 'JU' 
		              GROUP BY Z48.MANDT
		    	              ,Z48.QTNUM
				              ,Z48.QTSER
	                   ),'') 		              
			   ,T1.EGIS_FLAG     = #{egisFlag}
			   ,T1.EGIS_EST_NO   = #{egisEstNo}
			   ,T1.EGIS_EST_SEQ  = CAST(#{egisEstSeq}   AS SMALLINT)
		      ,T1.CONQTY20 = 0
			  ,T1.CONQTY40 = 0	            
			  ,T1.ERDAT    = HEX(CURRENT DATE)
			  ,T1.ERZET    = HEX(CURRENT TIME)
			  ,T1.ERNAM    = #{uuser}	
	     WHERE T1.MANDT = #{mandt}
           AND T1.QTNUM = #{qtnum}
		   AND T1.QTSER = #{qtser}
	</update>

	<update id="updateCoElqty" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT1048 AS T1
		   SET   T1.PRD    = #{prd}
			   , T1.UDATE = HEX(CURRENT DATE)
			   , T1.UTIME = HEX(CURRENT TIME)
			   , T1.UUSER = #{uuser}
	     WHERE T1.MANDT = #{mandt}
           AND T1.QTNUM = #{qtnum}
		   AND T1.QTSER = #{qtser}
		   AND T1.PRH   = #{prh}
	</update>


	<update id="mergeZsdt1093" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		MERGE INTO SAPHEE.ZSDT1093 AS T1
		USING ( SELECT  CAST(#{mandt}  AS VARCHAR(9)) AS MANDT
							, CAST(#{qtnum} AS VARCHAR(30)) AS QTNUM
							, CAST(#{qtser}   AS SMALLINT) AS QTSER
							, CAST(#{qtseq}  AS SMALLINT) AS QTSEQ
					 FROM SYSIBM.SYSDUMMY1
				 ) AS T2 ON T1.MANDT = T2.MANDT
						 AND T1.QTNUM = T2.QTNUM
						 AND T1.QTSER   = T2.QTSER
						 AND T1.QTSEQ   = T2.QTSEQ
		WHEN MATCHED THEN
				UPDATE SET
						  	T1.EGIS_EST_NO = #{egisEstNo}
						  , T1.EGIS_EST_SEQ = CAST(#{egisEstSeq}  AS SMALLINT)
						  , T1.EGIS_EST_SERNO = CAST(#{egisEstSerno}  AS SMALLINT)
						  , T1.EGIS_SPEC_TYPE = #{egisSpecType}
						  , T1.ERDAT    = HEX(CURRENT DATE)
						  , T1.ERZET    = HEX(CURRENT TIME)
						  , T1.ERNAM    = #{uuser}	
		WHEN NOT MATCHED THEN
				INSERT ( T1.MANDT
						, T1.QTNUM
						, T1.QTSER
						, T1.QTSEQ
						, T1.EGIS_EST_NO
						, T1.EGIS_EST_SEQ
						, T1.EGIS_EST_SERNO
						, T1.EGIS_SPEC_TYPE
						, T1.ERDAT
						, T1.ERZET
						, T1.ERNAM
						, T1.AEDAT
						, T1.AEZET
						, T1.AENAM
				     ) VALUES (
					    #{mandt}
					   , #{qtnum}
					   , CAST(#{qtser}   AS SMALLINT)
					   , CAST(#{qtseq}   AS SMALLINT)
					   , #{egisEstNo}
					   , CAST(#{egisEstSeq}  AS SMALLINT)
					   , CAST(#{egisEstSerno}  AS SMALLINT)
					   , #{egisSpecType}
					   , HEX(CURRENT DATE)
					   , HEX(CURRENT TIME)
					   , #{cuser}
					   , HEX(CURRENT DATE)
					   , HEX(CURRENT TIME)
					   , #{uuser}
				     )
	</update>

	<insert id="addZsdt1093" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		INSERT INTO SAPHEE.ZSDT1093 ( MANDT
									, QTNUM
									, QTSER
									, QTSEQ
									, EGIS_EST_NO
									, EGIS_EST_SEQ
									, EGIS_EST_SERNO
									, EGIS_SPEC_TYPE
						            , ERDAT
						            , ERZET
						            , ERNAM
						            , AEDAT
						            , AEZET
						            , AENAM
				               ) 
							 SELECT   MANDT
									, QTNUM
									, CAST(#{max_qtser}   AS SMALLINT    )
									, QTSEQ
									, EGIS_EST_NO
									, CAST(#{max_qtser}   AS SMALLINT    ) 
									, EGIS_EST_SERNO
									, EGIS_SPEC_TYPE
									, HEX(CURRENT DATE)
									, HEX(CURRENT TIME)
									, CAST(#{cuser} AS VARCHAR(30))
									, HEX(CURRENT DATE)
									, HEX(CURRENT TIME)
									, CAST(#{uuser} AS VARCHAR(30))
							   FROM SAPHEE.ZSDT1093
							  WHERE MANDT 	= #{mandt}
								AND QTNUM	= #{qtnum}
								AND QTSER	= #{qtser}				               
 	</insert>
	
	<resultMap id="selectEgisFlagMap" type="hdel.sd.ses.domain.Ses0031ParamVO">
		<result property="mandt" column="mandt"/>
		<result property="qtnum" column="qtnum"/>
		<result property="qtser" column="qtser"/>
		<result property="egisFlag" column="egisFlag"/>
	</resultMap>
	
	<select id="selectEgisFlag" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectEgisFlagMap">  
		SELECT MANDT
		      ,QTNUM
		      ,QTSER
		      ,NVL(EGIS_FLAG,'') AS egisFlag
		FROM SAPHEE.ZSDT1091
		WHERE 1=1
		AND MANDT = #{mandt}
		AND QTNUM = #{qtnum}
		AND QTSER = #{qtser}
	</select>

	<resultMap id="selectRatioMap" type="hdel.sd.ses.domain.Ses0031ParamVO">
		<result property="mandt" column="mandt"/>
		<result property="qtnum" column="qtnum"/>
		<result property="qtser" column="qtser"/>
		<result property="ratio" column="ratio"/>
	</resultMap>

	<select id="selectRatio" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectRatioMap">  
			SELECT BBB.MANDT
			      ,BBB.QTNUM
				  ,BBB.QTSER
			      ,CAST((AAA.RATIO /100) + 1 AS DECIMAL(5,4))  AS RATIO
			FROM SAPHEE.ZSDT1131 AS AAA
			INNER JOIN TABLE (
								SELECT A.MANDT
								      ,A.QTNUM
								      ,A.QTSER
								      ,B.LAND1
								      ,A.QTDAT
								FROM SAPHEE.ZSDT1046 AS A
								LEFT JOIN SAPHEE.KNA1 AS B
								ON 1=1
								AND A.MANDT = B.MANDT
								AND A.KUNNR = B.KUNNR
								AND B.KTOKD IN ( 'Z001', 'Z002', 'Z004' )
								WHERE 1=1
								AND A.MANDT = #{mandt}
								AND A.QTNUM = #{qtnum} 			/* 'E200012532' */
								AND A.QTSER = #{qtser}         	/* '1' */
			)   AS BBB
			ON  1=1
			AND AAA.MANDT 	= BBB.MANDT
			AND AAA.RATIOTP = 'M'
			AND AAA.LAND1 	= BBB.LAND1
			AND AAA.FRDAT 	&lt;= BBB.QTDAT
			AND AAA.TODAT 	&gt;= BBB.QTDAT
	</select>

	<select id="selectEgisData" parameterType="hdel.sd.ses.domain.Ses0031ParamVO" resultMap="selectRatioMap">  
		SELECT  (CASE WHEN CAST((CAST(#{zuam} AS DECIMAL(15,2)) * Z1047.ZNUMBER * CAST(#{ratio} AS DECIMAL(5,4))) AS DECIMAL(15,2)) = 0 THEN 0
			  	 	  WHEN CAST((CAST(#{zuam} AS DECIMAL(15,2)) * Z1047.ZNUMBER * CAST(#{ratio} AS DECIMAL(5,4))) AS DECIMAL(15,2)) != 0 AND (CAST(#{zuam} AS DECIMAL(15,2))) * VALUE(Z1047.ZNUMBER, 0) * 100.00 / CAST((CAST(#{zuam} AS DECIMAL(15,2)) * Z1047.ZNUMBER * CAST(#{ratio} AS DECIMAL(5,4))) AS DECIMAL(15,2)) > 999 THEN 999
				  	  ELSE ROUND((CAST(#{zuam} AS DECIMAL(15,2))) * VALUE(Z1047.ZNUMBER, 0) * 100.00, 1) / CAST((CAST(#{zuam} AS DECIMAL(15,2)) * Z1047.ZNUMBER * CAST(#{ratio} AS DECIMAL(5,4))) AS DECIMAL(15,2)) 
				   END
				 )                                AS SHANG 
				,CAST((CAST(#{zuam} AS DECIMAL(15,2)) * Z1047.ZNUMBER * CAST(#{ratio} AS DECIMAL(5,4))) AS DECIMAL(15,2))             AS ZEAM 
		 FROM SAPHEE.ZSDT1047 Z1047
		WHERE Z1047.MANDT = #{mandt}
		  AND Z1047.QTNUM = #{qtnum}
		  AND Z1047.QTSER = #{qtser}
		  AND Z1047.QTSEQ = #{qtseq}
		WITH UR

	</select>

	<update id="updateDetailEgis" parameterType="hdel.sd.ses.domain.Ses0031ParamVO">
		UPDATE SAPHEE.ZSDT1047   
			  SET   ZUAM = #{zuam}
				  , ZCOST = CAST(#{zuam} AS DECIMAL(15,2)) *  VALUE(ZNUMBER, 0)
     			  , SHANG = (CASE WHEN CAST((CAST(#{zuam} AS DECIMAL(15,2)) * ZNUMBER * CAST(#{ratio} AS DECIMAL(5,4))) AS DECIMAL(15,2)) = 0 THEN 0
			 	              WHEN CAST((CAST(#{zuam} AS DECIMAL(15,2)) * ZNUMBER * CAST(#{ratio} AS DECIMAL(5,4))) AS DECIMAL(15,2)) != 0 AND CAST(#{zuam} AS DECIMAL(15,2)) *  VALUE(ZNUMBER, 0) * 100.00 / CAST((CAST(#{zuam} AS DECIMAL(15,2)) * ZNUMBER * CAST(#{ratio} AS DECIMAL(5,4))) AS DECIMAL(15,2)) > 999 THEN 999
			  	              ELSE ROUND(CAST(#{zuam} AS DECIMAL(15,2)) *  VALUE(ZNUMBER, 0) * 100.00, 1) / CAST((CAST(#{zuam} AS DECIMAL(15,2)) * ZNUMBER * CAST(#{ratio} AS DECIMAL(5,4))) AS DECIMAL(15,2)) 
			              END)
				  , ZEAM = (CAST(#{zuam} AS DECIMAL(15,2)) *  VALUE(ZNUMBER, 0)) * CAST(#{ratio} AS DECIMAL(5,4)) 
				  , UDATE = HEX(CURRENT DATE)
				  , UTIME = HEX(CURRENT TIME)
				  , UUSER = #{uuser}
	    WHERE MANDT = #{mandt}
		  AND QTNUM	= #{qtnum}
		  AND QTSER = #{qtser}
		  AND QTSEQ = #{qtseq}
	</update>

</mapper>  
