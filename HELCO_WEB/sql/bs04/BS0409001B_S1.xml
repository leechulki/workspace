<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT A.PSPID, B.BSTNK, C.KUNNR, C.KUNNR_NM AS KUNNRNM, C.VDATU,
             B.VKBUR,
             (SELECT ST.BEZEI FROM SAPHEE.TVKBT AS ST 
                WHERE ST.MANDT = B.MANDT AND ST.SPRAS = '3' AND ST.VKBUR = B.VKBUR) AS VKBURNM,
             B.VKGRP,
             (SELECT ST.BEZEI FROM SAPHEE.TVGRT AS ST 
                WHERE ST.MANDT = B.MANDT AND ST.SPRAS = '3' AND ST.VKGRP = B.VKGRP) AS VKGRPNM,
             C.ZMAN, C.ZMAN_NM, 
             A.MAKE_MM || '01' AS MAKE_MM, 
             SAPHEE.GET_CURRENCY2(CAST(A.WAERK AS VARCHAR(15) ), CAST(A.NETWR_F  AS DECIMAL(13, 2) ) ) AS NETWR_F, 
             SAPHEE.GET_CURRENCY2(CAST(A.WAERK AS VARCHAR(15) ), CAST(A.NETWR_CH  AS DECIMAL(13, 2) ) ) AS NETWR_CH, 
             SAPHEE.GET_CURRENCY2(CAST(A.WAERK AS VARCHAR(15) ), CAST(A.NETWR_L  AS DECIMAL(13, 2) ) ) AS NETWR_L, 

             SAPHEE.GET_CURRENCY2(CAST(A.WAERK AS VARCHAR(15) ), CAST(A.WAVWR_F  AS DECIMAL(13, 2) ) ) AS WAVWR_F, 
             SAPHEE.GET_CURRENCY2(CAST(A.WAERK AS VARCHAR(15) ), CAST(A.WAVWR_CH  AS DECIMAL(13, 2) ) ) AS WAVWR_CH, 
             SAPHEE.GET_CURRENCY2(CAST(A.WAERK AS VARCHAR(15) ), CAST(A.WAVWR_L  AS DECIMAL(13, 2) ) ) AS WAVWR_L,              
                          

             A.WAERK,
             A.ERNAM, 
             VALUE((SELECT ST.USERNAME FROM SAPHEE.ZUSERF AS ST 
                           WHERE ST.MANDT = A.MANDT AND ST.USERNUMB = A.ERNAM), '') AS ERNAMNM,
             A.ERDAT, 
             A.AEUSN, 
             VALUE((SELECT ST.USERNAME FROM SAPHEE.ZUSERF AS ST 
                           WHERE ST.MANDT = A.MANDT AND ST.USERNUMB = A.AEUSN), '') AS AEUSNNM,
             A.AEDAT,
 
             VALUE( (SELECT  MAX(ST.IRATE)  FROM SAPHEE.ZSDT0020 AS ST
                            WHERE ST.MANDT =  A.MANDT AND ST.PSPID = A.PSPID), 0.0) AS PRO_R,
             
             A.RATE_F,
             --(CASE WHEN A.NETWR_F > 0 THEN  (A.WAVWR_F / A.NETWR_F)    ELSE 0.0 END ) AS RATE_F, 
             A.RATE_CH,
             --(CASE WHEN A.NETWR_CH > 0 THEN  (A.WAVWR_CH / A.NETWR_CH)     ELSE 0.0 END ) AS RATE_CH,            
             A.RATE_L,
             --(CASE WHEN A.NETWR_L > 0 THEN  (A.WAVWR_L / A.NETWR_L)  ELSE 0.0 END ) AS RATE_L,             
             A.BIGO1, 
             CAST(A.BIGO2 AS VARCHAR(3000)) AS BIGO2,
             A.BIGO3,B.RECAD_DA , 

             SAPHEE.GET_CURRENCY2(CAST(A.WAERK AS VARCHAR(15) ), CAST(A.CH_NETWR  AS DECIMAL(13, 2) ) ) AS CH_NETWR,              
             --VALUE((SELECT CASE WHEN A.WAERK = 'KRW' OR A.WAERK = 'JPY' 
             --                                           THEN SUM(ST.NETWR_CH - ST.NETWR) * 100    
             --                                  ELSE SUM(ST.NETWR_CH - ST.NETWR) END                                      
             --                FROM SAPHEE.ZSDTW002 AS ST
             --              WHERE ST.MANDT = A.MANDT AND ST.PSPID = A.PSPID 
             --                  AND  ST.MAKE_MM = A.MAKE_MM), 0) AS  CH_NETWR,

             SAPHEE.GET_CURRENCY2(CAST(A.WAERK AS VARCHAR(15) ), CAST(A.CH_WAVWR  AS DECIMAL(13, 2) ) ) AS CH_WAVWR,              
             --VALUE((SELECT CASE WHEN A.WAERK = 'KRW' OR A.WAERK = 'JPY' 
             --                                         THEN SUM(ST.WAVWR_CH - ST.WAVWR) * 100    
             --                                  ELSE SUM(ST.WAVWR_CH - ST.WAVWR) END                                      
             --                FROM SAPHEE.ZSDTW002 AS ST
             --              WHERE ST.MANDT = A.MANDT AND ST.PSPID = A.PSPID 
             --                  AND ST.MAKE_MM = A.MAKE_MM), 0) AS  CH_WAVWR,

             SAPHEE.GET_CURRENCY2(CAST(A.WAERK AS VARCHAR(15) ), CAST(A.MR_NETWR  AS DECIMAL(13, 2) ) ) AS MR_NETWR,              
             --VALUE((SELECT CASE WHEN A.WAERK = 'KRW' OR A.WAERK = 'JPY'   
             --                                 THEN (SUM(ST.NETWR_CH - ST.NETWR) - SUM(ST.WAVWR_CH - ST.WAVWR)) * 100   
             --                                   ELSE (SUM(ST.NETWR_CH - ST.NETWR) - SUM(ST.WAVWR_CH - ST.WAVWR)) END                          
             --               FROM SAPHEE.ZSDTW002 AS ST
             --             WHERE ST.MANDT = A.MANDT AND ST.PSPID = A.PSPID 
             --                 AND ST.MAKE_MM = A.MAKE_MM), 0) AS  MR_NETWR,

             A.MR_RATE1 AS MR_RATE1,
             A.MR_RATE2 AS MR_RATE2,
             A.ACTION AS ACTION,
             A.YEARM_F,
             A.YEARM_L,
             VALUE((SELECT X3.NAME1
                            FROM SAPHEE.VBAK AS X1 
                            INNER JOIN SAPHEE.VBPA AS X2 
                                ON X1.MANDT = X2.MANDT 
	                AND X1.VBELN = X2.VBELN 
	                AND X2.PARVW = 'Z1'
                           INNER JOIN SAPHEE.LFA1 AS X3 
                               ON X2.MANDT = X3.MANDT 
	               AND X2.LIFNR = X3.LIFNR
                         WHERE X1.MANDT = B.MANDT
                             AND X1.VBELN = B.VBELN ), '') AS NAME1

            ,A.T_DEPT
            --,'ZZZZ' AS T_DEPT
            ,A.EXAM
            ,A.TYPE AS TYPE


    FROM SAPHEE.ZSDTW001 AS A
   INNER JOIN SAPHEE.VBAK AS B
        ON A.MANDT = B.MANDT
      AND A.PSPID   = B.ZZPJT_ID
   INNER JOIN SAPHEE.ZMASTER01 AS C
        ON B.MANDT = C.MANDT
      AND B.ZZPJT_ID = C.POSID

    
   --LEFT OUTER JOIN SAPHEE.KNA1 AS C
   --     ON B.MANDT = C.MANDT
   --   AND B.KUNNR = C.KUNNR

    
  WHERE A.MANDT = #G_MANDT#
      AND A.PSPID = #PSPID# 
      AND A.MAKE_MM = SUBSTR(#MAKE_MM#,1,6)	]]></statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_master">
	</output>
</query>
