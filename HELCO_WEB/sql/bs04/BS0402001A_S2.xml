<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT
       X.PSPID,
       X.POSID,
       X.GUBUNA_NM,
       X.GUBUNB_NM,
       X.KUNNR_NM,
       X.ZSITE_NM,
       X.ADDR,
       X.BSTDK,
       X.VDATU,
       X.RECAD_DA,
       X.VKBUR_NM,
       X.VKGRP_NM,
       X.ZMAN_NM,
       X.SUJU,
       X.MECHUL,
       X.CHEONG,
       X.SUKEUM,
       X.MICH,
       X.BOND_A,
       X.BOND_B,
       (X.MISU + X.BOND_A - X.BOND_B) BOND,
       X.BILL,
       X.GISUNG,
       X.JANEW,
       X.SSDATE1,
       X.SSDATE,
       X.CLDATE1,
       X.CLDATE,
       X.ZZACTSS_NM,
       X.TEMNO_NM,
       X.ZZSHIP1,
       X.ZZCHAKG,
       X.ZZCOMP2,
       X.ZZJUNGO,
       X.PRO_R,
       X.LMDAT,
       X.ILSIC,
       X.BSU_NM,
       X.ZZBPM_NM,
       X.IGD,
       X.BGT,
       X.BMT,
       X.USD,
       X.UHJ,
       X.JHD,
       X.AGING,
       X.ZDELI,
       X.ZQNTY,
       X.JUDGE,
       X.TXT04,
       X.GIJUN,
       X.GUBUN,
       X.STAT,
       X.CAUS,
       X.STRBIGO,
       X.STATDAT,
       X.PRODAT,
       X.BIGO,
       X.TXT30,
       X.WAERK
FROM (

   SELECT 
          X.PSPID,
          X.POSID,
          X.GUBUNA_NM,
          X.GUBUNB_NM,
          X.KUNNR_NM,
          X.ZSITE_NM,
          X.ADDR,
          X.BSTDK,
          X.VDATU,
          X.RECAD_DA,
          X.VKBUR_NM,
          X.VKGRP_NM,
          X.ZMAN_NM,
          X.SUJU,
          X.MECHUL,
          X.CHEONG,
          X.SUJU - X.CHEONG MICH,
          CASE WHEN X.GBN &lt;&gt; 'B' THEN ROUND((X.SUKEUM * 1.1),0) ELSE X.SUKEUM END SUKEUM,
          CASE WHEN X.GBN &lt;&gt; 'B' THEN (
                                       CASE 
                                            WHEN X.CHEONG > X.SUKEUM THEN ROUND((X.CHEONG * 1.1),0) - ROUND((X.SUKEUM * 1.1),0)
                                            ELSE 0 
                                       END
                                      )
                                 ELSE (
                                       CASE 
                                            WHEN X.CHEONG > X.SUKEUM THEN X.CHEONG - X.SUKEUM
                                            ELSE 0 
                                       END
                                      )
                                 END MISU,
          CASE
               WHEN X.MECHUL > X.CHEONG THEN X.MECHUL - X.CHEONG
               ELSE 0 
          END BOND_A,
          CASE WHEN X.GBN &lt;&gt; 'B' THEN (
                                       CASE 
                                            WHEN X.SUKEUM > X.CHEONG THEN ROUND((X.SUKEUM * 1.1),0) - ROUND((X.CHEONG * 1.1),0) 
                                            ELSE 0 
                                       END
                                      )
                                 ELSE (
                                       CASE 
                                            WHEN X.SUKEUM > X.CHEONG THEN X.SUKEUM - X.CHEONG 
                                            ELSE 0 
                                       END
                                      )
                                 END BOND_B,
          X.BILL,
          0 GISUNG,
          X.JANEW,
          X.SSDATE1,
          X.SSDATE,
          X.CLDATE1,
          X.CLDATE,
          X.ZZACTSS_NM,
          X.TEMNO_NM,
          X.ZZSHIP1,
          X.ZZCHAKG,
          X.ZZCOMP2,
          X.ZZJUNGO,
          X.PRO_R,
          X.LMDAT,
          X.ILSIC,
          X.BSU_NM,
          X.ZZBPM_NM,
          X.IGD,
          X.BGT,
          X.BMT,
          X.USD,
          X.UHJ,
          X.JHD,
          X.AGING,
          X.ZDELI,
          X.ZQNTY,
          X.JUDGE,
          X.TXT04,
          X.GIJUN,
          '' GUBUN,
          X.STAT,
          X.CAUS,
          X.STRBIGO,
          X.STATDAT,
          X.PRODAT,
          X.BIGO,
          X.TXT30,
          X.WAERK
     FROM
          (
           SELECT
                  A.GBN,
                  A.PSPID,
                  A.POSID,
                  C.CTEXT2 GUBUNA_NM,
                  D.CTEXT2 GUBUNB_NM,
                  A.KUNNR_NM,
                  A.ZSITE_NM,
                  G.ADDR1 || ' ' || G.ADDR2 ADDR,
                  CASE WHEN A.BSTDK    = '00000000' THEN '' ELSE A.BSTDK    END BSTDK,
                  CASE WHEN A.VDATU    = '00000000' THEN '' ELSE A.VDATU    END VDATU,
                  CASE WHEN A.RECAD_DA = '00000000' THEN '' ELSE A.RECAD_DA END RECAD_DA,
                  A.VKBUR_NM,
                  A.VKGRP_NM,
                  A.ZMAN_NM,
                  
                  CASE CAST(#WAERK# AS CHAR) WHEN 'K' THEN A.SUJU * 100
                                             WHEN 'U' THEN Z.SUOLD_U + Z.SUNEW_U
                                                      ELSE (CASE WHEN Z.WAERK_F = 'KRW' OR Z.WAERK_F = 'JPY' THEN (Z.SUOLD_F + Z.SUNEW_F) * 100 ELSE Z.SUOLD_F + Z.SUNEW_F END)
                  END SUJU,             
                  CASE CAST(#WAERK# AS CHAR) WHEN 'K' THEN A.MECHUL * 100
                                             WHEN 'U' THEN Z.WLOLD_U + Z.RPSCO_U
                                                      ELSE (CASE WHEN Z.WAERK_F = 'KRW' OR Z.WAERK_F = 'JPY' THEN (Z.WLOLD_F + Z.RPSCO_F) * 100 ELSE Z.WLOLD_F + Z.RPSCO_F END)
                  END MECHUL,
                  CASE CAST(#WAERK# AS CHAR) WHEN 'K' THEN A.CHEONG * 100
                                             WHEN 'U' THEN Z.CHEONG_J_U + Z.CHEONG_U
                                             ELSE (CASE WHEN Z.WAERK_F = 'KRW' OR Z.WAERK_F = 'JPY' THEN (Z.CHEONG_J_F + Z.CHEONG_F) * 100 ELSE Z.CHEONG_J_F + Z.CHEONG_F END)
                  END CHEONG,
                  CASE CAST(#WAERK# AS CHAR) WHEN 'K' THEN A.SUKEUM * 100
                                             WHEN 'U' THEN Z.SUKEUM_J_U + Z.SUKEUM_U
                                                      ELSE (CASE WHEN Z.WAERK_F = 'KRW' OR Z.WAERK_F = 'JPY' THEN (Z.SUKEUM_J_F + Z.SUKEUM_F) * 100 ELSE Z.SUKEUM_J_F + Z.SUKEUM_F END)
                  END SUKEUM,
                  CASE CAST(#WAERK# AS CHAR) WHEN 'K' THEN A.BILL * 100
                                             WHEN 'U' THEN Z.BILL_U
                                                      ELSE (CASE WHEN Z.WAERK_F = 'KRW' OR Z.WAERK_F = 'JPY' THEN Z.BILL_F * 100 ELSE Z.BILL_F END)
                  END BILL,
                  CASE CAST(#WAERK# AS CHAR) WHEN 'K' THEN A.JANEW * 100
                                             WHEN 'U' THEN Z.JANEW_U
                                                      ELSE (CASE WHEN Z.WAERK_F = 'KRW' OR Z.WAERK_F = 'JPY' THEN Z.JANEW_F * 100 ELSE Z.JANEW_F END)
                  END JANEW,
   
                  CASE WHEN A.SSDATE1 = '00000000' THEN '' ELSE A.SSDATE1 END SSDATE1,
                  CASE WHEN A.SSDATE  = '00000000' THEN '' ELSE A.SSDATE  END SSDATE,
                  CASE WHEN A.CLDATE1 = '00000000' THEN '' ELSE A.CLDATE1 END CLDATE1,
                  CASE WHEN A.CLDATE  = '00000000' THEN '' ELSE A.CLDATE  END CLDATE,
                  A.ZZACTSS_NM,
                  A.TEMNO_NM,
                  CASE WHEN A.ZZSHIP1 = '00000000' THEN '' ELSE A.ZZSHIP1 END ZZSHIP1,
                  A.ZZCHAKG,
                  CASE WHEN A.ZZCOMP2 = '00000000' THEN '' ELSE A.ZZCOMP2 END ZZCOMP2,
                  A.ZZJUNGO,
                  A.PRO_R,
                  CASE WHEN A.LMDAT IN ('','00') THEN '' ELSE A.LMDAT END LMDAT,
                  A.ILSIC,
                  VALUE(E.ABR_NM,'') BSU_NM,
                  VALUE(F.USERNAME,'') ZZBPM_NM,
                  A.IGD,
                  A.BGT,
                  A.BMT,
                  A.USD,
                  A.UHJ,
                  CASE WHEN A.JHD = '00000000' THEN '' ELSE A.JHD END JHD,
                  A.AGING,
                  A.ZDELI,
                  INT(A.ZQNTY) ZQNTY,
                  A.JUDGE,
                  CASE A.TXT04
                       WHEN 'B' THEN '부도'
                       WHEN 'C' THEN '취소'
                       WHEN 'E' THEN '정산'
                       WHEN 'F' THEN '완료'
                       WHEN 'I' THEN '등록'
                       WHEN 'P' THEN '진행'
                       WHEN 'P1' THEN '진행'
                       WHEN 'R1' THEN '공사중단 수금지연'
                       WHEN 'R2' THEN '공사중단 건축지연'
                       WHEN 'R4' THEN '완검 건축지연'
                       WHEN 'R5' THEN '완검 수금지연'
                       WHEN 'R7' THEN '취소예정'
                       WHEN 'Z' THEN '생산금지'
                       ELSE ''
                  END TXT04,
                  CASE WHEN A.GIJUN = '00000000' THEN '' ELSE A.GIJUN END GIJUN,
                  VALUE(B.S_GUBUN,'') STAT,
                  VALUE(B.S_SAYU,'') CAUS,
                  VALUE(B.S_PROC,'') STRBIGO,
                  VALUE(B.M_DATE,'') STATDAT,
                  VALUE(B.M_GUBUN,'') PRODAT,
                  VALUE(B.S_DESC,'') BIGO,
                  H.TXT30,
                  CASE CAST(#WAERK# AS CHAR) WHEN 'K' THEN Z.WAERK_K
                                             WHEN 'U' THEN Z.WAERK_U
                                                      ELSE Z.WAERK_F
                  END WAERK              
             FROM
                  SAPHEE.ZEIST200 A
                         LEFT OUTER JOIN SAPHEE.ZSDT0504 B ON B.MANDT = A.MANDT
                                                          AND B.PSPID = A.PSPID
                                                          AND B.POSID = A.POSID
                         LEFT OUTER JOIN SAPHEE.ZWBT010 E ON E.MANDT = A.MANDT
                                                         AND E.LGORT = A.ZZBSU
                                                         AND E.LGORT > ''
                         LEFT OUTER JOIN SAPHEE.ZUSERF F ON F.MANDT = A.MANDT
                                                        AND F.USERNUMB = A.ZZBPM,
                  SAPHEE.ZLCODE C,
                  SAPHEE.ZLCODE D,
                  SAPHEE.ZMASTER01 G,
                  SAPHEE.ZMASTER02 H,
                  SAPHEE.ZEIST103  Z
            WHERE
                  A.MANDT  = #G_MANDT#
              AND A.MANDT  = C.MANDT
              AND A.GUBUNA = C.CODE2
              AND C.CODE1  = 'EIS001'
              AND C.LANG   = 'ko'
              AND A.MANDT  = D.MANDT
              AND A.GUBUNB = D.CODE2
              AND D.CODE1  = 'EIS002'
              AND D.LANG   = 'ko'
              AND A.MANDT  = G.MANDT
              AND A.PSPID  = G.POSID
              AND A.MANDT  = H.MANDT
              AND A.PSPID  = H.POSID
              AND A.POSID  = H.POSID_1
              AND A.MANDT  = Z.MANDT
              AND A.PSPID  = Z.PSPID
              AND A.POSID  = Z.POSID
              AND Z.GJAHR  = SUBSTR(#GIJUN#,1,4)
              AND A.GIJUN  = #GIJUN#
           <isNotNull col="PROJ">
              AND A.PSPID LIKE #PROJ# || '%'
           </isNotNull>
           <isNotNull col="GBN">
              AND A.GBN = #GBN#
           </isNotNull>
           <isNotNull col="GBN1">
              AND A.GUBUNA = #GBN1#
           </isNotNull>
           <isNotNull col="GBN2">
              AND (CASE WHEN A.GUBUNA IN ('J','F','G') AND #GBN2# IN ('A0100','A0200') THEN SUBSTR(A.GUBUNA,1,1)||'0100' ELSE #GBN2# END) = A.GUBUNB
              AND (CASE WHEN A.GUBUNA IN ('J','F','G') AND #GBN2# = 'A0100' THEN A.VDATU ELSE '99999999' END) > A.GIJUN
              AND (CASE WHEN A.GUBUNA IN ('J','F','G') AND #GBN2# = 'A0200' THEN A.VDATU ELSE '00000000' END) &lt;= A.GIJUN
           </isNotNull>
           <isNotNull col="VKBUR">
              AND A.VKBUR = #VKBUR#
           </isNotNull>
           <isNotNull col="VKGRP">
              AND A.VKGRP = #VKGRP#
           </isNotNull>
           <isNotNull col="ZZACTSS">
              AND A.ZZACTSS = #ZZACTSS#
           </isNotNull>
           <isNotNull col="TEMNO">
              AND A.TEMNO = #TEMNO#
           </isNotNull>
           <isNotNull col="ZZBPM">
              AND A.ZZBPM = #ZZBPM#
           </isNotNull>
           <isNotNull col="AGING">
           <isNotEqual col="AGING" value="99">
              AND A.AGING &lt;= #AGING#
           </isNotEqual>
           <isEqual col="AGING" value="99">
              AND A.AGING > #AGING#
           </isEqual>
           </isNotNull>
           <isNotNull col="GBN3">
              AND VALUE(B.S_GUBUN,'') = #GBN3#
           </isNotNull>
           <isNotNull col="GBN4">
              AND VALUE(B.S_SAYU,'') = #GBN4#
           </isNotNull>
           <isNotNull col="GBN5">
         <isEqual col="GBN5" value="C">
            AND VALUE(B.M_GUBUN,'') IN ('','A','C')
         </isEqual>
         <isNotEqual col="GBN5" value="C">
            AND VALUE(B.M_GUBUN,'') = #GBN5#
         </isNotEqual>
           </isNotNull>
              AND A.BSTDK BETWEEN #BSTDK_FM# AND #BSTDK_TO#
              AND A.KUNNR_NM LIKE '%' || #KUNNR# || '%'
              AND A.ZMAN_NM  LIKE '%' || #ZMAN# || '%'
          ) X
   ) X
ORDER BY
       X.PSPID,
       X.POSID
WITH UR	</statement>
	<input default-name="ds_cond">
		<col name="G_MANDT" size="255" type="VARCHAR" description="" /> 
		<col name="GIJUN" size="255" type="VARCHAR" description="" /> 
		<col name="PROJ" size="255" type="VARCHAR" description="" /> 
		<col name="GBN1" size="255" type="VARCHAR" description="" /> 
		<col name="GBN2" size="255" type="VARCHAR" description="" /> 
		<col name="VKBUR" size="255" type="VARCHAR" description="" /> 
		<col name="VKGRP" size="255" type="VARCHAR" description="" /> 
		<col name="ZZACTSS" size="255" type="VARCHAR" description="" /> 
		<col name="TEMNO" size="255" type="VARCHAR" description="" /> 
		<col name="ZZBPM" size="255" type="VARCHAR" description="" /> 
		<col name="AGING" size="255" type="VARCHAR" description="" /> 
		<col name="GBN3" size="255" type="VARCHAR" description="" /> 
		<col name="GBN4" size="255" type="VARCHAR" description="" /> 
		<col name="GBN5" size="255" type="VARCHAR" description="" /> 
		<col name="BSTDK_FM" size="255" type="VARCHAR" description="" /> 
		<col name="BSTDK_TO" size="255" type="VARCHAR" description="" /> 
		<col name="KUNNR" size="255" type="VARCHAR" description="" /> 
		<col name="ZMAN" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_list">
	</output>
</query>
