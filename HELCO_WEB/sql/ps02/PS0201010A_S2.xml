<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>0</result-count>
	<statement>
WITH DATE_RANGE(DT, WEEK) AS 
(
SELECT CHAR(DATE(TIMESTAMP_FORMAT(#FROM_DT#,'YYYY-MM-DD')), ISO) AS DT 
		  ,'W'||WEEK_ISO(CHAR(DATE(TIMESTAMP_FORMAT(#FROM_DT#,'YYYY-MM-DD')), ISO)) AS WEEK 
	  FROM SYSIBM.SYSDUMMY1
	  
	UNION ALL 
	
	SELECT CHAR(DATE(DT) + 1 DAY, ISO) AS DT 
		 , 'W'||WEEK_ISO(CHAR(DATE(DT) + 1 DAY, ISO)) AS WEEK 
	  FROM DATE_RANGE 
	 WHERE DT <![CDATA[<]]> CHAR(DATE(TIMESTAMP_FORMAT(#TO_DT#,'YYYY-MM-DD')), ISO) 
)
  
  SELECT 'W'||TRIM(REPEAT('0',2-LENGTH(TRIM(WEEK_ISO(T2.SWEEK_W2)))))||TRIM(WEEK_ISO(T2.SWEEK_W2)) AS SWEEK_W2	-- 2주 전 저장WEEK
 	 , 'W'||TRIM(REPEAT('0',2-LENGTH(TRIM(WEEK_ISO(T2.SWEEK_W3)))))||TRIM(WEEK_ISO(T2.SWEEK_W3)) AS SWEEK_W3 -- 3주 전 저장WEEK
     , 'W'||TRIM(REPEAT('0',2-LENGTH(TRIM(WEEK_ISO(T2.SWEEK_W4)))))||TRIM(WEEK_ISO(T2.SWEEK_W4)) AS SWEEK_W4 -- 4주 전 저장WEEK
     , 'W'||TRIM(REPEAT('0',2-LENGTH(TRIM(WEEK_ISO(T2.SWEEK_W6)))))||TRIM(WEEK_ISO(T2.SWEEK_W6)) AS SWEEK_W6 -- 6주전 저장WEEK
     , SUBSTR(T2.SWEEK_W2,1,4) AS YEAR_W2
     , SUBSTR(T2.SWEEK_W3,1,4) AS YEAR_W3
     , SUBSTR(T2.SWEEK_W4,1,4) AS YEAR_W4
     , SUBSTR(T2.SWEEK_W6,1,4) AS YEAR_W6
	 --, T2.DT			--일자
     , 'W'||TRIM(REPEAT('0',2-LENGTH(TRIM(CHAR(INT(T2.WWEEK))))))||TRIM(CHAR(INT(T2.WWEEK))) AS WWEEK			-- 대상week
     , T2.WWEEK_YEAR	-- 대상WEEK의 YEAR
	 
  FROM
  (
  		SELECT CASE WHEN T.DAY_W2 = '1' -- 일
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 21 DAY - 2 DAY
		            WHEN T.DAY_W2 = '2' -- 월
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 21 DAY + 4 DAY
		            WHEN T.DAY_W2 = '3' -- 화
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 21 DAY + 3 DAY
		            WHEN T.DAY_W2 = '4' -- 수
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 21 DAY + 2 DAY
		            WHEN T.DAY_W2 = '5' -- 목
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 21 DAY + 1 DAY
		            WHEN T.DAY_W2 = '6' -- 금
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 21 DAY
		            WHEN T.DAY_W2 = '7' -- 토
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 21 DAY - 1 DAY
		            ELSE ''
		            END AS SWEEK_W2 -- 2주전 기준WEEK 구하기
		     , CASE WHEN T.DAY_W3 = '1' -- 일
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 28 DAY - 2 DAY
		            WHEN T.DAY_W3 = '2' -- 월
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 28 DAY + 4 DAY
		            WHEN T.DAY_W3 = '3' -- 화
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 28 DAY + 3 DAY
		            WHEN T.DAY_W3 = '4' -- 수
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 28 DAY + 2 DAY
		            WHEN T.DAY_W3 = '5' -- 목
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 28 DAY + 1 DAY
		            WHEN T.DAY_W3 = '6' -- 금
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 28 DAY
		            WHEN T.DAY_W3 = '7' -- 토
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 28 DAY - 1 DAY
		            ELSE ''
		            END AS SWEEK_W3 -- 3주전 기준WEEK 구하기
		     , CASE WHEN T.DAY_W4 = '1' -- 일
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 35 DAY - 2 DAY
		            WHEN T.DAY_W4 = '2' -- 월
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 35 DAY + 4 DAY
		            WHEN T.DAY_W4 = '3' -- 화
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 35 DAY + 3 DAY
		            WHEN T.DAY_W4 = '4' -- 수
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 35 DAY + 2 DAY
		            WHEN T.DAY_W4 = '5' -- 목
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 35 DAY + 1 DAY
		            WHEN T.DAY_W4 = '6' -- 금
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 35 DAY
		            WHEN T.DAY_W4 = '7' -- 토
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 35 DAY - 1 DAY
		            ELSE ''
		            END AS SWEEK_W4 -- 4주전 기준WEEK 구하기
		      , CASE WHEN T.DAY_W6 = '1' -- 일
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 49 DAY - 2 DAY
		            WHEN T.DAY_W6 = '2' -- 월
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 49 DAY + 4 DAY
		            WHEN T.DAY_W6 = '3' -- 화
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 49 DAY + 3 DAY
		            WHEN T.DAY_W6 = '4' -- 수
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 49 DAY + 2 DAY
		            WHEN T.DAY_W6 = '5' -- 목
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 49 DAY + 1 DAY
		            WHEN T.DAY_W6 = '6' -- 금
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 49 DAY
		            WHEN T.DAY_W6 = '7' -- 토
		            THEN DATE(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD')) - 49 DAY - 1 DAY
		            ELSE ''
		            END AS SWEEK_W6 -- 6주전 기준WEEK 구하기
		            
		    
		     , T.WWEEK
		     , T.WWEEK_YEAR
			 , T.DT
		   
		  FROM
		  (
		  		SELECT WEEK_ISO(DT) AS  WWEEK -- 저장 WEEK
				     , SUBSTR(DT,1,4) AS WWEEK_YEAR -- 저장 WEEK의 해
				     , DT
				     , DAYOFWEEK(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD') - 21 DAY) AS DAY_W2 -- 2주전 FROM 기준WEEK 구하기 위한 요일
				     , DAYOFWEEK(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD') - 28 DAY) AS DAY_W3 -- 3주전 FROM 기준WEEK 구하기 위한 요일
				     , DAYOFWEEK(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD') - 35 DAY) AS DAY_W4 -- 4주전 FROM 기준WEEK 구하기 위한 요일
				     , DAYOFWEEK(TIMESTAMP_FORMAT(DT,'YYYY-MM-DD') - 49 DAY) AS DAY_W6 -- 6주전 FROM 기준WEEK 구하기 위한 요일

				  FROM (
				  			SELECT DT
							     , WEEK
							  FROM DATE_RANGE
				  	   )
				  
		  ) T
  ) T2
  
  
FOR FETCH ONLY
WITH UR	</statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_week">
	</output>
</query>
