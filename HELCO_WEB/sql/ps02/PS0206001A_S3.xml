<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>0</result-count>
	<statement>
<![CDATA[
SELECT A.POSID AS PSPID, A.POSID_1 AS POSID, '00000000'  AS INP_DT, '0000000000' AS LIFNR, ''AS CHECK,
             A.ZZSHIP1, A.ZZCOMP2, A.ZSPEC1, A.ZSPEC2, A.TEMNO AS PMCD, A.TEMNO2 AS TMCD,
             VALUE(B.PERNO0,'') || '(1.0)'  AS PERNO0, VALUE(B.PERNO0_NM,'') AS PERNO0_NM,
             VALUE(B.PERNO0,'') AS PERNO0_CD,
             (CASE WHEN B.PERNO0 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO0_MH,
			 
             VALUE(B.PERNO1,'') || '(1.0)'  AS PERNO1, VALUE(B.PERNO1_NM,'') AS PERNO1_NM, 
             VALUE(B.PERNO1,'') AS PERNO1_CD,
             (CASE WHEN B.PERNO1 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO1_MH,
			 
             VALUE(B.PERNO2,'') || '(1.0)'  AS PERNO2, VALUE(B.PERNO2_NM,'') AS PERNO2_NM, 
             VALUE(B.PERNO2,'') AS PERNO2_CD,
             (CASE WHEN B.PERNO2 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO2_MH,
			 
             VALUE(B.PERNO3,'') || '(1.0)'  AS PERNO3, VALUE(B.PERNO3_NM,'') AS PERNO3_NM, 
             VALUE(B.PERNO3,'') AS PERNO3_CD,
             (CASE WHEN B.PERNO3 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO3_MH,
			 
             VALUE(B.PERNO4,'') || '(1.0)'  AS PERNO4, VALUE(B.PERNO4_NM,'') AS PERNO4_NM, 
             VALUE(B.PERNO4,'') AS PERNO4_CD,
             (CASE WHEN B.PERNO4 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO4_MH,
			 
             VALUE(B.PERNO5,'') || '(1.0)'  AS PERNO5, VALUE(B.PERNO5_NM,'') AS PERNO5_NM, 
             VALUE(B.PERNO5,'') AS PERNO5_CD,
             (CASE WHEN B.PERNO5 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO5_MH, 
			 
             VALUE(B.PERNO6,'') || '(1.0)'  AS PERNO6, VALUE(B.PERNO6_NM,'') AS PERNO6_NM, 
             VALUE(B.PERNO6,'') AS PERNO6_CD,
             (CASE WHEN B.PERNO6 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO6_MH,
			 
             VALUE(B.PERNO7,'') || '(1.0)'  AS PERNO7, VALUE(B.PERNO7_NM,'') AS PERNO7_NM, 
             VALUE(B.PERNO7,'') AS PERNO7_CD,
             (CASE WHEN B.PERNO7 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO7_MH,
			 
             VALUE(B.PERNO8,'') || '(1.0)'  AS PERNO8, VALUE(B.PERNO8_NM,'') AS PERNO8_NM, 
             VALUE(B.PERNO8,'') AS PERNO8_CD,
             (CASE WHEN B.PERNO8 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO8_MH,
			 
             VALUE(B.PERNO9,'') || '(1.0)'  AS PERNO9, VALUE(B.PERNO9_NM,'') AS PERNO9_NM, 
             VALUE(B.PERNO9,'') AS PERNO9_CD,
             (CASE WHEN B.PERNO9 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO9_MH,
			 
 	VALUE(B.PERNO10,'') || '(1.0)'  AS PERNO10, VALUE(B.PERNO10_NM,'') AS PERNO10_NM, 
	VALUE(B.PERNO10,'') AS PERNO10_CD,
              (CASE WHEN B.PERNO10 <> '' THEN 1.0 ELSE 0.0 END) AS  PERNO10_MH,
             
             --B.PER_SUM,
             (CASE WHEN B.PER_SUM > 11 THEN 11 ELSE B.PER_SUM END) AS PER_SUM,

	
             '' AS JIWON1, '' AS JIWON2, '' AS JIWON3, '' AS JIWON4, 	'0' AS JIWON_SUM,
             '' AS MI_PERNO, 
					            
             (SELECT VALUE(MIN(ST2.INP_DT),'') 
                 FROM SAPHEE.ZPSTW0205 AS ST2 
               WHERE ST2.MANDT = A.MANDT AND ST2.PSPID  = A.POSID 
                   AND ST2.POSID = A.POSID_1 
                   AND ST2.LIFNR = #ZZLIFNR# ) AS FIR_DT,
             '' AS PRONR,  
             (SELECT VALUE(SUM(ST2.PRO_R),0) 
                 FROM SAPHEE.ZPST0112 AS ST2 
               WHERE ST2.MANDT = A.MANDT AND ST2.PSPID = A.POSID 
                   AND ST2.POSID = A.POSID_1 ) AS PRO_R , 				  

              A.ZZGUBUN, K.ZSITE_NM ,  A.ZZGUBUN || A.TYPE AS ZZTYPE , A.BFTYPE , A.TYPE
		 
   FROM SAPHEE.ZMASTER02 AS A
  INNER JOIN SAPHEE.ZMASTER01 AS K
       ON A.MANDT = K.MANDT
     AND A.POSID  = K.POSID
    LEFT OUTER JOIN ( SELECT T1.MANDT, T1.LIFNR,   T1.TEMNO AS TMCD,   T1.NAMET  AS TMNM,
	                                 MAX(CASE WHEN T1.ROWN = 1 THEN T1.PERNO ELSE '' END) AS PERNO0,
			     MAX(CASE WHEN T1.ROWN = 1 THEN T1.NAMEE ELSE '' END) AS PERNO0_NM,
			     MAX(CASE WHEN T1.ROWN = 2 THEN T1.PERNO ELSE '' END) AS PERNO1,
			     MAX(CASE WHEN T1.ROWN = 2 THEN T1.NAMEE ELSE '' END) AS PERNO1_NM,
			     MAX(CASE WHEN T1.ROWN = 3 THEN T1.PERNO ELSE '' END) AS PERNO2,
			     MAX(CASE WHEN T1.ROWN = 3 THEN T1.NAMEE ELSE '' END) AS PERNO2_NM,
			     MAX(CASE WHEN T1.ROWN = 4 THEN T1.PERNO ELSE '' END) AS PERNO3,
			     MAX(CASE WHEN T1.ROWN = 4 THEN T1.NAMEE ELSE '' END) AS PERNO3_NM,
			     MAX(CASE WHEN T1.ROWN = 5 THEN T1.PERNO ELSE '' END) AS PERNO4,
			     MAX(CASE WHEN T1.ROWN = 5 THEN T1.NAMEE ELSE '' END) AS PERNO4_NM,
			     MAX(CASE WHEN T1.ROWN = 6 THEN T1.PERNO ELSE '' END) AS PERNO5,
			     MAX(CASE WHEN T1.ROWN = 6 THEN T1.NAMEE ELSE '' END) AS PERNO5_NM,
 			     MAX(CASE WHEN T1.ROWN = 7 THEN T1.PERNO ELSE '' END) AS PERNO6,
			     MAX(CASE WHEN T1.ROWN = 7 THEN T1.NAMEE ELSE '' END) AS PERNO6_NM,
 			     MAX(CASE WHEN T1.ROWN = 8 THEN T1.PERNO ELSE '' END) AS PERNO7,
			     MAX(CASE WHEN T1.ROWN = 8 THEN T1.NAMEE ELSE '' END) AS PERNO7_NM,
 			     MAX(CASE WHEN T1.ROWN = 9 THEN T1.PERNO ELSE '' END) AS PERNO8,
			     MAX(CASE WHEN T1.ROWN = 9 THEN T1.NAMEE ELSE '' END) AS PERNO8_NM,
			     MAX(CASE WHEN T1.ROWN = 10 THEN T1.PERNO ELSE '' END) AS PERNO9,
  	                                 MAX(CASE WHEN T1.ROWN = 10 THEN T1.NAMEE ELSE '' END) AS PERNO9_NM,
 			     MAX(CASE WHEN T1.ROWN = 11 THEN T1.PERNO ELSE '' END) AS PERNO10,
			     MAX(CASE WHEN T1.ROWN = 11 THEN T1.NAMEE ELSE '' END) AS PERNO10_NM,
			     MAX(T1.ROWN) AS PER_SUM							
		        FROM ( SELECT ROW_NUMBER() OVER(PARTITION BY ST1.LIFNR,ST1.TEMNO ) AS ROWN ,
             	                                               ST1.MANDT,  ST1.LIFNR, ST1.TEMNO, ST1.NAMET,   ST1.PERNO, 
                                                             ST1.NAMEE, ST1.POSIT											         FROM SAPHEE.ZPST0001 AS ST1 
                                                 WHERE ST1.MANDT = #G_MANDT#
                                                     AND ST1.LIFNR = #ZZLIFNR#
                                                     AND ST1.TEMNO = #TMCD#
                                                     AND ST1.GBN   = 'A'
	  		           AND ST1.RETIF <> 'X'
	  		           AND ST1.DELEF <> 'X'
			           AND (ST1.POSIE  = 'X' OR ST1.POSIT = 'X')	
                                                     AND ST1.DIRECT = 'X'  	  
			       ORDER BY  ST1.POSIT DESC, ST1.PERNO ASC
                                                 ) AS T1
                                  GROUP BY T1.MANDT, T1.LIFNR, T1.TEMNO, T1.NAMET    )  AS B  
       ON A.MANDT = B.MANDT
  --   AND A.LIFNR = B.LIFNR
   --  AND A.TEMNO2 = B.TMCD 	
   LEFT OUTER JOIN ( SELECT X.MANDT, X.PSPID, X.POSID, SUM(X.PRO_R)  AS PRO_R
                                    FROM SAPHEE.ZPST0116 AS X
		       WHERE X.MANDT = #G_MANDT#							      
		           AND X.BELNR > '0000000000'
		       GROUP BY  X.MANDT, X.PSPID, X.POSID
		   ) AS G         
      ON A.MANDT = G.MANDT
    AND A.POSID = G.PSPID
    AND A.POSID_1 = G.POSID     

 WHERE A.MANDT = #G_MANDT#
     AND A.ZZGUBUN BETWEEN '10' AND '14' 
     AND A.PRART IN ('01', '02', '11') 
     AND A.ZZCHAKG = 'X'
     --AND ( A.ZZCHAKG = 'X' OR  (A.ZZACTSS = '14' AND A.PRART = '11') )
--      AND ( 
-- 	 (A.ZZCHAKG = 'X'  AND A.PRART <> '11')  
-- 	 OR 
-- 	 --(A.ZZSHIP1 =   HEX(DATE(INSERT(INSERT(#INP_DT#,5,0,'-'),8,0,'-')) - 1 DAYS)    AND  A.PRART <> '11')		
--                --(A.ZZSHIP1 =  HEX(current date - 1 DAYS)    AND  A.PRART <> '11')
--                (   (A.ZZSHIP1 BETWEEN HEX(current date - 1 DAYS) AND HEX(current date + 1 DAYS)) AND A.PRART <> '11' )
--                OR  
-- 	 A.PRART = '11'			   
--              )
-- 
     AND A.TXT04 <> 'C'	  
     AND A.LIFNR = #ZZLIFNR#
     AND A.TEMNO2 = #TMCD#	
	 
   	   
     --AND (A.ZBOSUOUT = '' OR A.ZBOSUOUT = '00000000' )
     AND (G.PRO_R < 100 OR G.PRO_R IS NULL)

     AND NOT EXISTS ( SELECT *
	                       FROM SAPHEE.ZPSTW0205 AS ST2
		        WHERE ST2.MANDT = A.MANDT
		            AND ST2.PSPID  = A.POSID
		            AND ST2.POSID = A.POSID_1
		            AND ST2.INP_DT = #INP_DT#   ) 


--    AND ( A.TYPE||A.BFTYPE) <> ''   -- 공정표 정해지지않은 프로젝트는 제외

ORDER BY A.POSID, A.POSID_1										    

FOR FETCH ONLY
WITH UR	]]></statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_list1">
	</output>
</query>
