<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>0</result-count>
	<statement>
	
	
  WITH TEMP AS
	  	(
	  			SELECT T.POSID, T.EL_TYPE, CASE WHEN (100 - T.SCORE) <![CDATA[<]]> 20 AND T.IMPRO = 'Y'
		       		                        THEN 20
		       		                        WHEN (100 - T.SCORE) >= 20 AND T.IMPRO = 'Y'
		       		                        THEN 100 - T.SCORE
		       		                        ELSE 0
		       		                        END AS SUM_SCORE
	  		  FROM
	  		  (
	  		  		SELECT Q56.POSID, Q56.EL_TYPE, CASE WHEN Q56.IMPRO = 'Y' THEN SUM(QT.SCORE)
								       		            ELSE 0
								       		            END AS SCORE
						 , Q56.IMPRO
		       		  FROM SAPHEE.ZQMT056 AS Q56
		       		  INNER JOIN (
		       		  					SELECT Q55.EL_TYPE
		       		  					     , Q54.VER
		       		  					     , Q55.POSID
		       		  					     , Q54.LCD
		       		  					     , Q54.MCD
		       		  					     , Q54.SCD
		       		  					     , Q55.MANDT
		       		  					     , Q54.SCORE
		       		  					  FROM SAPHEE.ZQMT055 Q55
		       		  					 LEFT OUTER JOIN SAPHEE.ZQMT054 Q54
		       		  					              ON Q55.MANDT = Q54.MANDT
		       		  					             AND Q55.EL_TYPE = Q54.EL_TYPE
		       		  					             AND Q55.VER     = Q54.VER
		       		  			 ) AS QT
		       		          ON Q56.MANDT   = QT.MANDT
		       		         AND Q56.EL_TYPE = QT.EL_TYPE
		       		         AND Q56.POSID   = QT.POSID
		       		         AND Q56.LCD     = QT.LCD
		       		         AND Q56.MCD     = QT.MCD
		       		         AND Q56.SCD     = QT.SCD
		  
		       		  INNER JOIN SAPHEE.ZQMT019 Q1
			                  ON Q56.MANDT = Q1.MANDT
			                 AND SUBSTR(Q56.POSID,1,6) = Q1.PSPID 
			                 AND Q56.POSID = Q1.HOGI
			                 AND Q1.WERKS = '1000'
			                 AND Q1.ART = '8960'
			                 AND Q1.SEQ = '01'
			          LEFT OUTER JOIN SAPHEE.ZMASTER02 M
			                    ON Q56.MANDT = M.MANDT
			                   AND SUBSTR(Q56.POSID,1,6) = M.POSID
			                   AND Q56.POSID  = M.POSID_1
		       		 WHERE Q56.MANDT = #G_MANDT#
					   <isEqual col="CHK_RSLT" value="A">
					   AND Q1.DSCODE IN ('A', 'C', 'E', 'H', 'J', 'K', 'M', 'N', 'O', 'R')
					   </isEqual>
					   <isEqual col="CHK_RSLT" value="B">
					   AND Q1.DSCODE IN ('A', 'C', 'E', 'H', 'G', 'J', 'K', 'M', 'N', 'O', 'P', 'R')
					   </isEqual>
					   <isEqual col="CHK_RSLT" value="C">
					   AND Q1.DSCODE IN ('A', 'B', 'C', 'D', 'E', 'H', 'J', 'K', 'M', 'N', 'O', 'R')
					   </isEqual>
					   <isEqual col="CHK_RSLT" value="D">
					   AND Q1.DSCODE IN ('A', 'B', 'C', 'D', 'E', 'H', 'G', 'J', 'K', 'M', 'N', 'O', 'P', 'R')
					   </isEqual>	   	 		       		 
		       		   <isEqual col="EL_TYPE" value="A">
					   AND Q56.EL_TYPE = 'EL'
					   AND M.ZZGUBUN IN ('10', '13')
					   </isEqual>
					   <isEqual col="EL_TYPE" value="B">
					   AND Q56.EL_TYPE = 'ES'
					   AND M.ZZGUBUN IN ('11', '12', '14')
					   </isEqual>
		       		   <isNotNull col="PSPID">
					   AND SUBSTR(Q56.POSID,1,6) = #PSPID#
					   </isNotNull>
			   		   <isNotNull col="FR_DATE">
					   AND Q1.PAPRDT BETWEEN #FR_DATE# AND #TO_DATE#
					   </isNotNull>
					   <isNotNull col="ZZACTSS">
					   AND M.ZZACTSS = #ZZACTSS#
					   </isNotNull>
					   <isNotNull col="LIFNR">
					   AND M.LIFNR = #LIFNR#
					   </isNotNull>
					   <isNotNull col="TMCD">
					   AND M.TEMNO2 = #TMCD#
					   </isNotNull>

					   
		       		 GROUP BY Q56.POSID, Q56.EL_TYPE, Q56.IMPRO
	  		  ) AS T
	  		 WHERE 1=1
	  		 GROUP BY T.POSID, T.EL_TYPE, T.IMPRO, T.SCORE
		       		
		 ) 
	
     SELECT TMP.CNT
          , ROUND(DECIMAL(TMP.SCORE,15,2) / DECIMAL(TMP.CNT,15,2),3) AS AVG_SCORE
          , TMP.SCORE
       FROM (
				 SELECT (
				 			SELECT COUNT(DISTINCT POSID)
			       			  FROM TEMP T
				        ) AS CNT
				        ,
				        (
				 			SELECT SUM(SUM_SCORE)
			       			  FROM TEMP T
				        ) AS SCORE
				        
				   FROM SYSIBM.SYSDUMMY1
		     ) TMP
       WITH UR



	
	</statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_list_4">
	</output>
</query>
