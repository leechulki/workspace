<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[소모재 관리 집계]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
	SELECT D3.MATNR, 
	       D3.MAKTX, 
	       D3.ZSIZE, 
	       D3.BNAME, 
	       D3.SAMT1, 
	       SUM(
	       	VALUE(M01,0)+VALUE(M02,0)+VALUE(M03,0)+VALUE(M04,0)+VALUE(M05,0)+VALUE(M06,0)+VALUE(M07,0)+VALUE(M08,0)+VALUE(M09,0)+VALUE(M10,0)+
	       	VALUE(M11,0)+VALUE(M12,0)+VALUE(M13,0)+VALUE(M14,0)+VALUE(M15,0)+VALUE(M16,0)+VALUE(M17,0)+VALUE(M18,0)+VALUE(M19,0)+VALUE(M20,0)+
	       	VALUE(M21,0)+VALUE(M22,0)+VALUE(M23,0)+VALUE(M24,0)+VALUE(M25,0)+VALUE(M26,0)+VALUE(M27,0)
	       ) M_A_SUM,
	       SUM(
	       	VALUE(S01,0)+VALUE(S02,0)+VALUE(S03,0)+VALUE(S04,0)+VALUE(S05,0)+VALUE(S06,0)+VALUE(S07,0)+VALUE(S08,0)+VALUE(S09,0)+VALUE(S10,0)+
	       	VALUE(S11,0)+VALUE(S12,0)+VALUE(S13,0)+VALUE(S14,0)+VALUE(S15,0)+VALUE(S16,0)+VALUE(S17,0)+VALUE(S18,0)+VALUE(S19,0)+VALUE(S20,0)+
	       	VALUE(S21,0)+VALUE(S22,0)+VALUE(S23,0)+VALUE(S24,0)+VALUE(S25,0)+VALUE(S26,0)+VALUE(S27,0)
	       ) S_A_SUM, 
	       DECODE(
		       SUM(
		       	VALUE(M01,0)+VALUE(M02,0)+VALUE(M03,0)+VALUE(M04,0)+VALUE(M05,0)+VALUE(M06,0)+VALUE(M07,0)+VALUE(M08,0)+VALUE(M09,0)+VALUE(M10,0)+
		       	VALUE(M11,0)+VALUE(M12,0)+VALUE(M13,0)+VALUE(M26,0)+VALUE(M27,0)
		       ),0,NULL,
		       SUM(
		       	VALUE(M01,0)+VALUE(M02,0)+VALUE(M03,0)+VALUE(M04,0)+VALUE(M05,0)+VALUE(M06,0)+VALUE(M07,0)+VALUE(M08,0)+VALUE(M09,0)+VALUE(M10,0)+
		       	VALUE(M11,0)+VALUE(M12,0)+VALUE(M13,0)+VALUE(M26,0)+VALUE(M27,0)
		       )
	       ) M_S_SUM, 
	       DECODE(
		       SUM(
		       	VALUE(S01,0)+VALUE(S02,0)+VALUE(S03,0)+VALUE(S04,0)+VALUE(S05,0)+VALUE(S06,0)+VALUE(S07,0)+VALUE(S08,0)+VALUE(S09,0)+VALUE(S10,0)+
		       	VALUE(S11,0)+VALUE(S12,0)+VALUE(S13,0)+VALUE(S26,0)+VALUE(S27,0)
		       ),0,NULL,
		       SUM(
		       	VALUE(S01,0)+VALUE(S02,0)+VALUE(S03,0)+VALUE(S04,0)+VALUE(S05,0)+VALUE(S06,0)+VALUE(S07,0)+VALUE(S08,0)+VALUE(S09,0)+VALUE(S10,0)+
		       	VALUE(S11,0)+VALUE(S12,0)+VALUE(S13,0)+VALUE(S26,0)+VALUE(S27,0)
		       )
	       ) S_S_SUM, 
	       DECODE(
		       SUM(
		       	VALUE(M14,0)+VALUE(M15,0)+VALUE(M16,0)+VALUE(M17,0)+VALUE(M18,0)+VALUE(M19,0)+VALUE(M20,0)+
		       	VALUE(M21,0)+VALUE(M22,0)+VALUE(M23,0)+VALUE(M24,0)+VALUE(M25,0)
		       ),0,NULL,
		       SUM(
		       	VALUE(M14,0)+VALUE(M15,0)+VALUE(M16,0)+VALUE(M17,0)+VALUE(M18,0)+VALUE(M19,0)+VALUE(M20,0)+
		       	VALUE(M21,0)+VALUE(M22,0)+VALUE(M23,0)+VALUE(M24,0)+VALUE(M25,0)
		       )
	       ) M_G_SUM, 
	       DECODE(
		       SUM(
		       	VALUE(S14,0)+VALUE(S15,0)+VALUE(S16,0)+VALUE(S17,0)+VALUE(S18,0)+VALUE(S19,0)+VALUE(S20,0)+
		       	VALUE(S21,0)+VALUE(S22,0)+VALUE(S23,0)+VALUE(S24,0)+VALUE(S25,0)
		       ),0,NULL,
		       SUM(
		       	VALUE(S14,0)+VALUE(S15,0)+VALUE(S16,0)+VALUE(S17,0)+VALUE(S18,0)+VALUE(S19,0)+VALUE(S20,0)+
		       	VALUE(S21,0)+VALUE(S22,0)+VALUE(S23,0)+VALUE(S24,0)+VALUE(S25,0)
		       )
	       ) S_G_SUM, 
	       SUM(M01) M01, 
	       SUM(S01) S01, 
	       SUM(M02) M02, 
	       SUM(S02) S02, 
	       SUM(M03) M03, 
	       SUM(S03) S03, 
	       SUM(M04) M04, 
	       SUM(S04) S04, 
	       SUM(M05) M05, 
	       SUM(S05) S05, 
	       SUM(M06) M06, 
	       SUM(S06) S06, 
	       SUM(M07) M07, 
	       SUM(S07) S07, 
	       SUM(M08) M08, 
	       SUM(S08) S08, 
	       SUM(M09) M09, 
	       SUM(S09) S09, 
	       SUM(M10) M10, 
	       SUM(S10) S10, 
	       SUM(M11) M11, 
	       SUM(S11) S11, 
	       SUM(M12) M12, 
	       SUM(S12) S12, 
	       SUM(M13) M13, 
	       SUM(S13) S13, 
	       SUM(M26) M26, 
	       SUM(S26) S26, 
	       SUM(M27) M27, 
	       SUM(S27) S27, 
	       SUM(M14) M14, 
	       SUM(S14) S14, 
	       SUM(M15) M15, 
	       SUM(S15) S15, 
	       SUM(M16) M16, 
	       SUM(S16) S16, 
	       SUM(M17) M17, 
	       SUM(S17) S17, 
	       SUM(M18) M18, 
	       SUM(S18) S18, 
	       SUM(M19) M19, 
	       SUM(S19) S19, 
	       SUM(M20) M20, 
	       SUM(S20) S20, 
	       SUM(M21) M21, 
	       SUM(S21) S21, 
	       SUM(M22) M22, 
	       SUM(S22) S22, 
	       SUM(M23) M23, 
	       SUM(S23) S23, 
	       SUM(M24) M24, 
	       SUM(S24) S24, 
	       SUM(M25) M25, 
	       SUM(S25) S25
	  FROM 
	       (SELECT D2.MATNR, 
	              D2.MAKTX, 
	              D2.ZSIZE, 
	              D2.BNAME, 
	              D2.SAMT1, 
	              DECODE(D2.LGORT, '9007', MENGE, NULL) AS M01, DECODE(D2.LGORT, '9007', SAMT2, NULL) AS S01, 
	              DECODE(D2.LGORT, '9209', MENGE, NULL) AS M02, DECODE(D2.LGORT, '9209', SAMT2, NULL) AS S02, 
	              DECODE(D2.LGORT, '9005', MENGE, NULL) AS M03, DECODE(D2.LGORT, '9005', SAMT2, NULL) AS S03, 
	              DECODE(D2.LGORT, '9006', MENGE, NULL) AS M04, DECODE(D2.LGORT, '9006', SAMT2, NULL) AS S04, 
	              DECODE(D2.LGORT, '9008', MENGE, NULL) AS M05, DECODE(D2.LGORT, '9008', SAMT2, NULL) AS S05, 
	              DECODE(D2.LGORT, '9011', MENGE, NULL) AS M06, DECODE(D2.LGORT, '9011', SAMT2, NULL) AS S06, 
	              DECODE(D2.LGORT, '9009', MENGE, NULL) AS M07, DECODE(D2.LGORT, '9009', SAMT2, NULL) AS S07, 
	              DECODE(D2.LGORT, 'ZZZZ', MENGE, NULL) AS M08, DECODE(D2.LGORT, 'ZZZZ', SAMT2, NULL) AS S08,	--기술팀의 코드가 생성이 되면 변경해야 함.
	              DECODE(D2.LGORT, '9013', MENGE, NULL) AS M09, DECODE(D2.LGORT, '9013', SAMT2, NULL) AS S09,  
	              DECODE(D2.LGORT, '9210', MENGE, NULL) AS M10, DECODE(D2.LGORT, '9210', SAMT2, NULL) AS S10, 
	              DECODE(D2.LGORT, '9172', MENGE, NULL) AS M11, DECODE(D2.LGORT, '9172', SAMT2, NULL) AS S11, 
	              DECODE(D2.LGORT, '9180', MENGE, NULL) AS M12, DECODE(D2.LGORT, '9180', SAMT2, NULL) AS S12, 
	              DECODE(D2.LGORT, '9000', MENGE, NULL) AS M13, DECODE(D2.LGORT, '9000', SAMT2, NULL) AS S13,
	              DECODE(D2.LGORT, '9016', MENGE, NULL) AS M26, DECODE(D2.LGORT, '9016', SAMT2, NULL) AS S26,
	              DECODE(D2.LGORT, '9222', MENGE, NULL) AS M27, DECODE(D2.LGORT, '9222', SAMT2, NULL) AS S27,
	              -- 여기서 부터는 지방 
	              DECODE(D2.LGORT, '9100', MENGE, NULL) AS M14, DECODE(D2.LGORT, '9100', SAMT2, NULL) AS S14, 
	              DECODE(D2.LGORT, '9109', MENGE, NULL) AS M15, DECODE(D2.LGORT, '9109', SAMT2, NULL) AS S15, 
	              DECODE(D2.LGORT, '9116', MENGE, NULL) AS M16, DECODE(D2.LGORT, '9116', SAMT2, NULL) AS S16, 
	              DECODE(D2.LGORT, '9128', MENGE, NULL) AS M17, DECODE(D2.LGORT, '9128', SAMT2, NULL) AS S17, 
	              DECODE(D2.LGORT, '9212', MENGE, NULL) AS M18, DECODE(D2.LGORT, '9212', SAMT2, NULL) AS S18, 
	              DECODE(D2.LGORT, '9138', MENGE, NULL) AS M19, DECODE(D2.LGORT, '9138', SAMT2, NULL) AS S19, 
	              DECODE(D2.LGORT, '9143', MENGE, NULL) AS M20, DECODE(D2.LGORT, '9143', SAMT2, NULL) AS S20, 
	              DECODE(D2.LGORT, '9150', MENGE, NULL) AS M21, DECODE(D2.LGORT, '9150', SAMT2, NULL) AS S21, 
	              DECODE(D2.LGORT, '9155', MENGE, NULL) AS M22, DECODE(D2.LGORT, '9155', SAMT2, NULL) AS S22, 
	              DECODE(D2.LGORT, '9161', MENGE, NULL) AS M23, DECODE(D2.LGORT, '9161', SAMT2, NULL) AS S23,
	              DECODE(D2.LGORT, '9165', MENGE, NULL) AS M24, DECODE(D2.LGORT, '9165', SAMT2, NULL) AS S24,  
	              DECODE(D2.LGORT, '9043', MENGE, NULL) AS M25, DECODE(D2.LGORT, '9043', SAMT2, NULL) AS S25 
	         FROM 
	              (SELECT D1.GBN, 
	                     D1.LGORT, 
	                     D1.GBN2, 
	                     D1.MATNR, 
	                     D1.MAKTX, 
	                     D1.ZSIZE, 
	                     D1.LIFNR, 
	                     D1.BNAME, 
	                     COUNT(D1.MATNR) CNT, 
	                     MAX(D1.SAMT1) AS SAMT1, 
	                     SUM(D1.MENGE) AS MENGE, 
	                     SUM(D1.SAMT2) AS SAMT2 
	                FROM 
	                     (SELECT LC.GBN, 
	                            LC.GBN2, 
	                            LC.LGORT, 
	                            VALUE(BD.MATNR,'') AS MATNR, 
	                            VALUE(BD.MAKTX,'') AS MAKTX, 
	                            VALUE(BD.ZSIZE,'') AS ZSIZE, 
	                            VALUE(BD.SAMT1,0) AS SAMT1, 
	                            VALUE(BD.MENGE,0) AS MENGE, 
	                            VALUE(BD.SAMT2,0) AS SAMT2, 
	                            VALUE(BD.LIFNR,'') AS LIFNR, 
	                            VALUE(BD.NAME1,'') AS BNAME 
	                       FROM 
	                            (SELECT WB.BSU_ARA, 
	                                   WB.ABR_NM, 
	                                   WB.LGORT, 
	                                   WB.VKGRP, 
	                                   WB.VKGRP_NM, 
	                                   DECODE(WB.BSU_ARA, 'E5', '서울', '지방') AS GBN, 
	                                   CASE WB.LGORT 
	                                       WHEN '9000' THEN 'SPARE' 
	                                       WHEN '9005' THEN '강서1' 
	                                       WHEN '9006' THEN '강남' 
	                                       WHEN '9007' THEN '강북' 
	                                       WHEN '9008' THEN '강동' 
	                                       WHEN '9009' THEN 'ES' 
	                                       WHEN '9011' THEN '경기2'
	                                       WHEN '9013' THEN '신분당선'  
	                                       WHEN '9016' THEN '판교'  
	                                       WHEN '9043' THEN '경기1' 
	                                       WHEN '9100' THEN '부산' 
	                                       WHEN '9109' THEN '대구' 
	                                       WHEN '9116' THEN '광주' 
	                                       WHEN '9128' THEN '대전' 
	                                       WHEN '9138' THEN '전주' 
	                                       WHEN '9143' THEN '강원' 
	                                       WHEN '9150' THEN '울산' 
	                                       WHEN '9155' THEN '인천' 
	                                       WHEN '9161' THEN '경남, 마창' 
	                                       WHEN '9165' THEN '제주' 
	                                       WHEN '9172' THEN '강서2팀 공항철도' 
	                                       WHEN '9180' THEN '9호선' 
	                                       WHEN '9209' THEN '강북2' 
	                                       WHEN '9210' THEN '강서2' 
	                                       WHEN '9212' THEN '충청' 
	                                       WHEN '9222' THEN '강북ES' 
	                                       ELSE '기술ㆍ특수팀' 
	                                   END GBN2, 
	                                   LC.CTEXT2 AS BST 
	                              FROM SAPHEE.ZWBT010 AS WB 
	                               LEFT OUTER JOIN SAPHEE.ZLCODE AS LC 
	                                   ON WB.MANDT = LC.MANDT 
	                                   AND LC.LANG = 'ko' 
	                                   AND LC.CODE1 = 'VKGRP' 
	                                   AND LC.CODE2 = WB.VKGRP 
	                             WHERE 1=1 
	                                   AND WB.MANDT = #G_MANDT# 
	                                   AND WB.LGORT IN ('9007','9209','9180','9172','9210'
	                                   					,'9155','9009','9006','9008','9143'
	                                   					,'9043','9011','9005','9116','9128'
	                                   					,'9138','9165','9212','9161','9109'
	                                   					,'9100','9150','9000','ZZZZ','9013','9016','9222') --ZZZZ:서울기술팀 추가 필요 
	                            ) LC 
	                        LEFT OUTER JOIN 
	                            (SELECT MT.CS660_BSU AS BSU, 
	                                   DT.MATNR, 
	                                   DT.MAKTX, 
	                                   Z011.ZSIZE, 
	                                   DT.MEINS, 
	                                   DT.SAMT1, 
	                                   DT.MENGE, 
	                                   DT.SAMT2, 
	                                   D.LIFNR, 
	                                   E.NAME1 
	                              FROM SAPHEE.ZCST660 MT 
	                               INNER JOIN SAPHEE.ZCST659 DT 
	                                   ON MT.MANDT = DT.MANDT 
	                                   AND MT.CS660_DOC = DT.CS659_DOC 
	                                   AND MT.CS660_SIR = DT.CS659_SIR 
	                               LEFT OUTER JOIN SAPHEE.ZMMT011 Z011 
	                                   ON DT.MANDT = Z011.MANDT 
	                                   AND DT.MATNR = Z011.MATNR 
	                               LEFT OUTER JOIN SAPHEE.ZMMT112 AS A 
	                                   ON MT.MANDT = A.MANDT 
	                                   AND MT.CS660_REQNO = A.TRANS_ID 
	                                   AND DT.MATNR = A.MATNR 
	                               LEFT OUTER JOIN SAPHEE.EBAN AS B 
	                                   ON A.MANDT = B.MANDT 
	                                   AND A.C_BANFN = B.BANFN 
	                                   AND A.C_BNFPO = B.BNFPO 
	                               LEFT OUTER JOIN SAPHEE.EKPO AS C 
	                                   ON A.MANDT = C.MANDT 
	                                   AND B.EBELN = C.EBELN 
	                                   AND B.EBELP = C.EBELP 
	                                   AND C.LOEKZ = '' 
	                               LEFT OUTER JOIN SAPHEE.EKKO AS D 
	                                   ON A.MANDT = D.MANDT 
	                                   AND C.EBELN = D.EBELN 
	                               LEFT OUTER JOIN SAPHEE.LFA1 AS E 
	                                   ON A.MANDT = E.MANDT 
	                                   AND D.LIFNR = E.LIFNR 
	                             WHERE 1=1 
	                                   AND MT.MANDT = #G_MANDT# 
	                                   AND MT.CS660_PST = 'A6' 
	                                   AND MT.CS660_MDT >= #RDF#
	                                   AND MT.CS660_MDT <= #RDT#
	                                   AND MT.CS660_DEL = 'N' 
	                            ) BD 
	                            ON LC.LGORT = BD.BSU 
	                     ) AS D1 
	               GROUP BY D1.GBN, 
	                     D1.LGORT, 
	                     D1.GBN2, 
	                     D1.MATNR, 
	                     D1.MAKTX, 
	                     D1.ZSIZE, 
	                     D1.LIFNR, 
	                     D1.BNAME 
	              ) D2 
	        WHERE 1=1 
	              AND D2.MATNR <> '' 
	       ) D3 
	 GROUP BY D3.MATNR, 
	       D3.MAKTX, 
	       D3.ZSIZE, 
	       D3.BNAME, 
	       D3.SAMT1 
	ORDER BY D3.MATNR FOR 
	FETCH ONLY 
	WITH UR 
]]></statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_list">
	</output>
</query>
