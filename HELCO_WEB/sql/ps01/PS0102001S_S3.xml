<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>0</result-count>
	<statement>
<![CDATA[
SELECT  A.POSID AS PSPID,  C.NAME1 || '(' || B.NAMET2 || ')' AS LIFNRNM
             ,B.NAMET AS PMNM,  A.ZSITE_NM,  B.ZSPEC1,  B.ZSPEC2
             ,SUBSTR(B.POSID_1, 7,3) || '(' || B.POSID_OLD || ')'  AS HOGI
             ,D.SIZE1,  D.SIZE2,  D.SIZE3,  D.SIZE4
             ,D.SIZE5,  D.SIZE6,  D.SIZE7,  D.SIZE8,  D.SIZE9  
             ,D.NAMET ,D.NAMET2 ,D.NAMET_DT ,D.ZZBPM ,D.ZZBPM2          
             ,D.ZZBPM_DT  ,D.QCDATE ,D.QCDATE2 ,D.QCDATE3         

             ,VALUE(CAST(D.BIGO AS VARCHAR(3000)), '') AS BIGO
             ,B.ZBEPJEO, B.ZZGUBUN
             ,E.PAPRDT,  E.PAPRIDTX
             ,CODE3_1,    CODE3_2,    CODE3_3,    CODE3_4,    CODE3_5,    CODE3_6,    CODE3_7,    CODE3_8,    CODE3_9,    CODE3_10    
             ,CODE3_11,  CODE3_12,   CODE3_13,  CODE3_14,   CODE3_15,  CODE3_16,   CODE3_17,  CODE3_18,   CODE3_19,  CODE3_20    
             ,CODE3_21,  CODE3_22,   CODE3_23,  CODE3_24,   CODE3_25,  CODE3_26,   CODE3_27,  CODE3_28,   CODE3_29,  CODE3_30    
   FROM SAPHEE.ZMASTER01 AS A
   INNER JOIN SAPHEE.ZMASTER02 AS B
        ON A.MANDT = B.MANDT
      AND A.POSID = B.POSID
    LEFT OUTER JOIN SAPHEE.LFA1 AS C
       ON B.MANDT = C.MANDT
     AND B.LIFNR = C.LIFNR
    LEFT OUTER JOIN SAPHEE.ZQMTW0204 AS D
       ON B.MANDT = D.MANDT
     AND B.POSID = D.PSPID
     AND B.POSID_1 = D.POSID
    LEFT OUTER JOIN ( SELECT X.MANDT,  X.PSPID, X.HOGI, X.PAPRDT, X.PAPRIDTX
                                     FROM SAPHEE.ZQMT019 AS X
                                   WHERE X.MANDT = #G_MANDT#
                                       AND X.WERKS = '1000'
                                       AND X.PSPID = #PSPID#
                                       AND X.ART = '8960'
                                       AND X.HOGI = #POSID#
                                     ORDER BY X.SEQ DESC
                                   FETCH FIRST 1 ROWS ONLY ) AS E
       ON B.MANDT = E.MANDT
     AND B.POSID = E.PSPID
     AND B.POSID_1 = E.HOGI
    LEFT OUTER JOIN ( SELECT  F.MANDT, F.PSPID, F.POSID
                                              ,MAX(CASE WHEN F.ROWN = 1 THEN F.CODE3 ELSE '' END) AS CODE3_1	 
                                              ,MAX(CASE WHEN F.ROWN = 2 THEN F.CODE3 ELSE '' END) AS CODE3_2
			    ,MAX(CASE WHEN F.ROWN = 3 THEN F.CODE3 ELSE '' END) AS CODE3_3	     
                                              ,MAX(CASE WHEN F.ROWN = 4 THEN F.CODE3 ELSE '' END) AS CODE3_4
			    ,MAX(CASE WHEN F.ROWN = 5 THEN F.CODE3 ELSE '' END) AS CODE3_5	     
                                              ,MAX(CASE WHEN F.ROWN = 6 THEN F.CODE3 ELSE '' END) AS CODE3_6
			    ,MAX(CASE WHEN F.ROWN = 7 THEN F.CODE3 ELSE '' END) AS CODE3_7      
                                              ,MAX(CASE WHEN F.ROWN = 8 THEN F.CODE3 ELSE '' END) AS CODE3_8			 
			    ,MAX(CASE WHEN F.ROWN = 9 THEN F.CODE3 ELSE '' END) AS CODE3_9      
                                              ,MAX(CASE WHEN F.ROWN = 10 THEN F.CODE3 ELSE '' END) AS CODE3_10
			    ,MAX(CASE WHEN F.ROWN = 11 THEN F.CODE3 ELSE '' END) AS CODE3_11   
                                              ,MAX(CASE WHEN F.ROWN = 12 THEN F.CODE3 ELSE '' END) AS CODE3_12
			    ,MAX(CASE WHEN F.ROWN = 13 THEN F.CODE3 ELSE '' END) AS CODE3_13   
                                              ,MAX(CASE WHEN F.ROWN = 14 THEN F.CODE3 ELSE '' END) AS CODE3_14
			    ,MAX(CASE WHEN F.ROWN = 15 THEN F.CODE3 ELSE '' END) AS CODE3_15   
                                              ,MAX(CASE WHEN F.ROWN = 16 THEN F.CODE3 ELSE '' END) AS CODE3_16
			    ,MAX(CASE WHEN F.ROWN = 17 THEN F.CODE3 ELSE '' END) AS CODE3_17   
                                              ,MAX(CASE WHEN F.ROWN = 18 THEN F.CODE3 ELSE '' END) AS CODE3_18
			    ,MAX(CASE WHEN F.ROWN = 19 THEN F.CODE3 ELSE '' END) AS CODE3_19   
                                              ,MAX(CASE WHEN F.ROWN = 20 THEN F.CODE3 ELSE '' END) AS CODE3_20
			    ,MAX(CASE WHEN F.ROWN = 21 THEN F.CODE3 ELSE '' END) AS CODE3_21   
                                              ,MAX(CASE WHEN F.ROWN = 22 THEN F.CODE3 ELSE '' END) AS CODE3_22
			    ,MAX(CASE WHEN F.ROWN = 23 THEN F.CODE3 ELSE '' END) AS CODE3_23   
                                              ,MAX(CASE WHEN F.ROWN = 24 THEN F.CODE3 ELSE '' END) AS CODE3_24
			    ,MAX(CASE WHEN F.ROWN = 25 THEN F.CODE3 ELSE '' END) AS CODE3_25   
                                              ,MAX(CASE WHEN F.ROWN = 26 THEN F.CODE3 ELSE '' END) AS CODE3_26
			    ,MAX(CASE WHEN F.ROWN = 27 THEN F.CODE3 ELSE '' END) AS CODE3_27   
                                              ,MAX(CASE WHEN F.ROWN = 28 THEN F.CODE3 ELSE '' END) AS CODE3_28
			    ,MAX(CASE WHEN F.ROWN = 29 THEN F.CODE3 ELSE '' END) AS CODE3_29   
                                              ,MAX(CASE WHEN F.ROWN = 30 THEN F.CODE3 ELSE '' END) AS CODE3_30
			  
                                    FROM (
                                                SELECT  ROW_NUMBER() OVER(PARTITION BY X.MANDT, X.PSPID, X.POSID 
                                                              ORDER BY X.MANDT, X.PSPID, X.POSID, X.CODE1, X.CODE2, X.CODE3 ) AS ROWN
                                                             ,X.MANDT, X.PSPID, X.POSID
                                                               --, X2.CODENM AS CODE3
                                                           ,(CASE WHEN X2.CODENM = '±âÅ¸' THEN X.BIGO ELSE X2.CODENM END) AS CODE3
                                                   FROM SAPHEE.ZQMTW0202 AS X
                                                   INNER JOIN SAPHEE.ZQMTW0201 AS X2
                                                       ON  X.MANDT = X2.MANDT
                                                     AND  X.CODE3  = X2.CODE
                                                     AND  X.ZZGUBUN = X2.ZZGUBUN
                                                  WHERE X.MANDT = #G_MANDT#
                                                      AND X.PSPID = #PSPID#     AND   X.POSID = #POSID#
	                                 ) AS F
	 
	                      GROUP BY  F.MANDT, F.PSPID, F.POSID  ) AS G
      ON B.MANDT = G.MANDT
    AND B.POSID = G.PSPID
    AND B.POSID_1 = G.POSID


 WHERE A.MANDT = #G_MANDT#
     AND A.POSID = #PSPID#
     AND B.POSID_1 = #POSID#

FOR FETCH ONLY
WITH UR	]]></statement>
	<input default-name="ds_master">
	</input>
	<output default-name="ds_print">
	</output>
</query>
